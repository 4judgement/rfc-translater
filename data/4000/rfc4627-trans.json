{
  "title": {
    "text": "RFC 4627 - The application/json Media Type for JavaScript Object Notation (JSON)",
    "ja": "RFC 4627 - JavaScript Object Notation（JSON）のapplication / json Media Type"
  },
  "number": 4627,
  "created_at": "2020-08-15 13:25:08.020532+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                       D. Crockford\nRequest for Comments: 4627                                      JSON.org\nCategory: Informational                                        July 2006",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "The application/json Media Type for JavaScript Object Notation (JSON)",
      "ja": "JavaScript Object Notation（JSON）のapplication / json Media Type"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモは、インターネットコミュニティに情報を提供します。いかなる種類のインターネット標準も規定していません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2006).",
      "ja": "Copyright（C）The Internet Society（2006）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.",
      "ja": "JavaScript Object Notation（JSON）は、軽量でテキストベースの、言語に依存しないデータ交換フォーマットです。 ECMAScriptプログラミング言語標準から派生しました。 JSONは、構造化されたデータの移植可能な表現のための小さなフォーマットルールのセットを定義します。"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "JavaScript Object Notation (JSON) is a text format for the serialization of structured data. It is derived from the object literals of JavaScript, as defined in the ECMAScript Programming Language Standard, Third Edition [ECMA].",
      "ja": "JavaScript Object Notation（JSON）は、構造化データのシリアル化のためのテキスト形式です。 ECMAScriptプログラミング言語標準、第3版[ECMA]で定義されているように、JavaScriptのオブジェクトリテラルから派生しています。"
    },
    {
      "indent": 3,
      "text": "JSON can represent four primitive types (strings, numbers, booleans, and null) and two structured types (objects and arrays).",
      "ja": "JSONは4つのプリミティブ型（文字列、数値、ブール値、およびnull）と2つの構造型（オブジェクトと配列）を表すことができます。"
    },
    {
      "indent": 3,
      "text": "A string is a sequence of zero or more Unicode characters [UNICODE].",
      "ja": "文字列は、0個以上のUnicode文字[UNICODE]のシーケンスです。"
    },
    {
      "indent": 3,
      "text": "An object is an unordered collection of zero or more name/value pairs, where a name is a string and a value is a string, number, boolean, null, object, or array.",
      "ja": "オブジェクトは、0個以上の名前と値のペアの順序付けられていないコレクションです。名前は文字列で、値は文字列、数値、ブール値、null、オブジェクト、または配列です。"
    },
    {
      "indent": 3,
      "text": "An array is an ordered sequence of zero or more values.",
      "ja": "配列は、0個以上の値の順序付けられたシーケンスです。"
    },
    {
      "indent": 3,
      "text": "The terms \"object\" and \"array\" come from the conventions of JavaScript.",
      "ja": "「オブジェクト」および「配列」という用語は、JavaScriptの規則に由来しています。"
    },
    {
      "indent": 3,
      "text": "JSON's design goals were for it to be minimal, portable, textual, and a subset of JavaScript.",
      "ja": "JSONの設計目標は、JSONが最小限で、移植可能で、テキストであり、JavaScriptのサブセットであることです。"
    },
    {
      "indent": 0,
      "text": "1.1. Conventions Used in This Document",
      "section_title": true,
      "ja": "1.1. このドキュメントで使用される規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は、 [RFC2119]で説明されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "The grammatical rules in this document are to be interpreted as described in [RFC4234].",
      "ja": "このドキュメントの文法規則は、[RFC4234]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. JSON Grammar",
      "section_title": true,
      "ja": "2. JSON文法"
    },
    {
      "indent": 3,
      "text": "A JSON text is a sequence of tokens. The set of tokens includes six structural characters, strings, numbers, and three literal names.",
      "ja": "JSONテキストはトークンのシーケンスです。トークンのセットには、6つの構造文字、文字列、数字、および3つのリテラル名が含まれています。"
    },
    {
      "indent": 3,
      "text": "A JSON text is a serialized object or array.",
      "ja": "JSONテキストは、シリアル化されたオブジェクトまたは配列です。"
    },
    {
      "indent": 6,
      "text": "JSON-text = object / array",
      "ja": "JSON-text =オブジェクト/配列"
    },
    {
      "indent": 3,
      "text": "These are the six structural characters:",
      "ja": "これらは6つの構造的特性です。"
    },
    {
      "indent": 6,
      "text": "begin-array = ws %x5B ws ; [ left square bracket",
      "ja": "begin-array = ws％x5B ws; [左角かっこ"
    },
    {
      "indent": 6,
      "text": "begin-object    = ws %x7B ws  ; { left curly bracket",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "end-array = ws %x5D ws ; ] right square bracket",
      "ja": "end-array = ws％x5D ws; ]右角かっこ"
    },
    {
      "indent": 6,
      "text": "end-object      = ws %x7D ws  ; } right curly bracket",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "name-separator  = ws %x3A ws  ; : colon",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "value-separator = ws %x2C ws ; , comma",
      "ja": "バルブセパレーター= as％ξ2Cws; 、パーティー"
    },
    {
      "indent": 3,
      "text": "Insignificant whitespace is allowed before or after any of the six structural characters.",
      "ja": "意味のない空白は、6つの構造文字の前または後に許可されます。"
    },
    {
      "indent": 6,
      "text": "ws = *(\n          %x20 /              ; Space\n          %x09 /              ; Horizontal tab\n          %x0A /              ; Line feed or New line\n          %x0D                ; Carriage return\n      )",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.1. Values",
      "section_title": true,
      "ja": "2.1. 価値観"
    },
    {
      "indent": 3,
      "text": "A JSON value MUST be an object, array, number, or string, or one of the following three literal names:",
      "ja": "JSON値は、オブジェクト、配列、数値、文字列、または次の3つのリテラル名のいずれかである必要があります。"
    },
    {
      "indent": 6,
      "text": "false null true",
      "ja": "false null tr​​ue"
    },
    {
      "indent": 3,
      "text": "The literal names MUST be lowercase. No other literal names are allowed.",
      "ja": "リテラル名は小文字でなければなりません。他のリテラル名は許可されていません。"
    },
    {
      "indent": 9,
      "text": "value = false / null / true / object / array / number / string",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "false = %x66.61.6c.73.65   ; false",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "null  = %x6e.75.6c.6c      ; null",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "true  = %x74.72.75.65      ; true",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.2. Objects",
      "section_title": true,
      "ja": "2.2. オブジェクト"
    },
    {
      "indent": 3,
      "text": "An object structure is represented as a pair of curly brackets surrounding zero or more name/value pairs (or members). A name is a string. A single colon comes after each name, separating the name from the value. A single comma separates a value from a following name. The names within an object SHOULD be unique.",
      "ja": "オブジェクト構造は、0個以上の名前と値のペア（またはメンバー）を囲む中括弧のペアとして表されます。名前は文字列です。各名前の後にコロンを1つ付けて、名前と値を区切ります。 1つのカンマで値と後続の名前を区切ります。オブジェクト内の名前は一意である必要があります。"
    },
    {
      "indent": 6,
      "text": "object = begin-object [ member *( value-separator member ) ] end-object",
      "ja": "object = begin-object [member *（value-separator member）] end-object"
    },
    {
      "indent": 6,
      "text": "member = string name-separator value",
      "ja": "member =文字列の名前とセパレータの値"
    },
    {
      "indent": 0,
      "text": "2.3. Arrays",
      "section_title": true,
      "ja": "2.3. 配列"
    },
    {
      "indent": 3,
      "text": "An array structure is represented as square brackets surrounding zero or more values (or elements). Elements are separated by commas.",
      "ja": "配列構造は、0個以上の値（または要素）を囲む角括弧として表されます。要素はコンマで区切られます。"
    },
    {
      "indent": 6,
      "text": "array = begin-array [ value *( value-separator value ) ] end-array",
      "ja": "array = begin-array [value *（value-separator value）] end-array"
    },
    {
      "indent": 0,
      "text": "2.4. Numbers",
      "section_title": true,
      "ja": "2.4. 数字"
    },
    {
      "indent": 3,
      "text": "The representation of numbers is similar to that used in most programming languages. A number contains an integer component that may be prefixed with an optional minus sign, which may be followed by a fraction part and/or an exponent part.",
      "ja": "数値の表現は、ほとんどのプログラミング言語で使用されているものと似ています。数値には、オプションのマイナス記号を前に付けることができる整数コンポーネントが含まれ、その後に小数部および/または指数部が続く場合があります。"
    },
    {
      "indent": 3,
      "text": "Octal and hex forms are not allowed. Leading zeros are not allowed.",
      "ja": "8進数と16進数の形式は使用できません。先行ゼロは許可されていません。"
    },
    {
      "indent": 3,
      "text": "A fraction part is a decimal point followed by one or more digits.",
      "ja": "小数部は、小数点とそれに続く1つ以上の数字です。"
    },
    {
      "indent": 3,
      "text": "An exponent part begins with the letter E in upper or lowercase, which may be followed by a plus or minus sign. The E and optional sign are followed by one or more digits.",
      "ja": "指数部は大文字または小文字の文字Eで始まり、その後にプラス記号またはマイナス記号が続く場合があります。 Eおよびオプションの符号の後には、1つ以上の数字が続きます。"
    },
    {
      "indent": 3,
      "text": "Numeric values that cannot be represented as sequences of digits (such as Infinity and NaN) are not permitted.",
      "ja": "一連の数字として表現できない数値（InfinityやNaNなど）は許可されません。"
    },
    {
      "indent": 9,
      "text": "number = [ minus ] int [ frac ] [ exp ]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "decimal-point = %x2E       ; .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "digit1-9 = %x31-39         ; 1-9",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "e = %x65 / %x45            ; e E",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "exp = e [ minus / plus ] 1*DIGIT",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "frac = decimal-point 1*DIGIT",
      "ja": "frac =小数点1 * DIGIT"
    },
    {
      "indent": 9,
      "text": "int = zero / ( digit1-9 *DIGIT )",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "minus = %x2D               ; -",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "plus = %x2B                ; +",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "zero = %x30                ; 0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.5. Strings",
      "section_title": true,
      "ja": "2.5. 文字列"
    },
    {
      "indent": 3,
      "text": "The representation of strings is similar to conventions used in the C family of programming languages. A string begins and ends with quotation marks. All Unicode characters may be placed within the quotation marks except for the characters that must be escaped: quotation mark, reverse solidus, and the control characters (U+0000 through U+001F).",
      "ja": "文字列の表現は、プログラミング言語のCファミリで使用されている規則に似ています。文字列は引用符で始まり、引用符で終わります。エスケープする必要がある文字（引用符、逆ソリダス、および制御文字（U + 0000からU + 001F））を除いて、すべてのUnicode文字を引用符で囲むことができます。"
    },
    {
      "indent": 3,
      "text": "Any character may be escaped. If the character is in the Basic Multilingual Plane (U+0000 through U+FFFF), then it may be represented as a six-character sequence: a reverse solidus, followed by the lowercase letter u, followed by four hexadecimal digits that encode the character's code point. The hexadecimal letters A though F can be upper or lowercase. So, for example, a string containing only a single reverse solidus character may be represented as \"\\u005C\".",
      "ja": "任意の文字をエスケープできます。文字がBasic Multilingual Plane（U + 0000からU + FFFF）内にある場合、6文字のシーケンスとして表されることがあります。キャラクターのコードポイント。 16進数のAからFは、大文字でも小文字でもかまいません。したがって、たとえば、単一の逆ソリダス文字のみを含む文字列は、「\\ u005C」と表すことができます。"
    },
    {
      "indent": 3,
      "text": "Alternatively, there are two-character sequence escape representations of some popular characters. So, for example, a string containing only a single reverse solidus character may be represented more compactly as \"\\\\\".",
      "ja": "あるいは、いくつかの一般的な文字の2文字のシーケンスエスケープ表現があります。したがって、たとえば、単一の逆ソリダス文字のみを含む文字列は、 \"\\\\\"としてよりコンパクトに表すことができます。"
    },
    {
      "indent": 3,
      "text": "To escape an extended character that is not in the Basic Multilingual Plane, the character is represented as a twelve-character sequence, encoding the UTF-16 surrogate pair. So, for example, a string containing only the G clef character (U+1D11E) may be represented as \"\\uD834\\uDD1E\".",
      "ja": "Basic Multilingual Planeにない拡張文字をエスケープするために、文字は、UTF-16サロゲートペアをエンコードする12文字のシーケンスとして表されます。したがって、たとえば、音部記号の文字（U + 1D11E）のみを含む文字列は、「\\ uD834 \\ uDD1E」と表すことができます。"
    },
    {
      "indent": 9,
      "text": "string = quotation-mark *char quotation-mark",
      "ja": "string =引用符* char引用符"
    },
    {
      "indent": 9,
      "text": "char = unescaped /\n       escape (\n           %x22 /          ; \"    quotation mark  U+0022\n           %x5C /          ; \\    reverse solidus U+005C\n           %x2F /          ; /    solidus         U+002F\n           %x62 /          ; b    backspace       U+0008\n           %x66 /          ; f    form feed       U+000C\n           %x6E /          ; n    line feed       U+000A\n           %x72 /          ; r    carriage return U+000D\n           %x74 /          ; t    tab             U+0009\n           %x75 4HEXDIG )  ; uXXXX                U+XXXX",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "escape = %x5C              ; \\",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "quotation-mark = %x22      ; \"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "unescaped = %x20-21 / %x23-5B / %x5D-10FFFF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3. Encoding",
      "section_title": true,
      "ja": "3. エンコーディング"
    },
    {
      "indent": 3,
      "text": "JSON text SHALL be encoded in Unicode. The default encoding is UTF-8.",
      "ja": "JSONテキストはUnicodeでエンコードする必要があります。デフォルトのエンコーディングはUTF-8です。"
    },
    {
      "indent": 3,
      "text": "Since the first two characters of a JSON text will always be ASCII characters [RFC0020], it is possible to determine whether an octet stream is UTF-8, UTF-16 (BE or LE), or UTF-32 (BE or LE) by looking at the pattern of nulls in the first four octets.",
      "ja": "JSONテキストの最初の2文字は常にASCII文字であるため[RFC0020]、オクテットストリームがUTF-8、UTF-16（BEまたはLE）、またはUTF-32（BEまたはLE）のいずれであるかを判別できます。最初の4つのオクテットのヌルのパターンを確認します。"
    },
    {
      "indent": 11,
      "text": "00 00 00 xx UTF-32BE 00 xx 00 xx UTF-16BE xx 00 00 00 UTF-32LE xx 00 xx 00 UTF-16LE xx xx xx xx UTF-8",
      "ja": "00 00 00 xx UTF-32BE 00 xx 00 xx UTF-16BE xx 00 00 00 UTF-32LE xx 00 xx 00 UTF-16LE xx xx xx xx UTF-8"
    },
    {
      "indent": 0,
      "text": "4. Parsers",
      "section_title": true,
      "ja": "4. パーサー"
    },
    {
      "indent": 3,
      "text": "A JSON parser transforms a JSON text into another representation. A JSON parser MUST accept all texts that conform to the JSON grammar. A JSON parser MAY accept non-JSON forms or extensions.",
      "ja": "JSONパーサーは、JSONテキストを別の表現に変換します。 JSONパーサーは、JSON文法に準拠するすべてのテキストを受け入れる必要があります。 JSONパーサーは、JSON以外のフォームまたは拡張を受け入れることができます（MAY）。"
    },
    {
      "indent": 3,
      "text": "An implementation may set limits on the size of texts that it accepts. An implementation may set limits on the maximum depth of nesting. An implementation may set limits on the range of numbers. An implementation may set limits on the length and character contents of strings.",
      "ja": "実装は、受け入れるテキストのサイズに制限を設定する場合があります。実装では、ネストの最大深度に制限を設定できます。実装では、数値の範囲に制限を設定できます。実装によって、文字列の長さと文字の内容に制限が設定される場合があります。"
    },
    {
      "indent": 0,
      "text": "5. Generators",
      "section_title": true,
      "ja": "5. 発電機"
    },
    {
      "indent": 3,
      "text": "A JSON generator produces JSON text. The resulting text MUST strictly conform to the JSON grammar.",
      "ja": "JSONジェネレーターはJSONテキストを生成します。結果のテキストは、JSON文法に厳密に従う必要があります。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The MIME media type for JSON text is application/json.",
      "ja": "JSONテキストのMIMEメディアタイプはapplication / jsonです。"
    },
    {
      "indent": 3,
      "text": "Type name: application",
      "ja": "タイプ名：アプリケーション"
    },
    {
      "indent": 3,
      "text": "Subtype name: json",
      "ja": "サブタイプ名：json"
    },
    {
      "indent": 3,
      "text": "Required parameters: n/a",
      "ja": "必須パラメーター：なし"
    },
    {
      "indent": 3,
      "text": "Optional parameters: n/a",
      "ja": "オプションのパラメーター：n / a"
    },
    {
      "indent": 3,
      "text": "Encoding considerations: 8bit if UTF-8; binary if UTF-16 or UTF-32",
      "ja": "エンコーディングに関する考慮事項：UTF-8の場合は8ビット。 UTF-16またはUTF-32の場合はバイナリ"
    },
    {
      "indent": 6,
      "text": "JSON may be represented using UTF-8, UTF-16, or UTF-32. When JSON is written in UTF-8, JSON is 8bit compatible. When JSON is written in UTF-16 or UTF-32, the binary content-transfer-encoding must be used.",
      "ja": "JSONは、UTF-8、UTF-16、またはUTF-32を使用して表すことができます。 JSONがUTF-8で記述されている場合、JSONは8ビット互換です。 JSONがUTF-16またはUTF-32で記述されている場合、バイナリのcontent-transfer-encodingを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "Security considerations:",
      "ja": "セキュリティに関する考慮事項："
    },
    {
      "indent": 3,
      "text": "Generally there are security issues with scripting languages. JSON is a subset of JavaScript, but it is a safe subset that excludes assignment and invocation.",
      "ja": "一般に、スクリプト言語にはセキュリティの問題があります。 JSONはJavaScriptのサブセットですが、割り当てと呼び出しを除外する安全なサブセットです。"
    },
    {
      "indent": 3,
      "text": "A JSON text can be safely passed into JavaScript's eval() function (which compiles and executes a string) if all the characters not enclosed in strings are in the set of characters that form JSON tokens. This can be quickly determined in JavaScript with two regular expressions and calls to the test and replace methods.",
      "ja": "文字列で囲まれていないすべての文字がJSONトークンを形成する文字セットに含まれている場合、JSONテキストをJavaScriptのeval()関数（文字列をコンパイルして実行する）に安全に渡すことができます。これは、JavaScriptで2つの正規表現とtestおよびreplaceメソッドの呼び出しを使用してすばやく判別できます。"
    },
    {
      "indent": 6,
      "text": "var my_JSON_object = !(/[^,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]/.test(\n       text.replace(/\"(\\\\.|[^\"\\\\])*\"/g, ''))) &&\n   eval('(' + text + ')');",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Interoperability considerations: n/a",
      "ja": "相互運用性に関する考慮事項：なし"
    },
    {
      "indent": 3,
      "text": "Published specification: RFC 4627",
      "ja": "公開された仕様：RFC 4627"
    },
    {
      "indent": 3,
      "text": "Applications that use this media type:",
      "ja": "このメディアタイプを使用するアプリケーション："
    },
    {
      "indent": 6,
      "text": "JSON has been used to exchange data between applications written in all of these programming languages: ActionScript, C, C#, ColdFusion, Common Lisp, E, Erlang, Java, JavaScript, Lua, Objective CAML, Perl, PHP, Python, Rebol, Ruby, and Scheme.",
      "ja": "JSONは、ActionScript、C、C＃、ColdFusion、Common Lisp、E、Erlang、Java、JavaScript、Lua、Objective CAML、Perl、PHP、Python、Rebol、Rubyのすべてのプログラミング言語で記述されたアプリケーション間でデータを交換するために使用されています、およびスキーム。"
    },
    {
      "indent": 3,
      "text": "Additional information:",
      "ja": "追加情報："
    },
    {
      "indent": 6,
      "text": "Magic number(s): n/a\nFile extension(s): .json\nMacintosh file type code(s): TEXT",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Person & email address to contact for further information: Douglas Crockford douglas@crockford.com",
      "ja": "詳細について連絡する人とメールアドレス：Douglas Crockford douglas@crockford.com"
    },
    {
      "indent": 3,
      "text": "Intended usage: COMMON",
      "ja": "使用目的：COMMON"
    },
    {
      "indent": 3,
      "text": "Restrictions on usage: none",
      "ja": "使用上の制限：なし"
    },
    {
      "indent": 3,
      "text": "Author: Douglas Crockford douglas@crockford.com",
      "ja": "著者：ダグラスクロックフォードdouglas@crockford.com"
    },
    {
      "indent": 3,
      "text": "Change controller: Douglas Crockford douglas@crockford.com",
      "ja": "コントローラーの変更：Douglas Crockford douglas@crockford.com"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "See Security Considerations in Section 6.",
      "ja": "セクション6のセキュリティに関する考慮事項を参照してください。"
    },
    {
      "indent": 0,
      "text": "8. Examples",
      "section_title": true,
      "ja": "8. 例"
    },
    {
      "indent": 3,
      "text": "This is a JSON object:",
      "ja": "これはJSONオブジェクトです："
    },
    {
      "indent": 3,
      "text": "{\n   \"Image\": {\n       \"Width\":  800,\n       \"Height\": 600,\n       \"Title\":  \"View from 15th Floor\",\n       \"Thumbnail\": {\n           \"Url\":    \"http://www.example.com/image/481989943\",\n           \"Height\": 125,\n           \"Width\":  \"100\"\n       },\n       \"IDs\": [116, 943, 234, 38793]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "     }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Its Image member is an object whose Thumbnail member is an object and whose IDs member is an array of numbers.",
      "ja": "そのImageメンバーは、Thumbnailメンバーがオブジェクトであり、IDメンバーが数値の配列であるオブジェクトです。"
    },
    {
      "indent": 3,
      "text": "This is a JSON array containing two objects:",
      "ja": "これは、2つのオブジェクトを含むJSON配列です。"
    },
    {
      "indent": 3,
      "text": "[\n   {\n      \"precision\": \"zip\",\n      \"Latitude\":  37.7668,\n      \"Longitude\": -122.3959,\n      \"Address\":   \"\",\n      \"City\":      \"SAN FRANCISCO\",\n      \"State\":     \"CA\",\n      \"Zip\":       \"94107\",\n      \"Country\":   \"US\"\n   },\n   {\n      \"precision\": \"zip\",\n      \"Latitude\":  37.371991,\n      \"Longitude\": -122.026020,\n      \"Address\":   \"\",\n      \"City\":      \"SUNNYVALE\",\n      \"State\":     \"CA\",\n      \"Zip\":       \"94085\",\n      \"Country\":   \"US\"\n   }\n]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9. 参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[ECMA] European Computer Manufacturers Association, \"ECMAScript Language Specification 3rd Edition\", December 1999, <http://www.ecma-international.org/publications/files/ ecma-st/ECMA-262.pdf>.",
      "ja": "[ECMA] European Computer Manufacturers Association、「ECMAScript Language Specification 3rd Edition」、1999年12月、<http://www.ecma-international.org/publications/files/ ecma-st / ECMA-262.pdf>。"
    },
    {
      "indent": 3,
      "text": "[RFC0020] Cerf, V., \"ASCII format for network interchange\", RFC 20, October 1969.",
      "ja": "[RFC0020] Cerf、V。、「ネットワーク交換用のASCII形式」、RFC 20、1969年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4234] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", RFC 4234, October 2005.",
      "ja": "[RFC4234] Crocker、D。およびP. Overell、「構文仕様の拡張BNF：ABNF」、RFC 4234、2005年10月。"
    },
    {
      "indent": 3,
      "text": "[UNICODE] The Unicode Consortium, \"The Unicode Standard Version 4.0\", 2003, <http://www.unicode.org/versions/Unicode4.1.0/>.",
      "ja": "[UNICODE] Unicodeコンソーシアム、「The Unicode Standard Version 4.0」、2003、<http://www.unicode.org/versions/Unicode4.1.0/>。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Douglas Crockford JSON.org EMail: douglas@crockford.com",
      "ja": "Douglas Crockford JSON.org Eメール：douglas@crockford.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2006).",
      "ja": "Copyright（C）The Internet Society（2006）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "このドキュメントは、BCP 78に含まれる権利、ライセンス、および制限の対象であり、そこに記載されている場合を除き、著者はすべての権利を保持します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "このドキュメントとここに含まれる情報は、「現状のまま」で提供され、寄稿者、彼/彼女の代理人、または（もしあれば）組織、インターネットエンジニアリングおよびインターネットエンジニアリングタスクフォースは、すべての保証を明示的または明示的に提供します。ここに含まれる情報の使用により、商品性または特定の目的への適合性に関するいかなる権利または黙示の保証も侵害されないという保証を含みますが、これに限定されるものではありません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、このドキュメントに記載されているテクノロジーの実装または使用に関連すると主張される可能性がある知的財産権またはその他の権利の有効性または範囲、またはそのような権利に基づくライセンスが適用されるかどうかに関係なく、いかなる立場も取りません。利用できる;また、そのような権利を特定するために独立した取り組みを行ったことを表すものでもありません。 RFC文書の権利に関する手順に関する情報は、BCP 78およびBCP 79にあります。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IETF事務局に対して行われたIPR開示のコピー、および利用可能になるライセンスの保証、または一般ライセンスを取得しようとした試み、またはこの仕様の実装者またはユーザーがそのような所有権を使用するための許可を取得した結果を取得できます。 http://www.ietf.org/iprのIETFオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、この規格を実装するために必要となる可能性のある技術をカバーする可能性のある著作権、特許、特許出願、またはその他の所有権に注意を向けるよう、関係者に呼びかけます。 IEETのietf-ipr@ietf.orgに情報を送信してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is provided by the IETF Administrative Support Activity (IASA).",
      "ja": "RFCエディター機能の資金は、IETF管理サポート活動（IASA）によって提供されます。"
    }
  ]
}