{
  "title": {
    "text": "RFC 4010 - Use of the SEED Encryption Algorithm in Cryptographic Message Syntax (CMS)",
    "ja": "RFC 4010 - 暗号化メッセージ構文（CMS）でのSEED暗号化アルゴリズムの使用"
  },
  "number": 4010,
  "created_at": "2020-08-22 18:32:05.923185+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                            J. Park\nRequest for Comments: 4010                                        S. Lee\nCategory: Standards Track                                         J. Kim\n                                                                  J. Lee\n                                                                    KISA\n                                                           February 2005",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": " Use of the SEED Encryption Algorithm in Cryptographic Message Syntax (CMS)",
      "ja": "暗号化メッセージ構文（CMS）でのSEED暗号化アルゴリズムの使用"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "このドキュメントは、インターネットコミュニティのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態とステータスについては、「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2005).",
      "ja": "Copyright（C）The Internet Society（2005）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document specifies the conventions for using the SEED encryption algorithm for encryption with the Cryptographic Message Syntax (CMS).",
      "ja": "このドキュメントでは、暗号化メッセージ構文（CMS）での暗号化にSEED暗号化アルゴリズムを使用するための規則を指定します。"
    },
    {
      "indent": 3,
      "text": "SEED is added to the set of optional symmetric encryption algorithms in CMS by providing two classes of unique object identifiers (OIDs). One OID class defines the content encryption algorithms and the other defines the key encryption algorithms.",
      "ja": "SEEDは、2つのクラスの一意のオブジェクト識別子（OID）を提供することにより、CMSのオプションの対称暗号化アルゴリズムのセットに追加されます。 1つのOIDクラスはコンテンツ暗号化アルゴリズムを定義し、もう1つはキー暗号化アルゴリズムを定義します。"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document specifies the conventions for using the SEED encryption algorithm [SEED][TTASSEED] for encryption with the Cryptographic Message Syntax (CMS)[CMS]. The relevant object identifiers (OIDs) and processing steps are provided so that SEED may be used in the CMS specification (RFC 3852, RFC 3370) for content and key encryption.",
      "ja": "このドキュメントでは、暗号化メッセージ構文（CMS）[CMS]での暗号化にSEED暗号化アルゴリズム[SEED] [TTASSEED]を使用するための規則を指定します。関連するオブジェクト識別子（OID）と処理手順が提供されるため、コンテンツとキーの暗号化のためにCMS仕様（RFC 3852、RFC 3370）でSEEDを使用できます。"
    },
    {
      "indent": 0,
      "text": "1.1. SEED",
      "section_title": true,
      "ja": "1.1. シード"
    },
    {
      "indent": 3,
      "text": "SEED is a symmetric encryption algorithm developed by KISA (Korea Information Security Agency) and a group of experts since 1998. The input/output block size and key length of SEED is 128-bits. SEED has the 16-round Feistel structure. A 128-bit input is divided into two 64-bit blocks and the right 64-bit block is an input to the round function, with a 64-bit subkey generated from the key scheduling.",
      "ja": "SEEDは、KISA（Korea Information Security Agency）および専門家グループによって1998年から開発された対称暗号化アルゴリズムです。SEEDの入出力ブロックサイズとキー長は128ビットです。 SEEDは16ラウンドのFeistel構造を持っています。 128ビット入力は2つの64ビットブロックに分割され、右側の64ビットブロックはラウンド関数への入力であり、64ビットサブキーがキースケジューリングから生成されます。"
    },
    {
      "indent": 3,
      "text": "SEED is easily implemented in various software and hardware because it takes less memory to implement than other algorithms and generates keys without degrading the security of the algorithm. In particular, it can be effectively adopted in a computing environment with a restricted resources, such as mobile devices and smart cards.",
      "ja": "SEEDは、他のアルゴリズムよりも実装に必要なメモリが少なく、アルゴリズムのセキュリティを低下させることなくキーを生成するため、さまざまなソフトウェアやハードウェアに簡単に実装できます。特に、モバイルデバイスやスマートカードなどのリソースが制限されているコンピューティング環境で効果的に採用できます。"
    },
    {
      "indent": 3,
      "text": "SEED is robust against known attacks including DC (Differential cryptanalysis), LC (Linear cryptanalysis), and related key attacks. SEED has gone through wide public scrutinizing procedures. It has been evaluated and is considered cryptographically secure by credible organizations such as ISO/IEC JTC 1/SC 27 and Japan CRYPTREC (Cryptography Research and Evaluation Committees) [ISOSEED][CRYPTREC].",
      "ja": "SEEDは、DC（差分暗号解読）、LC（線形暗号解読）、および関連するキー攻撃を含む既知の攻撃に対して堅牢です。 SEEDは広く公の精査手続きを経てきました。 ISO / IEC JTC 1 / SC 27やJapan CRYPTREC（Cryptography Research and Evaluation Committees）[ISOSEED] [CRYPTREC]などの信頼できる組織によって評価され、暗号で保護されていると見なされています。"
    },
    {
      "indent": 3,
      "text": "SEED is a national industrial association standard [TTASSEED] and is widely used in South Korea for electronic commerce and financial services operated on wired and wireless communications.",
      "ja": "SEEDは、National Industrial Association Standard [TTASSEED]であり、有線および無線通信で運用される電子商取引および金融サービスのために韓国で広く使用されています。"
    },
    {
      "indent": 0,
      "text": "1.2. Terminology",
      "section_title": true,
      "ja": "1.2. 用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document (in uppercase, as shown) are to be interpreted as described in [RFC2119].",
      "ja": "このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は、大文字で表記されていますが、 [RFC2119]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. Object Identifiers for Content and Key Encryption",
      "section_title": true,
      "ja": "2. コンテンツおよびキー暗号化のオブジェクト識別子"
    },
    {
      "indent": 3,
      "text": "This section provides the OIDs and processing information necessary for SEED to be used for content and key encryption in CMS. SEED is added to the set of optional symmetric encryption algorithms in CMS by providing two classes of unique object identifiers (OIDs). One OID class defines the content encryption algorithms and the other defines the key encryption algorithms. Thus, a CMS agent can apply SEED either for content or key encryption by selecting the corresponding object identifier, supplying the required parameter, and starting the program code.",
      "ja": "このセクションでは、CMSでコンテンツとキーの暗号化にSEEDを使用するために必要なOIDと処理情報を提供します。 SEEDは、2つのクラスの一意のオブジェクト識別子（OID）を提供することにより、CMSのオプションの対称暗号化アルゴリズムのセットに追加されます。 1つのOIDクラスはコンテンツ暗号化アルゴリズムを定義し、もう1つはキー暗号化アルゴリズムを定義します。したがって、CMSエージェントは、対応するオブジェクト識別子を選択し、必要なパラメーターを指定して、プログラムコードを開始することにより、コンテンツまたはキーの暗号化にSEEDを適用できます。"
    },
    {
      "indent": 0,
      "text": "2.1. OIDs for Content Encryption",
      "section_title": true,
      "ja": "2.1. コンテンツ暗号化のOID"
    },
    {
      "indent": 3,
      "text": "SEED is added to the set of symmetric content encryption algorithms defined in [CMSALG]. The SEED content-encryption algorithm in Cipher Block Chaining (CBC) mode has the following object identifier:",
      "ja": "SEEDは、[CMSALG]で定義された対称コンテンツ暗号化アルゴリズムのセットに追加されます。暗号ブロック連鎖（CBC）モードのSEEDコンテンツ暗号化アルゴリズムには、次のオブジェクト識別子があります。"
    },
    {
      "indent": 6,
      "text": "id-seedCBC OBJECT IDENTIFIER ::=\n  { iso(1) member-body(2) korea(410) kisa(200004)\n    algorithm(1) seedCBC(4) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The AlgorithmIdentifier parameters field MUST be present, and the parameters field MUST contain the value of Initialization Vector (IV):",
      "ja": "AlgorithmIdentifierパラメーターフィールドが存在しなければならず、パラメーターフィールドには初期化ベクトル（IV）の値が含まれている必要があります。"
    },
    {
      "indent": 6,
      "text": "SeedCBCParameter ::= SeedIV  --  Initialization Vector",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "SeedIV ::= OCTET STRING (SIZE(16))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The plain text is padded according to Section 6.3 of [CMS].",
      "ja": "プレーンテキストは、[CMS]のセクション6.3に従ってパディングされます。"
    },
    {
      "indent": 0,
      "text": "2.2. OIDs for Key Encryption",
      "section_title": true,
      "ja": "2.2. キー暗号化のOID"
    },
    {
      "indent": 3,
      "text": "The key-wrap/unwrap procedures used to encrypt/decrypt a SEED content-encryption key (CEK) with a SEED key-encryption key (KEK) are specified in Section 3. Generation and distribution of key-encryption keys are beyond the scope of this document.",
      "ja": "SEEDコンテンツ暗号化キー（CEK）をSEEDキー暗号化キー（KEK）で暗号化/復号化するために使用されるキーラップ/アンラップ手順は、セクション3で指定されています。キー暗号化キーの生成と配布は、このドキュメント。"
    },
    {
      "indent": 3,
      "text": "The SEED key-encryption algorithm has the following object identifier:",
      "ja": "SEEDキー暗号化アルゴリズムには、次のオブジェクト識別子があります。"
    },
    {
      "indent": 6,
      "text": "id-npki-app-cmsSeed-wrap OBJECT IDENTIFIER ::=\n  { iso(1) member-body(2) korea(410) kisa(200004) npki-app(7)\n    smime(1) alg(1) cmsSEED-wrap(1) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The parameter associated with this object identifier MUST be absent, because the key wrapping procedure itself defines how and when to use an IV.",
      "ja": "キーラッピングプロシージャ自体がIVをいつどのように使用するかを定義するため、このオブジェクト識別子に関連付けられたパラメーターは存在しない必要があります。"
    },
    {
      "indent": 0,
      "text": "3. Key Wrap Algorithm",
      "section_title": true,
      "ja": "3. キーラップアルゴリズム"
    },
    {
      "indent": 3,
      "text": "SEED key wrapping and unwrapping is done in conformance with the AES key wrap algorithm [RFC3394].",
      "ja": "シードキーのラップとアンラップは、AESキーラップアルゴリズム[RFC3394]に準拠して行われます。"
    },
    {
      "indent": 0,
      "text": "3.1. Notation and Definitions",
      "section_title": true,
      "ja": "3.1. 表記と定義"
    },
    {
      "indent": 3,
      "text": "The following notation is used in the description of the key wrapping algorithms:",
      "ja": "鍵ラッピングアルゴリズムの説明では、次の表記が使用されています。"
    },
    {
      "indent": 9,
      "text": "SEED(K, W) Encrypt W using the SEED codebook with key K SEED-1(K, W) Decrypt W using the SEED codebook with key K MSB(j, W) Return the most significant j bits of W LSB(j, W) Return the least significant j bits of W B1 ^ B2 The bitwise exclusive or (XOR) of B1 and B2 B1 | B2 Concatenate B1 and B2 K The key-encryption key K n The number of 64-bit key data blocks s The number of steps in the wrapping process, s = 6n P[i] The ith plaintext key data block C[i] The ith ciphertext data block A The 64-bit integrity check register R[i] An array of 64-bit registers where i = 0, 1, 2, ..., n A[t], R[i][t] The contents of registers A and R[i] after encryption step t. IV The 64-bit initial value used during the wrapping process.",
      "ja": "SEED（K、W）キーKのSEEDコードブックを使用してWを暗号化しますSEED-1（K、W）キーKのSEEDコードブックを使用してWを復号化しますMSB（j、W）Wの最上位jビットを返しますLSB（j、 W）Wの最下位jビットを返すB1 ^ B2 B1とB2のビット単位の排他的論理和（XOR）B1 | B2連結B1およびB2 Kキー暗号化キーK n 64ビットキーデータブロックの数sラッピングプロセスのステップ数s = 6n P [i] i番目の平文キーデータブロックC [i] i番目の暗号文データブロックA 64ビットの整合性チェックレジスタR [i] 64ビットレジスタの配列。ここで、i = 0、1、2、...、n A [t]、R [i] [t]暗号化ステップt後のレジスタAおよびR [i]の内容。 IVラッピングプロセス中に使用される64ビットの初期値。"
    },
    {
      "indent": 3,
      "text": "In the key wrap algorithm, the concatenation function will be used to concatenate 64-bit quantities to form the 128-bit input to the SEED codebook. The extraction functions will be used to split the 128-bit output from the SEED codebook into two 64-bit quantities.",
      "ja": "キーラップアルゴリズムでは、連結関数を使用して64ビット量を連結し、SEEDコードブックへの128ビット入力を形成します。抽出関数は、SEEDコードブックからの128ビット出力を2つの64ビット量に分割するために使用されます。"
    },
    {
      "indent": 0,
      "text": "3.2. SEED Key Wrap",
      "section_title": true,
      "ja": "3.2. シードキーラップ"
    },
    {
      "indent": 3,
      "text": "Key wrapping with SEED is identical to Section 2.2.1 of [RFC3394] with \"AES\" replaced by \"SEED\".",
      "ja": "SEEDでの鍵のラッピングは、[RFC3394]のセクション2.2.1と同じですが、「AES」が「SEED」に置き換えられています。"
    },
    {
      "indent": 3,
      "text": "The inputs to the key wrapping process are the KEK and the plaintext to be wrapped. The plaintext consists of n 64-bit blocks containing the key data being wrapped. The key wrapping process is described below.",
      "ja": "キーラッピングプロセスへの入力は、KEKとラップされるプレーンテキストです。平文は、ラップされるキーデータを含むn個の64ビットブロックで構成されます。鍵のラッピングプロセスを以下に説明します。"
    },
    {
      "indent": 5,
      "text": "Inputs: Plaintext, n 64-bit values {P[1], P[2], ..., P[n]}, and Key, K (the KEK). Outputs: Ciphertext, (n+1) 64-bit values {C[0], C[1], ..., C[n]}.",
      "ja": "入力：平文、n 64ビット値{P [1]、P [2]、...、P [n]}、およびキーK（KEK）。出力：暗号文、（n + 1）64ビット値{C [0]、C [1]、...、C [n]}。"
    },
    {
      "indent": 3,
      "text": "1) Initialize variables.",
      "ja": "1）変数を初期化します。"
    },
    {
      "indent": 5,
      "text": "Set A[0] to an initial value (see Section 3.4) For i = 1 to n R[0][i] = P[i]",
      "ja": "A [0]を初期値に設定します（セクション3.4を参照）i = 1からnまでR [0] [i] = P [i]"
    },
    {
      "indent": 3,
      "text": "2) Calculate intermediate values.",
      "ja": "2）中間値を計算します。"
    },
    {
      "indent": 5,
      "text": "For t = 1 to s, where s = 6n\n  A[t] = MSB(64, SEED(K, A[t-1] | R[t-1][1])) ^ t\n  For i = 1 to n-1\n    R[t][i] = R[t-1][i+1]\n  R[t][n] = LSB(64, SEED(K, A[t-1] | R[t-1][1]))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3) Output the results.",
      "ja": "3）結果を出力します。"
    },
    {
      "indent": 5,
      "text": "Set C[0] = A[s] For i = 1 to n C[i] = R[s][i]",
      "ja": "C [0] = A [s]をi = 1〜nに設定C [i] = R [s] [i]"
    },
    {
      "indent": 3,
      "text": "An alternative description of the key wrap algorithm involves indexing rather than shifting. This approach allows one to calculate the wrapped key in place, avoiding the rotation in the previous description. This produces identical results and is more easily implemented in software.",
      "ja": "キーラップアルゴリズムの代替説明には、シフトではなくインデックス付けが含まれます。このアプローチにより、ラップされたキーを所定の位置で計算でき、前の説明でのローテーションを回避できます。これは同じ結果を生成し、ソフトウェアでより簡単に実装されます。"
    },
    {
      "indent": 5,
      "text": "Inputs: Plaintext, n 64-bit values {P[1], P[2], ..., P[n]}, and Key, K (the KEK). Outputs: Ciphertext, (n+1) 64-bit values {C[0], C[1], ..., C[n]}.",
      "ja": "入力：平文、n 64ビット値{P [1]、P [2]、...、P [n]}、およびキーK（KEK）。出力：暗号文、（n + 1）64ビット値{C [0]、C [1]、...、C [n]}。"
    },
    {
      "indent": 3,
      "text": "1) Initialize variables.",
      "ja": "1）変数を初期化します。"
    },
    {
      "indent": 5,
      "text": "Set A = IV, an initial value (see Section 3.4) For i = 1 to n R[i] = P[i]",
      "ja": "初期値としてA = IVを設定します（セクション3.4を参照）i = 1からnまでR [i] = P [i]"
    },
    {
      "indent": 3,
      "text": "2) Calculate intermediate values.",
      "ja": "2）中間値を計算します。"
    },
    {
      "indent": 5,
      "text": "For j = 0 to 5\n  For i=1 to n\n    B = SEED(K, A | R[i])\n    A = MSB(64, B) ^ t where t = (n*j)+i\n    R[i] = LSB(64, B)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3) Output the results.",
      "ja": "3）結果を出力します。"
    },
    {
      "indent": 6,
      "text": "Set C[0] = A For i = 1 to n C[i] = R[i]",
      "ja": "C [0] = Aをi = 1からnに設定C [i] = R [i]"
    },
    {
      "indent": 0,
      "text": "3.3. SEED Key Unwrap",
      "section_title": true,
      "ja": "3.3. シードキーのアンラップ"
    },
    {
      "indent": 3,
      "text": "Key unwrapping with SEED is identical to Section 2.2.2 of [RFC3394], with \"AES\" replaced by \"SEED\".",
      "ja": "SEEDでの鍵のアンラップは[RFC3394]のセクション2.2.2と同じですが、「AES」が「SEED」に置き換えられています。"
    },
    {
      "indent": 3,
      "text": "The inputs to the unwrap process are the KEK and (n+1) 64-bit blocks of ciphertext consisting of previously wrapped key. It returns n blocks of plaintext consisting of the n 64-bit blocks of the decrypted key data.",
      "ja": "アンラッププロセスへの入力は、以前にラップされたキーで構成される暗号テキストのKEKおよび（n + 1）64ビットブロックです。復号化された鍵データのn個の64ビットブロックで構成されるプレーンテキストのn個のブロックを返します。"
    },
    {
      "indent": 5,
      "text": "Inputs: Ciphertext, (n+1) 64-bit values {C[0], C[1], ..., C[n]}, and Key, K (the KEK). Outputs: Plaintext, n 64-bit values {P[1], P[2], ..., P[n]}.",
      "ja": "入力：暗号文、（n + 1）64ビット値{C [0]、C [1]、...、C [n]}、およびキーK（KEK）。出力：平文、n 64ビット値{P [1]、P [2]、...、P [n]}。"
    },
    {
      "indent": 3,
      "text": "1) Initialize variables.",
      "ja": "1）変数を初期化します。"
    },
    {
      "indent": 5,
      "text": "Set A[s] = C[0] where s = 6n For i = 1 to n R[s][i] = C[i]",
      "ja": "A [s] = C [0]を設定します。ここで、s = 6n i = 1〜nの場合R [s] [i] = C [i]"
    },
    {
      "indent": 3,
      "text": "2) Calculate the intermediate values.",
      "ja": "2）中間値を計算します。"
    },
    {
      "indent": 5,
      "text": "For t = s to 1\n  A[t-1] = MSB(64, SEED-1(K, ((A[t] ^ t) | R[t][n]))\n  R[t-1][1] = LSB(64, SEED-1(K, ((A[t]^t) | R[t][n]))\n  For i = 2 to n\n    R[t-1][i] = R[t][i-1]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3) Output the results.",
      "ja": "3）結果を出力します。"
    },
    {
      "indent": 5,
      "text": "If A[0] is an appropriate initial value (see Section 3.4), Then For i = 1 to n P[i] = R[0][i] Else Return an error",
      "ja": "A [0]が適切な初期値である場合（セクション3.4を参照）、i = 1からnまでの場合P [i] = R [0] [i]そうでなければエラーを返します。"
    },
    {
      "indent": 3,
      "text": "The unwrap algorithm can also be specified as an index based operation, allowing the calculations to be carried out in place. Again, this produces the same results as the register shifting approach.",
      "ja": "アンラップアルゴリズムは、インデックスベースの操作として指定することもでき、計算を適切に実行できます。この場合も、レジスタシフトアプローチと同じ結果が得られます。"
    },
    {
      "indent": 5,
      "text": "Inputs: Ciphertext, (n+1) 64-bit values {C[0], C[1], ..., C[n]}, and Key, K (the KEK). Outputs: Plaintext, n 64-bit values {P[0], P[1], ..., P[n]}.",
      "ja": "入力：暗号文、（n + 1）64ビット値{C [0]、C [1]、...、C [n]}、およびキーK（KEK）。出力：平文、n 64ビット値{P [0]、P [1]、...、P [n]}。"
    },
    {
      "indent": 3,
      "text": "1) Initialize variables.",
      "ja": "1）変数を初期化します。"
    },
    {
      "indent": 5,
      "text": "Set A = C[0] For i = 1 to n R[i] = C[i]",
      "ja": "セットA = C [0] i = 1からnまでR [i] = C [i]"
    },
    {
      "indent": 3,
      "text": "2) Compute intermediate values.",
      "ja": "2）中間値を計算します。"
    },
    {
      "indent": 5,
      "text": "For j = 5 to 0\n  For i = n to 1\n    B = SEED-1(K, (A ^ t) | R[i]) where t = n*j+i\n    A = MSB(64, B)\n    R[i] = LSB(64, B)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3) Output results.",
      "ja": "3）結果を出力します。"
    },
    {
      "indent": 5,
      "text": "If A is an appropriate initial value (see Section 3.4), Then For i = 1 to n P[i] = R[i] Else Return an error",
      "ja": "Aが適切な初期値である場合（セクション3.4を参照）、i = 1からnまでP [i] = R [i]そうでなければエラーを返します"
    },
    {
      "indent": 0,
      "text": "3.4. Key Data Integrity -- the Initial Value",
      "section_title": true,
      "ja": "3.4. 主要なデータ整合性-初期値"
    },
    {
      "indent": 3,
      "text": "The initial value (IV) refers to the value assigned to A[0] in the first step of the wrapping process. This value is used to obtain an integrity check on the key data. In the final step of the unwrapping process, the recovered value of A[0] is compared to the expected value of A[0]. If there is a match, the key is accepted as valid, and the unwrapping algorithm returns it. If there is not a match, then the key is rejected, and the unwrapping algorithm returns an error.",
      "ja": "初期値（IV）は、ラッピングプロセスの最初のステップでA [0]に割り当てられた値を指します。この値は、キーデータの整合性チェックを取得するために使用されます。アンラッピングプロセスの最後のステップでは、A [0]の回復された値がA [0]の期待値と比較されます。一致する場合、キーは有効として受け入れられ、アンラップアルゴリズムがそれを返します。一致しない場合、キーは拒否され、アンラップアルゴリズムはエラーを返します。"
    },
    {
      "indent": 3,
      "text": "The exact properties achieved by this integrity check depend on the definition of the initial value. Different applications may call for somewhat different properties; for example, whether there is a need to determine the integrity of key data throughout its lifecycle or just when it is unwrapped. This specification defines a default initial value that supports the integrity of the key data during the period it is wrapped (in Section 3.4.1). Provision is also made to support alternative initial values (in Section 3.4.2).",
      "ja": "この整合性チェックによって達成される正確なプロパティは、初期値の定義によって異なります。アプリケーションによっては、多少異なるプロパティが必要になる場合があります。たとえば、ライフサイクル全体を通じて、またはラップされていないときに、主要データの整合性を判断する必要があるかどうか。この仕様は、ラップされている期間（セクション3.4.1）の間にキーデータの整合性をサポートするデフォルトの初期値を定義します。代替の初期値をサポートするためのプロビジョニングも行われています（3.4.2項）。"
    },
    {
      "indent": 0,
      "text": "3.4.1. Default Initial Value",
      "section_title": true,
      "ja": "3.4.1. デフォルトの初期値"
    },
    {
      "indent": 3,
      "text": "The default initial value (IV) is defined to be the hexadecimal constant:",
      "ja": "デフォルトの初期値（IV）は、16進定数として定義されています。"
    },
    {
      "indent": 5,
      "text": "A[0] = IV = A6A6A6A6A6A6A6A6",
      "ja": "A [0] = IV = A6A6A6A6A6A6A6A6"
    },
    {
      "indent": 3,
      "text": "The use of a constant as the IV supports a strong integrity check on the key data during the period that it is wrapped. If unwrapping produces A[0] = A6A6A6A6A6A6A6A6, then the chance that the key data is corrupt is 2^-64. If unwrapping produces A[0] = any other value, then the unwrap must return an error and not return any key data.",
      "ja": "IVとして定数を使用すると、ラップされている期間中、キーデータの強力な整合性チェックがサポートされます。アンラップによりA [0] = A6A6A6A6A6A6A6A6が生成される場合、キーデータが破損している可能性は2 ^ -64です。アンラップによりA [0] =その他の値が生成される場合、アンラップはエラーを返し、キーデータを返さない必要があります。"
    },
    {
      "indent": 0,
      "text": "3.4.2. Alternative Initial Values",
      "section_title": true,
      "ja": "3.4.2. 代替初期値"
    },
    {
      "indent": 3,
      "text": "When the key wrap is used as part of a larger key management protocol or system, the desired scope for data integrity may be more than just the key data, and the desired duration may be more than just the period that it is wrapped. Also, if the key data is not just a SEED key, it may not always be a multiple of 64 bits. Alternative definitions of the initial value can be used to address such problems. According to RFC 3394 [RFC3394], NIST will define alternative initial values in future key management publications as they are needed. To accommodate a set of alternatives that may evolve over time, non-application-specific key wrap implementations will require some flexibility in the way the initial value is set and tested.",
      "ja": "キーラップがより大きなキー管理プロトコルまたはシステムの一部として使用される場合、データ整合性の望ましい範囲は単なるキーデータだけではなく、望ましい期間はラップされる期間だけではありません。また、鍵データが単なるSEED鍵ではない場合、必ずしも64ビットの倍数であるとは限りません。初期値の代替定義を使用して、このような問題に対処できます。 RFC 3394 [RFC3394]によれば、NISTは必要に応じて、将来の鍵管理出版物で代替初期値を定義する予定です。時間の経過とともに変化する可能性のある一連の代替案に対応するため、アプリケーション固有でないキーラップ実装では、初期値の設定とテストの方法にある程度の柔軟性が必要になります。"
    },
    {
      "indent": 0,
      "text": "4. SMIMECapabilities Attribute",
      "section_title": true,
      "ja": "4. SMIMECapabilities属性"
    },
    {
      "indent": 3,
      "text": "An S/MIME client SHOULD announce the set of cryptographic functions it supports by using the S/MIME capabilities attribute. This attribute provides a partial list of OIDs of cryptographic functions and MUST be signed by the client. The functions' OIDs SHOULD be logically separated in functional categories and MUST be ordered with respect to their preference.",
      "ja": "S / MIMEクライアントは、S / MIME機能属性を使用して、サポートする暗号化機能のセットを通知する必要があります（SHOULD）。この属性は、暗号化機能のOIDの部分的なリストを提供し、クライアントによって署名される必要があります。関数のOIDは論理的に機能カテゴリに分けられるべきであり（SHOULD）、それらの優先順位に従って順序付けされなければなりません（MUST）。"
    },
    {
      "indent": 3,
      "text": "RFC 3851 [RFC3851], Section 2.5.2 defines the SMIMECapabilities signed attribute (defined as a SEQUENCE of SMIMECapability SEQUENCEs) to be used to specify a partial list of algorithms that the software announcing the SMIMECapabilities can support.",
      "ja": "RFC 3851 [RFC3851]、セクション2.5.2は、SMIMECapabilitiesを通知するソフトウェアがサポートできるアルゴリズムの部分的なリストを指定するために使用されるSMIMECapabilities署名属性（SMIMECapability SEQUENCEのSEQUENCEとして定義）を定義します。"
    },
    {
      "indent": 3,
      "text": "If an S/MIME client is required to support symmetric encryption with SEED, the capabilities attribute MUST contain the SEED OID specified above in the category of symmetric algorithms. The parameter associated with this OID MUST be SeedSMimeCapability.",
      "ja": "SEDを使用した対称暗号化をサポートするためにS / MIMEクライアントが必要な場合は、capabilities属性に、対称アルゴリズムのカテゴリで上記で指定されたSEED OIDを含める必要があります。このOIDに関連付けられているパラメーターは、SeedSMimeCapabilityでなければなりません。"
    },
    {
      "indent": 5,
      "text": "SeedSMimeCapabilty ::= NULL",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The SMIMECapability SEQUENCE representing SEED MUST be DER-encoded as the following hexadecimal strings:",
      "ja": "シードを表すSMIMECapability SEQUENCEは、次の16進文字列としてDERでエンコードする必要があります。"
    },
    {
      "indent": 5,
      "text": "30 0C 06 08 2A 83 1A 8C 9A 44 01 04 05 00",
      "ja": "30 0 06 082А831А8ччч01 04 05 00"
    },
    {
      "indent": 3,
      "text": "When a sending agent creates an encrypted message, it has to decide which type of encryption algorithm to use. In general, the decision process involves information obtained from the capabilities lists included in messages received from the recipient, as well as other information, such as private agreements, user preferences and legal restrictions. If local policy requires the use of SEED for symmetric encryption, then both the sending and receiving S/MIME clients must support it, and SEED must be configured as the preferred symmetric algorithm.",
      "ja": "送信エージェントは、暗号化されたメッセージを作成するときに、使用する暗号化アルゴリズムのタイプを決定する必要があります。一般に、決定プロセスには、受信者から受信したメッセージに含まれる機能リストから取得した情報、および私的な合意、ユーザーの好み、法的制限などの他の情報が含まれます。ローカルポリシーで対称暗号化にSEEDの使用が必要な場合、送信S / MIMEクライアントと受信S / MIMEクライアントの両方がそれをサポートし、SEEDを優先対称アルゴリズムとして構成する必要があります。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document specifies the use of SEED for encrypting the content of a CMS message and for encrypting the symmetric key used to encrypt the content of a CMS message, with the other mechanisms being the same as the existing ones. Therefore, the security considerations described in the CMS specifications [CMS][CMSALG] and the AES key wrap algorithm [RFC3394] can be applied to this document. No security problem has been found on SEED [CRYPTREC].",
      "ja": "このドキュメントでは、CMSメッセージのコンテンツの暗号化と、CMSメッセージのコンテンツの暗号化に使用される対称キーの暗号化にSEEDを使用することを指定します。他のメカニズムは既存のものと同じです。したがって、CMS仕様[CMS] [CMSALG]およびAESキーラップアルゴリズム[RFC3394]で説明されているセキュリティの考慮事項をこのドキュメントに適用できます。 SEED [CRYPTREC]でセキュリティの問題は見つかりませんでした。"
    },
    {
      "indent": 0,
      "text": "6. References",
      "section_title": true,
      "ja": "6. 参考文献"
    },
    {
      "indent": 0,
      "text": "6.1. Normative References",
      "section_title": true,
      "ja": "6.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[TTASSEED]  Telecommunications Technology Association (TTA), South\n            Korea, \"128-bit Symmetric Block Cipher (SEED)\", TTAS.KO-\n            12.0004, September, 1998 (In Korean)\n            http://www.tta.or.kr/English/new/main/index.htm",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[CMS] Housley, R., \"Cryptographic Message Syntax (CMS)\", RFC 3852, July 2004.",
      "ja": "[CMS] Housley、R。、「Cryptographic Message Syntax（CMS）」、RFC 3852、2004年7月。"
    },
    {
      "indent": 3,
      "text": "[CMSALG] Housley, R., \"Cryptographic Message Syntax (CMS) Algorithms\", RFC 3370, August 2002.",
      "ja": "[CMSALG] Housley、R。、「Cryptographic Message Syntax（CMS）Algorithms」、RFC 3370、2002年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC3851] Ramsdell, B., \"Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.1 Message Specification\", RFC 3851, July 2004.",
      "ja": "[RFC3851] Ramsdell、B。、「Secure / Multipurpose Internet Mail Extensions（S / MIME）Version 3.1 Message Specification」、RFC 3851、2004年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC3394] Schaad, J. and R. Housley, \"Advanced Encryption Standard (AES) Key Wrap Algorithm\", RFC 3394, September 2002.",
      "ja": "[RFC3394] Schaad、J。およびR. Housley、「Advanced Encryption Standard（AES）Key Wrap Algorithm」、RFC 3394、2002年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 0,
      "text": "6.2. Informative References",
      "section_title": true,
      "ja": "6.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[SEED] Park, J., Lee, S., Kim, J., and J. Lee, \"The SEED Encryption Algorithm\", RFC 4009, February 2005.",
      "ja": "[シード]パーク、J。、リー、S。、キム、J.、J。リー、「SEED暗号化アルゴリズム」、RFC 4009、2005年2月。"
    },
    {
      "indent": 3,
      "text": "[ISOSEED] ISO/IEC, ISO/IEC JTC1/SC 27 N 256r1, \"National Body contributions on NP 18033 Encryption algorithms in response to document SC 27 N 2563\", October, 2000",
      "ja": "[ISOSEED] ISO / IEC、ISO / IEC JTC1 / SC 27 N 256r1、「ドキュメントSC 27 N 2563に対応するNP 18033暗号化アルゴリズムの国家機関の貢献」、2000年10月"
    },
    {
      "indent": 3,
      "text": "[CRYPTREC] Information-technology Promotion Agency (IPA), Japan, CRYPTREC. \"SEED Evaluation Report\", February, 2002 http://www.kisa.or.kr",
      "ja": "[CRYPTREC]情報技術振興局（IPA）、日本、CRYPTREC。 「シード評価レポート」、2002年2月http://www.kisa.or.kr"
    },
    {
      "indent": 0,
      "text": "Appendix A. ASN.1 Module",
      "section_title": true,
      "ja": "付録A. ASN.1モジュール"
    },
    {
      "indent": 5,
      "text": "SeedEncryptionAlgorithmInCMS\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)\n      pkcs9(9) smime(16) modules(0) id-mod-cms-seed(24) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "DEFINITIONS IMPLICIT TAGS ::=",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "BEGIN",
      "ja": "ベギン"
    },
    {
      "indent": 7,
      "text": "id-seedCBC OBJECT IDENTIFIER ::=\n { iso(1) member-body(2) korea(410) kisa(200004)\n   algorithm(1) seedCBC(4) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "-- Initialization Vector (IV)",
      "ja": "-初期化ベクトル（IV）"
    },
    {
      "indent": 7,
      "text": "SeedCBCParameter ::= SeedIV\nSeedIV ::= OCTET STRING (SIZE(16))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "-- SEED Key Wrap Algorithm identifiers - Parameter is absent.",
      "ja": "-SEEDキーラップアルゴリズム識別子-パラメータがありません。"
    },
    {
      "indent": 7,
      "text": "id-npki-app-cmsSeed-wrap OBJECT IDENTIFIER ::=\n  { iso(1) member-body(2) korea(410) kisa(200004) npki-app(7)\n    smime(1) alg(1) cmsSEED-wrap(1) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "-- SEED S/MIME Capability parameter",
      "ja": "-SEED S / MIME機能パラメーター"
    },
    {
      "indent": 7,
      "text": "SeedSMimeCapability ::= NULL",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Jongwook Park Korea Information Security Agency 78, Garak-Dong, Songpa-Gu, Seoul, 138-803 REPUBLIC OF KOREA",
      "ja": "Jongwook Park Korea Information Security Agency 78、Garak-Dong、Songpa-Gu、Seoul、138-803 REPUBLIC OF KOREA"
    },
    {
      "indent": 3,
      "text": "Phone: +82-2-405-5432\nFAX  : +82-2-405-5499\nEMail: khopri@kisa.or.kr",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Sungjae Lee Korea Information Security Agency",
      "ja": "Sungjae Lee Korea Information Security Agency"
    },
    {
      "indent": 3,
      "text": "Phone: +82-2-405-5243\nFAX  : +82-2-405-5499\nEMail: sjlee@kisa.or.kr",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Jeeyeon Kim Korea Information Security Agency",
      "ja": "キム・ジェヨン韓国情報セキュリティ庁"
    },
    {
      "indent": 3,
      "text": "Phone: +82-2-405-5238\nFAX  : +82-2-405-5499\nEMail: jykim@kisa.or.kr",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Jaeil Lee Korea Information Security Agency Phone: +82-2-405-5300 FAX : +82-2-405-5499 EMail: jilee@kisa.or.kr",
      "ja": "Jaeil Lee Korea Information Security Agency電話：+ 82-2-405-5300 FAX：+ 82-2-405-5499メール：jilee@kisa.or.kr"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2005).",
      "ja": "Copyright（C）The Internet Society（2005）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "このドキュメントは、BCP 78に含まれる権利、ライセンス、および制限の対象であり、そこに記載されている場合を除き、著者はすべての権利を保持します。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "このドキュメントとここに含まれる情報は、「現状のまま」で提供され、寄稿者、彼/彼女の代理人、または（もしあれば）組織、インターネットエンジニアリングおよびインターネットエンジニアリングタスクフォースは、すべての保証を明示的または明示的に提供します。ここに含まれる情報の使用により、商品性または特定の目的への適合性に関するいかなる権利または黙示の保証も侵害されないという保証を含みますが、これに限定されるものではありません。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the IETF's procedures with respect to rights in IETF Documents can be found in BCP 78 and BCP 79.",
      "ja": "IETFは、このドキュメントに記載されているテクノロジーの実装または使用に関連すると主張される可能性がある知的財産権またはその他の権利の有効性または範囲、またはそのような権利に基づくライセンスが適用されるかどうかに関係なく、いかなる立場も取りません。利用できる;また、そのような権利を特定するために独立した取り組みを行ったことを表すものでもありません。 IETFドキュメントの権利に関するIETFの手順に関する情報は、BCP 78およびBCP 79にあります。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IETF事務局に対して行われたIPR開示のコピー、および利用可能になるライセンスの保証、または一般ライセンスを取得しようとした試み、またはこの仕様の実装者またはユーザーがそのような所有権を使用するための許可を取得した結果を取得できます。 http://www.ietf.org/iprのIETFオンラインIPRリポジトリから。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、この規格の実装に必要となる可能性のある技術をカバーする可能性のある著作権、特許、特許出願、またはその他の所有権に注意を向けるよう、利害関係者に呼びかけます。 IEETのietf-ipr@ietf.orgに情報を送信してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFC Editor機能への資金提供は、現在Internet Societyから提供されています。"
    }
  ]
}