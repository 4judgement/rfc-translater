{
  "title": {
    "text": "RFC 7520 - Examples of Protecting Content Using JSON Object Signing and Encryption (JOSE)",
    "ja": "RFC 7520 - JSONオブジェクトの署名と暗号化（JOSE）を使用したコンテンツの保護の例"
  },
  "number": 7520,
  "created_at": "2020-08-30 20:04:36.667430+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         M. Miller\nRequest for Comments: 7520                           Cisco Systems, Inc.\nCategory: Informational                                         May 2015\nISSN: 2070-1721",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": " Examples of Protecting Content Using JSON Object Signing and Encryption (JOSE)",
      "ja": "JSONオブジェクトの署名と暗号化（JOSE）を使用したコンテンツの保護の例"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document contains a set of examples using JSON Object Signing and Encryption (JOSE) technology to protect data. These examples present a representative sampling of JSON Web Key (JWK) objects as well as various JSON Web Signature (JWS) and JSON Web Encryption (JWE) results given similar inputs.",
      "ja": "このドキュメントには、JSONオブジェクト署名および暗号化（JOSE）テクノロジーを使用してデータを保護する一連の例が含まれています。これらの例は、JSON Web Key（JWK）オブジェクトの代表的なサンプルと、同様の入力が与えられたさまざまなJSON Web Signature（JWS）およびJSON Web Encryption（JWE）の結果を示しています。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントはInternet Standards Trackの仕様ではありません。情報提供を目的として公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。 IESGによって承認されたすべてのドキュメントが、あらゆるレベルのインターネット標準の候補になるわけではありません。 RFC 5741のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7520.",
      "ja": "このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、http：//www.rfc-editor.org/info/rfc7520で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2015 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（http://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................5\n   1.1. Conventions Used in This Document ..........................5\n2. Terminology .....................................................6\n3. JSON Web Key Examples ...........................................6\n   3.1. EC Public Key ..............................................6\n   3.2. EC Private Key .............................................7\n   3.3. RSA Public Key .............................................8\n   3.4. RSA Private Key ............................................8\n   3.5. Symmetric Key (MAC Computation) ...........................10\n   3.6. Symmetric Key (Encryption) ................................11\n4. JSON Web Signature Examples ....................................11\n   4.1. RSA v1.5 Signature ........................................12\n        4.1.1. Input Factors ......................................12\n        4.1.2. Signing Operation ..................................12\n        4.1.3. Output Results .....................................13\n   4.2. RSA-PSS Signature .........................................15\n        4.2.1. Input Factors ......................................15\n        4.2.2. Signing Operation ..................................16\n        4.2.3. Output Results .....................................17\n   4.3. ECDSA Signature ...........................................19\n        4.3.1. Input Factors ......................................19\n        4.3.2. Signing Operation ..................................19\n        4.3.3. Output Results .....................................20\n   4.4. HMAC-SHA2 Integrity Protection ............................21\n        4.4.1. Input Factors ......................................22\n        4.4.2. Signing Operation ..................................22\n        4.4.3. Output Results .....................................23\n   4.5. Signature with Detached Content ...........................24\n        4.5.1. Input Factors ......................................25\n        4.5.2. Signing Operation ..................................25\n        4.5.3. Output Results .....................................26\n   4.6. Protecting Specific Header Fields .........................27\n        4.6.1. Input Factors ......................................27\n        4.6.2. Signing Operation ..................................27\n        4.6.3. Output Results .....................................28\n   4.7. Protecting Content Only ...................................29\n        4.7.1. Input Factors ......................................30\n        4.7.2. Signing Operation ..................................30\n        4.7.3. Output Results .....................................31\n   4.8. Multiple Signatures .......................................32\n        4.8.1. Input Factors ......................................32\n        4.8.2. First Signing Operation ............................33\n        4.8.3. Second Signing Operation ...........................34\n        4.8.4. Third Signing Operation ............................36\n        4.8.5. Output Results .....................................37\n5. JSON Web Encryption Examples ...................................39",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "5.1. Key Encryption Using RSA v1.5 and AES-HMAC-SHA2 ...........39\n     5.1.1. Input Factors ......................................39\n     5.1.2. Generated Factors ..................................41\n     5.1.3. Encrypting the Key .................................41\n     5.1.4. Encrypting the Content .............................42\n     5.1.5. Output Results .....................................43\n5.2. Key Encryption Using RSA-OAEP with AES-GCM ................45\n     5.2.1. Input Factors ......................................46\n     5.2.2. Generated Factors ..................................47\n     5.2.3. Encrypting the Key .................................48\n     5.2.4. Encrypting the Content .............................48\n     5.2.5. Output Results .....................................49\n5.3. Key Wrap Using PBES2-AES-KeyWrap with AES-CBC-HMAC-SHA2 ...52\n     5.3.1. Input Factors ......................................53\n     5.3.2. Generated Factors ..................................54\n     5.3.3. Encrypting the Key .................................54\n     5.3.4. Encrypting the Content .............................55\n     5.3.5. Output Results .....................................56\n5.4. Key Agreement with Key Wrapping Using ECDH-ES and\n     AES-KeyWrap with AES-GCM ..................................59\n     5.4.1. Input Factors ......................................59\n     5.4.2. Generated Factors ..................................60\n     5.4.3. Encrypting the Key .................................60\n     5.4.4. Encrypting the Content .............................61\n     5.4.5. Output Results .....................................63\n5.5. Key Agreement Using ECDH-ES with AES-CBC-HMAC-SHA2 ........65\n     5.5.1. Input Factors ......................................66\n     5.5.2. Generated Factors ..................................66\n     5.5.3. Key Agreement ......................................67\n     5.5.4. Encrypting the Content .............................67\n     5.5.5. Output Results .....................................68\n5.6. Direct Encryption Using AES-GCM ...........................70\n     5.6.1. Input Factors ......................................70\n     5.6.2. Generated Factors ..................................70\n     5.6.3. Encrypting the Content .............................71\n     5.6.4. Output Results .....................................72\n5.7. Key Wrap Using AES-GCM KeyWrap with AES-CBC-HMAC-SHA2 .....73\n     5.7.1. Input Factors ......................................73\n     5.7.2. Generated Factors ..................................74\n     5.7.3. Encrypting the Key .................................74\n     5.7.4. Encrypting the Content .............................75\n     5.7.5. Output Results .....................................77\n5.8. Key Wrap Using AES-KeyWrap with AES-GCM ...................79\n     5.8.1. Input Factors ......................................79\n     5.8.2. Generated Factors ..................................80\n     5.8.3. Encrypting the Key .................................80\n     5.8.4. Encrypting the Content .............................80\n     5.8.5. Output Results .....................................82",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "   5.9. Compressed Content ........................................84\n        5.9.1. Input Factors ......................................84\n        5.9.2. Generated Factors ..................................84\n        5.9.3. Encrypting the Key .................................85\n        5.9.4. Encrypting the Content .............................85\n        5.9.5. Output Results .....................................86\n   5.10. Including Additional Authenticated Data ..................88\n        5.10.1. Input Factors .....................................88\n        5.10.2. Generated Factors .................................89\n        5.10.3. Encrypting the Key ................................90\n        5.10.4. Encrypting the Content ............................90\n        5.10.5. Output Results ....................................91\n   5.11. Protecting Specific Header Fields ........................93\n        5.11.1. Input Factors .....................................93\n        5.11.2. Generated Factors .................................94\n        5.11.3. Encrypting the Key ................................94\n        5.11.4. Encrypting the Content ............................94\n        5.11.5. Output Results ....................................95\n   5.12. Protecting Content Only ..................................97\n        5.12.1. Input Factors .....................................97\n        5.12.2. Generated Factors .................................98\n        5.12.3. Encrypting the Key ................................98\n        5.12.4. Encrypting the Content ............................98\n        5.12.5. Output Results ....................................99\n   5.13. Encrypting to Multiple Recipients .......................101\n        5.13.1. Input Factors ....................................101\n        5.13.2. Generated Factors ................................101\n        5.13.3. Encrypting the Key to the First Recipient ........102\n        5.13.4. Encrypting the Key to the Second Recipient .......103\n        5.13.5. Encrypting the Key to the Third Recipient ........105\n        5.13.6. Encrypting the Content ...........................106\n        5.13.7. Output Results ...................................108\n6. Nesting Signatures and Encryption .............................110\n   6.1. Signing Input Factors ....................................110\n   6.2. Signing Operation ........................................112\n   6.3. Signing Output ...........................................112\n   6.4. Encryption Input Factors .................................113\n   6.5. Encryption Generated Factors .............................113\n   6.6. Encrypting the Key .......................................114\n   6.7. Encrypting the Content ...................................114\n   6.8. Encryption Output ........................................115\n7. Security Considerations .......................................119\n8. References ....................................................119\n   8.1. Normative References .....................................119\n   8.2. Informative References ...................................120\nAcknowledgements .................................................120\nAuthor's Address .................................................120",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The JSON Object Signing and Encryption (JOSE) technologies -- JSON Web Signature [JWS], JSON Web Encryption [JWE], JSON Web Key [JWK], and JSON Web Algorithms [JWA] -- can be used collectively to encrypt and/or sign content using a variety of algorithms. While the full set of permutations is extremely large, and might be daunting to some, it is expected that most applications will only use a small set of algorithms to meet their needs.",
      "ja": "JSONオブジェクト署名および暗号化（JOSE）テクノロジー-JSON Web Signature [JWS]、JSON Web Encryption [JWE]、JSON Web Key [JWK]、およびJSON Web Algorithms [JWA]-をまとめて使用して、暗号化および/または、さまざまなアルゴリズムを使用してコンテンツに署名します。順列の完全なセットは非常に大きく、いくつかは気が遠くなるかもしれませんが、ほとんどのアプリケーションはそれらのニーズを満たすためにアルゴリズムの小さなセットのみを使用することが予想されます。"
    },
    {
      "indent": 3,
      "text": "This document provides a number of examples of signing or encrypting content using JOSE. While not exhaustive, it does compile a representative sampling of JOSE features. As much as possible, the same signature payload or encryption plaintext content is used to illustrate differences in various signing and encryption results.",
      "ja": "このドキュメントでは、JOSEを使用してコンテンツに署名または暗号化する例をいくつか紹介します。完全ではありませんが、JOSE機能の代表的なサンプルをまとめています。さまざまな署名と暗号化の結果の違いを示すために、可能な限り同じ署名ペイロードまたは暗号化プレーンテキストコンテンツが使用されています。"
    },
    {
      "indent": 3,
      "text": "This document also provides a number of example JWK objects. These examples illustrate the distinguishing properties of various key types and emphasize important characteristics. Most of the JWK examples are then used in the signature or encryption examples that follow.",
      "ja": "このドキュメントでは、JWKオブジェクトの例もいくつか提供しています。これらの例は、さまざまなキータイプの特徴的な特性を示し、重要な特性を強調しています。 JWKの例のほとんどは、その後に続く署名または暗号化の例で使用されます。"
    },
    {
      "indent": 3,
      "text": "All of the examples contained herein are available in a machine-readable format at <https://github.com/ietf-jose/cookbook>.",
      "ja": "ここに含まれるすべての例は、<https://github.com/ietf-jose/cookbook>で機械可読形式で利用できます。"
    },
    {
      "indent": 0,
      "text": "1.1. Conventions Used in This Document",
      "section_title": true,
      "ja": "1.1. このドキュメントで使用される規則"
    },
    {
      "indent": 3,
      "text": "This document separates data that are expected to be input to an implementation of JOSE from data that are expected to be generated by an implementation of JOSE. Each example, wherever possible, provides enough information both to replicate the results of this document and to validate the results by running its inverse operation (e.g., signature results can be validated by performing the JWS verify). However, some algorithms inherently use random data; therefore, computations employing them cannot be exactly replicated. Such cases are explicitly stated in the relevant sections.",
      "ja": "このドキュメントでは、JOSEの実装への入力が予想されるデータと、JOSEの実装によって生成されることが予想されるデータを分けています。各例は、可能な場合は常に、このドキュメントの結果を複製し、その逆の操作を実行して結果を検証するために十分な情報を提供します（たとえば、JWS検証を実行することで署名結果を検証できます）。ただし、一部のアルゴリズムは本質的にランダムデータを使用します。したがって、それらを使用する計算を正確に複製することはできません。このような場合は、関連するセクションで明示的に説明されています。"
    },
    {
      "indent": 3,
      "text": "All instances of binary octet strings are represented using base64url [RFC4648] encoding.",
      "ja": "バイナリオクテット文字列のすべてのインスタンスは、base64url [RFC4648]エンコーディングを使用して表されます。"
    },
    {
      "indent": 3,
      "text": "Wherever possible and unless otherwise noted, the examples include the JWS or JWE Compact Serialization, general JWS or JWE JSON Serialization, and flattened JWS or JWE JSON Serialization.",
      "ja": "可能な限り、特に明記しない限り、例にはJWSまたはJWEコンパクトシリアライゼーション、一般的なJWSまたはJWE JSONシリアライゼーション、およびフラット化されたJWSまたはJWE JSONシリアライゼーションが含まれます。"
    },
    {
      "indent": 3,
      "text": "All of the examples in this document have whitespace added to improve formatting and readability. Except for JWE Plaintext or JWS Payload content, whitespace is not part of the cryptographic operations nor the exchange results.",
      "ja": "このドキュメントのすべての例には、書式設定と読みやすさを向上させるために空白が追加されています。 JWE平文またはJWSペイロードのコンテンツを除き、空白は暗号化操作の一部ではなく、交換の結果でもありません。"
    },
    {
      "indent": 3,
      "text": "Unless otherwise noted, the JWE Plaintext or JWS Payload content does include \" \" (U+0020 SPACE) characters. Line breaks (U+000A LINE FEED) replace some \" \" (U+0020 SPACE) characters to improve readability but are not present in the JWE Plaintext or JWS Payload.",
      "ja": "特に明記されていない限り、JWE平文またはJWSペイロードのコンテンツには \"\"（U + 0020 SPACE）文字が含まれています。改行（U + 000A LINE FEED）は一部の \"\"（U + 0020 SPACE）文字を置き換えて読みやすさを向上させていますが、JWE平文またはJWSペイロードにはありません。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2. 用語"
    },
    {
      "indent": 3,
      "text": "This document inherits terminology regarding JSON Web Signature (JWS) technology from [JWS], terminology regarding JSON Web Encryption (JWE) technology from [JWE], terminology regarding JSON Web Key (JWK) technology from [JWK], and terminology regarding algorithms from [JWA].",
      "ja": "このドキュメントは、[JWS]からJSON Web Signature（JWS）テクノロジーに関する用語、[JWE]からJSON Web Encryption（JWE）テクノロジーに関する用語、[JWK]からJSON Web Key（JWK）テクノロジーに関する用語、およびからのアルゴリズムに関する用語を継承しています。 [JWA]。"
    },
    {
      "indent": 0,
      "text": "3. JSON Web Key Examples",
      "section_title": true,
      "ja": "3. JSON Web Keyの例"
    },
    {
      "indent": 3,
      "text": "The following sections demonstrate how to represent various JWK and JWK Set objects.",
      "ja": "以下のセクションでは、さまざまなJWKおよびJWK Setオブジェクトを表す方法を示します。"
    },
    {
      "indent": 0,
      "text": "3.1. EC Public Key",
      "section_title": true,
      "ja": "3.1. EC公開鍵"
    },
    {
      "indent": 3,
      "text": "This example illustrates an Elliptic Curve (EC) public key. This example is the public key corresponding to the private key in Figure 2.",
      "ja": "この例は、楕円曲線（EC）公開鍵を示しています。この例は、図2の秘密鍵に対応する公開鍵です。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"EC\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\",\n  \"use\": \"sig\",\n  \"crv\": \"P-521\",\n  \"x\": \"AHKZLLOsCOzz5cY97ewNUajB957y-C-U88c3v13nmGZx6sYl_oJXu9\n      A5RkTKqjqvjyekWF-7ytDyRXYgCF5cj0Kt\",\n  \"y\": \"AdymlHvOiLxXkEhayXQnNCvDX4h9htZaCJN34kfmC6pV5OhQHiraVy\n      SsUdaQkAgDPrwQrJmbnX9cwlGfP-HqHZR1\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 1: Elliptic Curve P-521 Public Key",
      "ja": "図1：楕円曲線P-521公開鍵"
    },
    {
      "indent": 3,
      "text": "The field \"kty\" value of \"EC\" identifies this as an Elliptic Curve key. The field \"crv\" identifies the curve, which is curve P-521 for this example. The values of the fields \"x\" and \"y\" are the base64url-encoded X and Y coordinates (respectively).",
      "ja": "「EC」のフィールド「kty」値は、これを楕円曲線キーとして識別します。フィールド「crv」は、この例では曲線P-521である曲線を識別します。フィールド「x」と「y」の値は、base64urlでエンコードされたX座標とY座標（それぞれ）です。"
    },
    {
      "indent": 3,
      "text": "The values of the fields \"x\" and \"y\" decoded are the octets necessary to represent each full coordinate to the order of the curve. For a key over curve P-521, the values of the fields \"x\" and \"y\" are exactly 66 octets in length when decoded, padded with leading zero (0x00) octets to reach the expected length.",
      "ja": "デコードされたフィールド「x」と「y」の値は、各フル座標を曲線の次数で表すために必要なオクテットです。曲線P-521上のキーの場合、フィールド「x」と「y」の値は、デコード時に正確に66オクテットであり、期待される長さに到達するように先行ゼロ（0x00）オクテットが埋め込まれます。"
    },
    {
      "indent": 0,
      "text": "3.2. EC Private Key",
      "section_title": true,
      "ja": "3.2. EC秘密鍵"
    },
    {
      "indent": 3,
      "text": "This example illustrates an Elliptic Curve private key. This example is the private key corresponding to the public key in Figure 1.",
      "ja": "この例は、楕円曲線の秘密鍵を示しています。この例は、図1の公開鍵に対応する秘密鍵です。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"EC\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\",\n  \"use\": \"sig\",\n  \"crv\": \"P-521\",\n  \"x\": \"AHKZLLOsCOzz5cY97ewNUajB957y-C-U88c3v13nmGZx6sYl_oJXu9\n      A5RkTKqjqvjyekWF-7ytDyRXYgCF5cj0Kt\",\n  \"y\": \"AdymlHvOiLxXkEhayXQnNCvDX4h9htZaCJN34kfmC6pV5OhQHiraVy\n      SsUdaQkAgDPrwQrJmbnX9cwlGfP-HqHZR1\",\n  \"d\": \"AAhRON2r9cqXX1hg-RoI6R1tX5p2rUAYdmpHZoC1XNM56KtscrX6zb\n      KipQrCW9CGZH3T4ubpnoTKLDYJ_fF3_rJt\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 2: Elliptic Curve P-521 Private Key",
      "ja": "図2：楕円曲線P-521秘密鍵"
    },
    {
      "indent": 3,
      "text": "The field \"kty\" value of \"EC\" identifies this as an Elliptic Curve key. The field \"crv\" identifies the curve, which is curve P-521 (also known as SECG curve secp521r1) for this example. The values of the fields \"x\" and \"y\" are the base64url-encoded X and Y coordinates (respectively). The field \"d\" value is the base64url-encoded private key.",
      "ja": "「EC」のフィールド「kty」値は、これを楕円曲線キーとして識別します。フィールド「crv」は、この例では曲線P-521（SECG曲線secp521r1とも呼ばれる）である曲線を識別します。フィールド「x」と「y」の値は、base64urlでエンコードされたX座標とY座標（それぞれ）です。フィールド「d」の値は、base64urlでエンコードされた秘密鍵です。"
    },
    {
      "indent": 3,
      "text": "The values of the fields \"d\", \"x\", and \"y\" decoded are the octets necessary to represent the private key or each full coordinate (respectively) to the order of the curve. For a key over curve P-521, the values of the \"d\", \"x\", and \"y\" fields are each exactly 66 octets in length when decoded, padded with leading zero (0x00) octets to reach the expected length.",
      "ja": "デコードされたフィールド「d」、「x」、および「y」の値は、秘密鍵または曲線の順序に対する（それぞれの）各完全座標を表すのに必要なオクテットです。曲線P-521のキーの場合、「d」、「x」、および「y」フィールドの値は、デコード時にそれぞれ正確に66オクテットであり、期待される長さに達するように先行ゼロ（0x00）オクテットが埋め込まれます。"
    },
    {
      "indent": 0,
      "text": "3.3. RSA Public Key",
      "section_title": true,
      "ja": "3.3. RSA公開鍵"
    },
    {
      "indent": 3,
      "text": "This example illustrates an RSA public key. This example is the public key corresponding to the private key in Figure 4.",
      "ja": "この例は、RSA公開鍵を示しています。この例は、図4の秘密鍵に対応する公開鍵です。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"RSA\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\",\n  \"use\": \"sig\",\n  \"n\": \"n4EPtAOCc9AlkeQHPzHStgAbgs7bTZLwUBZdR8_KuKPEHLd4rHVTeT\n      -O-XV2jRojdNhxJWTDvNd7nqQ0VEiZQHz_AJmSCpMaJMRBSFKrKb2wqV\n      wGU_NsYOYL-QtiWN2lbzcEe6XC0dApr5ydQLrHqkHHig3RBordaZ6Aj-\n      oBHqFEHYpPe7Tpe-OfVfHd1E6cS6M1FZcD1NNLYD5lFHpPI9bTwJlsde\n      3uhGqC0ZCuEHg8lhzwOHrtIQbS0FVbb9k3-tVTU4fg_3L_vniUFAKwuC\n      LqKnS2BYwdq_mzSnbLY7h_qixoR7jig3__kRhuaxwUkRz5iaiQkqgc5g\n      HdrNP5zw\",\n  \"e\": \"AQAB\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 21,
      "text": "Figure 3: RSA 2048-Bit Public Key",
      "ja": "図3：RSA 2048ビット公開鍵"
    },
    {
      "indent": 3,
      "text": "The field \"kty\" value of \"RSA\" identifies this as an RSA key. The fields \"n\" and \"e\" values are the modulus and (public) exponent (respectively) using the minimum octets necessary.",
      "ja": "「RSA」のフィールド「kty」値は、これをRSAキーとして識別します。フィールド \"n\"と \"e\"の値は、必要な最小オクテットを使用した係数と（それぞれ）指数です。"
    },
    {
      "indent": 3,
      "text": "For a 2048-bit key, the field \"n\" value is 256 octets in length when decoded.",
      "ja": "2048ビットのキーの場合、フィールド「n」の値はデコード時に256オクテットの長さです。"
    },
    {
      "indent": 0,
      "text": "3.4. RSA Private Key",
      "section_title": true,
      "ja": "3.4. RSA秘密鍵"
    },
    {
      "indent": 3,
      "text": "This example illustrates an RSA private key. This example is the private key corresponding to the public key in Figure 3.",
      "ja": "この例は、RSA秘密鍵を示しています。この例は、図3の公開鍵に対応する秘密鍵です。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"RSA\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\",\n  \"use\": \"sig\",\n  \"n\": \"n4EPtAOCc9AlkeQHPzHStgAbgs7bTZLwUBZdR8_KuKPEHLd4rHVTeT\n      -O-XV2jRojdNhxJWTDvNd7nqQ0VEiZQHz_AJmSCpMaJMRBSFKrKb2wqV\n      wGU_NsYOYL-QtiWN2lbzcEe6XC0dApr5ydQLrHqkHHig3RBordaZ6Aj-\n      oBHqFEHYpPe7Tpe-OfVfHd1E6cS6M1FZcD1NNLYD5lFHpPI9bTwJlsde\n      3uhGqC0ZCuEHg8lhzwOHrtIQbS0FVbb9k3-tVTU4fg_3L_vniUFAKwuC\n      LqKnS2BYwdq_mzSnbLY7h_qixoR7jig3__kRhuaxwUkRz5iaiQkqgc5g\n      HdrNP5zw\",\n  \"e\": \"AQAB\",\n  \"d\": \"bWUC9B-EFRIo8kpGfh0ZuyGPvMNKvYWNtB_ikiH9k20eT-O1q_I78e\n      iZkpXxXQ0UTEs2LsNRS-8uJbvQ-A1irkwMSMkK1J3XTGgdrhCku9gRld\n      Y7sNA_AKZGh-Q661_42rINLRCe8W-nZ34ui_qOfkLnK9QWDDqpaIsA-b\n      MwWWSDFu2MUBYwkHTMEzLYGqOe04noqeq1hExBTHBOBdkMXiuFhUq1BU\n      6l-DqEiWxqg82sXt2h-LMnT3046AOYJoRioz75tSUQfGCshWTBnP5uDj\n      d18kKhyv07lhfSJdrPdM5Plyl21hsFf4L_mHCuoFau7gdsPfHPxxjVOc\n      OpBrQzwQ\",\n  \"p\": \"3Slxg_DwTXJcb6095RoXygQCAZ5RnAvZlno1yhHtnUex_fp7AZ_9nR\n      aO7HX_-SFfGQeutao2TDjDAWU4Vupk8rw9JR0AzZ0N2fvuIAmr_WCsmG\n      peNqQnev1T7IyEsnh8UMt-n5CafhkikzhEsrmndH6LxOrvRJlsPp6Zv8\n      bUq0k\",\n  \"q\": \"uKE2dh-cTf6ERF4k4e_jy78GfPYUIaUyoSSJuBzp3Cubk3OCqs6grT\n      8bR_cu0Dm1MZwWmtdqDyI95HrUeq3MP15vMMON8lHTeZu2lmKvwqW7an\n      V5UzhM1iZ7z4yMkuUwFWoBvyY898EXvRD-hdqRxHlSqAZ192zB3pVFJ0\n      s7pFc\",\n  \"dp\": \"B8PVvXkvJrj2L-GYQ7v3y9r6Kw5g9SahXBwsWUzp19TVlgI-YV85q\n      1NIb1rxQtD-IsXXR3-TanevuRPRt5OBOdiMGQp8pbt26gljYfKU_E9xn\n      -RULHz0-ed9E9gXLKD4VGngpz-PfQ_q29pk5xWHoJp009Qf1HvChixRX\n      59ehik\",\n  \"dq\": \"CLDmDGduhylc9o7r84rEUVn7pzQ6PF83Y-iBZx5NT-TpnOZKF1pEr\n      AMVeKzFEl41DlHHqqBLSM0W1sOFbwTxYWZDm6sI6og5iTbwQGIC3gnJK\n      bi_7k_vJgGHwHxgPaX2PnvP-zyEkDERuf-ry4c_Z11Cq9AqC2yeL6kdK\n      T1cYF8\",\n  \"qi\": \"3PiqvXQN0zwMeE-sBvZgi289XP9XCQF3VWqPzMKnIgQp7_Tugo6-N\n      ZBKCQsMf3HaEGBjTVJs_jcK8-TRXvaKe-7ZMaQj8VfBdYkssbu0NKDDh\n      jJ-GtiseaDVWt7dcH0cfwxgFUHpQh7FoCrjFJ6h6ZEpMF6xmujs4qMpP\n      z8aaI4\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 20,
      "text": "Figure 4: RSA 2048-Bit Private Key",
      "ja": "図4：RSA 2048ビットの秘密鍵"
    },
    {
      "indent": 3,
      "text": "The field \"kty\" value of \"RSA\" identifies this as an RSA key. The fields \"n\" and \"e\" values are the base64url-encoded modulus and (public) exponent (respectively) using the minimum number of octets necessary. The field \"d\" value is the base64url-encoded private exponent using the minimum number of octets necessary. The fields \"p\", \"q\", \"dp\", \"dq\", and \"qi\" are the base64url-encoded additional private information using the minimum number of octets necessary.",
      "ja": "「RSA」のフィールド「kty」値は、これをRSAキーとして識別します。フィールド \"n\"および \"e\"の値は、base64urlでエンコードされた係数と、（それぞれ）必要な最小オクテット数を使用した（それぞれの）指数です。フィールド「d」の値は、必要な最小オクテット数を使用した、base64urlでエンコードされたプライベート指数です。フィールド「p」、「q」、「dp」、「dq」、および「qi」は、必要な最小オクテット数を使用してbase64urlでエンコードされた追加のプライベート情報です。"
    },
    {
      "indent": 3,
      "text": "For a 2048-bit key, the field \"n\" is 256 octets in length when decoded, and the field \"d\" is not longer than 256 octets in length when decoded.",
      "ja": "2048ビットのキーの場合、フィールド \"n\"はデコード時に256オクテットの長さであり、フィールド \"d\"はデコード時に256オクテット以下の長さです。"
    },
    {
      "indent": 0,
      "text": "3.5. Symmetric Key (MAC Computation)",
      "section_title": true,
      "ja": "3.5. 対称鍵（MAC計算）"
    },
    {
      "indent": 3,
      "text": "This example illustrates a symmetric key used for computing Message Authentication Codes (MACs).",
      "ja": "この例は、メッセージ認証コード（MAC）の計算に使用される対称鍵を示しています。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"oct\",\n  \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\",\n  \"use\": \"sig\",\n  \"alg\": \"HS256\",\n  \"k\": \"hJtXIZ2uSN5kbQfbtTNWbpdmhkV8FJG-Onbc6mxCcYg\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 5: HMAC SHA-256 Symmetric Key",
      "ja": "図5：HMAC SHA-256対称鍵"
    },
    {
      "indent": 3,
      "text": "The field \"kty\" value of \"oct\" identifies this as a symmetric key. The field \"k\" value is the symmetric key.",
      "ja": "「oct」のフィールド「kty」値は、これを対称鍵として識別します。フィールド「k」の値は対称鍵です。"
    },
    {
      "indent": 3,
      "text": "When used for the signing algorithm \"HS256\" (HMAC-SHA256), the field \"k\" value is 32 octets (or more) in length when decoded, padded with leading zero (0x00) octets to reach the minimum expected length.",
      "ja": "署名アルゴリズム「HS256」（HMAC-SHA256）に使用する場合、フィールド「k」の値はデコード時に32オクテット（またはそれ以上）で、先頭にゼロ（0x00）オクテットが埋め込まれ、予想される最小長に達します。"
    },
    {
      "indent": 0,
      "text": "3.6. Symmetric Key (Encryption)",
      "section_title": true,
      "ja": "3.6. 対称鍵（暗号化）"
    },
    {
      "indent": 3,
      "text": "This example illustrates a symmetric key used for encryption.",
      "ja": "この例は、暗号化に使用される対称鍵を示しています。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"oct\",\n  \"kid\": \"1e571774-2e08-40da-8308-e8d68773842d\",\n  \"use\": \"enc\",\n  \"alg\": \"A256GCM\",\n  \"k\": \"AAPapAv4LbFbiVawEjagUBluYqN5rhna-8nuldDvOx8\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Figure 6: AES 256-Bit Symmetric Encryption Key",
      "ja": "図6：AES 256ビット対称暗号化キー"
    },
    {
      "indent": 3,
      "text": "The field \"kty\" value of \"oct\" identifies this as a symmetric key. The field \"k\" value is the symmetric key.",
      "ja": "「oct」のフィールド「kty」値は、これを対称鍵として識別します。フィールド「k」の値は対称鍵です。"
    },
    {
      "indent": 3,
      "text": "For the content encryption algorithm \"A256GCM\", the field \"k\" value is exactly 32 octets in length when decoded, padded with leading zero (0x00) octets to reach the expected length.",
      "ja": "コンテンツ暗号化アルゴリズム「A256GCM」の場合、フィールド「k」の値はデコード時に正確に32オクテットになり、期待される長さに達するように先頭にゼロ（0x00）オクテットが埋め込まれます。"
    },
    {
      "indent": 0,
      "text": "4. JSON Web Signature Examples",
      "section_title": true,
      "ja": "4. JSON Web署名の例"
    },
    {
      "indent": 3,
      "text": "The following sections demonstrate how to generate various JWS objects.",
      "ja": "以下のセクションでは、さまざまなJWSオブジェクトを生成する方法を示します。"
    },
    {
      "indent": 3,
      "text": "All of the signature examples use the following payload content (an abridged quote from \"The Fellowship of the Ring\" [LOTR-FELLOWSHIP]), serialized as UTF-8. The payload is presented here as a series of quoted strings that are concatenated to produce the JWS Payload. The sequence \"\\xe2\\x80\\x99\" is substituted for (U+2019 RIGHT SINGLE QUOTATION MARK), and quotation marks (U+0022 QUOTATION MARK) are added for readability but are not present in the JWS Payload.",
      "ja": "すべての署名の例では、UTF-8としてシリアル化された次のペイロードコンテンツ（「The Fellowship of the Ring」[LOTR-FELLOWSHIP]からの引用）を使用しています。ペイロードは、JWSペイロードを生成するために連結された一連の引用符付き文字列としてここに示されています。シーケンス \"\\ xe2 \\ x80 \\ x99\"は（U + 2019 RIGHT SINGLE QUOTATION MARK）に置き換えられ、引用符（U + 0022 QUOTATION MARK）が読みやすくするために追加されていますが、JWSペイロードにはありません。"
    },
    {
      "indent": 3,
      "text": "\"It\\xe2\\x80\\x99s a dangerous business, Frodo, going out your \" \"door. You step onto the road, and if you don't keep your feet, \" \"there\\xe2\\x80\\x99s no knowing where you might be swept off \" \"to.\"",
      "ja": "「それは\\ xe2 \\ x80 \\ x99s危険なビジネスです、Frodo、あなたのドアを出て行きます。あなたは道路に足を踏み入れます、そしてあなたがあなたの足を維持しなければ、あなたはどこにいるかわからないのです」 \"\"まで一掃されます。"
    },
    {
      "indent": 20,
      "text": "Figure 7: Payload Content Plaintext",
      "ja": "図7：ペイロードコンテンツのプレーンテキスト"
    },
    {
      "indent": 3,
      "text": "The payload -- with the sequence \"\\xe2\\x80\\x99\" replaced with (U+2019 RIGHT SINGLE QUOTATION MARK) and quotations marks (U+0022 QUOTATION MARK) are removed -- is encoded as UTF-8 and then as base64url [RFC4648]:",
      "ja": "ペイロード-シーケンス「\\ xe2 \\ x80 \\ x99」が（U + 2019 RIGHT SINGLE QUOTATION MARK）に置き換えられ、引用符（U + 0022 QUOTATION MARK）が削除された-UTF-8としてエンコードされ、次にbase64urlとしてエンコードされます。 [RFC4648]："
    },
    {
      "indent": 3,
      "text": "SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 8: Payload Content, base64url-encoded",
      "ja": "図8：ペイロードコンテンツ、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "4.1. RSA v1.5 Signature",
      "section_title": true,
      "ja": "4.1. RSA v1.5シグネチャ"
    },
    {
      "indent": 3,
      "text": "This example illustrates signing content using the \"RS256\" (RSASSA-PKCS1-v1_5 with SHA-256) algorithm.",
      "ja": "この例は、「RS256」（SHA-256を使用したRSASSA-PKCS1-v1_5）アルゴリズムを使用してコンテンツに署名する方法を示しています。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "4.1.1. Input Factors",
      "section_title": true,
      "ja": "4.1.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "ja": "以下は、署名操作を開始する前に提供されます。"
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "ja": "o ペイロードのコンテンツ。この例では、base64url [RFC4648]を使用してエンコードされた図7のコンテンツを使用して、図8を生成します。"
    },
    {
      "indent": 3,
      "text": "o RSA private key; this example uses the key from Figure 4.",
      "ja": "o RSA秘密鍵。この例では、図4のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"RS256\".",
      "ja": "o 「RS256」の「alg」パラメータ。"
    },
    {
      "indent": 0,
      "text": "4.1.2. Signing Operation",
      "section_title": true,
      "ja": "4.1.2. 署名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated to complete the signing operation:",
      "ja": "以下は、署名操作を完了するために生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 9, encoded using base64url [RFC4648] to produce Figure 10.",
      "ja": "o JWS保護ヘッダー。この例では、base64url [RFC4648]を使用してエンコードされた図9のヘッダーを使用して、図10を生成します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"RS256\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 20,
      "text": "Figure 9: JWS Protected Header JSON",
      "ja": "図9：JWS保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX hhbXBsZSJ9",
      "ja": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX hhbXBsZSJ9"
    },
    {
      "indent": 12,
      "text": "Figure 10: JWS Protected Header, base64url-encoded",
      "ja": "図10：JWS保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 10) and JWS Payload (Figure 8) are combined as described in Section 5.1 of [JWS] to produce the JWS Signing Input (Figure 11).",
      "ja": "[JWS]のセクション5.1で説明されているように、JWS保護ヘッダー（図10）とJWSペイロード（図8）が組み合わされて、JWS署名入力（図11）が生成されます。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX\nhhbXBsZSJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 11: JWS Signing Input",
      "ja": "図11：JWS署名入力"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 11) produces the JWS Signature (Figure 12).",
      "ja": "JWS署名入力（図11）で署名操作を実行すると、JWS署名（図12）が生成されます。"
    },
    {
      "indent": 3,
      "text": "MRjdkly7_-oTPTS3AXP41iQIGKa80A0ZmTuV5MEaHoxnW2e5CZ5NlKtainoFmK\nZopdHM1O2U4mwzJdQx996ivp83xuglII7PNDi84wnB-BDkoBwA78185hX-Es4J\nIwmDLJK3lfWRa-XtL0RnltuYv746iYTh_qHRD68BNt1uSNCrUCTJDt5aAE6x8w\nW1Kt9eRo4QPocSadnHXFxnt8Is9UzpERV0ePPQdLuW3IS_de3xyIrDaLGdjluP\nxUAhb6L2aXic1U12podGU0KLUQSE_oI-ZnmKJ3F4uOZDnd6QZWJushZ41Axf_f\ncIe8u9ipH84ogoree7vjbU5y18kDquDg",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 12: JWS Signature, base64url-encoded",
      "ja": "図12：JWS署名、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "4.1.3. Output Results",
      "section_title": true,
      "ja": "4.1.3. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "ja": "以下は、結果のJWSオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header (Figure 9)",
      "ja": "o JWS保護ヘッダー（図9）"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 8)",
      "ja": "o ペイロードのコンテンツ（図8）"
    },
    {
      "indent": 0,
      "text": " o Signature (Figure 12) The resulting JWS object using the JWS Compact Serialization:",
      "ja": "o署名（図12）JWS Compact Serializationを使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX\nhhbXBsZSJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4\n.\nMRjdkly7_-oTPTS3AXP41iQIGKa80A0ZmTuV5MEaHoxnW2e5CZ5NlKtainoFmK\nZopdHM1O2U4mwzJdQx996ivp83xuglII7PNDi84wnB-BDkoBwA78185hX-Es4J\nIwmDLJK3lfWRa-XtL0RnltuYv746iYTh_qHRD68BNt1uSNCrUCTJDt5aAE6x8w\nW1Kt9eRo4QPocSadnHXFxnt8Is9UzpERV0ePPQdLuW3IS_de3xyIrDaLGdjluP\nxUAhb6L2aXic1U12podGU0KLUQSE_oI-ZnmKJ3F4uOZDnd6QZWJushZ41Axf_f\ncIe8u9ipH84ogoree7vjbU5y18kDquDg",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 13: JWS Compact Serialization",
      "ja": "図13：JWSコンパクトシリアライゼーション"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "ja": "一般的なJWS JSONシリアル化を使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"signatures\": [\n    {\n      \"protected\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImJpbGJvLmJhZ2\n          dpbnNAaG9iYml0b24uZXhhbXBsZSJ9\",\n      \"signature\": \"MRjdkly7_-oTPTS3AXP41iQIGKa80A0ZmTuV5MEaHo\n          xnW2e5CZ5NlKtainoFmKZopdHM1O2U4mwzJdQx996ivp83xuglII\n          7PNDi84wnB-BDkoBwA78185hX-Es4JIwmDLJK3lfWRa-XtL0Rnlt\n          uYv746iYTh_qHRD68BNt1uSNCrUCTJDt5aAE6x8wW1Kt9eRo4QPo\n          cSadnHXFxnt8Is9UzpERV0ePPQdLuW3IS_de3xyIrDaLGdjluPxU\n          Ahb6L2aXic1U12podGU0KLUQSE_oI-ZnmKJ3F4uOZDnd6QZWJush\n          Z41Axf_fcIe8u9ipH84ogoree7vjbU5y18kDquDg\"\n    }\n  ]\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 14: General JWS JSON Serialization",
      "ja": "図14：一般的なJWS JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the flattened JWS JSON Serialization:",
      "ja": "平坦化されたJWS JSONシリアル化を使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"protected\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImJpbGJvLmJhZ2dpbn\n      NAaG9iYml0b24uZXhhbXBsZSJ9\",\n  \"signature\": \"MRjdkly7_-oTPTS3AXP41iQIGKa80A0ZmTuV5MEaHoxnW2\n      e5CZ5NlKtainoFmKZopdHM1O2U4mwzJdQx996ivp83xuglII7PNDi84w\n      nB-BDkoBwA78185hX-Es4JIwmDLJK3lfWRa-XtL0RnltuYv746iYTh_q\n      HRD68BNt1uSNCrUCTJDt5aAE6x8wW1Kt9eRo4QPocSadnHXFxnt8Is9U\n      zpERV0ePPQdLuW3IS_de3xyIrDaLGdjluPxUAhb6L2aXic1U12podGU0\n      KLUQSE_oI-ZnmKJ3F4uOZDnd6QZWJushZ41Axf_fcIe8u9ipH84ogore\n      e7vjbU5y18kDquDg\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 15: Flattened JWS JSON Serialization",
      "ja": "図15：フラット化されたJWS JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "4.2. RSA-PSS Signature",
      "section_title": true,
      "ja": "4.2. RSA-PSS署名"
    },
    {
      "indent": 3,
      "text": "This example illustrates signing content using the \"PS384\" (RSASSA-PSS with SHA-384) algorithm.",
      "ja": "この例は、「PS384」（RSASSA-PSSとSHA-384）アルゴリズムを使用してコンテンツに署名する方法を示しています。"
    },
    {
      "indent": 3,
      "text": "Note that RSASSA-PSS uses random data to generate the signature; it might not be possible to exactly replicate the results in this section.",
      "ja": "RSASSA-PSSはランダムデータを使用して署名を生成することに注意してください。このセクションの結果を正確に複製することができない場合があります。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "4.2.1. Input Factors",
      "section_title": true,
      "ja": "4.2.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "ja": "以下は、署名操作を開始する前に提供されます。"
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "ja": "o ペイロードのコンテンツ。この例では、base64url [RFC4648]を使用してエンコードされた図7のコンテンツを使用して、図8を生成します。"
    },
    {
      "indent": 3,
      "text": "o RSA private key; this example uses the key from Figure 4.",
      "ja": "o RSA秘密鍵。この例では、図4のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"PS384\".",
      "ja": "o 「PS384」の「alg」パラメータ。"
    },
    {
      "indent": 0,
      "text": "4.2.2. Signing Operation",
      "section_title": true,
      "ja": "4.2.2. 署名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated to complete the signing operation:",
      "ja": "以下は、署名操作を完了するために生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 16, encoded using base64url [RFC4648] to produce Figure 17.",
      "ja": "o JWS保護ヘッダー。この例では、図16のヘッダーを使用し、base64url [RFC4648]を使用してエンコードして、図17を作成します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"PS384\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 16: JWS Protected Header JSON",
      "ja": "図16：JWS保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJQUzM4NCIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX hhbXBsZSJ9",
      "ja": "eyJhbGciOiJQUzM4NCIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX hhbXBsZSJ9"
    },
    {
      "indent": 12,
      "text": "Figure 17: JWS Protected Header, base64url-encoded",
      "ja": "図17：JWS保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 17) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 18).",
      "ja": "[JWS]で説明されているように、JWS保護ヘッダー（図17）とJWSペイロード（図8）が組み合わされて、JWS署名入力（図18）が生成されます。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJQUzM4NCIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX\nhhbXBsZSJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 18: JWS Signing Input",
      "ja": "図18：JWS署名入力"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 18) produces the JWS Signature (Figure 19).",
      "ja": "JWS署名入力（図18）で署名操作を実行すると、JWS署名（図19）が生成されます。"
    },
    {
      "indent": 3,
      "text": "cu22eBqkYDKgIlTpzDXGvaFfz6WGoz7fUDcfT0kkOy42miAh2qyBzk1xEsnk2I pN6-tPid6VrklHkqsGqDqHCdP6O8TTB5dDDItllVo6_1OLPpcbUrhiUSMxbbXU vdvWXzg-UD8biiReQFlfz28zGWVsdiNAUf8ZnyPEgVFn442ZdNqiVJRmBqrYRX e8P_ijQ7p8Vdz0TTrxUeT3lm8d9shnr2lfJT8ImUjvAA2Xez2Mlp8cBE5awDzT 0qI0n6uiP1aCN_2_jLAeQTlqRHtfa64QQSUmFAAjVKPbByi7xho0uTOcbH510a 6GYmJUAfmWjwZ6oD4ifKo8DYM-X72Eaw",
      "ja": "cu22eBqkYDKgIlTpzDXGvaFfz6WGoz7fUDcfT0kkOy42miAh2qyBzk1xEsnk2I PN6-tPid6VrklHkqsGqDqHCdP6O8TTB5dDDItllVo6_1OLPpcbUrhiUSMxbbXU vdvWXzg-UD8biiReQFlfz28zGWVsdiNAUf8ZnyPEgVFn442ZdNqiVJRmBqrYRX e8P_ijQ7p8Vdz0TTrxUeT3lm8d9shnr2lfJT8ImUjvAA2Xez2Mlp8cBE5awDzT 0qI0n6uiP1aCN_2_jLAeQTlqRHtfa64QQSUmFAAjVKPbByi7xho0uTOcbH510a 6GYmJUAfmWjwZ6oD4ifKo8DYM-X72Eaw"
    },
    {
      "indent": 16,
      "text": "Figure 19: JWS Signature, base64url-encoded",
      "ja": "図19：JWS署名、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "4.2.3. Output Results",
      "section_title": true,
      "ja": "4.2.3. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "ja": "以下は、結果のJWSオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header (Figure 17)",
      "ja": "o JWS保護ヘッダー（図17）"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 8)",
      "ja": "o ペイロードのコンテンツ（図8）"
    },
    {
      "indent": 3,
      "text": "o Signature (Figure 19)",
      "ja": "o 署名（図19）"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the JWS Compact Serialization:",
      "ja": "JWSコンパクトシリアライゼーションを使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJQUzM4NCIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX hhbXBsZSJ9 . SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH lvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk b24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm UgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4 . cu22eBqkYDKgIlTpzDXGvaFfz6WGoz7fUDcfT0kkOy42miAh2qyBzk1xEsnk2I pN6-tPid6VrklHkqsGqDqHCdP6O8TTB5dDDItllVo6_1OLPpcbUrhiUSMxbbXU vdvWXzg-UD8biiReQFlfz28zGWVsdiNAUf8ZnyPEgVFn442ZdNqiVJRmBqrYRX e8P_ijQ7p8Vdz0TTrxUeT3lm8d9shnr2lfJT8ImUjvAA2Xez2Mlp8cBE5awDzT 0qI0n6uiP1aCN_2_jLAeQTlqRHtfa64QQSUmFAAjVKPbByi7xho0uTOcbH510a 6GYmJUAfmWjwZ6oD4ifKo8DYM-X72Eaw",
      "ja": "eyJhbGciOiJQUzM4NCIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX hhbXBsZSJ9。 SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH lvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk b24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm UgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4。 cu22eBqkYDKgIlTpzDXGvaFfz6WGoz7fUDcfT0kkOy42miAh2qyBzk1xEsnk2I PN6-tPid6VrklHkqsGqDqHCdP6O8TTB5dDDItllVo6_1OLPpcbUrhiUSMxbbXU vdvWXzg-UD8biiReQFlfz28zGWVsdiNAUf8ZnyPEgVFn442ZdNqiVJRmBqrYRX e8P_ijQ7p8Vdz0TTrxUeT3lm8d9shnr2lfJT8ImUjvAA2Xez2Mlp8cBE5awDzT 0qI0n6uiP1aCN_2_jLAeQTlqRHtfa64QQSUmFAAjVKPbByi7xho0uTOcbH510a 6GYmJUAfmWjwZ6oD4ifKo8DYM-X72Eaw"
    },
    {
      "indent": 19,
      "text": "Figure 20: JWS Compact Serialization",
      "ja": "図20：JWSコンパクトシリアライゼーション"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "ja": "一般的なJWS JSONシリアル化を使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"signatures\": [\n    {\n      \"protected\": \"eyJhbGciOiJQUzM4NCIsImtpZCI6ImJpbGJvLmJhZ2\n          dpbnNAaG9iYml0b24uZXhhbXBsZSJ9\",\n      \"signature\": \"cu22eBqkYDKgIlTpzDXGvaFfz6WGoz7fUDcfT0kkOy\n          42miAh2qyBzk1xEsnk2IpN6-tPid6VrklHkqsGqDqHCdP6O8TTB5\n          dDDItllVo6_1OLPpcbUrhiUSMxbbXUvdvWXzg-UD8biiReQFlfz2\n          8zGWVsdiNAUf8ZnyPEgVFn442ZdNqiVJRmBqrYRXe8P_ijQ7p8Vd\n          z0TTrxUeT3lm8d9shnr2lfJT8ImUjvAA2Xez2Mlp8cBE5awDzT0q\n          I0n6uiP1aCN_2_jLAeQTlqRHtfa64QQSUmFAAjVKPbByi7xho0uT\n          OcbH510a6GYmJUAfmWjwZ6oD4ifKo8DYM-X72Eaw\"\n    }\n  ]\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 21: General JWS JSON Serialization",
      "ja": "図21：一般的なJWS JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the flattened JWS JSON Serialization:",
      "ja": "平坦化されたJWS JSONシリアル化を使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"protected\": \"eyJhbGciOiJQUzM4NCIsImtpZCI6ImJpbGJvLmJhZ2dpbn\n      NAaG9iYml0b24uZXhhbXBsZSJ9\",\n  \"signature\": \"cu22eBqkYDKgIlTpzDXGvaFfz6WGoz7fUDcfT0kkOy42mi\n      Ah2qyBzk1xEsnk2IpN6-tPid6VrklHkqsGqDqHCdP6O8TTB5dDDItllV\n      o6_1OLPpcbUrhiUSMxbbXUvdvWXzg-UD8biiReQFlfz28zGWVsdiNAUf\n      8ZnyPEgVFn442ZdNqiVJRmBqrYRXe8P_ijQ7p8Vdz0TTrxUeT3lm8d9s\n      hnr2lfJT8ImUjvAA2Xez2Mlp8cBE5awDzT0qI0n6uiP1aCN_2_jLAeQT\n      lqRHtfa64QQSUmFAAjVKPbByi7xho0uTOcbH510a6GYmJUAfmWjwZ6oD\n      4ifKo8DYM-X72Eaw\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 22: Flattened JWS JSON Serialization",
      "ja": "図22：フラット化されたJWS JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "4.3. ECDSA Signature",
      "section_title": true,
      "ja": "4.3. ECDSA署名"
    },
    {
      "indent": 3,
      "text": "This example illustrates signing content using the \"ES512\" (Elliptic Curve Digital Signature Algorithm (ECDSA) with curve P-521 and SHA-512) algorithm.",
      "ja": "この例は、「ES512」（曲線P-521およびSHA-512を備えた楕円曲線デジタル署名アルゴリズム（ECDSA））アルゴリズムを使用してコンテンツに署名する方法を示しています。"
    },
    {
      "indent": 3,
      "text": "Note that ECDSA uses random data to generate the signature; it might not be possible to exactly replicate the results in this section.",
      "ja": "ECDSAはランダムデータを使用して署名を生成することに注意してください。このセクションの結果を正確に複製することができない場合があります。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "4.3.1. Input Factors",
      "section_title": true,
      "ja": "4.3.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "ja": "以下は、署名操作を開始する前に提供されます。"
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "ja": "o ペイロードのコンテンツ。この例では、base64url [RFC4648]を使用してエンコードされた図7のコンテンツを使用して、図8を生成します。"
    },
    {
      "indent": 3,
      "text": "o EC private key on the curve P-521; this example uses the key from Figure 2.",
      "ja": "o 曲線P-521のEC秘密鍵。この例では、図2のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"ES512\".",
      "ja": "o 「ES512」の「alg」パラメータ。"
    },
    {
      "indent": 0,
      "text": "4.3.2. Signing Operation",
      "section_title": true,
      "ja": "4.3.2. 署名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated before beginning the signature process:",
      "ja": "署名プロセスを開始する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 23, encoded using base64url [RFC4648] to produce Figure 24.",
      "ja": "o JWS保護ヘッダー。この例では、base64url [RFC4648]を使用してエンコードされた図23のヘッダーを使用して、図24を生成します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"ES512\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 23: JWS Protected Header JSON",
      "ja": "図23：JWS保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJFUzUxMiIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX hhbXBsZSJ9",
      "ja": "eyJhbGciOiJFUzUxMiIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX hhbXBsZSJ9"
    },
    {
      "indent": 12,
      "text": "Figure 24: JWS Protected Header, base64url-encoded",
      "ja": "図24：JWS保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 24) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 25).",
      "ja": "[JWS]で説明されているように、JWS保護ヘッダー（図24）とJWSペイロード（図8）が組み合わされて、JWS署名入力（図25）が生成されます。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJFUzUxMiIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX\nhhbXBsZSJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 25: JWS Signing Input",
      "ja": "図25：JWS署名入力"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 25) produces the JWS Signature (Figure 26).",
      "ja": "JWS署名入力（図25）で署名操作を実行すると、JWS署名（図26）が生成されます。"
    },
    {
      "indent": 3,
      "text": "AE_R_YZCChjn4791jSQCrdPZCNYqHXCTZH0-JZGYNlaAjP2kqaluUIIUnC9qvb\nu9Plon7KRTzoNEuT4Va2cmL1eJAQy3mtPBu_u_sDDyYjnAMDxXPn7XrT0lw-kv\nAD890jl8e2puQens_IEKBpHABlsbEPX6sFY8OcGDqoRuBomu9xQ2",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 26: JWS Signature, base64url-encoded",
      "ja": "図26：base64urlエンコードされたJWS署名"
    },
    {
      "indent": 0,
      "text": "4.3.3. Output Results",
      "section_title": true,
      "ja": "4.3.3. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "ja": "以下は、結果のJWSオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header (Figure 24)",
      "ja": "o JWS保護ヘッダー（図24）"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 8)",
      "ja": "o ペイロードのコンテンツ（図8）"
    },
    {
      "indent": 3,
      "text": "o Signature (Figure 26)",
      "ja": "o 署名（図26）"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the JWS Compact Serialization:",
      "ja": "JWSコンパクトシリアライゼーションを使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJFUzUxMiIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX\nhhbXBsZSJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4\n.\nAE_R_YZCChjn4791jSQCrdPZCNYqHXCTZH0-JZGYNlaAjP2kqaluUIIUnC9qvb\nu9Plon7KRTzoNEuT4Va2cmL1eJAQy3mtPBu_u_sDDyYjnAMDxXPn7XrT0lw-kv\nAD890jl8e2puQens_IEKBpHABlsbEPX6sFY8OcGDqoRuBomu9xQ2",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 27: JWS Compact Serialization",
      "ja": "図27：JWSコンパクトシリアライゼーション"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "ja": "一般的なJWS JSONシリアル化を使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"signatures\": [\n    {\n      \"protected\": \"eyJhbGciOiJFUzUxMiIsImtpZCI6ImJpbGJvLmJhZ2\n          dpbnNAaG9iYml0b24uZXhhbXBsZSJ9\",\n      \"signature\": \"AE_R_YZCChjn4791jSQCrdPZCNYqHXCTZH0-JZGYNl\n          aAjP2kqaluUIIUnC9qvbu9Plon7KRTzoNEuT4Va2cmL1eJAQy3mt\n          PBu_u_sDDyYjnAMDxXPn7XrT0lw-kvAD890jl8e2puQens_IEKBp\n          HABlsbEPX6sFY8OcGDqoRuBomu9xQ2\"\n    }\n  ]\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 28: General JWS JSON Serialization",
      "ja": "図28：一般的なJWS JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the flattened JWS JSON Serialization:",
      "ja": "平坦化されたJWS JSONシリアル化を使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"protected\": \"eyJhbGciOiJFUzUxMiIsImtpZCI6ImJpbGJvLmJhZ2dpbn\n      NAaG9iYml0b24uZXhhbXBsZSJ9\",\n  \"signature\": \"AE_R_YZCChjn4791jSQCrdPZCNYqHXCTZH0-JZGYNlaAjP\n      2kqaluUIIUnC9qvbu9Plon7KRTzoNEuT4Va2cmL1eJAQy3mtPBu_u_sD\n      DyYjnAMDxXPn7XrT0lw-kvAD890jl8e2puQens_IEKBpHABlsbEPX6sF\n      Y8OcGDqoRuBomu9xQ2\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 29: Flattened JWS JSON Serialization",
      "ja": "図29：フラット化されたJWS JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "4.4. HMAC-SHA2 Integrity Protection",
      "section_title": true,
      "ja": "4.4. HMAC-SHA2完全性保護"
    },
    {
      "indent": 3,
      "text": "This example illustrates integrity protecting content using the \"HS256\" (HMAC-SHA-256) algorithm.",
      "ja": "この例は、「HS256」（HMAC-SHA-256）アルゴリズムを使用してコンテンツを保護する整合性を示しています。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "4.4.1. Input Factors",
      "section_title": true,
      "ja": "4.4.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "ja": "以下は、署名操作を開始する前に提供されます。"
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "ja": "o ペイロードのコンテンツ。この例では、base64url [RFC4648]を使用してエンコードされた図7のコンテンツを使用して、図8を生成します。"
    },
    {
      "indent": 3,
      "text": "o HMAC symmetric key; this example uses the key from Figure 5.",
      "ja": "o HMAC対称鍵。この例では、図5のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"HS256\".",
      "ja": "o 「HS256」の「alg」パラメータ。"
    },
    {
      "indent": 0,
      "text": "4.4.2. Signing Operation",
      "section_title": true,
      "ja": "4.4.2. 署名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated before completing the signing operation:",
      "ja": "署名操作が完了する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 30, encoded using base64url [RFC4648] to produce Figure 31.",
      "ja": "o JWS保護ヘッダー。この例では、base64url [RFC4648]を使用してエンコードされた図30のヘッダーを使用して、図31を生成します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"HS256\",\n  \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 30: JWS Protected Header JSON",
      "ja": "図30：JWS保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW VlZjMxNGJjNzAzNyJ9",
      "ja": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW VlZjMxNGJjNzAzNyJ9"
    },
    {
      "indent": 12,
      "text": "Figure 31: JWS Protected Header, base64url-encoded",
      "ja": "図31：JWS保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 31) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 32).",
      "ja": "[JWS]で説明されているように、JWS保護ヘッダー（図31）とJWSペイロード（図8）が組み合わされて、JWS署名入力（図32）が生成されます。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW\nVlZjMxNGJjNzAzNyJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 32: JWS Signing Input",
      "ja": "図32：JWS署名入力"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 32) produces the JWS Signature (Figure 33).",
      "ja": "JWS署名入力（図32）で署名操作を実行すると、JWS署名（図33）が生成されます。"
    },
    {
      "indent": 3,
      "text": "s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 33: JWS Signature, base64url-encoded",
      "ja": "図33：JWS署名、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "4.4.3. Output Results",
      "section_title": true,
      "ja": "4.4.3. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "ja": "以下は、結果のJWSオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header (Figure 31)",
      "ja": "o JWS保護ヘッダー（図31）"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 8)",
      "ja": "o ペイロードのコンテンツ（図8）"
    },
    {
      "indent": 3,
      "text": "o Signature (Figure 33)",
      "ja": "o 署名（図33）"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the JWS Compact Serialization:",
      "ja": "JWSコンパクトシリアライゼーションを使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW\nVlZjMxNGJjNzAzNyJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4\n.\ns0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 34: JWS Compact Serialization",
      "ja": "図34：JWSコンパクトシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "ja": "一般的なJWS JSONシリアル化を使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"signatures\": [\n    {\n      \"protected\": \"eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LT\n          RkOWItNDcxYi1iZmQ2LWVlZjMxNGJjNzAzNyJ9\",\n      \"signature\": \"s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p\n          0\"\n    }\n  ]\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 35: General JWS JSON Serialization",
      "ja": "図35：一般的なJWS JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the flattened JWS JSON Serialization:",
      "ja": "平坦化されたJWS JSONシリアル化を使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"protected\": \"eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOW\n      ItNDcxYi1iZmQ2LWVlZjMxNGJjNzAzNyJ9\",\n  \"signature\": \"s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 36: Flattened JWS JSON Serialization",
      "ja": "図36：フラット化されたJWS JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "4.5. Signature with Detached Content",
      "section_title": true,
      "ja": "4.5. 切り離されたコンテンツを含む署名"
    },
    {
      "indent": 3,
      "text": "This example illustrates a signature with detached content. This example is identical to other examples in Section 4, except the resulting JWS objects do not include the JWS Payload field. Instead, the application is expected to locate it elsewhere. For example, the signature might be in a metadata section, with the payload being the content.",
      "ja": "この例は、分離されたコンテンツを含む署名を示しています。この例は、結果のJWSオブジェクトにJWSペイロードフィールドが含まれていないことを除いて、セクション4の他の例と同じです。代わりに、アプリケーションはそれを別の場所に配置する必要があります。たとえば、署名はメタデータセクションにあり、ペイロードはコンテンツです。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "4.5.1. Input Factors",
      "section_title": true,
      "ja": "4.5.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "ja": "以下は、署名操作を開始する前に提供されます。"
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "ja": "o ペイロードのコンテンツ。この例では、base64url [RFC4648]を使用してエンコードされた図7のコンテンツを使用して、図8を生成します。"
    },
    {
      "indent": 3,
      "text": "o Signing key; this example uses the AES symmetric key from Figure 5.",
      "ja": "o 署名キー。この例では、図5のAES対称鍵を使用しています。"
    },
    {
      "indent": 3,
      "text": "o Signing algorithm; this example uses \"HS256\".",
      "ja": "o 署名アルゴリズム。この例では「HS256」を使用しています。"
    },
    {
      "indent": 0,
      "text": "4.5.2. Signing Operation",
      "section_title": true,
      "ja": "4.5.2. 署名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated before completing the signing operation:",
      "ja": "署名操作が完了する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 37, encoded using base64url [RFC4648] to produce Figure 38.",
      "ja": "o JWS保護ヘッダー。この例では、base64url [RFC4648]を使用してエンコードされた図37のヘッダーを使用して、図38を生成します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"HS256\",\n  \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 37: JWS Protected Header JSON",
      "ja": "図37：JWS保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW VlZjMxNGJjNzAzNyJ9",
      "ja": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW VlZjMxNGJjNzAzNyJ9"
    },
    {
      "indent": 12,
      "text": "Figure 38: JWS Protected Header, base64url-encoded",
      "ja": "図38：JWS保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 38) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 39).",
      "ja": "[JWS]で説明されているように、JWS保護ヘッダー（図38）とJWSペイロード（図8）を組み合わせて、JWS署名入力（図39）を生成します。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW\nVlZjMxNGJjNzAzNyJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 39: JWS Signing Input",
      "ja": "図39：JWS署名入力"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 39) produces the JWS Signature (Figure 40).",
      "ja": "JWS署名入力（図39）で署名操作を実行すると、JWS署名（図40）が生成されます。"
    },
    {
      "indent": 3,
      "text": "s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 40: JWS Signature, base64url-encoded",
      "ja": "図40：JWS署名、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "4.5.3. Output Results",
      "section_title": true,
      "ja": "4.5.3. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "ja": "以下は、結果のJWSオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header (Figure 38)",
      "ja": "o JWS保護ヘッダー（図38）"
    },
    {
      "indent": 3,
      "text": "o Signature (Figure 40)",
      "ja": "o 署名（図40）"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the JWS Compact Serialization:",
      "ja": "JWSコンパクトシリアライゼーションを使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW\nVlZjMxNGJjNzAzNyJ9\n.\n.\ns0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 41: General JWS JSON Serialization",
      "ja": "図41：一般的なJWS JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "ja": "一般的なJWS JSONシリアル化を使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"signatures\": [\n    {\n      \"protected\": \"eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LT\n          RkOWItNDcxYi1iZmQ2LWVlZjMxNGJjNzAzNyJ9\",\n      \"signature\": \"s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p\n          0\"\n    }\n  ]\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 42: General JWS JSON Serialization",
      "ja": "図42：一般的なJWS JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the flattened JWS JSON Serialization:",
      "ja": "平坦化されたJWS JSONシリアル化を使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOW\n      ItNDcxYi1iZmQ2LWVlZjMxNGJjNzAzNyJ9\",\n  \"signature\": \"s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 43: Flattened JWS JSON Serialization",
      "ja": "図43：フラット化されたJWS JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "4.6. Protecting Specific Header Fields",
      "section_title": true,
      "ja": "4.6. 特定のヘッダーフィールドの保護"
    },
    {
      "indent": 3,
      "text": "This example illustrates a signature where only certain Header Parameters are protected. Since this example contains both unprotected and protected Header Parameters, only the general JWS JSON Serialization and flattened JWS JSON Serialization are possible.",
      "ja": "この例は、特定のヘッダーパラメータのみが保護される署名を示しています。この例には保護されていないヘッダーパラメーターと保護されたヘッダーパラメーターの両方が含まれているため、一般的なJWS JSONシリアル化とフラット化されたJWS JSONシリアル化のみが可能です。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "4.6.1. Input Factors",
      "section_title": true,
      "ja": "4.6.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "ja": "以下は、署名操作を開始する前に提供されます。"
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "ja": "o ペイロードのコンテンツ。この例では、base64url [RFC4648]を使用してエンコードされた図7のコンテンツを使用して、図8を生成します。"
    },
    {
      "indent": 3,
      "text": "o Signing key; this example uses the AES symmetric key from Figure 5.",
      "ja": "o 署名キー。この例では、図5のAES対称鍵を使用しています。"
    },
    {
      "indent": 3,
      "text": "o Signing algorithm; this example uses \"HS256\".",
      "ja": "o 署名アルゴリズム。この例では「HS256」を使用しています。"
    },
    {
      "indent": 0,
      "text": "4.6.2. Signing Operation",
      "section_title": true,
      "ja": "4.6.2. 署名操作"
    },
    {
      "indent": 3,
      "text": "The following are generated before completing the signing operation:",
      "ja": "署名操作が完了する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 44, encoded using base64url [RFC4648] to produce Figure 45.",
      "ja": "o JWS保護ヘッダー。この例では、図44のヘッダーを使用し、base64url [RFC4648]を使用してエンコードして、図45を生成します。"
    },
    {
      "indent": 3,
      "text": "o JWS Unprotected Header; this example uses the header from Figure 46.",
      "ja": "o JWS非保護ヘッダー。この例では、図46のヘッダーを使用しています。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"HS256\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 44: JWS Protected Header JSON",
      "ja": "図44：JWS保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiJ9",
      "ja": "eyJhbGciOiJIUzI1NiJ9"
    },
    {
      "indent": 12,
      "text": "Figure 45: JWS Protected Header, base64url-encoded",
      "ja": "図45：JWS保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "{\n  \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 18,
      "text": "Figure 46: JWS Unprotected Header JSON",
      "ja": "図46：JWS非保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 45) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 47).",
      "ja": "[JWS]で説明されているように、JWS保護ヘッダー（図45）とJWSペイロード（図8）が組み合わされて、JWS署名入力（図47）が生成されます。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 47: JWS Signing Input",
      "ja": "図47：JWS署名入力"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 47) produces the JWS Signature (Figure 48).",
      "ja": "JWS署名入力（図47）で署名操作を実行すると、JWS署名（図48）が生成されます。"
    },
    {
      "indent": 3,
      "text": "bWUSVaxorn7bEF1djytBd0kHv70Ly5pvbomzMWSOr20",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 48: JWS Signature, base64url-encoded",
      "ja": "図48：JWS署名、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "4.6.3. Output Results",
      "section_title": true,
      "ja": "4.6.3. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "ja": "以下は、結果のJWSオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header (Figure 45)",
      "ja": "o JWS保護ヘッダー（図45）"
    },
    {
      "indent": 3,
      "text": "o JWS Unprotected Header (Figure 46)",
      "ja": "o JWS Unprotected Header (Figure 46)"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 8)",
      "ja": "o ペイロードのコンテンツ（図8）"
    },
    {
      "indent": 3,
      "text": "o Signature (Figure 48)",
      "ja": "o 署名（図48）"
    },
    {
      "indent": 3,
      "text": "The JWS Compact Serialization is not presented because it does not support this use case.",
      "ja": "JWSコンパクトシリアライゼーションは、このユースケースをサポートしていないため、表示されません。"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "ja": "一般的なJWS JSONシリアル化を使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"signatures\": [\n    {\n      \"protected\": \"eyJhbGciOiJIUzI1NiJ9\",\n      \"header\": {\n        \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n      },\n      \"signature\": \"bWUSVaxorn7bEF1djytBd0kHv70Ly5pvbomzMWSOr2\n          0\"\n    }\n  ]\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 49: General JWS JSON Serialization",
      "ja": "図49：一般的なJWS JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the flattened JWS JSON Serialization:",
      "ja": "平坦化されたJWS JSONシリアル化を使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"protected\": \"eyJhbGciOiJIUzI1NiJ9\",\n  \"header\": {\n    \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n  },\n  \"signature\": \"bWUSVaxorn7bEF1djytBd0kHv70Ly5pvbomzMWSOr20\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 50: Flattened JWS JSON Serialization",
      "ja": "図50：フラット化されたJWS JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "4.7. Protecting Content Only",
      "section_title": true,
      "ja": "4.7. コンテンツのみの保護"
    },
    {
      "indent": 3,
      "text": "This example illustrates a signature where none of the Header Parameters are protected. Since this example contains only unprotected Header Parameters, only the general JWS JSON Serialization and flattened JWS JSON Serialization are possible.",
      "ja": "この例は、保護されているヘッダーパラメータがない署名を示しています。この例には保護されていないヘッダーパラメーターのみが含まれているため、一般的なJWS JSONシリアル化とフラット化されたJWS JSONシリアル化のみが可能です。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "4.7.1. Input Factors",
      "section_title": true,
      "ja": "4.7.1. Input Factors"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "ja": "以下は、署名操作を開始する前に提供されます。"
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "ja": "o ペイロードのコンテンツ。この例では、base64url [RFC4648]を使用してエンコードされた図7のコンテンツを使用して、図8を生成します。"
    },
    {
      "indent": 3,
      "text": "o Signing key; this example uses the AES symmetric key from Figure 5.",
      "ja": "o 署名キー。この例では、図5のAES対称鍵を使用しています。"
    },
    {
      "indent": 3,
      "text": "o Signing algorithm; this example uses \"HS256\".",
      "ja": "o 署名アルゴリズム。この例では「HS256」を使用しています。"
    },
    {
      "indent": 0,
      "text": "4.7.2. Signing Operation",
      "section_title": true,
      "ja": "4.7.2. 署名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated before completing the signing operation:",
      "ja": "The following is generated before completing the signing operation:"
    },
    {
      "indent": 3,
      "text": "o JWS Unprotected Header; this example uses the header from Figure 51.",
      "ja": "o JWS非保護ヘッダー。この例では、図51のヘッダーを使用しています。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"HS256\",\n  \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 18,
      "text": "Figure 51: JWS Unprotected Header JSON",
      "ja": "図51：JWS非保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "The empty string (as there is no JWS Protected Header) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 52).",
      "ja": "空の文字列（JWS保護ヘッダーがないため）とJWSペイロード（図8）は、[JWS]で説明されているように結合され、JWS署名入力（図52）を生成します。"
    },
    {
      "indent": 3,
      "text": ".\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 52: JWS Signing Input",
      "ja": "Figure 52: JWS Signing Input"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 52) produces the JWS Signature (Figure 53).",
      "ja": "JWS署名入力（図52）で署名操作を実行すると、JWS署名（図53）が生成されます。"
    },
    {
      "indent": 3,
      "text": "xuLifqLGiblpv9zBpuZczWhNj1gARaLV3UxvxhJxZuk",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 53: JWS Signature, base64url-encoded",
      "ja": "図53：JWS署名、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "4.7.3. Output Results",
      "section_title": true,
      "ja": "4.7.3. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "ja": "以下は、結果のJWSオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWS Unprotected Header (Figure 51)",
      "ja": "o JWS非保護ヘッダー（図51）"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 8)",
      "ja": "o Payload content (Figure 8)"
    },
    {
      "indent": 3,
      "text": "o Signature (Figure 53)",
      "ja": "o 署名（図53）"
    },
    {
      "indent": 3,
      "text": "The JWS Compact Serialization is not presented because it does not support this use case.",
      "ja": "JWSコンパクトシリアライゼーションは、このユースケースをサポートしていないため、表示されません。"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "ja": "一般的なJWS JSONシリアル化を使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"signatures\": [\n    {\n      \"header\": {\n        \"alg\": \"HS256\",\n        \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n      },\n      \"signature\": \"xuLifqLGiblpv9zBpuZczWhNj1gARaLV3UxvxhJxZu\n          k\"\n    }\n  ]\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 54: General JWS JSON Serialization",
      "ja": "Figure 54: General JWS JSON Serialization"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the flattened JWS JSON Serialization:",
      "ja": "The resulting JWS object using the flattened JWS JSON Serialization:"
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"header\": {\n    \"alg\": \"HS256\",\n    \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n  },\n  \"signature\": \"xuLifqLGiblpv9zBpuZczWhNj1gARaLV3UxvxhJxZuk\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 55: Flattened JWS JSON Serialization",
      "ja": "図55：フラット化されたJWS JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "4.8. Multiple Signatures",
      "section_title": true,
      "ja": "4.8. Multiple Signatures"
    },
    {
      "indent": 3,
      "text": "This example illustrates multiple signatures applied to the same payload. Since this example contains more than one signature, only the JSON General Serialization is possible.",
      "ja": "この例は、同じペイロードに適用される複数の署名を示しています。この例には複数の署名が含まれているため、JSON General Serializationのみが可能です。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "4.8.1. Input Factors",
      "section_title": true,
      "ja": "4.8.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "ja": "以下は、署名操作を開始する前に提供されます。"
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "ja": "o ペイロードのコンテンツ。この例では、base64url [RFC4648]を使用してエンコードされた図7のコンテンツを使用して、図8を生成します。"
    },
    {
      "indent": 3,
      "text": "o Signing keys; this example uses the following:",
      "ja": "o 署名鍵;この例では、以下を使用します。"
    },
    {
      "indent": 6,
      "text": "* RSA private key from Figure 4 for the first signature",
      "ja": "* 最初の署名用の図4のRSA秘密鍵"
    },
    {
      "indent": 6,
      "text": "* EC private key from Figure 2 for the second signature",
      "ja": "* 2番目の署名用の図2のEC秘密鍵"
    },
    {
      "indent": 6,
      "text": "* AES symmetric key from Figure 5 for the third signature",
      "ja": "* 3番目の署名用の図5のAES対称鍵"
    },
    {
      "indent": 3,
      "text": "o Signing algorithms; this example uses the following:",
      "ja": "o 署名アルゴリズム。この例では、以下を使用します。"
    },
    {
      "indent": 6,
      "text": "* \"RS256\" for the first signature",
      "ja": "* 最初の署名には「RS256」"
    },
    {
      "indent": 6,
      "text": "* \"ES512\" for the second signature",
      "ja": "* 2番目の署名には「ES512」"
    },
    {
      "indent": 6,
      "text": "* \"HS256\" for the third signature",
      "ja": "* 3番目の署名には「HS256」"
    },
    {
      "indent": 0,
      "text": "4.8.2. First Signing Operation",
      "section_title": true,
      "ja": "4.8.2. First Signing Operation"
    },
    {
      "indent": 3,
      "text": "The following are generated before completing the first signing operation:",
      "ja": "最初の署名操作が完了する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 56, encoded using base64url [RFC4648] to produce Figure 57.",
      "ja": "o JWS保護ヘッダー。この例では、図56のヘッダーを使用し、base64url [RFC4648]を使用してエンコードして、図57を生成します。"
    },
    {
      "indent": 3,
      "text": "o JWS Unprotected Header; this example uses the header from Figure 58.",
      "ja": "o JWS非保護ヘッダー。この例では、図58のヘッダーを使用しています。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"RS256\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Figure 56: Signature #1 JWS Protected Header JSON",
      "ja": "Figure 56: Signature #1 JWS Protected Header JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSUzI1NiJ9",
      "ja": "eyJhbGciOiJSUzI1NiJ9"
    },
    {
      "indent": 6,
      "text": "Figure 57: Signature #1 JWS Protected Header, base64url-encoded",
      "ja": "図57：署名＃1 JWS保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "{\n  \"kid\": \"bilbo.baggins@hobbiton.example\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 58: Signature #1 JWS Unprotected Header JSON",
      "ja": "Figure 58: Signature #1 JWS Unprotected Header JSON"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 57) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 59).",
      "ja": "[JWS]で説明されているように、JWS保護ヘッダー（図57）とJWSペイロード（図8）が組み合わされて、JWS署名入力（図59）が生成されます。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSUzI1NiJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 59: JWS Signing Input",
      "ja": "図59：JWS署名入力"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 59) produces the JWS Signature (Figure 60).",
      "ja": "Performing the signature operation over the JWS Signing Input (Figure 59) produces the JWS Signature (Figure 60)."
    },
    {
      "indent": 3,
      "text": "MIsjqtVlOpa71KE-Mss8_Nq2YH4FGhiocsqrgi5NvyG53uoimic1tcMdSg-qpt rzZc7CG6Svw2Y13TDIqHzTUrL_lR2ZFcryNFiHkSw129EghGpwkpxaTn_THJTC glNbADko1MZBCdwzJxwqZc-1RlpO2HibUYyXSwO97BSe0_evZKdjvvKSgsIqjy tKSeAMbhMBdMma622_BG5t4sdbuCHtFjp9iJmkio47AIwqkZV1aIZsv33uPUqB BCXbYoQJwt7mxPftHmNlGoOSMxR_3thmXTCm4US-xiNOyhbm8afKK64jU6_TPt QHiJeQJxz9G3Tx-083B745_AfYOnlC9w",
      "ja": "MIsjqtVlOpa71KE-Mss8_Nq2YH4FGhiocsqrgi5NvyG53uoimic1tcMdSg-qpt rzZc7CG6Svw2Y13TDIqHzTUrL_lR2ZFcryNFiHkSw129EghGpwkpxaTn_THJTC glNbADko1MZBCdwzJxwqZc-1RlpO2HibUYyXSwO97BSe0_evZKdjvvKSgsIqjy tKSeAMbhMBdMma622_BG5t4sdbuCHtFjp9iJmkio47AIwqkZV1aIZsv33uPUqB BCXbYoQJwt7mxPftHmNlGoOSMxR_3thmXTCm4US-xiNOyhbm8afKK64jU6_TPt QHiJeQJxz9G3Tx-083B745_AfYOnlC9w"
    },
    {
      "indent": 14,
      "text": "Figure 60: JWS Signature #1, base64url-encoded",
      "ja": "Figure 60: JWS Signature #1, base64url-encoded"
    },
    {
      "indent": 3,
      "text": "The following is the assembled first signature serialized as JSON:",
      "ja": "以下は、JSONとしてシリアル化された、組み立てられた最初の署名です。"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJSUzI1NiJ9\",\n  \"header\": {\n    \"kid\": \"bilbo.baggins@hobbiton.example\"\n  },\n  \"signature\": \"MIsjqtVlOpa71KE-Mss8_Nq2YH4FGhiocsqrgi5NvyG53u\n      oimic1tcMdSg-qptrzZc7CG6Svw2Y13TDIqHzTUrL_lR2ZFcryNFiHkS\n      w129EghGpwkpxaTn_THJTCglNbADko1MZBCdwzJxwqZc-1RlpO2HibUY\n      yXSwO97BSe0_evZKdjvvKSgsIqjytKSeAMbhMBdMma622_BG5t4sdbuC\n      HtFjp9iJmkio47AIwqkZV1aIZsv33uPUqBBCXbYoQJwt7mxPftHmNlGo\n      OSMxR_3thmXTCm4US-xiNOyhbm8afKK64jU6_TPtQHiJeQJxz9G3Tx-0\n      83B745_AfYOnlC9w\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 61: Signature #1 JSON",
      "ja": "Figure 61: Signature #1 JSON"
    },
    {
      "indent": 0,
      "text": "4.8.3. Second Signing Operation",
      "section_title": true,
      "ja": "4.8.3. Second Signing Operation"
    },
    {
      "indent": 3,
      "text": "The following is generated before completing the second signing operation:",
      "ja": "The following is generated before completing the second signing operation:"
    },
    {
      "indent": 3,
      "text": "o JWS Unprotected Header; this example uses the header from Figure 62.",
      "ja": "o JWS Unprotected Header; this example uses the header from Figure 62."
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"ES512\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 62: Signature #2 JWS Unprotected Header JSON",
      "ja": "Figure 62: Signature #2 JWS Unprotected Header JSON"
    },
    {
      "indent": 3,
      "text": "The empty string (as there is no JWS Protected Header) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 63).",
      "ja": "空の文字列（JWS保護ヘッダーがないため）とJWSペイロード（図8）は、[JWS]で説明されているように結合され、JWS署名入力（図63）を生成します。"
    },
    {
      "indent": 3,
      "text": ".\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 63: JWS Signing Input",
      "ja": "図63：JWS署名入力"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 63) produces the JWS Signature (Figure 64).",
      "ja": "JWS署名入力（図63）で署名操作を実行すると、JWS署名（図64）が生成されます。"
    },
    {
      "indent": 3,
      "text": "ARcVLnaJJaUWG8fG-8t5BREVAuTY8n8YHjwDO1muhcdCoFZFFjfISu0Cdkn9Yb\ndlmi54ho0x924DUz8sK7ZXkhc7AFM8ObLfTvNCrqcI3Jkl2U5IX3utNhODH6v7\nxgy1Qahsn0fyb4zSAkje8bAWz4vIfj5pCMYxxm4fgV3q7ZYhm5eD",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Figure 64: JWS Signature #2, base64url-encoded",
      "ja": "図64：JWS署名＃2、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "The following is the assembled second signature serialized as JSON:",
      "ja": "以下は、JSONとしてシリアル化された、組み立てられた2番目の署名です。"
    },
    {
      "indent": 3,
      "text": "{\n  \"header\": {\n    \"alg\": \"ES512\",\n    \"kid\": \"bilbo.baggins@hobbiton.example\"\n  },\n  \"signature\": \"ARcVLnaJJaUWG8fG-8t5BREVAuTY8n8YHjwDO1muhcdCoF\n      ZFFjfISu0Cdkn9Ybdlmi54ho0x924DUz8sK7ZXkhc7AFM8ObLfTvNCrq\n      cI3Jkl2U5IX3utNhODH6v7xgy1Qahsn0fyb4zSAkje8bAWz4vIfj5pCM\n      Yxxm4fgV3q7ZYhm5eD\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 65: Signature #2 JSON",
      "ja": "図65：署名＃2 JSON"
    },
    {
      "indent": 0,
      "text": "4.8.4. Third Signing Operation",
      "section_title": true,
      "ja": "4.8.4. 3番目の署名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated before completing the third signing operation:",
      "ja": "3番目の署名操作が完了する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 66, encoded using base64url [RFC4648] to produce Figure 67.",
      "ja": "o JWS保護ヘッダー。この例では、base64url [RFC4648]を使用してエンコードされた図66のヘッダーを使用して、図67を生成します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"HS256\",\n  \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Figure 66: Signature #3 JWS Protected Header JSON",
      "ja": "図66：署名＃3 JWS保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW VlZjMxNGJjNzAzNyJ9",
      "ja": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW VlZjMxNGJjNzAzNyJ9"
    },
    {
      "indent": 6,
      "text": "Figure 67: Signature #3 JWS Protected Header, base64url-encoded",
      "ja": "Figure 67: Signature #3 JWS Protected Header, base64url-encoded"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 67) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 68).",
      "ja": "[JWS]で説明されているように、JWS保護ヘッダー（図67）とJWSペイロード（図8）が組み合わされて、JWS署名入力（図68）が生成されます。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW\nVlZjMxNGJjNzAzNyJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 68: JWS Signing Input",
      "ja": "図68：JWS署名入力"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 68) produces the JWS Signature (Figure 69).",
      "ja": "Performing the signature operation over the JWS Signing Input (Figure 68) produces the JWS Signature (Figure 69)."
    },
    {
      "indent": 3,
      "text": "s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Figure 69: JWS Signature #3, base64url-encoded",
      "ja": "図69：JWS署名＃3、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "The following is the assembled third signature serialized as JSON:",
      "ja": "以下は、JSONとしてシリアル化された、組み立てられた3番目の署名です。"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOW\n      ItNDcxYi1iZmQ2LWVlZjMxNGJjNzAzNyJ9\",\n  \"signature\": \"s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 70: Signature #3 JSON",
      "ja": "図70：署名＃3 JSON"
    },
    {
      "indent": 0,
      "text": "4.8.5. Output Results",
      "section_title": true,
      "ja": "4.8.5. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "ja": "以下は、結果のJWSオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 8)",
      "ja": "o ペイロードのコンテンツ（図8）"
    },
    {
      "indent": 3,
      "text": "o Signature #1 JSON (Figure 61)",
      "ja": "o 署名＃1 JSON（図61）"
    },
    {
      "indent": 3,
      "text": "o Signature #2 JSON (Figure 65)",
      "ja": "o 署名＃2 JSON（図65）"
    },
    {
      "indent": 3,
      "text": "o Signature #3 JSON (Figure 70)",
      "ja": "o 署名＃3 JSON（図70）"
    },
    {
      "indent": 3,
      "text": "The JWS Compact Serialization is not presented because it does not support this use case; the flattened JWS JSON Serialization is not presented because there is more than one signature.",
      "ja": "The JWS Compact Serialization is not presented because it does not support this use case; the flattened JWS JSON Serialization is not presented because there is more than one signature."
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "ja": "一般的なJWS JSONシリアル化を使用した結果のJWSオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"signatures\": [\n    {\n      \"protected\": \"eyJhbGciOiJSUzI1NiJ9\",\n      \"header\": {\n        \"kid\": \"bilbo.baggins@hobbiton.example\"\n      },\n      \"signature\": \"MIsjqtVlOpa71KE-Mss8_Nq2YH4FGhiocsqrgi5Nvy\n          G53uoimic1tcMdSg-qptrzZc7CG6Svw2Y13TDIqHzTUrL_lR2ZFc\n          ryNFiHkSw129EghGpwkpxaTn_THJTCglNbADko1MZBCdwzJxwqZc\n          -1RlpO2HibUYyXSwO97BSe0_evZKdjvvKSgsIqjytKSeAMbhMBdM\n          ma622_BG5t4sdbuCHtFjp9iJmkio47AIwqkZV1aIZsv33uPUqBBC\n          XbYoQJwt7mxPftHmNlGoOSMxR_3thmXTCm4US-xiNOyhbm8afKK6\n          4jU6_TPtQHiJeQJxz9G3Tx-083B745_AfYOnlC9w\"\n    },\n    {\n      \"header\": {\n        \"alg\": \"ES512\",\n        \"kid\": \"bilbo.baggins@hobbiton.example\"\n      },\n      \"signature\": \"ARcVLnaJJaUWG8fG-8t5BREVAuTY8n8YHjwDO1muhc\n          dCoFZFFjfISu0Cdkn9Ybdlmi54ho0x924DUz8sK7ZXkhc7AFM8Ob\n          LfTvNCrqcI3Jkl2U5IX3utNhODH6v7xgy1Qahsn0fyb4zSAkje8b\n          AWz4vIfj5pCMYxxm4fgV3q7ZYhm5eD\"\n    },\n    {\n      \"protected\": \"eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LT\n          RkOWItNDcxYi1iZmQ2LWVlZjMxNGJjNzAzNyJ9\",\n      \"signature\": \"s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p\n          0\"\n    }\n  ]\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 71: General JWS JSON Serialization",
      "ja": "図71：一般的なJWS JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "5. JSON Web Encryption Examples",
      "section_title": true,
      "ja": "5. JSON Web Encryption Examples"
    },
    {
      "indent": 3,
      "text": "The following sections demonstrate how to generate various JWE objects.",
      "ja": "以下のセクションでは、さまざまなJWEオブジェクトを生成する方法を示します。"
    },
    {
      "indent": 3,
      "text": "All of the encryption examples (unless otherwise noted) use the following Plaintext content (an abridged quote from \"The Fellowship of the Ring\" [LOTR-FELLOWSHIP]), serialized as UTF-8. The Plaintext is presented here as a series of quoted strings that are concatenated to produce the JWE Plaintext. The sequence \"\\xe2\\x80\\x93\" is substituted for (U+2013 EN DASH), and quotation marks (U+0022 QUOTATION MARK) are added for readability but are not present in the JWE Plaintext.",
      "ja": "All of the encryption examples (unless otherwise noted) use the following Plaintext content (an abridged quote from \"The Fellowship of the Ring\" [LOTR-FELLOWSHIP]), serialized as UTF-8. The Plaintext is presented here as a series of quoted strings that are concatenated to produce the JWE Plaintext. The sequence \"\\xe2\\x80\\x93\" is substituted for (U+2013 EN DASH), and quotation marks (U+0022 QUOTATION MARK) are added for readability but are not present in the JWE Plaintext."
    },
    {
      "indent": 3,
      "text": "\"You can trust us to stick with you through thick and \" \"thin\\xe2\\x80\\x93to the bitter end. And you can trust us to \" \"keep any secret of yours\\xe2\\x80\\x93closer than you keep it \" \"yourself. But you cannot trust us to let you face trouble \" \"alone, and go off without a word. We are your friends, Frodo.\"",
      "ja": "\"You can trust us to stick with you through thick and \" \"thin\\xe2\\x80\\x93to the bitter end. And you can trust us to \" \"keep any secret of yours\\xe2\\x80\\x93closer than you keep it \" \"yourself. But you cannot trust us to let you face trouble \" \"alone, and go off without a word. We are your friends, Frodo.\""
    },
    {
      "indent": 23,
      "text": "Figure 72: Plaintext Content",
      "ja": "図72：平文コンテンツ"
    },
    {
      "indent": 0,
      "text": "5.1. Key Encryption Using RSA v1.5 and AES-HMAC-SHA2",
      "section_title": true,
      "ja": "5.1. RSA v1.5とAES-HMAC-SHA2を使用した鍵の暗号化"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content using the \"RSA1_5\" (RSAES-PKCS1-v1_5) key encryption algorithm and the \"A128CBC-HS256\" (AES-128-CBC-HMAC-SHA-256) content encryption algorithm.",
      "ja": "この例は、「RSA1_5」（RSAES-PKCS1-v1_5）キー暗号化アルゴリズムと「A128CBC-HS256」（AES-128-CBC-HMAC-SHA-256）コンテンツ暗号化アルゴリズムを使用したコンテンツの暗号化を示しています。"
    },
    {
      "indent": 3,
      "text": "Note that RSAES-PKCS1-v1_5 uses random data to generate the ciphertext; it might not be possible to exactly replicate the results in this section.",
      "ja": "RSAES-PKCS1-v1_5はランダムデータを使用して暗号文を生成することに注意してください。このセクションの結果を正確に複製することができない場合があります。"
    },
    {
      "indent": 3,
      "text": "Note that only the RSA public key is necessary to perform the encryption. However, the example includes the RSA private key to allow readers to validate the output.",
      "ja": "Note that only the RSA public key is necessary to perform the encryption. However, the example includes the RSA private key to allow readers to validate the output."
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.1.1. Input Factors",
      "section_title": true,
      "ja": "5.1.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "ja": "暗号化プロセスを開始する前に、以下が提供されます。"
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "ja": "o 平文コンテンツ;この例では、図72のコンテンツを使用しています。"
    },
    {
      "indent": 3,
      "text": "o RSA public key; this example uses the key from Figure 73.",
      "ja": "o RSA public key; this example uses the key from Figure 73."
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"RSA1_5\".",
      "ja": "o 「RSA1_5」の「alg」パラメータ。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128CBC-HS256\".",
      "ja": "o 「A128CBC-HS256」の「enc」パラメータ。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"RSA\",\n  \"kid\": \"frodo.baggins@hobbiton.example\",\n  \"use\": \"enc\",\n  \"n\": \"maxhbsmBtdQ3CNrKvprUE6n9lYcregDMLYNeTAWcLj8NnPU9XIYegT\n      HVHQjxKDSHP2l-F5jS7sppG1wgdAqZyhnWvXhYNvcM7RfgKxqNx_xAHx\n      6f3yy7s-M9PSNCwPC2lh6UAkR4I00EhV9lrypM9Pi4lBUop9t5fS9W5U\n      NwaAllhrd-osQGPjIeI1deHTwx-ZTHu3C60Pu_LJIl6hKn9wbwaUmA4c\n      R5Bd2pgbaY7ASgsjCUbtYJaNIHSoHXprUdJZKUMAzV0WOKPfA6OPI4oy\n      pBadjvMZ4ZAj3BnXaSYsEZhaueTXvZB4eZOAjIyh2e_VOIKVMsnDrJYA\n      VotGlvMQ\",\n  \"e\": \"AQAB\",\n  \"d\": \"Kn9tgoHfiTVi8uPu5b9TnwyHwG5dK6RE0uFdlpCGnJN7ZEi963R7wy\n      bQ1PLAHmpIbNTztfrheoAniRV1NCIqXaW_qS461xiDTp4ntEPnqcKsyO\n      5jMAji7-CL8vhpYYowNFvIesgMoVaPRYMYT9TW63hNM0aWs7USZ_hLg6\n      Oe1mY0vHTI3FucjSM86Nff4oIENt43r2fspgEPGRrdE6fpLc9Oaq-qeP\n      1GFULimrRdndm-P8q8kvN3KHlNAtEgrQAgTTgz80S-3VD0FgWfgnb1PN\n      miuPUxO8OpI9KDIfu_acc6fg14nsNaJqXe6RESvhGPH2afjHqSy_Fd2v\n      pzj85bQQ\",\n  \"p\": \"2DwQmZ43FoTnQ8IkUj3BmKRf5Eh2mizZA5xEJ2MinUE3sdTYKSLtaE\n      oekX9vbBZuWxHdVhM6UnKCJ_2iNk8Z0ayLYHL0_G21aXf9-unynEpUsH\n      7HHTklLpYAzOOx1ZgVljoxAdWNn3hiEFrjZLZGS7lOH-a3QQlDDQoJOJ\n      2VFmU\",\n  \"q\": \"te8LY4-W7IyaqH1ExujjMqkTAlTeRbv0VLQnfLY2xINnrWdwiQ93_V\n      F099aP1ESeLja2nw-6iKIe-qT7mtCPozKfVtUYfz5HrJ_XY2kfexJINb\n      9lhZHMv5p1skZpeIS-GPHCC6gRlKo1q-idn_qxyusfWv7WAxlSVfQfk8\n      d6Et0\",\n  \"dp\": \"UfYKcL_or492vVc0PzwLSplbg4L3-Z5wL48mwiswbpzOyIgd2xHTH\n      QmjJpFAIZ8q-zf9RmgJXkDrFs9rkdxPtAsL1WYdeCT5c125Fkdg317JV\n      RDo1inX7x2Kdh8ERCreW8_4zXItuTl_KiXZNU5lvMQjWbIw2eTx1lpsf\n      lo0rYU\",\n  \"dq\": \"iEgcO-QfpepdH8FWd7mUFyrXdnOkXJBCogChY6YKuIHGc_p8Le9Mb\n      pFKESzEaLlN1Ehf3B6oGBl5Iz_ayUlZj2IoQZ82znoUrpa9fVYNot87A\n      CfzIG7q9Mv7RiPAderZi03tkVXAdaBau_9vs5rS-7HMtxkVrxSUvJY14\n      TkXlHE\",\n  \"qi\": \"kC-lzZOqoFaZCr5l0tOVtREKoVqaAYhQiqIRGL-MzS4sCmRkxm5vZ\n      lXYx6RtE1n_AagjqajlkjieGlxTTThHD8Iga6foGBMaAr5uR1hGQpSc7\n      Gl7CF1DZkBJMTQN6EshYzZfxW08mIO8M6Rzuh0beL6fG9mkDcIyPrBXx\n      2bQ_mM\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 73: RSA 2048-Bit Key, in JWK Format",
      "ja": "Figure 73: RSA 2048-Bit Key, in JWK Format"
    },
    {
      "indent": 3,
      "text": "(NOTE: While the key includes the private parameters, only the public parameters \"e\" and \"n\" are necessary for the encryption operation.)",
      "ja": "（注：キーにはプライベートパラメータが含まれていますが、暗号化操作に必要なのはパブリックパラメータ「e」と「n」だけです。）"
    },
    {
      "indent": 0,
      "text": "5.1.2. Generated Factors",
      "section_title": true,
      "ja": "5.1.2. 生成された要因"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "ja": "暗号化する前に、次のものが生成されます。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 74.",
      "ja": "o コンテンツ暗号化キー（CEK）としてのAES対称キー。この例では、図74のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 75.",
      "ja": "o 初期化ベクトル;この例では、図75の初期化ベクトルを使用しています。"
    },
    {
      "indent": 3,
      "text": "3qyTVhIWt5juqZUCpfRqpvauwB956MEJL2Rt-8qXKSo",
      "ja": "3qyTVhIWt5juqZUCpfRqpvauwB956MEJL2Rt-8qXKSo"
    },
    {
      "indent": 11,
      "text": "Figure 74: Content Encryption Key, base64url-encoded",
      "ja": "図74：コンテンツ暗号化キー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "bbd5sTkYwhAIqfHsx8DayA",
      "ja": "私に立ち向かいたい"
    },
    {
      "indent": 12,
      "text": "Figure 75: Initialization Vector, base64url-encoded",
      "ja": "図75：base64urlエンコードされた初期化ベクトル"
    },
    {
      "indent": 0,
      "text": "5.1.3. Encrypting the Key",
      "section_title": true,
      "ja": "5.1.3. キーの暗号化"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 74) with the RSA key (Figure 73) results in the following Encrypted Key:",
      "ja": "RSAキー（図73）を使用してCEK（図74）でキー暗号化操作を実行すると、次の暗号化キーが生成されます。"
    },
    {
      "indent": 3,
      "text": "laLxI0j-nLH-_BgLOXMozKxmy9gffy2gTdvqzfTihJBuuzxg0V7yk1WClnQePF\nvG2K-pvSlWc9BRIazDrn50RcRai__3TDON395H3c62tIouJJ4XaRvYHFjZTZ2G\nXfz8YAImcc91Tfk0WXC2F5Xbb71ClQ1DDH151tlpH77f2ff7xiSxh9oSewYrcG\nTSLUeeCt36r1Kt3OSj7EyBQXoZlN7IxbyhMAfgIe7Mv1rOTOI5I8NQqeXXW8Vl\nzNmoxaGMny3YnGir5Wf6Qt2nBq4qDaPdnaAuuGUGEecelIO1wx1BpyIfgvfjOh\nMBs9M8XL223Fg47xlGsMXdfuY-4jaqVw",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 76: Encrypted Key, base64url-encoded",
      "ja": "図76：暗号化されたキー、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.1.4. Encrypting the Content",
      "section_title": true,
      "ja": "5.1.4. コンテンツの暗号化"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the Plaintext:",
      "ja": "平文を暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 77, encoded using base64url [RFC4648] to produce Figure 78.",
      "ja": "o JWE Protected Header; this example uses the header from Figure 77, encoded using base64url [RFC4648] to produce Figure 78."
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"RSA1_5\",\n  \"kid\": \"frodo.baggins@hobbiton.example\",\n  \"enc\": \"A128CBC-HS256\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 77: JWE Protected Header JSON",
      "ja": "図77：JWE保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSU0ExXzUiLCJraWQiOiJmcm9kby5iYWdnaW5zQGhvYmJpdG9uLm\nV4YW1wbGUiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 78: JWE Protected Header, base64url-encoded",
      "ja": "Figure 78: JWE Protected Header, base64url-encoded"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation on the Plaintext (Figure 72) using the following:",
      "ja": "以下を使用して、平文（図72）でコンテンツ暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 74);",
      "ja": "o チェック（図74）;"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 75); and",
      "ja": "o 初期化ベクトル（図75）;そして"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 77) as authenticated data",
      "ja": "o JWE Protected Header (Figure 77) as authenticated data"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 79.",
      "ja": "o 図79の暗号文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 80.",
      "ja": "o 図80の認証タグ。"
    },
    {
      "indent": 3,
      "text": "0fys_TY_na7f8dwSfXLiYdHaA2DxUjD67ieF7fcVbIR62JhJvGZ4_FNVSiGc_r aa0HnLQ6s1P2sv3Xzl1p1l_o5wR_RsSzrS8Z-wnI3Jvo0mkpEEnlDmZvDu_k8O WzJv7eZVEqiWKdyVzFhPpiyQU28GLOpRc2VbVbK4dQKPdNTjPPEmRqcaGeTWZV yeSUvf5k59yJZxRuSvWFf6KrNtmRdZ8R4mDOjHSrM_s8uwIFcqt4r5GX8TKaI0 zT5CbL5Qlw3sRc7u_hg0yKVOiRytEAEs3vZkcfLkP6nbXdC_PkMdNS-ohP78T2 O6_7uInMGhFeX4ctHG7VelHGiT93JfWDEQi5_V9UN1rhXNrYu-0fVMkZAKX3VW i7lzA6BP430m",
      "ja": "0fys_TY_na7f8dwSfXLiYdHaA2DxUjD67ieF7fcVbIR62JhJvGZ4_FNVSiGc_r aa0HnLQ6s1P2sv3Xzl1p1l_o5wR_RsSzrS8Z-wnI3Jvo0mkpEEnlDmZvDu_k8O WzJv7eZVEqiWKdyVzFhPpiyQU28GLOpRc2VbVbK4dQKPdNTjPPEmRqcaGeTWZV yeSUvf5k59yJZxRuSvWFf6KrNtmRdZ8R4mDOjHSrM_s8uwIFcqt4r5GX8TKaI0 zT5CbL5Qlw3sRc7u_hg0yKVOiRytEAEs3vZkcfLkP6nbXdC_PkMdNS-ohP78T2 O6_7uInMGhFeX4ctHG7VelHGiT93JfWDEQi5_V9UN1rhXNrYu-0fVMkZAKX3VW i7lzA6BP430m"
    },
    {
      "indent": 17,
      "text": "Figure 79: Ciphertext, base64url-encoded",
      "ja": "図79：base64urlエンコードされた暗号文"
    },
    {
      "indent": 3,
      "text": "kvKuFBXHe5mQr4lqgobAUg",
      "ja": "kvKuFBXHe5mQr4lqgobAUg"
    },
    {
      "indent": 13,
      "text": "Figure 80: Authentication Tag, base64url-encoded",
      "ja": "図80：認証タグ、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.1.5. Output Results",
      "section_title": true,
      "ja": "5.1.5. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "ja": "以下は、結果のJWEオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 78)",
      "ja": "o JWE保護ヘッダー（図78）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 76)",
      "ja": "o 暗号化されたキー（図76）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 75)",
      "ja": "o 初期化ベクトル（図75）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 79)",
      "ja": "o 暗号文（図79）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 80)",
      "ja": "o 認証タグ（図80）"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "ja": "JWE Compact Serializationを使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSU0ExXzUiLCJraWQiOiJmcm9kby5iYWdnaW5zQGhvYmJpdG9uLm\nV4YW1wbGUiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0\n.\nlaLxI0j-nLH-_BgLOXMozKxmy9gffy2gTdvqzfTihJBuuzxg0V7yk1WClnQePF\nvG2K-pvSlWc9BRIazDrn50RcRai__3TDON395H3c62tIouJJ4XaRvYHFjZTZ2G\nXfz8YAImcc91Tfk0WXC2F5Xbb71ClQ1DDH151tlpH77f2ff7xiSxh9oSewYrcG\nTSLUeeCt36r1Kt3OSj7EyBQXoZlN7IxbyhMAfgIe7Mv1rOTOI5I8NQqeXXW8Vl\nzNmoxaGMny3YnGir5Wf6Qt2nBq4qDaPdnaAuuGUGEecelIO1wx1BpyIfgvfjOh\nMBs9M8XL223Fg47xlGsMXdfuY-4jaqVw\n.\nbbd5sTkYwhAIqfHsx8DayA\n.\n0fys_TY_na7f8dwSfXLiYdHaA2DxUjD67ieF7fcVbIR62JhJvGZ4_FNVSiGc_r\naa0HnLQ6s1P2sv3Xzl1p1l_o5wR_RsSzrS8Z-wnI3Jvo0mkpEEnlDmZvDu_k8O\nWzJv7eZVEqiWKdyVzFhPpiyQU28GLOpRc2VbVbK4dQKPdNTjPPEmRqcaGeTWZV\nyeSUvf5k59yJZxRuSvWFf6KrNtmRdZ8R4mDOjHSrM_s8uwIFcqt4r5GX8TKaI0\nzT5CbL5Qlw3sRc7u_hg0yKVOiRytEAEs3vZkcfLkP6nbXdC_PkMdNS-ohP78T2\nO6_7uInMGhFeX4ctHG7VelHGiT93JfWDEQi5_V9UN1rhXNrYu-0fVMkZAKX3VW\ni7lzA6BP430m\n.\nkvKuFBXHe5mQr4lqgobAUg",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 81: JWE Compact Serialization",
      "ja": "Figure 81: JWE Compact Serialization"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "ja": "一般的なJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"laLxI0j-nLH-_BgLOXMozKxmy9gffy2gTdvqzf\n          TihJBuuzxg0V7yk1WClnQePFvG2K-pvSlWc9BRIazDrn50RcRai_\n          _3TDON395H3c62tIouJJ4XaRvYHFjZTZ2GXfz8YAImcc91Tfk0WX\n          C2F5Xbb71ClQ1DDH151tlpH77f2ff7xiSxh9oSewYrcGTSLUeeCt\n          36r1Kt3OSj7EyBQXoZlN7IxbyhMAfgIe7Mv1rOTOI5I8NQqeXXW8\n          VlzNmoxaGMny3YnGir5Wf6Qt2nBq4qDaPdnaAuuGUGEecelIO1wx\n          1BpyIfgvfjOhMBs9M8XL223Fg47xlGsMXdfuY-4jaqVw\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJSU0ExXzUiLCJraWQiOiJmcm9kby5iYWdnaW\n      5zQGhvYmJpdG9uLmV4YW1wbGUiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In\n      0\",\n  \"iv\": \"bbd5sTkYwhAIqfHsx8DayA\",\n  \"ciphertext\": \"0fys_TY_na7f8dwSfXLiYdHaA2DxUjD67ieF7fcVbIR62\n      JhJvGZ4_FNVSiGc_raa0HnLQ6s1P2sv3Xzl1p1l_o5wR_RsSzrS8Z-wn\n      I3Jvo0mkpEEnlDmZvDu_k8OWzJv7eZVEqiWKdyVzFhPpiyQU28GLOpRc\n      2VbVbK4dQKPdNTjPPEmRqcaGeTWZVyeSUvf5k59yJZxRuSvWFf6KrNtm\n      RdZ8R4mDOjHSrM_s8uwIFcqt4r5GX8TKaI0zT5CbL5Qlw3sRc7u_hg0y\n      KVOiRytEAEs3vZkcfLkP6nbXdC_PkMdNS-ohP78T2O6_7uInMGhFeX4c\n      tHG7VelHGiT93JfWDEQi5_V9UN1rhXNrYu-0fVMkZAKX3VWi7lzA6BP4\n      30m\",\n  \"tag\": \"kvKuFBXHe5mQr4lqgobAUg\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 82: General JWE JSON Serialization",
      "ja": "図82：一般的なJWE JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "ja": "平坦化されたJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJSU0ExXzUiLCJraWQiOiJmcm9kby5iYWdnaW\n      5zQGhvYmJpdG9uLmV4YW1wbGUiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In\n      0\",\n  \"encrypted_key\": \"laLxI0j-nLH-_BgLOXMozKxmy9gffy2gTdvqzfTihJ\n      Buuzxg0V7yk1WClnQePFvG2K-pvSlWc9BRIazDrn50RcRai__3TDON39\n      5H3c62tIouJJ4XaRvYHFjZTZ2GXfz8YAImcc91Tfk0WXC2F5Xbb71ClQ\n      1DDH151tlpH77f2ff7xiSxh9oSewYrcGTSLUeeCt36r1Kt3OSj7EyBQX\n      oZlN7IxbyhMAfgIe7Mv1rOTOI5I8NQqeXXW8VlzNmoxaGMny3YnGir5W\n      f6Qt2nBq4qDaPdnaAuuGUGEecelIO1wx1BpyIfgvfjOhMBs9M8XL223F\n      g47xlGsMXdfuY-4jaqVw\",\n  \"iv\": \"bbd5sTkYwhAIqfHsx8DayA\",\n  \"ciphertext\": \"0fys_TY_na7f8dwSfXLiYdHaA2DxUjD67ieF7fcVbIR62\n      JhJvGZ4_FNVSiGc_raa0HnLQ6s1P2sv3Xzl1p1l_o5wR_RsSzrS8Z-wn\n      I3Jvo0mkpEEnlDmZvDu_k8OWzJv7eZVEqiWKdyVzFhPpiyQU28GLOpRc\n      2VbVbK4dQKPdNTjPPEmRqcaGeTWZVyeSUvf5k59yJZxRuSvWFf6KrNtm\n      RdZ8R4mDOjHSrM_s8uwIFcqt4r5GX8TKaI0zT5CbL5Qlw3sRc7u_hg0y\n      KVOiRytEAEs3vZkcfLkP6nbXdC_PkMdNS-ohP78T2O6_7uInMGhFeX4c\n      tHG7VelHGiT93JfWDEQi5_V9UN1rhXNrYu-0fVMkZAKX3VWi7lzA6BP4\n      30m\",\n  \"tag\": \"kvKuFBXHe5mQr4lqgobAUg\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 83: Flattened JWE JSON Serialization",
      "ja": "図83：フラット化されたJWE JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "5.2. Key Encryption Using RSA-OAEP with AES-GCM",
      "section_title": true,
      "ja": "5.2. RSA-OAEPとAES-GCMを使用した鍵の暗号化"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content using the \"RSA-OAEP\" (RSAES-OAEP) key encryption algorithm and the \"A256GCM\" (AES-GCM) content encryption algorithm.",
      "ja": "この例は、「RSA-OAEP」（RSAES-OAEP）キー暗号化アルゴリズムと「A256GCM」（AES-GCM）コンテンツ暗号化アルゴリズムを使用したコンテンツの暗号化を示しています。"
    },
    {
      "indent": 3,
      "text": "Note that RSAES-OAEP uses random data to generate the ciphertext; it might not be possible to exactly replicate the results in this section.",
      "ja": "Note that RSAES-OAEP uses random data to generate the ciphertext; it might not be possible to exactly replicate the results in this section."
    },
    {
      "indent": 3,
      "text": "Note that only the RSA public key is necessary to perform the encryption. However, the example includes the RSA private key to allow readers to validate the output.",
      "ja": "暗号化を実行するには、RSA公開鍵のみが必要であることに注意してください。ただし、この例には、読者が出力を検証できるようにするRSA秘密鍵が含まれています。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.2.1. Input Factors",
      "section_title": true,
      "ja": "5.2.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "ja": "暗号化プロセスを開始する前に、以下が提供されます。"
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the Plaintext from Figure 72.",
      "ja": "o 平文コンテンツ;この例では、図72のプレーンテキストを使用しています。"
    },
    {
      "indent": 3,
      "text": "o RSA public key; this example uses the key from Figure 84.",
      "ja": "o RSA公開鍵。この例では、図84のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"RSA-OAEP\".",
      "ja": "o 「RSA-OAEP」の「alg」パラメータ。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A256GCM\".",
      "ja": "o 「A256GCM」の「enc」パラメータ。"
    },
    {
      "indent": 0,
      "text": "   {\n     \"kty\": \"RSA\",\n     \"kid\": \"samwise.gamgee@hobbiton.example\",\n     \"use\": \"enc\",\n     \"n\": \"wbdxI55VaanZXPY29Lg5hdmv2XhvqAhoxUkanfzf2-5zVUxa6prHRr\n         I4pP1AhoqJRlZfYtWWd5mmHRG2pAHIlh0ySJ9wi0BioZBl1XP2e-C-Fy\n         XJGcTy0HdKQWlrfhTm42EW7Vv04r4gfao6uxjLGwfpGrZLarohiWCPnk\n         Nrg71S2CuNZSQBIPGjXfkmIy2tl_VWgGnL22GplyXj5YlBLdxXp3XeSt\n         sqo571utNfoUTU8E4qdzJ3U1DItoVkPGsMwlmmnJiwA7sXRItBCivR4M\n         5qnZtdw-7v4WuR4779ubDuJ5nalMv2S66-RPcnFAzWSKxtBDnFJJDGIU\n         e7Tzizjg1nms0Xq_yPub_UOlWn0ec85FCft1hACpWG8schrOBeNqHBOD\n         FskYpUc2LC5JA2TaPF2dA67dg1TTsC_FupfQ2kNGcE1LgprxKHcVWYQb\n         86B-HozjHZcqtauBzFNV5tbTuB-TpkcvJfNcFLlH3b8mb-H_ox35FjqB\n         SAjLKyoeqfKTpVjvXhd09knwgJf6VKq6UC418_TOljMVfFTWXUxlnfhO\n         OnzW6HSSzD1c9WrCuVzsUMv54szidQ9wf1cYWf3g5qFDxDQKis99gcDa\n         iCAwM3yEBIzuNeeCa5dartHDb1xEB_HcHSeYbghbMjGfasvKn0aZRsnT\n         yC0xhWBlsolZE\",\n     \"e\": \"AQAB\",\n     \"alg\": \"RSA-OAEP\",\n     \"d\": \"n7fzJc3_WG59VEOBTkayzuSMM780OJQuZjN_KbH8lOZG25ZoA7T4Bx\n         cc0xQn5oZE5uSCIwg91oCt0JvxPcpmqzaJZg1nirjcWZ-oBtVk7gCAWq\n         -B3qhfF3izlbkosrzjHajIcY33HBhsy4_WerrXg4MDNE4HYojy68TcxT\n         2LYQRxUOCf5TtJXvM8olexlSGtVnQnDRutxEUCwiewfmmrfveEogLx9E\n         A-KMgAjTiISXxqIXQhWUQX1G7v_mV_Hr2YuImYcNcHkRvp9E7ook0876\n         DhkO8v4UOZLwA1OlUX98mkoqwc58A_Y2lBYbVx1_s5lpPsEqbbH-nqIj\n         h1fL0gdNfihLxnclWtW7pCztLnImZAyeCWAG7ZIfv-Rn9fLIv9jZ6r7r\n         -MSH9sqbuziHN2grGjD_jfRluMHa0l84fFKl6bcqN1JWxPVhzNZo01yD\n         F-1LiQnqUYSepPf6X3a2SOdkqBRiquE6EvLuSYIDpJq3jDIsgoL8Mo1L\n         oomgiJxUwL_GWEOGu28gplyzm-9Q0U0nyhEf1uhSR8aJAQWAiFImWH5W\n         _IQT9I7-yrindr_2fWQ_i1UgMsGzA7aOGzZfPljRy6z-tY_KuBG00-28\n         S_aWvjyUc-Alp8AUyKjBZ-7CWH32fGWK48j1t-zomrwjL_mnhsPbGs0c\n         9WsWgRzI-K8gE\",\n     \"p\": \"7_2v3OQZzlPFcHyYfLABQ3XP85Es4hCdwCkbDeltaUXgVy9l9etKgh\n         vM4hRkOvbb01kYVuLFmxIkCDtpi-zLCYAdXKrAK3PtSbtzld_XZ9nlsY\n         a_QZWpXB_IrtFjVfdKUdMz94pHUhFGFj7nr6NNxfpiHSHWFE1zD_AC3m\n         Y46J961Y2LRnreVwAGNw53p07Db8yD_92pDa97vqcZOdgtybH9q6uma-\n         RFNhO1AoiJhYZj69hjmMRXx-x56HO9cnXNbmzNSCFCKnQmn4GQLmRj9s\n         fbZRqL94bbtE4_e0Zrpo8RNo8vxRLqQNwIy85fc6BRgBJomt8QdQvIgP\n         gWCv5HoQ\",\n     \"q\": \"zqOHk1P6WN_rHuM7ZF1cXH0x6RuOHq67WuHiSknqQeefGBA9PWs6Zy\n         KQCO-O6mKXtcgE8_Q_hA2kMRcKOcvHil1hqMCNSXlflM7WPRPZu2qCDc\n         qssd_uMbP-DqYthH_EzwL9KnYoH7JQFxxmcv5An8oXUtTwk4knKjkIYG\n         RuUwfQTus0w1NfjFAyxOOiAQ37ussIcE6C6ZSsM3n41UlbJ7TCqewzVJ\n         aPJN5cxjySPZPD3Vp01a9YgAD6a3IIaKJdIxJS1ImnfPevSJQBE79-EX\n         e2kSwVgOzvt-gsmM29QQ8veHy4uAqca5dZzMs7hkkHtw1z0jHV90epQJ\n         JlXXnH8Q\",\n     \"dp\": \"19oDkBh1AXelMIxQFm2zZTqUhAzCIr4xNIGEPNoDt1jK83_FJA-xn\n         x5kA7-1erdHdms_Ef67HsONNv5A60JaR7w8LHnDiBGnjdaUmmuO8XAxQ\n         J_ia5mxjxNjS6E2yD44USo2JmHvzeeNczq25elqbTPLhUpGo1IZuG72F\n         ZQ5gTjXoTXC2-xtCDEUZfaUNh4IeAipfLugbpe0JAFlFfrTDAMUFpC3i\n         XjxqzbEanflwPvj6V9iDSgjj8SozSM0dLtxvu0LIeIQAeEgT_yXcrKGm\n         pKdSO08kLBx8VUjkbv_3Pn20Gyu2YEuwpFlM_H1NikuxJNKFGmnAq9Lc\n         nwwT0jvoQ\",\n     \"dq\": \"S6p59KrlmzGzaQYQM3o0XfHCGvfqHLYjCO557HYQf72O9kLMCfd_1\n         VBEqeD-1jjwELKDjck8kOBl5UvohK1oDfSP1DleAy-cnmL29DqWmhgwM\n         1ip0CCNmkmsmDSlqkUXDi6sAaZuntyukyflI-qSQ3C_BafPyFaKrt1fg\n         dyEwYa08pESKwwWisy7KnmoUvaJ3SaHmohFS78TJ25cfc10wZ9hQNOrI\n         ChZlkiOdFCtxDqdmCqNacnhgE3bZQjGp3n83ODSz9zwJcSUvODlXBPc2\n         AycH6Ci5yjbxt4Ppox_5pjm6xnQkiPgj01GpsUssMmBN7iHVsrE7N2iz\n         nBNCeOUIQ\",\n     \"qi\": \"FZhClBMywVVjnuUud-05qd5CYU0dK79akAgy9oX6RX6I3IIIPckCc\n         iRrokxglZn-omAY5CnCe4KdrnjFOT5YUZE7G_Pg44XgCXaarLQf4hl80\n         oPEf6-jJ5Iy6wPRx7G2e8qLxnh9cOdf-kRqgOS3F48Ucvw3ma5V6KGMw\n         QqWFeV31XtZ8l5cVI-I3NzBS7qltpUVgz2Ju021eyc7IlqgzR98qKONl\n         27DuEES0aK0WE97jnsyO27Yp88Wa2RiBrEocM89QZI1seJiGDizHRUP4\n         UZxw9zsXww46wy0P6f9grnYp7t8LkyDDk8eoI4KX6SNMNVcyVS9IWjlq\n         8EzqZEKIA\"\n   }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 24,
      "text": "Figure 84: RSA 4096-Bit Key",
      "ja": "図84：RSA 4096ビットキー"
    },
    {
      "indent": 3,
      "text": "(NOTE: While the key includes the private parameters, only the public parameters \"e\" and \"n\" are necessary for the encryption operation.)",
      "ja": "（注：キーにはプライベートパラメータが含まれていますが、暗号化操作に必要なのはパブリックパラメータ「e」と「n」だけです。）"
    },
    {
      "indent": 0,
      "text": "5.2.2. Generated Factors",
      "section_title": true,
      "ja": "5.2.2. 生成された要因"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "ja": "暗号化する前に、次のものが生成されます。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 85.",
      "ja": "o コンテンツ暗号化キー（CEK）としてのAES対称キー。この例では、図85のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 86.",
      "ja": "o 初期化ベクトル;この例では、図86の初期化ベクトルを使用しています。"
    },
    {
      "indent": 3,
      "text": "mYMfsggkTAm0TbvtlFh2hyoXnbEzJQjMxmgLN3d8xXA",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "Figure 85: Content Encryption Key, base64url-encoded",
      "ja": "図85：コンテンツ暗号化キー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "-nBoKLH0YkLZPSI9",
      "ja": "-nBoKLH0YkLZPSI9"
    },
    {
      "indent": 12,
      "text": "Figure 86: Initialization Vector, base64url-encoded",
      "ja": "図86：初期化ベクトル、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.2.3. Encrypting the Key",
      "section_title": true,
      "ja": "5.2.3. Encrypting the Key"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 85) with the RSA key (Figure 84) produces the following Encrypted Key:",
      "ja": "RSAキー（図84）を使用してCEK（図85）でキー暗号化操作を実行すると、次の暗号化キーが生成されます。"
    },
    {
      "indent": 3,
      "text": "rT99rwrBTbTI7IJM8fU3Eli7226HEB7IchCxNuh7lCiud48LxeolRdtFF4nzQi beYOl5S_PJsAXZwSXtDePz9hk-BbtsTBqC2UsPOdwjC9NhNupNNu9uHIVftDyu cvI6hvALeZ6OGnhNV4v1zx2k7O1D89mAzfw-_kT3tkuorpDU-CpBENfIHX1Q58 -Aad3FzMuo3Fn9buEP2yXakLXYa15BUXQsupM4A1GD4_H4Bd7V3u9h8Gkg8Bpx KdUV9ScfJQTcYm6eJEBz3aSwIaK4T3-dwWpuBOhROQXBosJzS1asnuHtVMt2pK IIfux5BC6huIvmY7kzV7W7aIUrpYm_3H4zYvyMeq5pGqFmW2k8zpO878TRlZx7 pZfPYDSXZyS0CfKKkMozT_qiCwZTSz4duYnt8hS4Z9sGthXn9uDqd6wycMagnQ fOTs_lycTWmY-aqWVDKhjYNRf03NiwRtb5BE-tOdFwCASQj3uuAgPGrO2AWBe3 8UjQb0lvXn1SpyvYZ3WFc7WOJYaTa7A8DRn6MC6T-xDmMuxC0G7S2rscw5lQQU 06MvZTlFOt0UvfuKBa03cxA_nIBIhLMjY2kOTxQMmpDPTr6Cbo8aKaOnx6ASE5 Jx9paBpnNmOOKH35j_QlrQhDWUN6A2Gg8iFayJ69xDEdHAVCGRzN3woEI2ozDR s",
      "ja": "rT99rwrBTbTI7IJM8fU3Eli7226HEB7IchCxNuh7lCiud48LxeolRdtFF4nzQi beYOl5S_PJsAXZwSXtDePz9hk-BbtsTBqC2UsPOdwjC9NhNupNNu9uHIVftDyu cvI6hvALeZ6OGnhNV4v1zx2k7O1D89mAzfw-_kT3tkuorpDU-CpBENfIHX1Q58 -Aad3FzMuo3Fn9buEP2yXakLXYa15BUXQsupM4A1GD4_H4Bd7V3u9h8Gkg8Bpx KdUV9ScfJQTcYm6eJEBz3aSwIaK4T3-dwWpuBOhROQXBosJzS1asnuHtVMt2pK IIfux5BC6huIvmY7kzV7W7aIUrpYm_3H4zYvyMeq5pGqFmW2k8zpO878TRlZx7 pZfPYDSXZyS0CfKKkMozT_qiCwZTSz4duYnt8hS4Z9sGthXn9uDqd6wycMagnQ fOTs_lycTWmY-aqWVDKhjYNRf03NiwRtb5BE-tOdFwCASQj3uuAgPGrO2AWBe3 8UjQb0lvXn1SpyvYZ3WFc7WOJYaTa7A8DRn6MC6T-xDmMuxC0G7S2rscw5lQQU 06MvZTlFOt0UvfuKBa03cxA_nIBIhLMjY2kOTxQMmpDPTr6Cbo8aKaOnx6ASE5 Jx9paBpnNmOOKH35j_QlrQhDWUN6A2Gg8iFayJ69xDEdHAVCGRzN3woEI2ozDR秒"
    },
    {
      "indent": 16,
      "text": "Figure 87: Encrypted Key, base64url-encoded",
      "ja": "図87：暗号化されたキー、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.2.4. Encrypting the Content",
      "section_title": true,
      "ja": "5.2.4. コンテンツの暗号化"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the Plaintext:",
      "ja": "平文を暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 88, encoded using base64url [RFC4648] to produce Figure 89.",
      "ja": "o JWE保護ヘッダー。この例では、base88url [RFC4648]を使用してエンコードされた図88のヘッダーを使用して、図89を生成します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"RSA-OAEP\",\n  \"kid\": \"samwise.gamgee@hobbiton.example\",\n  \"enc\": \"A256GCM\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 88: JWE Protected Header JSON",
      "ja": "図88：JWE保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSU0EtT0FFUCIsImtpZCI6InNhbXdpc2UuZ2FtZ2VlQGhvYmJpdG\n9uLmV4YW1wbGUiLCJlbmMiOiJBMjU2R0NNIn0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 89: JWE Protected Header, base64url-encoded",
      "ja": "図89：JWE保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext (Figure 72) with the following:",
      "ja": "以下を使用して、平文（図72）でコンテンツ暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 85);",
      "ja": "o チェック（図85）;"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 86); and",
      "ja": "o 初期化ベクトル（図86）;そして"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 89) as authenticated data",
      "ja": "o 認証済みデータとしてのJWE保護ヘッダー（図89）"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 90.",
      "ja": "o 図90の暗号文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 91.",
      "ja": "o 図91の認証タグ。"
    },
    {
      "indent": 3,
      "text": "o4k2cnGN8rSSw3IDo1YuySkqeS_t2m1GXklSgqBdpACm6UJuJowOHC5ytjqYgR\nL-I-soPlwqMUf4UgRWWeaOGNw6vGW-xyM01lTYxrXfVzIIaRdhYtEMRBvBWbEw\nP7ua1DRfvaOjgZv6Ifa3brcAM64d8p5lhhNcizPersuhw5f-pGYzseva-TUaL8\niWnctc-sSwy7SQmRkfhDjwbz0fz6kFovEgj64X1I5s7E6GLp5fnbYGLa1QUiML\n7Cc2GxgvI7zqWo0YIEc7aCflLG1-8BboVWFdZKLK9vNoycrYHumwzKluLWEbSV\nmaPpOslY2n525DxDfWaVFUfKQxMF56vn4B9QMpWAbnypNimbM8zVOw",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 90: Ciphertext, base64url-encoded",
      "ja": "図90：base64urlエンコードされた暗号文"
    },
    {
      "indent": 3,
      "text": "UCGiqJxhBI3IFVdPalHHvA",
      "ja": "UCGiqJxhBI3IFVdPalHHvA"
    },
    {
      "indent": 13,
      "text": "Figure 91: Authentication Tag, base64url-encoded",
      "ja": "図91：認証タグ、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.2.5. Output Results",
      "section_title": true,
      "ja": "5.2.5. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "ja": "以下は、結果のJWEオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 89)",
      "ja": "o JWE保護ヘッダー（図89）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 87)",
      "ja": "o 暗号化されたキー（図87）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 86)",
      "ja": "o 初期化ベクトル（図86）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 90)",
      "ja": "o 暗号文（図90）"
    },
    {
      "indent": 0,
      "text": " o Authentication Tag (Figure 91) The resulting JWE object using the JWE Compact Serialization:",
      "ja": "o認証タグ（図91）JWE Compact Serializationを使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSU0EtT0FFUCIsImtpZCI6InNhbXdpc2UuZ2FtZ2VlQGhvYmJpdG 9uLmV4YW1wbGUiLCJlbmMiOiJBMjU2R0NNIn0 . rT99rwrBTbTI7IJM8fU3Eli7226HEB7IchCxNuh7lCiud48LxeolRdtFF4nzQi beYOl5S_PJsAXZwSXtDePz9hk-BbtsTBqC2UsPOdwjC9NhNupNNu9uHIVftDyu cvI6hvALeZ6OGnhNV4v1zx2k7O1D89mAzfw-_kT3tkuorpDU-CpBENfIHX1Q58 -Aad3FzMuo3Fn9buEP2yXakLXYa15BUXQsupM4A1GD4_H4Bd7V3u9h8Gkg8Bpx KdUV9ScfJQTcYm6eJEBz3aSwIaK4T3-dwWpuBOhROQXBosJzS1asnuHtVMt2pK IIfux5BC6huIvmY7kzV7W7aIUrpYm_3H4zYvyMeq5pGqFmW2k8zpO878TRlZx7 pZfPYDSXZyS0CfKKkMozT_qiCwZTSz4duYnt8hS4Z9sGthXn9uDqd6wycMagnQ fOTs_lycTWmY-aqWVDKhjYNRf03NiwRtb5BE-tOdFwCASQj3uuAgPGrO2AWBe3 8UjQb0lvXn1SpyvYZ3WFc7WOJYaTa7A8DRn6MC6T-xDmMuxC0G7S2rscw5lQQU 06MvZTlFOt0UvfuKBa03cxA_nIBIhLMjY2kOTxQMmpDPTr6Cbo8aKaOnx6ASE5 Jx9paBpnNmOOKH35j_QlrQhDWUN6A2Gg8iFayJ69xDEdHAVCGRzN3woEI2ozDR s . -nBoKLH0YkLZPSI9 . o4k2cnGN8rSSw3IDo1YuySkqeS_t2m1GXklSgqBdpACm6UJuJowOHC5ytjqYgR L-I-soPlwqMUf4UgRWWeaOGNw6vGW-xyM01lTYxrXfVzIIaRdhYtEMRBvBWbEw P7ua1DRfvaOjgZv6Ifa3brcAM64d8p5lhhNcizPersuhw5f-pGYzseva-TUaL8 iWnctc-sSwy7SQmRkfhDjwbz0fz6kFovEgj64X1I5s7E6GLp5fnbYGLa1QUiML 7Cc2GxgvI7zqWo0YIEc7aCflLG1-8BboVWFdZKLK9vNoycrYHumwzKluLWEbSV maPpOslY2n525DxDfWaVFUfKQxMF56vn4B9QMpWAbnypNimbM8zVOw . UCGiqJxhBI3IFVdPalHHvA",
      "ja": "eyJhbGciOiJSU0EtT0FFUCIsImtpZCI6InNhbXdpc2UuZ2FtZ2VlQGhvYmJpdG 9uLmV4YW1wbGUiLCJlbmMiOiJBMjU2R0NNIn0。 rT99rwrBTbTI7IJM8fU3Eli7226HEB7IchCxNuh7lCiud48LxeolRdtFF4nzQi beYOl5S_PJsAXZwSXtDePz9hk-BbtsTBqC2UsPOdwjC9NhNupNNu9uHIVftDyu cvI6hvALeZ6OGnhNV4v1zx2k7O1D89mAzfw-_kT3tkuorpDU-CpBENfIHX1Q58 -Aad3FzMuo3Fn9buEP2yXakLXYa15BUXQsupM4A1GD4_H4Bd7V3u9h8Gkg8Bpx KdUV9ScfJQTcYm6eJEBz3aSwIaK4T3-dwWpuBOhROQXBosJzS1asnuHtVMt2pK IIfux5BC6huIvmY7kzV7W7aIUrpYm_3H4zYvyMeq5pGqFmW2k8zpO878TRlZx7 pZfPYDSXZyS0CfKKkMozT_qiCwZTSz4duYnt8hS4Z9sGthXn9uDqd6wycMagnQ fOTs_lycTWmY-aqWVDKhjYNRf03NiwRtb5BE-tOdFwCASQj3uuAgPGrO2AWBe3 8UjQb0lvXn1SpyvYZ3WFc7WOJYaTa7A8DRn6MC6T-xDmMuxC0G7S2rscw5lQQU 06MvZTlFOt0UvfuKBa03cxA_nIBIhLMjY2kOTxQMmpDPTr6Cbo8aKaOnx6ASE5 Jx9paBpnNmOOKH35j_QlrQhDWUN6A2Gg8iFayJ69xDEdHAVCGRzN3woEI2ozDR pを。 -nBoKLH0YkLZPSI9。 o4k2cnGN8rSSw3IDo1YuySkqeS_t2m1GXklSgqBdpACm6UJuJowOHC5ytjqYgR L-I-soPlwqMUf4UgRWWeaOGNw6vGW xyM01lTYxrXfVzIIaRdhYtEMRBvBWbEw P7ua1DRfvaOjgZv6Ifa3brcAM64d8p5lhhNcizPersuhw5f-pGYzseva-TUaL8 iWnctc-sSwy7SQmRkfhDjwbz0fz6kFovEgj64X1I5s7E6GLp5fnbYGLa1QUiML 7Cc2GxgvI7zqWo0YIEc7aCflLG1-8BboVWFdZKLK9vNoycrYHumwzKluLWEbSV maPpOslY2n525DxDfWaVFUfKQxMF56vn4B9QMpWAbnypNimbM8zVOw。 UCGiqJxhBI3IFVdPalHHvA"
    },
    {
      "indent": 19,
      "text": "Figure 92: JWE Compact Serialization",
      "ja": "図92：JWEコンパクトシリアライゼーション"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "ja": "一般的なJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"rT99rwrBTbTI7IJM8fU3Eli7226HEB7IchCxNu\n          h7lCiud48LxeolRdtFF4nzQibeYOl5S_PJsAXZwSXtDePz9hk-Bb\n          tsTBqC2UsPOdwjC9NhNupNNu9uHIVftDyucvI6hvALeZ6OGnhNV4\n          v1zx2k7O1D89mAzfw-_kT3tkuorpDU-CpBENfIHX1Q58-Aad3FzM\n          uo3Fn9buEP2yXakLXYa15BUXQsupM4A1GD4_H4Bd7V3u9h8Gkg8B\n          pxKdUV9ScfJQTcYm6eJEBz3aSwIaK4T3-dwWpuBOhROQXBosJzS1\n          asnuHtVMt2pKIIfux5BC6huIvmY7kzV7W7aIUrpYm_3H4zYvyMeq\n          5pGqFmW2k8zpO878TRlZx7pZfPYDSXZyS0CfKKkMozT_qiCwZTSz\n          4duYnt8hS4Z9sGthXn9uDqd6wycMagnQfOTs_lycTWmY-aqWVDKh\n          jYNRf03NiwRtb5BE-tOdFwCASQj3uuAgPGrO2AWBe38UjQb0lvXn\n          1SpyvYZ3WFc7WOJYaTa7A8DRn6MC6T-xDmMuxC0G7S2rscw5lQQU\n          06MvZTlFOt0UvfuKBa03cxA_nIBIhLMjY2kOTxQMmpDPTr6Cbo8a\n          KaOnx6ASE5Jx9paBpnNmOOKH35j_QlrQhDWUN6A2Gg8iFayJ69xD\n          EdHAVCGRzN3woEI2ozDRs\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJSU0EtT0FFUCIsImtpZCI6InNhbXdpc2UuZ2\n      FtZ2VlQGhvYmJpdG9uLmV4YW1wbGUiLCJlbmMiOiJBMjU2R0NNIn0\",\n  \"iv\": \"-nBoKLH0YkLZPSI9\",\n  \"ciphertext\": \"o4k2cnGN8rSSw3IDo1YuySkqeS_t2m1GXklSgqBdpACm6\n      UJuJowOHC5ytjqYgRL-I-soPlwqMUf4UgRWWeaOGNw6vGW-xyM01lTYx\n      rXfVzIIaRdhYtEMRBvBWbEwP7ua1DRfvaOjgZv6Ifa3brcAM64d8p5lh\n      hNcizPersuhw5f-pGYzseva-TUaL8iWnctc-sSwy7SQmRkfhDjwbz0fz\n      6kFovEgj64X1I5s7E6GLp5fnbYGLa1QUiML7Cc2GxgvI7zqWo0YIEc7a\n      CflLG1-8BboVWFdZKLK9vNoycrYHumwzKluLWEbSVmaPpOslY2n525Dx\n      DfWaVFUfKQxMF56vn4B9QMpWAbnypNimbM8zVOw\",\n  \"tag\": \"UCGiqJxhBI3IFVdPalHHvA\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 93: General JWE JSON Serialization",
      "ja": "Figure 93: General JWE JSON Serialization"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "ja": "平坦化されたJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJSU0EtT0FFUCIsImtpZCI6InNhbXdpc2UuZ2\n      FtZ2VlQGhvYmJpdG9uLmV4YW1wbGUiLCJlbmMiOiJBMjU2R0NNIn0\",\n  \"encrypted_key\": \"rT99rwrBTbTI7IJM8fU3Eli7226HEB7IchCxNuh7lC\n      iud48LxeolRdtFF4nzQibeYOl5S_PJsAXZwSXtDePz9hk-BbtsTBqC2U\n      sPOdwjC9NhNupNNu9uHIVftDyucvI6hvALeZ6OGnhNV4v1zx2k7O1D89\n      mAzfw-_kT3tkuorpDU-CpBENfIHX1Q58-Aad3FzMuo3Fn9buEP2yXakL\n      XYa15BUXQsupM4A1GD4_H4Bd7V3u9h8Gkg8BpxKdUV9ScfJQTcYm6eJE\n      Bz3aSwIaK4T3-dwWpuBOhROQXBosJzS1asnuHtVMt2pKIIfux5BC6huI\n      vmY7kzV7W7aIUrpYm_3H4zYvyMeq5pGqFmW2k8zpO878TRlZx7pZfPYD\n      SXZyS0CfKKkMozT_qiCwZTSz4duYnt8hS4Z9sGthXn9uDqd6wycMagnQ\n      fOTs_lycTWmY-aqWVDKhjYNRf03NiwRtb5BE-tOdFwCASQj3uuAgPGrO\n      2AWBe38UjQb0lvXn1SpyvYZ3WFc7WOJYaTa7A8DRn6MC6T-xDmMuxC0G\n      7S2rscw5lQQU06MvZTlFOt0UvfuKBa03cxA_nIBIhLMjY2kOTxQMmpDP\n      Tr6Cbo8aKaOnx6ASE5Jx9paBpnNmOOKH35j_QlrQhDWUN6A2Gg8iFayJ\n      69xDEdHAVCGRzN3woEI2ozDRs\",\n  \"iv\": \"-nBoKLH0YkLZPSI9\",\n  \"ciphertext\": \"o4k2cnGN8rSSw3IDo1YuySkqeS_t2m1GXklSgqBdpACm6\n      UJuJowOHC5ytjqYgRL-I-soPlwqMUf4UgRWWeaOGNw6vGW-xyM01lTYx\n      rXfVzIIaRdhYtEMRBvBWbEwP7ua1DRfvaOjgZv6Ifa3brcAM64d8p5lh\n      hNcizPersuhw5f-pGYzseva-TUaL8iWnctc-sSwy7SQmRkfhDjwbz0fz\n      6kFovEgj64X1I5s7E6GLp5fnbYGLa1QUiML7Cc2GxgvI7zqWo0YIEc7a\n      CflLG1-8BboVWFdZKLK9vNoycrYHumwzKluLWEbSVmaPpOslY2n525Dx\n      DfWaVFUfKQxMF56vn4B9QMpWAbnypNimbM8zVOw\",\n  \"tag\": \"UCGiqJxhBI3IFVdPalHHvA\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 94: Flattened JWE JSON Serialization",
      "ja": "図94：フラット化されたJWE JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "5.3. Key Wrap Using PBES2-AES-KeyWrap with AES-CBC-HMAC-SHA2",
      "section_title": true,
      "ja": "5.3. PBES2-AES-KeyWrapとAES-CBC-HMAC-SHA2を使用したキーラップ"
    },
    {
      "indent": 3,
      "text": "The example illustrates encrypting content using the \"PBES2-HS512+A256KW\" (PBES2 Password-based Encryption using HMAC-SHA-512 and AES-256-KeyWrap) key encryption algorithm with the \"A128CBC-HS256\" (AES-128-CBC-HMAC-SHA-256) content encryption algorithm.",
      "ja": "この例は、「PBES2-HS512 + A256KW」（HMAC-SHA-512およびAES-256-KeyWrapを使用したPBES2パスワードベースの暗号化）を使用したコンテンツの暗号化と、「A128CBC-HS256」（AES-128-CBC- HMAC-SHA-256）コンテンツ暗号化アルゴリズム。"
    },
    {
      "indent": 3,
      "text": "A common use of password-based encryption is the import/export of keys. Therefore, this example uses a JWK Set for the Plaintext content instead of the Plaintext from Figure 72.",
      "ja": "パスワードベースの暗号化の一般的な用途は、鍵のインポート/エクスポートです。したがって、この例では、図72の平文ではなく、平文コンテンツにJWKセットを使用します。"
    },
    {
      "indent": 3,
      "text": "Note that if password-based encryption is used for multiple recipients, it is expected that each recipient use different values for the PBES2 parameters \"p2s\" and \"p2c\".",
      "ja": "複数の受信者にパスワードベースの暗号化が使用されている場合、各受信者がPBES2パラメータ「p2s」と「p2c」に異なる値を使用することが予想されることに注意してください。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.3.1. Input Factors",
      "section_title": true,
      "ja": "5.3.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "ja": "The following are supplied before beginning the encryption process:"
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the Plaintext from Figure 95 (NOTE: All whitespace was added for readability).",
      "ja": "o 平文コンテンツ;この例では、図95のプレーンテキストを使用しています（注：読みやすいようにすべての空白が追加されています）。"
    },
    {
      "indent": 3,
      "text": "o Password; this example uses the password from Figure 96 -- with the sequence \"\\xe2\\x80\\x93\" replaced with (U+2013 EN DASH).",
      "ja": "o パスワード;この例では、図96のパスワードを使用します。シーケンス「\\ xe2 \\ x80 \\ x93」を（U + 2013 EN DASH）に置き換えます。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"PBES2-HS512+A256KW\".",
      "ja": "o \"alg\" parameter of \"PBES2-HS512+A256KW\"."
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128CBC-HS256\".",
      "ja": "o 「A128CBC-HS256」の「enc」パラメータ。"
    },
    {
      "indent": 3,
      "text": "{\n  \"keys\": [\n    {\n      \"kty\": \"oct\",\n      \"kid\": \"77c7e2b8-6e13-45cf-8672-617b5b45243a\",\n      \"use\": \"enc\",\n      \"alg\": \"A128GCM\",\n      \"k\": \"XctOhJAkA-pD9Lh7ZgW_2A\"\n    },\n    {\n      \"kty\": \"oct\",\n      \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n      \"use\": \"enc\",\n      \"alg\": \"A128KW\",\n      \"k\": \"GZy6sIZ6wl9NJOKB-jnmVQ\"\n    },\n    {\n      \"kty\": \"oct\",\n      \"kid\": \"18ec08e1-bfa9-4d95-b205-2b4dd1d4321d\",\n      \"use\": \"enc\",\n      \"alg\": \"A256GCMKW\",\n      \"k\": \"qC57l_uxcm7Nm3K-ct4GFjx8tM1U8CZ0NLBvdQstiS8\"\n    }\n  ]\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 95: Plaintext Content",
      "ja": "図95：平文コンテンツ"
    },
    {
      "indent": 3,
      "text": "entrap_o\\xe2\\x80\\x93peter_long\\xe2\\x80\\x93credit_tun",
      "ja": "entrap_o \\ xe2 \\ x80 \\ x93peter_long \\ xe2 \\ x80 \\ x93credit_tun"
    },
    {
      "indent": 28,
      "text": "Figure 96: Password",
      "ja": "図96：パスワード"
    },
    {
      "indent": 0,
      "text": "5.3.2. Generated Factors",
      "section_title": true,
      "ja": "5.3.2. 生成された要因"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "ja": "暗号化する前に、次のものが生成されます。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 97.",
      "ja": "o コンテンツ暗号化キー（CEK）としてのAES対称キー。この例では、図97のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 98.",
      "ja": "o 初期化ベクトル;この例では、図98の初期化ベクトルを使用しています。"
    },
    {
      "indent": 3,
      "text": "uwsjJXaBK407Qaf0_zpcpmr1Cs0CC50hIUEyGNEt3m0",
      "ja": "uwsjJXaBK407Qaf0_zpcpmr1Cs0CC50hIUEyGNEt3m0"
    },
    {
      "indent": 11,
      "text": "Figure 97: Content Encryption Key, base64url-encoded",
      "ja": "図97：base64urlエンコードされたコンテンツ暗号化キー"
    },
    {
      "indent": 3,
      "text": "VBiCzVHNoLiR3F4V82uoTQ",
      "ja": "Вбизвхнолир3ф4в82уот"
    },
    {
      "indent": 12,
      "text": "Figure 98: Initialization Vector, base64url-encoded",
      "ja": "図98：base64urlエンコードされた初期化ベクトル"
    },
    {
      "indent": 0,
      "text": "5.3.3. Encrypting the Key",
      "section_title": true,
      "ja": "5.3.3. キーの暗号化"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting the CEK:",
      "ja": "CEKを暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o Salt input; this example uses the salt input from Figure 99.",
      "ja": "o 塩入力;この例では、図99のソルト入力を使用しています。"
    },
    {
      "indent": 3,
      "text": "o Iteration count; this example uses the iteration count 8192.",
      "ja": "o 反復回数;この例では、反復回数8192を使用しています。"
    },
    {
      "indent": 3,
      "text": "8Q1SzinasR3xchYz6ZZcHA",
      "ja": "8ページ1セナ"
    },
    {
      "indent": 17,
      "text": "Figure 99: Salt Input, base64url-encoded",
      "ja": "図99：base64urlエンコードされたソルト入力"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 97) with the following:",
      "ja": "以下を使用して、CEK（図97）で鍵暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o Password (Figure 96);",
      "ja": "o パスワード（図96）;"
    },
    {
      "indent": 3,
      "text": "o Salt input (Figure 99), encoded as an octet string; and",
      "ja": "o オクテット文字列としてエンコードされたソルト入力（図99）。そして"
    },
    {
      "indent": 3,
      "text": "o Iteration count (8192)",
      "ja": "o 反復回数（8192）"
    },
    {
      "indent": 3,
      "text": "produces the following Encrypted Key:",
      "ja": "次の暗号化キーを生成します。"
    },
    {
      "indent": 3,
      "text": "d3qNhUWfqheyPp4H8sjOWsDYajoej4c5Je6rlUtFPWdgtURtmeDV1g",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 100: Encrypted Key, base64url-encoded",
      "ja": "Figure 100: Encrypted Key, base64url-encoded"
    },
    {
      "indent": 0,
      "text": "5.3.4. Encrypting the Content",
      "section_title": true,
      "ja": "5.3.4. コンテンツの暗号化"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "ja": "コンテンツを暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 101, encoded using base64url [RFC4648] to produce Figure 102.",
      "ja": "o JWE保護ヘッダー。この例では、base64url [RFC4648]を使用してエンコードされた図101のヘッダーを使用して、図102を生成します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"PBES2-HS512+A256KW\",\n  \"p2s\": \"8Q1SzinasR3xchYz6ZZcHA\",\n  \"p2c\": 8192,\n  \"cty\": \"jwk-set+json\",\n  \"enc\": \"A128CBC-HS256\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 101: JWE Protected Header JSON",
      "ja": "図101：JWE保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJQQkVTMi1IUzUxMitBMjU2S1ciLCJwMnMiOiI4UTFTemluYXNSM3 hjaFl6NlpaY0hBIiwicDJjIjo4MTkyLCJjdHkiOiJqd2stc2V0K2pzb24iLCJl bmMiOiJBMTI4Q0JDLUhTMjU2In0",
      "ja": "eyJhbGciOiJQQkVTMi1IUzUxMitBMjU2S1ciLCJwMnMiOiI4UTFTemluYXNSM3 hjaFl6NlpaY0hBIiwicDJjIjo4MTkyLCJjdHkiOiJqd2stc2V0K2PJMJJLJBLJJLJBLUJJLJBLUJJLLU"
    },
    {
      "indent": 12,
      "text": "Figure 102: JWE Protected Header, base64url-encoded",
      "ja": "Figure 102: JWE Protected Header, base64url-encoded"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext (Figure 95) with the following:",
      "ja": "以下を使用して、平文（図95）でコンテンツ暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 97);",
      "ja": "o チェック（図97）;"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 98); and",
      "ja": "o 初期化ベクトル（図98）;そして"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 102) as authenticated data",
      "ja": "o 認証済みデータとしてのJWE保護ヘッダー（図102）"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 103.",
      "ja": "o 図103の暗号文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 104.",
      "ja": "o 図104の認証タグ。"
    },
    {
      "indent": 3,
      "text": "23i-Tb1AV4n0WKVSSgcQrdg6GRqsUKxjruHXYsTHAJLZ2nsnGIX86vMXqIi6IR sfywCRFzLxEcZBRnTvG3nhzPk0GDD7FMyXhUHpDjEYCNA_XOmzg8yZR9oyjo6l TF6si4q9FZ2EhzgFQCLO_6h5EVg3vR75_hkBsnuoqoM3dwejXBtIodN84PeqMb 6asmas_dpSsz7H10fC5ni9xIz424givB1YLldF6exVmL93R3fOoOJbmk2GBQZL _SEGllv2cQsBgeprARsaQ7Bq99tT80coH8ItBjgV08AtzXFFsx9qKvC982KLKd PQMTlVJKkqtV4Ru5LEVpBZXBnZrtViSOgyg6AiuwaS-rCrcD_ePOGSuxvgtrok AKYPqmXUeRdjFJwafkYEkiuDCV9vWGAi1DH2xTafhJwcmywIyzi4BqRpmdn_N-zl5tuJYyuvKhjKv6ihbsV_k1hJGPGAxJ6wUpmwC4PTQ2izEm0TuSE8oMKdTw8V 3kobXZ77ulMwDs4p",
      "ja": "23i-Tb1AV4n0WKVSSgcQrdg6GRqsUKxjruHXYsTHAJLZ2nsnGIX86vMXqIi6IR sfywCRFzLxEcZBRnTvG3nhzPk0GDD7FMyXhUHpDjEYCNA_XOmzg8yZR9oyjo6l TF6si4q9FZ2EhzgFQCLO_6h5EVg3vR75_hkBsnuoqoM3dwejXBtIodN84PeqMb 6asmas_dpSsz7H10fC5ni9xIz424givB1YLldF6exVmL93R3fOoOJbmk2GBQZL _SEGllv2cQsBgeprARsaQ7Bq99tT80coH8ItBjgV08AtzXFFsx9qKvC982KLKd PQMTlVJKkqtV4Ru5LEVpBZXBnZrtViSOgyg6AiuwaS-rCrcD_ePOGSuxvgtrok AKYPqmXUeRdjFJwafkYEkiuDCV9vWGAi1DH2xTafhJwcmywIyzi4BqRpmdn_N-zl5tuJYyuvKhjKv6ihbsV_k1hJGPGAxJ6wUpmwC4PTQ2izEm0TuSE8oMKdTw8V 3kobXZ77ulMwDs4p"
    },
    {
      "indent": 17,
      "text": "Figure 103: Ciphertext, base64url-encoded",
      "ja": "図103：base64urlエンコードされた暗号文"
    },
    {
      "indent": 3,
      "text": "0HlwodAhOCILG5SQ2LQ9dg",
      "ja": "0HlwodAhOCILG5SQ2LQ9dg"
    },
    {
      "indent": 13,
      "text": "Figure 104: Authentication Tag, base64url-encoded",
      "ja": "図104：認証タグ、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.3.5. Output Results",
      "section_title": true,
      "ja": "5.3.5. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "ja": "以下は、結果のJWEオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 102)",
      "ja": "o JWE保護ヘッダー（図102）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 100)",
      "ja": "o 暗号化キー（図100）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 98)",
      "ja": "o 初期化ベクトル（図98）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 103)",
      "ja": "o 暗号文（図103）"
    },
    {
      "indent": 0,
      "text": " o Authentication Tag (Figure 104) The resulting JWE object using the JWE Compact Serialization:",
      "ja": "o認証タグ（図104）JWE Compact Serializationを使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJQQkVTMi1IUzUxMitBMjU2S1ciLCJwMnMiOiI4UTFTemluYXNSM3 hjaFl6NlpaY0hBIiwicDJjIjo4MTkyLCJjdHkiOiJqd2stc2V0K2pzb24iLCJl bmMiOiJBMTI4Q0JDLUhTMjU2In0 . d3qNhUWfqheyPp4H8sjOWsDYajoej4c5Je6rlUtFPWdgtURtmeDV1g . VBiCzVHNoLiR3F4V82uoTQ . 23i-Tb1AV4n0WKVSSgcQrdg6GRqsUKxjruHXYsTHAJLZ2nsnGIX86vMXqIi6IR sfywCRFzLxEcZBRnTvG3nhzPk0GDD7FMyXhUHpDjEYCNA_XOmzg8yZR9oyjo6l TF6si4q9FZ2EhzgFQCLO_6h5EVg3vR75_hkBsnuoqoM3dwejXBtIodN84PeqMb 6asmas_dpSsz7H10fC5ni9xIz424givB1YLldF6exVmL93R3fOoOJbmk2GBQZL _SEGllv2cQsBgeprARsaQ7Bq99tT80coH8ItBjgV08AtzXFFsx9qKvC982KLKd PQMTlVJKkqtV4Ru5LEVpBZXBnZrtViSOgyg6AiuwaS-rCrcD_ePOGSuxvgtrok AKYPqmXUeRdjFJwafkYEkiuDCV9vWGAi1DH2xTafhJwcmywIyzi4BqRpmdn_N-zl5tuJYyuvKhjKv6ihbsV_k1hJGPGAxJ6wUpmwC4PTQ2izEm0TuSE8oMKdTw8V 3kobXZ77ulMwDs4p . 0HlwodAhOCILG5SQ2LQ9dg",
      "ja": "eyJhbGciOiJQQkVTMi1IUzUxMitBMjU2S1ciLCJwMnMiOiI4UTFTemluYXNSM3 hjaFl6NlpaY0hBIiwicDJjIjo4MTkyLCJjdHkiOiJqd2stc2V0K2pzb24iLCJl bmMiOiJBMTI4Q0JDLUhTMjU2In0 . d3qNhUWfqheyPp4H8sjOWsDYajoej4c5Je6rlUtFPWdgtURtmeDV1g . VBiCzVHNoLiR3F4V82uoTQ . 23i-Tb1AV4n0WKVSSgcQrdg6GRqsUKxjruHXYsTHAJLZ2nsnGIX86vMXqIi6IR sfywCRFzLxEcZBRnTvG3nhzPk0GDD7FMyXhUHpDjEYCNA_XOmzg8yZR9oyjo6l TF6si4q9FZ2EhzgFQCLO_6h5EVg3vR75_hkBsnuoqoM3dwejXBtIodN84PeqMb 6asmas_dpSsz7H10fC5ni9xIz424givB1YLldF6exVmL93R3fOoOJbmk2GBQZL _SEGllv2cQsBgeprARsaQ7Bq99tT80coH8ItBjgV08AtzXFFsx9qKvC982KLKd PQMTlVJKkqtV4Ru5LEVpBZXBnZrtViSOgyg6AiuwaS-rCrcD_ePOGSuxvgtrok AKYPqmXUeRdjFJwafkYEkiuDCV9vWGAi1DH2xTafhJwcmywIyzi4BqRpmdn_N-zl5tuJYyuvKhjKv6ihbsV_k1hJGPGAxJ6wUpmwC4PTQ2izEm0TuSE8oMKdTw8V 3kobXZ77ulMwDs4p . 0HlwodAhOCILG5SQ2LQ9dg"
    },
    {
      "indent": 19,
      "text": "Figure 105: JWE Compact Serialization",
      "ja": "図105：JWEコンパクトシリアライゼーション"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "ja": "一般的なJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"d3qNhUWfqheyPp4H8sjOWsDYajoej4c5Je6rlU\n          tFPWdgtURtmeDV1g\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJQQkVTMi1IUzUxMitBMjU2S1ciLCJwMnMiOi\n      I4UTFTemluYXNSM3hjaFl6NlpaY0hBIiwicDJjIjo4MTkyLCJjdHkiOi\n      Jqd2stc2V0K2pzb24iLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0\",\n  \"iv\": \"VBiCzVHNoLiR3F4V82uoTQ\",\n  \"ciphertext\": \"23i-Tb1AV4n0WKVSSgcQrdg6GRqsUKxjruHXYsTHAJLZ2\n      nsnGIX86vMXqIi6IRsfywCRFzLxEcZBRnTvG3nhzPk0GDD7FMyXhUHpD\n      jEYCNA_XOmzg8yZR9oyjo6lTF6si4q9FZ2EhzgFQCLO_6h5EVg3vR75_\n      hkBsnuoqoM3dwejXBtIodN84PeqMb6asmas_dpSsz7H10fC5ni9xIz42\n      4givB1YLldF6exVmL93R3fOoOJbmk2GBQZL_SEGllv2cQsBgeprARsaQ\n      7Bq99tT80coH8ItBjgV08AtzXFFsx9qKvC982KLKdPQMTlVJKkqtV4Ru\n      5LEVpBZXBnZrtViSOgyg6AiuwaS-rCrcD_ePOGSuxvgtrokAKYPqmXUe\n      RdjFJwafkYEkiuDCV9vWGAi1DH2xTafhJwcmywIyzi4BqRpmdn_N-zl5\n      tuJYyuvKhjKv6ihbsV_k1hJGPGAxJ6wUpmwC4PTQ2izEm0TuSE8oMKdT\n      w8V3kobXZ77ulMwDs4p\",\n  \"tag\": \"0HlwodAhOCILG5SQ2LQ9dg\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 106: General JWE JSON Serialization",
      "ja": "図106：一般的なJWE JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "ja": "平坦化されたJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJQQkVTMi1IUzUxMitBMjU2S1ciLCJwMnMiOi\n      I4UTFTemluYXNSM3hjaFl6NlpaY0hBIiwicDJjIjo4MTkyLCJjdHkiOi\n      Jqd2stc2V0K2pzb24iLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0\",\n  \"encrypted_key\": \"d3qNhUWfqheyPp4H8sjOWsDYajoej4c5Je6rlUtFPW\n      dgtURtmeDV1g\",\n  \"iv\": \"VBiCzVHNoLiR3F4V82uoTQ\",\n  \"ciphertext\": \"23i-Tb1AV4n0WKVSSgcQrdg6GRqsUKxjruHXYsTHAJLZ2\n      nsnGIX86vMXqIi6IRsfywCRFzLxEcZBRnTvG3nhzPk0GDD7FMyXhUHpD\n      jEYCNA_XOmzg8yZR9oyjo6lTF6si4q9FZ2EhzgFQCLO_6h5EVg3vR75_\n      hkBsnuoqoM3dwejXBtIodN84PeqMb6asmas_dpSsz7H10fC5ni9xIz42\n      4givB1YLldF6exVmL93R3fOoOJbmk2GBQZL_SEGllv2cQsBgeprARsaQ\n      7Bq99tT80coH8ItBjgV08AtzXFFsx9qKvC982KLKdPQMTlVJKkqtV4Ru\n      5LEVpBZXBnZrtViSOgyg6AiuwaS-rCrcD_ePOGSuxvgtrokAKYPqmXUe\n      RdjFJwafkYEkiuDCV9vWGAi1DH2xTafhJwcmywIyzi4BqRpmdn_N-zl5\n      tuJYyuvKhjKv6ihbsV_k1hJGPGAxJ6wUpmwC4PTQ2izEm0TuSE8oMKdT\n      w8V3kobXZ77ulMwDs4p\",\n  \"tag\": \"0HlwodAhOCILG5SQ2LQ9dg\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 107: Flattened JWE JSON Serialization",
      "ja": "図107：フラット化されたJWE JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "5.4. Key Agreement with Key Wrapping Using ECDH-ES and AES-KeyWrap with AES-GCM",
      "ja": "5.4. ECES-ESおよびAES-GCMでのAES-KeyWrapを使用した鍵ラッピングとの鍵合意"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content using the \"ECDH-ES+A128KW\" (Elliptic Curve Diffie-Hellman Ephemeral-Static with AES-128-KeyWrap) key encryption algorithm and the \"A128GCM\" (AES-GCM) content encryption algorithm.",
      "ja": "この例は、「ECDH-ES + A128KW」（AES-128-KeyWrapを使用した楕円曲線Diffie-Hellman Ephemeral-Static）キー暗号化アルゴリズムと「A128GCM」（AES-GCM）コンテンツ暗号化アルゴリズムを使用したコンテンツの暗号化を示しています。"
    },
    {
      "indent": 3,
      "text": "Note that only the EC public key is necessary to perform the key agreement. However, the example includes the EC private key to allow readers to validate the output.",
      "ja": "鍵の合意を行うために必要なのはEC公開鍵だけであることに注意してください。ただし、この例には、読者が出力を検証できるようにするEC秘密鍵が含まれています。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "Note that whitespace is added for readability as described in Section 1.1."
    },
    {
      "indent": 0,
      "text": "5.4.1. Input Factors",
      "section_title": true,
      "ja": "5.4.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "ja": "暗号化プロセスを開始する前に、以下が提供されます。"
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "ja": "o 平文コンテンツ;この例では、図72のコンテンツを使用しています。"
    },
    {
      "indent": 3,
      "text": "o EC public key; this example uses the public key from Figure 108.",
      "ja": "o EC公開鍵。この例では、図108の公開鍵を使用しています。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"ECDH-ES+A128KW\".",
      "ja": "o 「Acre-is + 128 Qu」の「Different」パラメータ。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128GCM\".",
      "ja": "o 「A128GCM」の「enc」パラメータ。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"EC\",\n  \"kid\": \"peregrin.took@tuckborough.example\",\n  \"use\": \"enc\",\n  \"crv\": \"P-384\",\n  \"x\": \"YU4rRUzdmVqmRtWOs2OpDE_T5fsNIodcG8G5FWPrTPMyxpzsSOGaQL\n      pe2FpxBmu2\",\n  \"y\": \"A8-yxCHxkfBz3hKZfI1jUYMjUhsEveZ9THuwFjH2sCNdtksRJU7D5-\n      SkgaFL1ETP\",\n  \"d\": \"iTx2pk7wW-GqJkHcEkFQb2EFyYcO7RugmaW3mRrQVAOUiPommT0Idn\n      YK2xDlZh-j\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 108: Elliptic Curve P-384 Key, in JWK Format",
      "ja": "図108：JWK形式の楕円曲線P-384キー"
    },
    {
      "indent": 3,
      "text": "(NOTE: While the key includes the private parameters, only the public parameters \"crv\", \"x\", and \"y\" are necessary for the encryption operation.)",
      "ja": "（注：キーにはプライベートパラメータが含まれていますが、暗号化操作に必要なのはパブリックパラメータ「crv」、「x」、「y」のみです。）"
    },
    {
      "indent": 0,
      "text": "5.4.2. Generated Factors",
      "section_title": true,
      "ja": "5.4.2. 生成された要因"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "ja": "暗号化する前に、次のものが生成されます。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 109.",
      "ja": "o コンテンツ暗号化キー（CEK）としてのAES対称キー。この例では、図109のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 110.",
      "ja": "o 初期化ベクトル;この例では、図110の初期化ベクトルを使用しています。"
    },
    {
      "indent": 3,
      "text": "Nou2ueKlP70ZXDbq9UrRwg",
      "ja": "Nou2ueKlP70ZXDbq9UrRwg"
    },
    {
      "indent": 11,
      "text": "Figure 109: Content Encryption Key, base64url-encoded",
      "ja": "図109：base64urlエンコードされたコンテンツ暗号化キー"
    },
    {
      "indent": 3,
      "text": "mH-G2zVqgztUtnW_",
      "ja": "Mah-g2 zvakgajatutv_"
    },
    {
      "indent": 11,
      "text": "Figure 110: Initialization Vector, base64url-encoded",
      "ja": "図110：base64urlエンコードされた初期化ベクトル"
    },
    {
      "indent": 0,
      "text": "5.4.3. Encrypting the Key",
      "section_title": true,
      "ja": "5.4.3. キーの暗号化"
    },
    {
      "indent": 3,
      "text": "To encrypt the Content Encryption Key, the following is generated:",
      "ja": "コンテンツ暗号化キーを暗号化するために、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o Ephemeral EC private key on the same curve as the EC public key; this example uses the private key from Figure 111.",
      "ja": "o EC公開鍵と同じ曲線上の一時的なEC秘密鍵。この例では、図111の秘密鍵を使用しています。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"EC\",\n  \"crv\": \"P-384\",\n  \"x\": \"uBo4kHPw6kbjx5l0xowrd_oYzBmaz-GKFZu4xAFFkbYiWgutEK6iuE\n      DsQ6wNdNg3\",\n  \"y\": \"sp3p5SGhZVC2faXumI-e9JU2Mo8KpoYrFDr5yPNVtW4PgEwZOyQTA-\n      JdaY8tb7E0\",\n  \"d\": \"D5H4Y_5PSKZvhfVFbcCYJOtcGZygRgfZkpsBr59Icmmhe9sW6nkZ8W\n      fwhinUfWJg\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "Figure 111: Ephemeral Elliptic Curve P-384 Key, in JWK Format",
      "ja": "図111：JWK形式の短命な楕円曲線P-384キー"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 109) with the following:",
      "ja": "以下を使用して、CEK（図109）で鍵暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o The static Elliptic Curve public key (Figure 108); and",
      "ja": "o 静的な楕円曲線公開鍵（図108）。そして"
    },
    {
      "indent": 3,
      "text": "o The ephemeral Elliptic Curve private key (Figure 111)",
      "ja": "o 短命な楕円曲線の秘密鍵（図111）"
    },
    {
      "indent": 3,
      "text": "produces the following JWE Encrypted Key:",
      "ja": "次のJWE暗号化キーを生成します。"
    },
    {
      "indent": 3,
      "text": "0DJjBXri_kBcC46IkU5_Jk9BqaQeHdv2",
      "ja": "0DJjBXri_kBcC46IkU5_Jk9BqaQeHdv2"
    },
    {
      "indent": 15,
      "text": "Figure 112: Encrypted Key, base64url-encoded",
      "ja": "図112：暗号化されたキー、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.4.4. Encrypting the Content",
      "section_title": true,
      "ja": "5.4.4. コンテンツの暗号化"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "ja": "コンテンツを暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 113, encoded to base64url [RFC4648] as Figure 114.",
      "ja": "o JWE保護ヘッダー。この例では、図113のヘッダーを使用し、図114のようにbase64url [RFC4648]にエンコードします。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"ECDH-ES+A128KW\",\n  \"kid\": \"peregrin.took@tuckborough.example\",\n  \"epk\": {\n    \"kty\": \"EC\",\n    \"crv\": \"P-384\",\n    \"x\": \"uBo4kHPw6kbjx5l0xowrd_oYzBmaz-GKFZu4xAFFkbYiWgutEK6i\n        uEDsQ6wNdNg3\",\n    \"y\": \"sp3p5SGhZVC2faXumI-e9JU2Mo8KpoYrFDr5yPNVtW4PgEwZOyQT\n        A-JdaY8tb7E0\"\n  },\n  \"enc\": \"A128GCM\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 113: JWE Protected Header JSON",
      "ja": "図113：JWE保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJFQ0RILUVTK0ExMjhLVyIsImtpZCI6InBlcmVncmluLnRvb2tAdH\nVja2Jvcm91Z2guZXhhbXBsZSIsImVwayI6eyJrdHkiOiJFQyIsImNydiI6IlAt\nMzg0IiwieCI6InVCbzRrSFB3Nmtiang1bDB4b3dyZF9vWXpCbWF6LUdLRlp1NH\nhBRkZrYllpV2d1dEVLNml1RURzUTZ3TmROZzMiLCJ5Ijoic3AzcDVTR2haVkMy\nZmFYdW1JLWU5SlUyTW84S3BvWXJGRHI1eVBOVnRXNFBnRXdaT3lRVEEtSmRhWT\nh0YjdFMCJ9LCJlbmMiOiJBMTI4R0NNIn0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 114: JWE Protected Header, base64url-encoded",
      "ja": "図114：JWE保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation on the Plaintext (Figure 72) using the following:",
      "ja": "以下を使用して、平文（図72）でコンテンツ暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 109);",
      "ja": "o チェック（図109）;"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 110); and",
      "ja": "o 初期化ベクトル（図110）;そして"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 114) as authenticated data",
      "ja": "o 認証済みデータとしてのJWE保護ヘッダー（図114）"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 115.",
      "ja": "o 図115の暗号文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 116.",
      "ja": "o 図116の認証タグ。"
    },
    {
      "indent": 3,
      "text": "tkZuOO9h95OgHJmkkrfLBisku8rGf6nzVxhRM3sVOhXgz5NJ76oID7lpnAi_cP\nWJRCjSpAaUZ5dOR3Spy7QuEkmKx8-3RCMhSYMzsXaEwDdXta9Mn5B7cCBoJKB0\nIgEnj_qfo1hIi-uEkUpOZ8aLTZGHfpl05jMwbKkTe2yK3mjF6SBAsgicQDVCkc\nY9BLluzx1RmC3ORXaM0JaHPB93YcdSDGgpgBWMVrNU1ErkjcMqMoT_wtCex3w0\n3XdLkjXIuEr2hWgeP-nkUZTPU9EoGSPj6fAS-bSz87RCPrxZdj_iVyC6QWcqAu\n07WNhjzJEPc4jVntRJ6K53NgPQ5p99l3Z408OUqj4ioYezbS6vTPlQ",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 115: Ciphertext, base64url-encoded",
      "ja": "図115：暗号化テキスト、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "WuGzxmcreYjpHGJoa17EBg",
      "ja": "WuGzxmcreYjpHGJoa17EBg"
    },
    {
      "indent": 13,
      "text": "Figure 116: Authentication Tag, base64url-encoded",
      "ja": "Figure 116: Authentication Tag, base64url-encoded"
    },
    {
      "indent": 0,
      "text": "5.4.5. Output Results",
      "section_title": true,
      "ja": "5.4.5. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "ja": "以下は、結果のJWEオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 114)",
      "ja": "o JWE保護ヘッダー（図114）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 112)",
      "ja": "o 暗号化されたキー（図112）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 110)",
      "ja": "o 初期化ベクトル（図110）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 115)",
      "ja": "o 暗号文（図115）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 116)",
      "ja": "o 認証タグ（図116）"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "ja": "JWE Compact Serializationを使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJFQ0RILUVTK0ExMjhLVyIsImtpZCI6InBlcmVncmluLnRvb2tAdH Vja2Jvcm91Z2guZXhhbXBsZSIsImVwayI6eyJrdHkiOiJFQyIsImNydiI6IlAt Mzg0IiwieCI6InVCbzRrSFB3Nmtiang1bDB4b3dyZF9vWXpCbWF6LUdLRlp1NH hBRkZrYllpV2d1dEVLNml1RURzUTZ3TmROZzMiLCJ5Ijoic3AzcDVTR2haVkMy ZmFYdW1JLWU5SlUyTW84S3BvWXJGRHI1eVBOVnRXNFBnRXdaT3lRVEEtSmRhWT h0YjdFMCJ9LCJlbmMiOiJBMTI4R0NNIn0 . 0DJjBXri_kBcC46IkU5_Jk9BqaQeHdv2 . mH-G2zVqgztUtnW_ . tkZuOO9h95OgHJmkkrfLBisku8rGf6nzVxhRM3sVOhXgz5NJ76oID7lpnAi_cP WJRCjSpAaUZ5dOR3Spy7QuEkmKx8-3RCMhSYMzsXaEwDdXta9Mn5B7cCBoJKB0 IgEnj_qfo1hIi-uEkUpOZ8aLTZGHfpl05jMwbKkTe2yK3mjF6SBAsgicQDVCkc Y9BLluzx1RmC3ORXaM0JaHPB93YcdSDGgpgBWMVrNU1ErkjcMqMoT_wtCex3w0 3XdLkjXIuEr2hWgeP-nkUZTPU9EoGSPj6fAS-bSz87RCPrxZdj_iVyC6QWcqAu 07WNhjzJEPc4jVntRJ6K53NgPQ5p99l3Z408OUqj4ioYezbS6vTPlQ . WuGzxmcreYjpHGJoa17EBg",
      "ja": "eyJhbGciOiJFQ0RILUVTK0ExMjhLVyIsImtpZCI6InBlcmVncmluLnRvb2tAdH Vja2Jvcm91Z2guZXhhbXBsZSIsImVwayI6eyJrdHkiOiJFQyIsImNydiI6IlAt Mzg0IiwieCI6InVCbzRrSFB3Nmtiang1bDB4b3dyZF9vWXpCbWF6LUdLRlp1NH hBRkZrYllpV2d1dEVLNml1RURzUTZ3TmROZzMiLCJ5Ijoic3AzcDVTR2haVkMy ZmFYdW1JLWU5SlUyTW84S3BvWXJGRHI1eVBOVnRXNFBnRXdaT3lRVEEtSmRhWT h0YjdFMCJ9LCJlbmMiOiJBMTI4R0NNIn0 . 0DJjBXri_kBcC46IkU5_Jk9BqaQeHdv2 . mH-G2zVqgztUtnW_ . tkZuOO9h95OgHJmkkrfLBisku8rGf6nzVxhRM3sVOhXgz5NJ76oID7lpnAi_cP WJRCjSpAaUZ5dOR3Spy7QuEkmKx8-3RCMhSYMzsXaEwDdXta9Mn5B7cCBoJKB0 IgEnj_qfo1hIi-uEkUpOZ8aLTZGHfpl05jMwbKkTe2yK3mjF6SBAsgicQDVCkc Y9BLluzx1RmC3ORXaM0JaHPB93YcdSDGgpgBWMVrNU1ErkjcMqMoT_wtCex3w0 3XdLkjXIuEr2hWgeP-nkUZTPU9EoGSPj6fAS-bSz87RCPrxZdj_iVyC6QWcqAu 07WNhjzJEPc4jVntRJ6K53NgPQ5p99l3Z408OUqj4ioYezbS6vTPlQ . WuGzxmcreYjpHGJoa17EBg"
    },
    {
      "indent": 19,
      "text": "Figure 117: JWE Compact Serialization",
      "ja": "図117：JWEコンパクトシリアライゼーション"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "ja": "一般的なJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"0DJjBXri_kBcC46IkU5_Jk9BqaQeHdv2\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJFQ0RILUVTK0ExMjhLVyIsImtpZCI6InBlcm\n      VncmluLnRvb2tAdHVja2Jvcm91Z2guZXhhbXBsZSIsImVwayI6eyJrdH\n      kiOiJFQyIsImNydiI6IlAtMzg0IiwieCI6InVCbzRrSFB3Nmtiang1bD\n      B4b3dyZF9vWXpCbWF6LUdLRlp1NHhBRkZrYllpV2d1dEVLNml1RURzUT\n      Z3TmROZzMiLCJ5Ijoic3AzcDVTR2haVkMyZmFYdW1JLWU5SlUyTW84S3\n      BvWXJGRHI1eVBOVnRXNFBnRXdaT3lRVEEtSmRhWTh0YjdFMCJ9LCJlbm\n      MiOiJBMTI4R0NNIn0\",\n  \"iv\": \"mH-G2zVqgztUtnW_\",\n  \"ciphertext\": \"tkZuOO9h95OgHJmkkrfLBisku8rGf6nzVxhRM3sVOhXgz\n      5NJ76oID7lpnAi_cPWJRCjSpAaUZ5dOR3Spy7QuEkmKx8-3RCMhSYMzs\n      XaEwDdXta9Mn5B7cCBoJKB0IgEnj_qfo1hIi-uEkUpOZ8aLTZGHfpl05\n      jMwbKkTe2yK3mjF6SBAsgicQDVCkcY9BLluzx1RmC3ORXaM0JaHPB93Y\n      cdSDGgpgBWMVrNU1ErkjcMqMoT_wtCex3w03XdLkjXIuEr2hWgeP-nkU\n      ZTPU9EoGSPj6fAS-bSz87RCPrxZdj_iVyC6QWcqAu07WNhjzJEPc4jVn\n      tRJ6K53NgPQ5p99l3Z408OUqj4ioYezbS6vTPlQ\",\n  \"tag\": \"WuGzxmcreYjpHGJoa17EBg\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 118: General JWE JSON Serialization",
      "ja": "図118：一般的なJWE JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "ja": "平坦化されたJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJFQ0RILUVTK0ExMjhLVyIsImtpZCI6InBlcm\n      VncmluLnRvb2tAdHVja2Jvcm91Z2guZXhhbXBsZSIsImVwayI6eyJrdH\n      kiOiJFQyIsImNydiI6IlAtMzg0IiwieCI6InVCbzRrSFB3Nmtiang1bD\n      B4b3dyZF9vWXpCbWF6LUdLRlp1NHhBRkZrYllpV2d1dEVLNml1RURzUT\n      Z3TmROZzMiLCJ5Ijoic3AzcDVTR2haVkMyZmFYdW1JLWU5SlUyTW84S3\n      BvWXJGRHI1eVBOVnRXNFBnRXdaT3lRVEEtSmRhWTh0YjdFMCJ9LCJlbm\n      MiOiJBMTI4R0NNIn0\",\n  \"encrypted_key\": \"0DJjBXri_kBcC46IkU5_Jk9BqaQeHdv2\",\n  \"iv\": \"mH-G2zVqgztUtnW_\",\n  \"ciphertext\": \"tkZuOO9h95OgHJmkkrfLBisku8rGf6nzVxhRM3sVOhXgz\n      5NJ76oID7lpnAi_cPWJRCjSpAaUZ5dOR3Spy7QuEkmKx8-3RCMhSYMzs\n      XaEwDdXta9Mn5B7cCBoJKB0IgEnj_qfo1hIi-uEkUpOZ8aLTZGHfpl05\n      jMwbKkTe2yK3mjF6SBAsgicQDVCkcY9BLluzx1RmC3ORXaM0JaHPB93Y\n      cdSDGgpgBWMVrNU1ErkjcMqMoT_wtCex3w03XdLkjXIuEr2hWgeP-nkU\n      ZTPU9EoGSPj6fAS-bSz87RCPrxZdj_iVyC6QWcqAu07WNhjzJEPc4jVn\n      tRJ6K53NgPQ5p99l3Z408OUqj4ioYezbS6vTPlQ\",\n  \"tag\": \"WuGzxmcreYjpHGJoa17EBg\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 119: Flattened JWE JSON Serialization",
      "ja": "図119：フラット化されたJWE JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "5.5. Key Agreement Using ECDH-ES with AES-CBC-HMAC-SHA2",
      "section_title": true,
      "ja": "5.5. ECDH-ESとAES-CBC-HMAC-SHA2を使用した鍵合意"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content using the \"ECDH-ES\" (Elliptic Curve Diffie-Hellman Ephemeral-Static) key agreement algorithm and the \"A128CBC-HS256\" (AES-128-CBC-HMAC-SHA-256) content encryption algorithm.",
      "ja": "この例は、 \"ECDH-ES\"（楕円曲線Diffie-Hellman Ephemeral-Static）鍵合意アルゴリズムと \"A128CBC-HS256\"（AES-128-CBC-HMAC-SHA-256）コンテンツ暗号化アルゴリズムを使用したコンテンツの暗号化を示しています。"
    },
    {
      "indent": 3,
      "text": "Note that only the EC public key is necessary to perform the key agreement. However, the example includes the EC private key to allow readers to validate the output.",
      "ja": "鍵の合意を行うために必要なのはEC公開鍵だけであることに注意してください。ただし、この例には、読者が出力を検証できるようにするEC秘密鍵が含まれています。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.5.1. Input Factors",
      "section_title": true,
      "ja": "5.5.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "ja": "暗号化プロセスを開始する前に、以下が提供されます。"
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "ja": "o 平文コンテンツ;この例では、図72のコンテンツを使用しています。"
    },
    {
      "indent": 3,
      "text": "o EC public key; this example uses the public key from Figure 120.",
      "ja": "o EC public key; this example uses the public key from Figure 120."
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"ECDH-ES\".",
      "ja": "o 「acre-is」の「Different」パラメータ。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128CBC-HS256\".",
      "ja": "o 「A128CBC-HS256」の「enc」パラメータ。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"EC\",\n  \"kid\": \"meriadoc.brandybuck@buckland.example\",\n  \"use\": \"enc\",\n  \"crv\": \"P-256\",\n  \"x\": \"Ze2loSV3wrroKUN_4zhwGhCqo3Xhu1td4QjeQ5wIVR0\",\n  \"y\": \"HlLtdXARY_f55A3fnzQbPcm6hgr34Mp8p-nuzQCE0Zw\",\n  \"d\": \"r_kHyZ-a06rmxM3yESK84r1otSg-aQcVStkRhA-iCM8\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 120: Elliptic Curve P-256 Key",
      "ja": "図120：楕円曲線P-256キー"
    },
    {
      "indent": 3,
      "text": "(NOTE: While the key includes the private parameters, only the public parameters \"crv\", \"x\", and \"y\" are necessary for the encryption operation.)",
      "ja": "（注：キーにはプライベートパラメータが含まれていますが、暗号化操作に必要なのはパブリックパラメータ「crv」、「x」、「y」のみです。）"
    },
    {
      "indent": 0,
      "text": "5.5.2. Generated Factors",
      "section_title": true,
      "ja": "5.5.2. 生成された要因"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting:",
      "ja": "暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 121.",
      "ja": "o 初期化ベクトル;この例では、図121の初期化ベクトルを使用しています。"
    },
    {
      "indent": 3,
      "text": "yc9N8v5sYyv3iGQT926IUg",
      "ja": "Asagndfajsafjguetsitj"
    },
    {
      "indent": 11,
      "text": "Figure 121: Initialization Vector, base64url-encoded",
      "ja": "図121：初期化ベクトル、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "NOTE: The Content Encryption Key (CEK) is not randomly generated; instead, it is determined using ECDH-ES key agreement.",
      "ja": "注：コンテンツ暗号化キー（CEK）はランダムに生成されません。代わりに、ECDH-ES鍵合意を使用して決定されます。"
    },
    {
      "indent": 0,
      "text": "5.5.3. Key Agreement",
      "section_title": true,
      "ja": "5.5.3. 重要な合意"
    },
    {
      "indent": 3,
      "text": "The following is generated to agree on a CEK:",
      "ja": "以下は、CEKに同意するために生成されます。"
    },
    {
      "indent": 3,
      "text": "o Ephemeral private key; this example uses the private key from Figure 122.",
      "ja": "o 一時的な秘密鍵。この例では、図122の秘密鍵を使用しています。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"EC\",\n  \"crv\": \"P-256\",\n  \"x\": \"mPUKT_bAWGHIhg0TpjjqVsP1rXWQu_vwVOHHtNkdYoA\",\n  \"y\": \"8BQAsImGeAS46fyWw5MhYfGTT0IjBpFw2SS34Dv4Irs\",\n  \"d\": \"AtH35vJsQ9SGjYfOsjUxYXQKrPH3FjZHmEtSKoSN8cM\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Figure 122: Ephemeral Private Key, in JWK Format",
      "ja": "図122：エフェメラル秘密鍵（JWK形式）"
    },
    {
      "indent": 3,
      "text": "Performing the ECDH operation using the static EC public key (Figure 120) over the ephemeral private key (Figure 122) produces the following CEK:",
      "ja": "一時的な秘密鍵（図122）に対して静的EC公開鍵（図120）を使用してECDH操作を実行すると、次のCEKが生成されます。"
    },
    {
      "indent": 3,
      "text": "hzHdlfQIAEehb8Hrd_mFRhKsKLEzPfshfXs9l6areCc",
      "ja": "hzHdlfQIAEehb8Hrd_mFRhKsKLEzPfshfXs9l6areCc"
    },
    {
      "indent": 6,
      "text": "Figure 123: Agreed-to Content Encryption Key, base64url-encoded",
      "ja": "図123：合意されたコンテンツ暗号化キー、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.5.4. Encrypting the Content",
      "section_title": true,
      "ja": "5.5.4. コンテンツの暗号化"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "ja": "コンテンツを暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 124, encoded to base64url [RFC4648] as Figure 125.",
      "ja": "o JWE保護ヘッダー。この例では、図125のようにbase64url [RFC4648]にエンコードされた図124のヘッダーを使用します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"ECDH-ES\",\n  \"kid\": \"meriadoc.brandybuck@buckland.example\",\n  \"epk\": {\n    \"kty\": \"EC\",\n    \"crv\": \"P-256\",\n    \"x\": \"mPUKT_bAWGHIhg0TpjjqVsP1rXWQu_vwVOHHtNkdYoA\",\n    \"y\": \"8BQAsImGeAS46fyWw5MhYfGTT0IjBpFw2SS34Dv4Irs\"\n  },\n  \"enc\": \"A128CBC-HS256\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 124: JWE Protected Header JSON",
      "ja": "図124：JWE保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJFQ0RILUVTIiwia2lkIjoibWVyaWFkb2MuYnJhbmR5YnVja0BidW\nNrbGFuZC5leGFtcGxlIiwiZXBrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYi\nLCJ4IjoibVBVS1RfYkFXR0hJaGcwVHBqanFWc1AxclhXUXVfdndWT0hIdE5rZF\nlvQSIsInkiOiI4QlFBc0ltR2VBUzQ2ZnlXdzVNaFlmR1RUMElqQnBGdzJTUzM0\nRHY0SXJzIn0sImVuYyI6IkExMjhDQkMtSFMyNTYifQ",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 125: JWE Protected Header, base64url-encoded",
      "ja": "図125：JWE保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation on the Plaintext (Figure 72) using the following:",
      "ja": "以下を使用して、平文（図72）でコンテンツ暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 123);",
      "ja": "o チェック（図123）;"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 121); and",
      "ja": "o 初期化ベクトル（図121）;そして"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 125) as authenticated data",
      "ja": "o 認証済みデータとしてのJWE保護ヘッダー（図125）"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 126.",
      "ja": "o 図126の暗号文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 127.",
      "ja": "o 図127の認証タグ。"
    },
    {
      "indent": 3,
      "text": "BoDlwPnTypYq-ivjmQvAYJLb5Q6l-F3LIgQomlz87yW4OPKbWE1zSTEFjDfhU9 IPIOSA9Bml4m7iDFwA-1ZXvHteLDtw4R1XRGMEsDIqAYtskTTmzmzNa-_q4F_e vAPUmwlO-ZG45Mnq4uhM1fm_D9rBtWolqZSF3xGNNkpOMQKF1Cl8i8wjzRli7- IXgyirlKQsbhhqRzkv8IcY6aHl24j03C-AR2le1r7URUhArM79BY8soZU0lzwI -sD5PZ3l4NDCCei9XkoIAfsXJWmySPoeRb2Ni5UZL4mYpvKDiwmyzGd65KqVw7 MsFfI_K767G9C9Azp73gKZD0DyUn1mn0WW5LmyX_yJ-3AROq8p1WZBfG-ZyJ61 95_JGG2m9Csg",
      "ja": "BoDlwPnTypYq-ivjmQvAYJLb5Q6l-F3LIgQomlz87yW4OPKbWE1zSTEFjDfhU9 IPIOSA9Bml4m7iDFwA-1ZXvHteLDtw4R1XRGMEsDIqAYtskTTmzmzNa-_q4F_e vAPUmwlO-ZG45Mnq4uhM1fm_D9rBtWolqZSF3xGNNkpOMQKF1Cl8i8wjzRli7- IXgyirlKQsbhhqRzkv8IcY6aHl24j03C-AR2le1r7URUhArM79BY8soZU0lzwI -sD5PZ3l4NDCCei9XkoIAfsXJWmySPoeRb2Ni5UZL4mYpvKDiwmyzGd65KqVw7 MsFfI_K767G9C9Azp73gKZD0DyUn1mn0WW5LmyX_yJ-3AROq8p1WZBfG-ZyJ61 95_JGG2m9Csg"
    },
    {
      "indent": 17,
      "text": "Figure 126: Ciphertext, base64url-encoded",
      "ja": "図126：base64urlエンコードされた暗号文"
    },
    {
      "indent": 3,
      "text": "WCCkNa-x4BeB9hIDIfFuhg",
      "ja": "WCCkNa-x4BeB9hIDIfFuhg"
    },
    {
      "indent": 13,
      "text": "Figure 127: Authentication Tag, base64url-encoded",
      "ja": "図127：認証タグ、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.5.5. Output Results",
      "section_title": true,
      "ja": "5.5.5. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "ja": "以下は、結果のJWEオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 114)",
      "ja": "o JWE保護ヘッダー（図114）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 110)",
      "ja": "o 初期化ベクトル（図110）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 115)",
      "ja": "o 暗号文（図115）"
    },
    {
      "indent": 0,
      "text": " o Authentication Tag (Figure 116) Only the general JWE JSON Serialization is presented because the flattened JWE JSON Serialization is identical.",
      "ja": "o認証タグ（図116）フラット化されたJWE JSONシリアル化は同一であるため、一般的なJWE JSONシリアル化のみが表示されます。"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "ja": "JWE Compact Serializationを使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJFQ0RILUVTIiwia2lkIjoibWVyaWFkb2MuYnJhbmR5YnVja0BidW NrbGFuZC5leGFtcGxlIiwiZXBrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYi LCJ4IjoibVBVS1RfYkFXR0hJaGcwVHBqanFWc1AxclhXUXVfdndWT0hIdE5rZF lvQSIsInkiOiI4QlFBc0ltR2VBUzQ2ZnlXdzVNaFlmR1RUMElqQnBGdzJTUzM0 RHY0SXJzIn0sImVuYyI6IkExMjhDQkMtSFMyNTYifQ . . yc9N8v5sYyv3iGQT926IUg . BoDlwPnTypYq-ivjmQvAYJLb5Q6l-F3LIgQomlz87yW4OPKbWE1zSTEFjDfhU9 IPIOSA9Bml4m7iDFwA-1ZXvHteLDtw4R1XRGMEsDIqAYtskTTmzmzNa-_q4F_e vAPUmwlO-ZG45Mnq4uhM1fm_D9rBtWolqZSF3xGNNkpOMQKF1Cl8i8wjzRli7- IXgyirlKQsbhhqRzkv8IcY6aHl24j03C-AR2le1r7URUhArM79BY8soZU0lzwI -sD5PZ3l4NDCCei9XkoIAfsXJWmySPoeRb2Ni5UZL4mYpvKDiwmyzGd65KqVw7 MsFfI_K767G9C9Azp73gKZD0DyUn1mn0WW5LmyX_yJ-3AROq8p1WZBfG-ZyJ61 95_JGG2m9Csg . WCCkNa-x4BeB9hIDIfFuhg",
      "ja": "eyJhbGciOiJFQ0RILUVTIiwia2lkIjoibWVyaWFkb2MuYnJhbmR5YnVja0BidW NrbGFuZC5leGFtcGxlIiwiZXBrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYi LCJ4IjoibVBVS1RfYkFXR0hJaGcwVHBqanFWc1AxclhXUXVfdndWT0hIdE5rZF lvQSIsInkiOiI4QlFBc0ltR2VBUzQ2ZnlXdzVNaFlmR1RUMElqQnBGdzJTUzM0 RHY0SXJzIn0sImVuYyI6IkExMjhDQkMtSFMyNTYifQ。 。 yc9N8v5sYyv3iGQT926IUg。 BoDlwPnTypYq-ivjmQvAYJLb5Q6l-F3LIgQomlz87yW4OPKbWE1zSTEFjDfhU9 IPIOSA9Bml4m7iDFwA-1ZXvHteLDtw4R1XRGMEsDIqAYtskTTmzmzNa-_q4F_e vAPUmwlO-ZG45Mnq4uhM1fm_D9rBtWolqZSF3xGNNkpOMQKF1Cl8i8wjzRli7- IXgyirlKQsbhhqRzkv8IcY6aHl24j03C-AR2le1r7URUhArM79BY8soZU0lzwI -sD5PZ3l4NDCCei9XkoIAfsXJWmySPoeRb2Ni5UZL4mYpvKDiwmyzGd65KqVw7 MsFfI_K767G9C9Azp73gKZD0DyUn1mn0WW5LmyX_yJ-3AROq8p1WZBfG-ZyJ61 95_JGG2m9Csg。 WCCkNa-x4BeB9hIDIfFuhg"
    },
    {
      "indent": 19,
      "text": "Figure 128: JWE Compact Serialization",
      "ja": "図128：JWEコンパクトシリアライゼーション"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "ja": "一般的なJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJFQ0RILUVTIiwia2lkIjoibWVyaWFkb2MuYn\n      JhbmR5YnVja0BidWNrbGFuZC5leGFtcGxlIiwiZXBrIjp7Imt0eSI6Ik\n      VDIiwiY3J2IjoiUC0yNTYiLCJ4IjoibVBVS1RfYkFXR0hJaGcwVHBqan\n      FWc1AxclhXUXVfdndWT0hIdE5rZFlvQSIsInkiOiI4QlFBc0ltR2VBUz\n      Q2ZnlXdzVNaFlmR1RUMElqQnBGdzJTUzM0RHY0SXJzIn0sImVuYyI6Ik\n      ExMjhDQkMtSFMyNTYifQ\",\n  \"iv\": \"yc9N8v5sYyv3iGQT926IUg\",\n  \"ciphertext\": \"BoDlwPnTypYq-ivjmQvAYJLb5Q6l-F3LIgQomlz87yW4O\n      PKbWE1zSTEFjDfhU9IPIOSA9Bml4m7iDFwA-1ZXvHteLDtw4R1XRGMEs\n      DIqAYtskTTmzmzNa-_q4F_evAPUmwlO-ZG45Mnq4uhM1fm_D9rBtWolq\n      ZSF3xGNNkpOMQKF1Cl8i8wjzRli7-IXgyirlKQsbhhqRzkv8IcY6aHl2\n      4j03C-AR2le1r7URUhArM79BY8soZU0lzwI-sD5PZ3l4NDCCei9XkoIA\n      fsXJWmySPoeRb2Ni5UZL4mYpvKDiwmyzGd65KqVw7MsFfI_K767G9C9A\n      zp73gKZD0DyUn1mn0WW5LmyX_yJ-3AROq8p1WZBfG-ZyJ6195_JGG2m9\n      Csg\",\n  \"tag\": \"WCCkNa-x4BeB9hIDIfFuhg\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 129: General JWE JSON Serialization",
      "ja": "図129：一般的なJWE JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "5.6. Direct Encryption Using AES-GCM",
      "section_title": true,
      "ja": "5.6. AES-GCMを使用した直接暗号化"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content using a previously exchanged key directly and the \"A128GCM\" (AES-GCM) content encryption algorithm.",
      "ja": "この例は、以前に交換されたキーを直接使用してコンテンツを暗号化する方法と、「A128GCM」（AES-GCM）コンテンツ暗号化アルゴリズムを示しています。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.6.1. Input Factors",
      "section_title": true,
      "ja": "5.6.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "ja": "暗号化プロセスを開始する前に、以下が提供されます。"
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "ja": "o 平文コンテンツ;この例では、図72のコンテンツを使用しています。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 130.",
      "ja": "o コンテンツ暗号化キー（CEK）としてのAES対称キー。この例では、図130のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"dir\".",
      "ja": "o 「alg」パラメータまたは「dir」。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128GCM\".",
      "ja": "o 「A128GCM」の「enc」パラメータ。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"oct\",\n  \"kid\": \"77c7e2b8-6e13-45cf-8672-617b5b45243a\",\n  \"use\": \"enc\",\n  \"alg\": \"A128GCM\",\n  \"k\": \"XctOhJAkA-pD9Lh7ZgW_2A\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 130: AES 128-Bit Key, in JWK Format",
      "ja": "図130：JWK形式のAES 128ビットキー"
    },
    {
      "indent": 0,
      "text": "5.6.2. Generated Factors",
      "section_title": true,
      "ja": "5.6.2. 生成された要因"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting:",
      "ja": "暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 131.",
      "ja": "o 初期化ベクトル;この例では、図131の初期化ベクトルを使用しています。"
    },
    {
      "indent": 3,
      "text": "refa467QzzKx6QAB",
      "ja": "refa467QzzKx6QAB"
    },
    {
      "indent": 11,
      "text": "Figure 131: Initialization Vector, base64url-encoded",
      "ja": "図131：base64urlエンコードされた初期化ベクトル"
    },
    {
      "indent": 0,
      "text": "5.6.3. Encrypting the Content",
      "section_title": true,
      "ja": "5.6.3. コンテンツの暗号化"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "ja": "コンテンツを暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 132, encoded as base64url [RFC4648] to produce Figure 133.",
      "ja": "o JWE保護ヘッダー。この例では、図132のヘッダーをbase64url [RFC4648]としてエンコードして使用し、図133を生成します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"dir\",\n  \"kid\": \"77c7e2b8-6e13-45cf-8672-617b5b45243a\",\n  \"enc\": \"A128GCM\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 132: JWE Protected Header JSON",
      "ja": "図132：JWE保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJkaXIiLCJraWQiOiI3N2M3ZTJiOC02ZTEzLTQ1Y2YtODY3Mi02MT\ndiNWI0NTI0M2EiLCJlbmMiOiJBMTI4R0NNIn0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 133: JWE Protected Header, base64url-encoded",
      "ja": "図133：base64urlエンコードされたJWE保護ヘッダー"
    },
    {
      "indent": 3,
      "text": "Performing the encryption operation on the Plaintext (Figure 72) using the following:",
      "ja": "以下を使用して、平文（図72）で暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 130);",
      "ja": "o チェック（図130）;"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 131); and",
      "ja": "o 初期化ベクトル（図131）;そして"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 133) as authenticated data",
      "ja": "o JWE Protected Header (Figure 133) as authenticated data"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 134.",
      "ja": "o Ciphertext from Figure 134."
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 135.",
      "ja": "o 図135の認証タグ。"
    },
    {
      "indent": 3,
      "text": "JW_i_f52hww_ELQPGaYyeAB6HYGcR559l9TYnSovc23XJoBcW29rHP8yZOZG7Y hLpT1bjFuvZPjQS-m0IFtVcXkZXdH_lr_FrdYt9HRUYkshtrMmIUAyGmUnd9zM DB2n0cRDIHAzFVeJUDxkUwVAE7_YGRPdcqMyiBoCO-FBdE-Nceb4h3-FtBP-c_ BIwCPTjb9o0SbdcdREEMJMyZBH8ySWMVi1gPD9yxi-aQpGbSv_F9N4IZAxscj5 g-NJsUPbjk29-s7LJAGb15wEBtXphVCgyy53CoIKLHHeJHXex45Uz9aKZSRSIn ZI-wjsY0yu3cT4_aQ3i1o-tiE-F8Ios61EKgyIQ4CWao8PFMj8TTnp",
      "ja": "JW_i_f52hww_ELQPGaYyeAB6HYGcR559l9TYnSovc23XJoBcW29rHP8yZOZG7Y hLpT1bjFuvZPjQS-m0IFtVcXkZXdH_lr_FrdYt9HRUYkshtrMmIUAyGmUnd9zM DB2n0cRDIHAzFVeJUDxkUwVAE7_YGRPdcqMyiBoCO-FBdE-Nceb4h3-FTBP-C_ BIwCPTjb9o0SbdcdREEMJMyZBH8ySWMVi1gPD9yxi-aQpGbSv_F9N4IZAxscj5 G-NJsUPbjk29-s7LJAGb15wEBtXphVCgyy53CoIKLHHeJHXex45Uz9aKZSRSIn ZI-wjsY0yu3cT4_aQ3i1o-TIE-F8Ios61EKgyIQ4CWao8PFMj8TTnp"
    },
    {
      "indent": 17,
      "text": "Figure 134: Ciphertext, base64url-encoded",
      "ja": "Figure 134: Ciphertext, base64url-encoded"
    },
    {
      "indent": 3,
      "text": "vbb32Xvllea2OtmHAdccRQ",
      "ja": "vbb32Xvllea2OtmHAdccRQ"
    },
    {
      "indent": 13,
      "text": "Figure 135: Authentication Tag, base64url-encoded",
      "ja": "図135：認証タグ、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.6.4. Output Results",
      "section_title": true,
      "ja": "5.6.4. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "ja": "以下は、結果のJWEオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 133)",
      "ja": "o JWE保護ヘッダー（図133）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 131)",
      "ja": "o 初期化ベクトル（図131）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 134)",
      "ja": "o 暗号文（図134）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 135)",
      "ja": "o 認証タグ（図135）"
    },
    {
      "indent": 3,
      "text": "Only the general JWE JSON Serialization is presented because the flattened JWE JSON Serialization is identical.",
      "ja": "フラット化されたJWE JSONシリアライゼーションは同一であるため、一般的なJWE JSONシリアライゼーションのみが示されています。"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "ja": "JWE Compact Serializationを使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJkaXIiLCJraWQiOiI3N2M3ZTJiOC02ZTEzLTQ1Y2YtODY3Mi02MT diNWI0NTI0M2EiLCJlbmMiOiJBMTI4R0NNIn0 . . refa467QzzKx6QAB . JW_i_f52hww_ELQPGaYyeAB6HYGcR559l9TYnSovc23XJoBcW29rHP8yZOZG7Y hLpT1bjFuvZPjQS-m0IFtVcXkZXdH_lr_FrdYt9HRUYkshtrMmIUAyGmUnd9zM DB2n0cRDIHAzFVeJUDxkUwVAE7_YGRPdcqMyiBoCO-FBdE-Nceb4h3-FtBP-c_ BIwCPTjb9o0SbdcdREEMJMyZBH8ySWMVi1gPD9yxi-aQpGbSv_F9N4IZAxscj5 g-NJsUPbjk29-s7LJAGb15wEBtXphVCgyy53CoIKLHHeJHXex45Uz9aKZSRSIn ZI-wjsY0yu3cT4_aQ3i1o-tiE-F8Ios61EKgyIQ4CWao8PFMj8TTnp . vbb32Xvllea2OtmHAdccRQ",
      "ja": "eyJhbGciOiJkaXIiLCJraWQiOiI3N2M3ZTJiOC02ZTEzLTQ1Y2YtODY3Mi02MT diNWI0NTI0M2EiLCJlbmMiOiJBMTI4R0NNIn0。 。 refa467QzzKx6QAB。 JW_i_f52hww_ELQPGaYyeAB6HYGcR559l9TYnSovc23XJoBcW29rHP8yZOZG7Y hLpT1bjFuvZPjQS-m0IFtVcXkZXdH_lr_FrdYt9HRUYkshtrMmIUAyGmUnd9zM DB2n0cRDIHAzFVeJUDxkUwVAE7_YGRPdcqMyiBoCO-FBdE-Nceb4h3-FTBP-C_ BIwCPTjb9o0SbdcdREEMJMyZBH8ySWMVi1gPD9yxi aQpGbSv_F9N4IZAxscj5-G-NJsUPbjk29 s7LJAGb15wEBtXphVCgyy53CoIKLHHeJHXex45Uz9aKZSRSIn-ZI-wjsY0yu3cT4_aQ3i1o-タイF8Ios61EKgyIQ4CWao8PFMj8TTnp。 vbb32Xvllea2OtmHAdccRQ"
    },
    {
      "indent": 19,
      "text": "Figure 136: JWE Compact Serialization",
      "ja": "図136：JWEコンパクトシリアライゼーション"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "ja": "一般的なJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJkaXIiLCJraWQiOiI3N2M3ZTJiOC02ZTEzLT\n      Q1Y2YtODY3Mi02MTdiNWI0NTI0M2EiLCJlbmMiOiJBMTI4R0NNIn0\",\n  \"iv\": \"refa467QzzKx6QAB\",\n  \"ciphertext\": \"JW_i_f52hww_ELQPGaYyeAB6HYGcR559l9TYnSovc23XJ\n      oBcW29rHP8yZOZG7YhLpT1bjFuvZPjQS-m0IFtVcXkZXdH_lr_FrdYt9\n      HRUYkshtrMmIUAyGmUnd9zMDB2n0cRDIHAzFVeJUDxkUwVAE7_YGRPdc\n      qMyiBoCO-FBdE-Nceb4h3-FtBP-c_BIwCPTjb9o0SbdcdREEMJMyZBH8\n      ySWMVi1gPD9yxi-aQpGbSv_F9N4IZAxscj5g-NJsUPbjk29-s7LJAGb1\n      5wEBtXphVCgyy53CoIKLHHeJHXex45Uz9aKZSRSInZI-wjsY0yu3cT4_\n      aQ3i1o-tiE-F8Ios61EKgyIQ4CWao8PFMj8TTnp\",\n  \"tag\": \"vbb32Xvllea2OtmHAdccRQ\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 137: General JWE JSON Serialization",
      "ja": "図137：一般的なJWE JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "5.7. Key Wrap Using AES-GCM KeyWrap with AES-CBC-HMAC-SHA2",
      "section_title": true,
      "ja": "5.7. AES-CBC-HMAC-SHA2でAES-GCM KeyWrapを使用するキーラップ"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content using the \"A256GCMKW\" (AES-256-GCM-KeyWrap) key encryption algorithm with the \"A128CBC-HS256\" (AES-128-CBC-HMAC-SHA-256) content encryption algorithm.",
      "ja": "この例は、「A128CBC-HS256」（AES-128-CBC-HMAC-SHA-256）コンテンツ暗号化アルゴリズムで「A256GCMKW」（AES-256-GCM-KeyWrap）キー暗号化アルゴリズムを使用してコンテンツを暗号化する方法を示しています。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "Note that whitespace is added for readability as described in Section 1.1."
    },
    {
      "indent": 0,
      "text": "5.7.1. Input Factors",
      "section_title": true,
      "ja": "5.7.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "ja": "暗号化プロセスを開始する前に、以下が提供されます。"
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "ja": "o 平文コンテンツ;この例では、図72のコンテンツを使用しています。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key; this example uses the key from Figure 138.",
      "ja": "o AES対称鍵。この例では、図138のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"A256GCMKW\".",
      "ja": "o 「A256GCMKW」の「alg」パラメータ。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128CBC-HS256\".",
      "ja": "o 「A128CBC-HS256」の「enc」パラメータ。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"oct\",\n  \"kid\": \"18ec08e1-bfa9-4d95-b205-2b4dd1d4321d\",\n  \"use\": \"enc\",\n  \"alg\": \"A256GCMKW\",\n  \"k\": \"qC57l_uxcm7Nm3K-ct4GFjx8tM1U8CZ0NLBvdQstiS8\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 24,
      "text": "Figure 138: AES 256-Bit Key",
      "ja": "Figure 138: AES 256-Bit Key"
    },
    {
      "indent": 0,
      "text": "5.7.2. Generated Factors",
      "section_title": true,
      "ja": "5.7.2. 生成された要因"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "ja": "暗号化する前に、次のものが生成されます。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 139.",
      "ja": "o コンテンツ暗号化キー（CEK）としてのAES対称キー。この例では、図139のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector for content encryption; this example uses the Initialization Vector from Figure 140.",
      "ja": "o Initialization Vector for content encryption; this example uses the Initialization Vector from Figure 140."
    },
    {
      "indent": 3,
      "text": "UWxARpat23nL9ReIj4WG3D1ee9I4r-Mv5QLuFXdy_rE",
      "ja": "UWxARpat23nL9ReIj4WG3D1ee9I4r-Mv5QLuFXdy_rE"
    },
    {
      "indent": 11,
      "text": "Figure 139: Content Encryption Key, base64url-encoded",
      "ja": "図139：base64urlエンコードされたコンテンツ暗号化キー"
    },
    {
      "indent": 3,
      "text": "gz6NjyEFNm_vm8Gj6FwoFQ",
      "ja": "gz6NjyEFNm_vm8Gj6FwoFQ"
    },
    {
      "indent": 11,
      "text": "Figure 140: Initialization Vector, base64url-encoded",
      "ja": "図140：初期化ベクトル、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.7.3. Encrypting the Key",
      "section_title": true,
      "ja": "5.7.3. キーの暗号化"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the CEK:",
      "ja": "The following is generated before encrypting the CEK:"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector for key wrapping; this example uses the Initialization Vector from Figure 141.",
      "ja": "o キーラッピングの初期化ベクトル。この例では、図141の初期化ベクトルを使用しています。"
    },
    {
      "indent": 3,
      "text": "KkYT0GX_2jHlfqN_",
      "ja": "KkYT0GX_2jHlfqN_"
    },
    {
      "indent": 0,
      "text": " Figure 141: Initialization Vector for Key Wrapping, base64url-encoded Performing the key encryption operation over the CEK (Figure 139) with the following:",
      "ja": "図141：キーラッピングの初期化ベクトル、base64urlエンコード次を使用してCEK（図139）でキー暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key (Figure 138);",
      "ja": "o AES対称鍵（図138）;"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 141); and",
      "ja": "o 初期化ベクトル（図141）;そして"
    },
    {
      "indent": 3,
      "text": "o The empty string as authenticated data",
      "ja": "o The empty string as authenticated data"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "produces the following:"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key from Figure 142.",
      "ja": "o 図142の暗号化されたキー。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 143.",
      "ja": "o 図143の認証タグ。"
    },
    {
      "indent": 3,
      "text": "lJf3HbOApxMEBkCMOoTnnABxs_CvTWUmZQ2ElLvYNok",
      "ja": "lJf3HbOApxMEBkCMOoTnnABxs_CvTWUmZQ2ElLvYNok"
    },
    {
      "indent": 15,
      "text": "Figure 142: Encrypted Key, base64url-encoded",
      "ja": "図142：暗号化されたキー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "kfPduVQ3T3H6vnewt--ksw",
      "ja": "Cf"
    },
    {
      "indent": 4,
      "text": "Figure 143: Authentication Tag from Key Wrapping, base64url-encoded",
      "ja": "図143：キーラップからの認証タグ、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.7.4. Encrypting the Content",
      "section_title": true,
      "ja": "5.7.4. コンテンツの暗号化"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "ja": "コンテンツを暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 144, encoded to base64url [RFC4648] as Figure 145.",
      "ja": "o JWE保護ヘッダー。この例では、図144のヘッダーを使用し、図145のようにbase64url [RFC4648]にエンコードします。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"A256GCMKW\",\n  \"kid\": \"18ec08e1-bfa9-4d95-b205-2b4dd1d4321d\",\n  \"tag\": \"kfPduVQ3T3H6vnewt--ksw\",\n  \"iv\": \"KkYT0GX_2jHlfqN_\",\n  \"enc\": \"A128CBC-HS256\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 144: JWE Protected Header JSON",
      "ja": "図144：JWE保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJBMjU2R0NNS1ciLCJraWQiOiIxOGVjMDhlMS1iZmE5LTRkOTUtYj IwNS0yYjRkZDFkNDMyMWQiLCJ0YWciOiJrZlBkdVZRM1QzSDZ2bmV3dC0ta3N3 IiwiaXYiOiJLa1lUMEdYXzJqSGxmcU5fIiwiZW5jIjoiQTEyOENCQy1IUzI1Ni J9",
      "ja": "eyJhbGciOiJBMjU2R0NNS1ciLCJraWQiOiIxOGVjMDhlMS1iZmE5LTRkOTUtYj IwNS0yYjRkZDFkNDMyMWQiLCJ0YWciOiJrZlBkdVZRM1QzSDZ2bmV3dC0ta3N3 IiwiaXYiOiJLa1lUMEdYXzJqSGxmcU5fIiwiZW5jIjoiQTEyOENCQy1IUzI1Ni J9"
    },
    {
      "indent": 12,
      "text": "Figure 145: JWE Protected Header, base64url-encoded",
      "ja": "図145：JWE保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext (Figure 72) with the following:",
      "ja": "以下を使用して、平文（図72）でコンテンツ暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 139);",
      "ja": "o チェック（図139）;"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 140); and",
      "ja": "o 初期化ベクトル（図140）;そして"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 145) as authenticated data",
      "ja": "o 認証済みデータとしてのJWE保護ヘッダー（図145）"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 146.",
      "ja": "o 図146の暗号文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 147.",
      "ja": "o 図147の認証タグ。"
    },
    {
      "indent": 3,
      "text": "Jf5p9-ZhJlJy_IQ_byKFmI0Ro7w7G1QiaZpI8OaiVgD8EqoDZHyFKFBupS8iaE eVIgMqWmsuJKuoVgzR3YfzoMd3GxEm3VxNhzWyWtZKX0gxKdy6HgLvqoGNbZCz LjqcpDiF8q2_62EVAbr2uSc2oaxFmFuIQHLcqAHxy51449xkjZ7ewzZaGV3eFq hpco8o4DijXaG5_7kp3h2cajRfDgymuxUbWgLqaeNQaJtvJmSMFuEOSAzw9Hde b6yhdTynCRmu-kqtO5Dec4lT2OMZKpnxc_F1_4yDJFcqb5CiDSmA-psB2k0Jtj xAj4UPI61oONK7zzFIu4gBfjJCndsZfdvG7h8wGjV98QhrKEnR7xKZ3KCr0_qR 1B-gxpNk3xWU",
      "ja": "Jf5p9-ZhJlJy_IQ_byKFmI0Ro7w7G1QiaZpI8OaiVgD8EqoDZHyFKFBupS8iaE eVIgMqWmsuJKuoVgzR3YfzoMd3GxEm3VxNhzWyWtZKX0gxKdy6HgLvqoGNbZCz LjqcpDiF8q2_62EVAbr2uSc2oaxFmFuIQHLcqAHxy51449xkjZ7ewzZaGV3eFq hpco8o4DijXaG5_7kp3h2cajRfDgymuxUbWgLqaeNQaJtvJmSMFuEOSAzw9Hde b6yhdTynCRmu-kqtO5Dec4lT2OMZKpnxc_F1_4yDJFcqb5CiDSmA-psB2k0Jtj xAj4UPI61oONK7zzFIu4gBfjJCndsZfdvG7h8wGjV98QhrKEnR7xKZ3KCr0_qR 1B-gxpNk3xWU"
    },
    {
      "indent": 17,
      "text": "Figure 146: Ciphertext, base64url-encoded",
      "ja": "図146：base64urlエンコードされた暗号文"
    },
    {
      "indent": 3,
      "text": "DKW7jrb4WaRSNfbXVPlT5g",
      "ja": "DKW7jrb4WaRSNfbXVPlT5g"
    },
    {
      "indent": 13,
      "text": "Figure 147: Authentication Tag, base64url-encoded",
      "ja": "Figure 147: Authentication Tag, base64url-encoded"
    },
    {
      "indent": 0,
      "text": "5.7.5. Output Results",
      "section_title": true,
      "ja": "5.7.5. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "ja": "以下は、結果のJWEオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 145)",
      "ja": "o JWE保護ヘッダー（図145）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 142)",
      "ja": "o 暗号化されたキー（図142）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 140)",
      "ja": "o Initialization Vector (Figure 140)"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 146)",
      "ja": "o 暗号文（図146）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 147)",
      "ja": "o Authentication Tag (Figure 147)"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "ja": "JWE Compact Serializationを使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJBMjU2R0NNS1ciLCJraWQiOiIxOGVjMDhlMS1iZmE5LTRkOTUtYj IwNS0yYjRkZDFkNDMyMWQiLCJ0YWciOiJrZlBkdVZRM1QzSDZ2bmV3dC0ta3N3 IiwiaXYiOiJLa1lUMEdYXzJqSGxmcU5fIiwiZW5jIjoiQTEyOENCQy1IUzI1Ni J9 . lJf3HbOApxMEBkCMOoTnnABxs_CvTWUmZQ2ElLvYNok . gz6NjyEFNm_vm8Gj6FwoFQ . Jf5p9-ZhJlJy_IQ_byKFmI0Ro7w7G1QiaZpI8OaiVgD8EqoDZHyFKFBupS8iaE eVIgMqWmsuJKuoVgzR3YfzoMd3GxEm3VxNhzWyWtZKX0gxKdy6HgLvqoGNbZCz LjqcpDiF8q2_62EVAbr2uSc2oaxFmFuIQHLcqAHxy51449xkjZ7ewzZaGV3eFq hpco8o4DijXaG5_7kp3h2cajRfDgymuxUbWgLqaeNQaJtvJmSMFuEOSAzw9Hde b6yhdTynCRmu-kqtO5Dec4lT2OMZKpnxc_F1_4yDJFcqb5CiDSmA-psB2k0Jtj xAj4UPI61oONK7zzFIu4gBfjJCndsZfdvG7h8wGjV98QhrKEnR7xKZ3KCr0_qR 1B-gxpNk3xWU . DKW7jrb4WaRSNfbXVPlT5g",
      "ja": "eyJhbGciOiJBMjU2R0NNS1ciLCJraWQiOiIxOGVjMDhlMS1iZmE5LTRkOTUtYj IwNS0yYjRkZDFkNDMyMWQiLCJ0YWciOiJrZlBkdVZRM1QzSDZ2bmV3dC0ta3N3 IiwiaXYiOiJLa1lUMEdYXzJqSGxmcU5fIiwiZW5jIjoiQTEyOENCQy1IUzI1Ni J9。 lJf3HbOApxMEBkCMOoTnnABxs_CvTWUmZQ2ElLvYNok。 gz6NjyEFNm_vm8Gj6FwoFQ。 Jf5p9-ZhJlJy_IQ_byKFmI0Ro7w7G1QiaZpI8OaiVgD8EqoDZHyFKFBupS8iaE eVIgMqWmsuJKuoVgzR3YfzoMd3GxEm3VxNhzWyWtZKX0gxKdy6HgLvqoGNbZCz LjqcpDiF8q2_62EVAbr2uSc2oaxFmFuIQHLcqAHxy51449xkjZ7ewzZaGV3eFq hpco8o4DijXaG5_7kp3h2cajRfDgymuxUbWgLqaeNQaJtvJmSMFuEOSAzw9Hde b6yhdTynCRmu-kqtO5Dec4lT2OMZKpnxc_F1_4yDJFcqb5CiDSmA-psB2k0Jtj xAj4UPI61oONK7zzFIu4gBfjJCndsZfdvG7h8wGjV98QhrKEnR7xKZ3KCr0_qR 1B-gxpNk3xWU。 DKW7jrb4WaRSNfbXVPlT5g"
    },
    {
      "indent": 19,
      "text": "Figure 148: JWE Compact Serialization",
      "ja": "図148：JWEコンパクトシリアライゼーション"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "ja": "一般的なJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"lJf3HbOApxMEBkCMOoTnnABxs_CvTWUmZQ2ElL\n          vYNok\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJBMjU2R0NNS1ciLCJraWQiOiIxOGVjMDhlMS\n      1iZmE5LTRkOTUtYjIwNS0yYjRkZDFkNDMyMWQiLCJ0YWciOiJrZlBkdV\n      ZRM1QzSDZ2bmV3dC0ta3N3IiwiaXYiOiJLa1lUMEdYXzJqSGxmcU5fIi\n      wiZW5jIjoiQTEyOENCQy1IUzI1NiJ9\",\n  \"iv\": \"gz6NjyEFNm_vm8Gj6FwoFQ\",\n  \"ciphertext\": \"Jf5p9-ZhJlJy_IQ_byKFmI0Ro7w7G1QiaZpI8OaiVgD8E\n      qoDZHyFKFBupS8iaEeVIgMqWmsuJKuoVgzR3YfzoMd3GxEm3VxNhzWyW\n      tZKX0gxKdy6HgLvqoGNbZCzLjqcpDiF8q2_62EVAbr2uSc2oaxFmFuIQ\n      HLcqAHxy51449xkjZ7ewzZaGV3eFqhpco8o4DijXaG5_7kp3h2cajRfD\n      gymuxUbWgLqaeNQaJtvJmSMFuEOSAzw9Hdeb6yhdTynCRmu-kqtO5Dec\n      4lT2OMZKpnxc_F1_4yDJFcqb5CiDSmA-psB2k0JtjxAj4UPI61oONK7z\n      zFIu4gBfjJCndsZfdvG7h8wGjV98QhrKEnR7xKZ3KCr0_qR1B-gxpNk3\n      xWU\",\n  \"tag\": \"DKW7jrb4WaRSNfbXVPlT5g\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 149: General JWE JSON Serialization",
      "ja": "図149：一般的なJWE JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "ja": "平坦化されたJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJBMjU2R0NNS1ciLCJpdiI6IktrWVQwR1hfMm\n      pIbGZxTl8iLCJraWQiOiIxOGVjMDhlMS1iZmE5LTRkOTUtYjIwNS0yYj\n      RkZDFkNDMyMWQiLCJ0YWciOiJrZlBkdVZRM1QzSDZ2bmV3dC0ta3N3Ii\n      wiZW5jIjoiQTEyOENCQy1IUzI1NiJ9\",\n  \"encrypted_key\": \"lJf3HbOApxMEBkCMOoTnnABxs_CvTWUmZQ2ElLvYNo\n      k\",\n  \"iv\": \"gz6NjyEFNm_vm8Gj6FwoFQ\",\n  \"ciphertext\": \"Jf5p9-ZhJlJy_IQ_byKFmI0Ro7w7G1QiaZpI8OaiVgD8E\n      qoDZHyFKFBupS8iaEeVIgMqWmsuJKuoVgzR3YfzoMd3GxEm3VxNhzWyW\n      tZKX0gxKdy6HgLvqoGNbZCzLjqcpDiF8q2_62EVAbr2uSc2oaxFmFuIQ\n      HLcqAHxy51449xkjZ7ewzZaGV3eFqhpco8o4DijXaG5_7kp3h2cajRfD\n      gymuxUbWgLqaeNQaJtvJmSMFuEOSAzw9Hdeb6yhdTynCRmu-kqtO5Dec\n      4lT2OMZKpnxc_F1_4yDJFcqb5CiDSmA-psB2k0JtjxAj4UPI61oONK7z\n      zFIu4gBfjJCndsZfdvG7h8wGjV98QhrKEnR7xKZ3KCr0_qR1B-gxpNk3\n      xWU\",\n  \"tag\": \"NvBveHr_vonkvflfnUrmBQ\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 150: Flattened JWE JSON Serialization",
      "ja": "図150：フラット化されたJWE JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "5.8. Key Wrap Using AES-KeyWrap with AES-GCM",
      "section_title": true,
      "ja": "5.8. AES-GCMでAES-KeyWrapを使用するキーラップ"
    },
    {
      "indent": 3,
      "text": "The following example illustrates content encryption using the \"A128KW\" (AES-128-KeyWrap) key encryption algorithm and the \"A128GCM\" (AES-128-GCM) content encryption algorithm.",
      "ja": "The following example illustrates content encryption using the \"A128KW\" (AES-128-KeyWrap) key encryption algorithm and the \"A128GCM\" (AES-128-GCM) content encryption algorithm."
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "Note that whitespace is added for readability as described in Section 1.1."
    },
    {
      "indent": 0,
      "text": "5.8.1. Input Factors",
      "section_title": true,
      "ja": "5.8.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "ja": "暗号化プロセスを開始する前に、以下が提供されます。"
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "ja": "o Plaintext content; this example uses the content from Figure 72."
    },
    {
      "indent": 3,
      "text": "o AES symmetric key; this example uses the key from Figure 151.",
      "ja": "o AES対称鍵。この例では、図151のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"A128KW\".",
      "ja": "o 「A128KW」の「alg」パラメータ。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128GCM\".",
      "ja": "o 「A128GCM」の「enc」パラメータ。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"oct\",\n  \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n  \"use\": \"enc\",\n  \"alg\": \"A128KW\",\n  \"k\": \"GZy6sIZ6wl9NJOKB-jnmVQ\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 24,
      "text": "Figure 151: AES 128-Bit Key",
      "ja": "図151：AES 128ビットキー"
    },
    {
      "indent": 0,
      "text": "5.8.2. Generated Factors",
      "section_title": true,
      "ja": "5.8.2. Generated Factors"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "ja": "暗号化する前に、次のものが生成されます。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key; this example uses the key from Figure 152.",
      "ja": "o コンテンツ暗号化キーとしてのAES対称キー。この例では、図152のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 153.",
      "ja": "o Initialization Vector; this example uses the Initialization Vector from Figure 153."
    },
    {
      "indent": 3,
      "text": "aY5_Ghmk9KxWPBLu_glx1w",
      "ja": "aY5_Ghmk9KxWPBLu_glx1w"
    },
    {
      "indent": 11,
      "text": "Figure 152: Content Encryption Key, base64url-encoded",
      "ja": "図152：base64urlエンコードされたコンテンツ暗号化キー"
    },
    {
      "indent": 3,
      "text": "Qx0pmsDa8KnJc9Jo",
      "ja": "Qx0pmsDa8KnJc9Jo"
    },
    {
      "indent": 11,
      "text": "Figure 153: Initialization Vector, base64url-encoded",
      "ja": "図153：base64urlエンコードされた初期化ベクトル"
    },
    {
      "indent": 0,
      "text": "5.8.3. Encrypting the Key",
      "section_title": true,
      "ja": "5.8.3. Encrypting the Key"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 152) with the AES symmetric key (Figure 151) produces the following Encrypted Key:",
      "ja": "AES対称キー（図151）を使用してCEK（図152）でキー暗号化操作を実行すると、次の暗号化キーが生成されます。"
    },
    {
      "indent": 3,
      "text": "CBI6oDw8MydIx1IBntf_lQcw2MmJKIQx",
      "ja": "CBI6oDw8MydIx1IBntf_lQcw2MmJKIQx"
    },
    {
      "indent": 15,
      "text": "Figure 154: Encrypted Key, base64url-encoded",
      "ja": "Figure 154: Encrypted Key, base64url-encoded"
    },
    {
      "indent": 0,
      "text": "5.8.4. Encrypting the Content",
      "section_title": true,
      "ja": "5.8.4. Encrypting the Content"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "ja": "コンテンツを暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 155, encoded to base64url [RFC4648] as Figure 156.",
      "ja": "o JWE保護ヘッダー。この例では、図156のbase64url [RFC4648]にエンコードされた図155のヘッダーを使用します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"A128KW\",\n  \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n  \"enc\": \"A128GCM\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 155: JWE Protected Header JSON",
      "ja": "図155：JWE保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04MzMyLTQzZDktYTQ2OC\n04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 156: JWE Protected Header, base64url-encoded",
      "ja": "図156：base64urlエンコードされたJWE保護ヘッダー"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption over the Plaintext (Figure 72) with the following:",
      "ja": "プレーンテキスト（図72）でコンテンツの暗号化を次のように実行します。"
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 152);",
      "ja": "o チェック（図152）;"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 153); and",
      "ja": "o 初期化ベクトル（図153）;そして"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 156) as authenticated data",
      "ja": "o 認証済みデータとしてのJWE保護ヘッダー（図156）"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 157.",
      "ja": "o 図157の暗号文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 158.",
      "ja": "o 図158の認証タグ。"
    },
    {
      "indent": 3,
      "text": "AwliP-KmWgsZ37BvzCefNen6VTbRK3QMA4TkvRkH0tP1bTdhtFJgJxeVmJkLD6 1A1hnWGetdg11c9ADsnWgL56NyxwSYjU1ZEHcGkd3EkU0vjHi9gTlb90qSYFfe F0LwkcTtjbYKCsiNJQkcIp1yeM03OmuiYSoYJVSpf7ej6zaYcMv3WwdxDFl8RE wOhNImk2Xld2JXq6BR53TSFkyT7PwVLuq-1GwtGHlQeg7gDT6xW0JqHDPn_H-p uQsmthc9Zg0ojmJfqqFvETUxLAF-KjcBTS5dNy6egwkYtOt8EIHK-oEsKYtZRa a8Z7MOZ7UGxGIMvEmxrGCPeJa14slv2-gaqK0kEThkaSqdYw0FkQZF",
      "ja": "AwliP-KmWgsZ37BvzCefNen6VTbRK3QMA4TkvRkH0tP1bTdhtFJgJxeVmJkLD6 1A1hnWGetdg11c9ADsnWgL56NyxwSYjU1ZEHcGkd3EkU0vjHi9gTlb90qSYFfe F0LwkcTtjbYKCsiNJQkcIp1yeM03OmuiYSoYJVSpf7ej6zaYcMv3WwdxDFl8RE wOhNImk2Xld2JXq6BR53TSFkyT7PwVLuq-1GwtGHlQeg7gDT6xW0JqHDPn_H-p uQsmthc9Zg0ojmJfqqFvETUxLAF-KjcBTS5dNy6egwkYtOt8EIHK-oEsKYtZRa a8Z7MOZ7UGxGIMvEmxrGCPeJa14slv2-gaqK0kEThkaSqdYw0FkQZF"
    },
    {
      "indent": 17,
      "text": "Figure 157: Ciphertext, base64url-encoded",
      "ja": "図157：暗号文、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "ER7MWJZ1FBI_NKvn7Zb1Lw",
      "ja": "ER7MWJZ1FBI_NKvn7Zb1Lw"
    },
    {
      "indent": 13,
      "text": "Figure 158: Authentication Tag, base64url-encoded",
      "ja": "図158：認証タグ、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.8.5. Output Results",
      "section_title": true,
      "ja": "5.8.5. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "ja": "以下は、結果のJWEオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 156)",
      "ja": "o JWE保護ヘッダー（図156）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 154)",
      "ja": "o Encrypted Key (Figure 154)"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 153)",
      "ja": "o Initialization Vector (Figure 153)"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 157)",
      "ja": "o Ciphertext (Figure 157)"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 158)",
      "ja": "o 認証タグ（図158）"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "ja": "JWE Compact Serializationを使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04MzMyLTQzZDktYTQ2OC 04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn0 . CBI6oDw8MydIx1IBntf_lQcw2MmJKIQx . Qx0pmsDa8KnJc9Jo . AwliP-KmWgsZ37BvzCefNen6VTbRK3QMA4TkvRkH0tP1bTdhtFJgJxeVmJkLD6 1A1hnWGetdg11c9ADsnWgL56NyxwSYjU1ZEHcGkd3EkU0vjHi9gTlb90qSYFfe F0LwkcTtjbYKCsiNJQkcIp1yeM03OmuiYSoYJVSpf7ej6zaYcMv3WwdxDFl8RE wOhNImk2Xld2JXq6BR53TSFkyT7PwVLuq-1GwtGHlQeg7gDT6xW0JqHDPn_H-p uQsmthc9Zg0ojmJfqqFvETUxLAF-KjcBTS5dNy6egwkYtOt8EIHK-oEsKYtZRa a8Z7MOZ7UGxGIMvEmxrGCPeJa14slv2-gaqK0kEThkaSqdYw0FkQZF . ER7MWJZ1FBI_NKvn7Zb1Lw",
      "ja": "eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04MzMyLTQzZDktYTQ2OC 04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn0 . CBI6oDw8MydIx1IBntf_lQcw2MmJKIQx . Qx0pmsDa8KnJc9Jo . AwliP-KmWgsZ37BvzCefNen6VTbRK3QMA4TkvRkH0tP1bTdhtFJgJxeVmJkLD6 1A1hnWGetdg11c9ADsnWgL56NyxwSYjU1ZEHcGkd3EkU0vjHi9gTlb90qSYFfe F0LwkcTtjbYKCsiNJQkcIp1yeM03OmuiYSoYJVSpf7ej6zaYcMv3WwdxDFl8RE wOhNImk2Xld2JXq6BR53TSFkyT7PwVLuq-1GwtGHlQeg7gDT6xW0JqHDPn_H-p uQsmthc9Zg0ojmJfqqFvETUxLAF-KjcBTS5dNy6egwkYtOt8EIHK-oEsKYtZRa a8Z7MOZ7UGxGIMvEmxrGCPeJa14slv2-gaqK0kEThkaSqdYw0FkQZF . ER7MWJZ1FBI_NKvn7Zb1Lw"
    },
    {
      "indent": 19,
      "text": "Figure 159: JWE Compact Serialization",
      "ja": "図159：JWEコンパクトシリアライゼーション"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "ja": "一般的なJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"CBI6oDw8MydIx1IBntf_lQcw2MmJKIQx\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04Mz\n      MyLTQzZDktYTQ2OC04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn\n      0\",\n  \"iv\": \"Qx0pmsDa8KnJc9Jo\",\n  \"ciphertext\": \"AwliP-KmWgsZ37BvzCefNen6VTbRK3QMA4TkvRkH0tP1b\n      TdhtFJgJxeVmJkLD61A1hnWGetdg11c9ADsnWgL56NyxwSYjU1ZEHcGk\n      d3EkU0vjHi9gTlb90qSYFfeF0LwkcTtjbYKCsiNJQkcIp1yeM03OmuiY\n      SoYJVSpf7ej6zaYcMv3WwdxDFl8REwOhNImk2Xld2JXq6BR53TSFkyT7\n      PwVLuq-1GwtGHlQeg7gDT6xW0JqHDPn_H-puQsmthc9Zg0ojmJfqqFvE\n      TUxLAF-KjcBTS5dNy6egwkYtOt8EIHK-oEsKYtZRaa8Z7MOZ7UGxGIMv\n      EmxrGCPeJa14slv2-gaqK0kEThkaSqdYw0FkQZF\",\n  \"tag\": \"ER7MWJZ1FBI_NKvn7Zb1Lw\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 160: General JWE JSON Serialization",
      "ja": "図160：一般的なJWE JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "ja": "平坦化されたJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04Mz\n      MyLTQzZDktYTQ2OC04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn\n      0\",\n  \"encrypted_key\": \"CBI6oDw8MydIx1IBntf_lQcw2MmJKIQx\",\n  \"iv\": \"Qx0pmsDa8KnJc9Jo\",\n  \"ciphertext\": \"AwliP-KmWgsZ37BvzCefNen6VTbRK3QMA4TkvRkH0tP1b\n      TdhtFJgJxeVmJkLD61A1hnWGetdg11c9ADsnWgL56NyxwSYjU1ZEHcGk\n      d3EkU0vjHi9gTlb90qSYFfeF0LwkcTtjbYKCsiNJQkcIp1yeM03OmuiY\n      SoYJVSpf7ej6zaYcMv3WwdxDFl8REwOhNImk2Xld2JXq6BR53TSFkyT7\n      PwVLuq-1GwtGHlQeg7gDT6xW0JqHDPn_H-puQsmthc9Zg0ojmJfqqFvE\n      TUxLAF-KjcBTS5dNy6egwkYtOt8EIHK-oEsKYtZRaa8Z7MOZ7UGxGIMv\n      EmxrGCPeJa14slv2-gaqK0kEThkaSqdYw0FkQZF\",\n  \"tag\": \"ER7MWJZ1FBI_NKvn7Zb1Lw\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 161: Flattened JWE JSON Serialization",
      "ja": "図161：フラット化されたJWE JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "5.9. Compressed Content",
      "section_title": true,
      "ja": "5.9. 圧縮されたコンテンツ"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content that is first compressed. It reuses the AES symmetric key, key encryption algorithm, and content encryption algorithm from Section 5.8.",
      "ja": "この例は、最初に圧縮されるコンテンツの暗号化を示しています。セクション5.8のAES対称鍵、鍵暗号化アルゴリズム、およびコンテンツ暗号化アルゴリズムを再利用します。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.9.1. Input Factors",
      "section_title": true,
      "ja": "5.9.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "ja": "The following are supplied before beginning the encryption process:"
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "ja": "o 平文コンテンツ;この例では、図72のコンテンツを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Recipient encryption key; this example uses the key from Figure 151.",
      "ja": "o 受信者の暗号化キー。この例では、図151のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Key encryption algorithm; this example uses \"A128KW\".",
      "ja": "o 鍵暗号化アルゴリズム。この例では「A128KW」を使用しています。"
    },
    {
      "indent": 3,
      "text": "o Content encryption algorithm; this example uses \"A128GCM\".",
      "ja": "o コンテンツ暗号化アルゴリズム;この例では「A128GCM」を使用しています。"
    },
    {
      "indent": 3,
      "text": "o \"zip\" parameter of \"DEF\".",
      "ja": "o 「DEF」の「zip」パラメータ。"
    },
    {
      "indent": 0,
      "text": "5.9.2. Generated Factors",
      "section_title": true,
      "ja": "5.9.2. 生成された要因"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "ja": "暗号化する前に、次のものが生成されます。"
    },
    {
      "indent": 3,
      "text": "o Compressed Plaintext from the original Plaintext content; compressing Figure 72 using the DEFLATE [RFC1951] algorithm produces the compressed Plaintext from Figure 162.",
      "ja": "o 元の平文コンテンツからの圧縮平文。 DEFLATE [RFC1951]アルゴリズムを使用して図72を圧縮すると、図162から圧縮されたプレーンテキストが生成されます。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 163.",
      "ja": "o コンテンツ暗号化キー（CEK）としてのAES対称キー。この例では、図163のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 164.",
      "ja": "o 初期化ベクトル;この例では、図164の初期化ベクトルを使用しています。"
    },
    {
      "indent": 3,
      "text": "bY_BDcIwDEVX-QNU3QEOrIA4pqlDokYxchxVvbEDGzIJbioOSJwc-f___HPjBu\n8KVFpVtAplVE1-wZo0YjNZo3C7R5v72pV5f5X382VWjYQpqZKAyjziZOr2B7kQ\nPSy6oZIXUnDYbVKN4jNXi2u0yB7t1qSHTjmMODf9QgvrDzfTIQXnyQRuUya4zI\nWG3vTOdir0v7BRHFYWq3k1k1A_gSDJqtcBF-GZxw8",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 162: Compressed Plaintext, base64url-encoded",
      "ja": "図162：圧縮されたプレーンテキスト、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "hC-MpLZSuwWv8sexS6ydfw",
      "ja": "hC-MpLZSuwWv8sexS6ydfw"
    },
    {
      "indent": 11,
      "text": "Figure 163: Content Encryption Key, base64url-encoded",
      "ja": "図163：base64urlエンコードされたコンテンツ暗号化キー"
    },
    {
      "indent": 3,
      "text": "p9pUq6XHY0jfEZIl",
      "ja": "p9pUq6XHY0jfEZIl"
    },
    {
      "indent": 11,
      "text": "Figure 164: Initialization Vector, base64url-encoded",
      "ja": "図164：base64urlエンコードされた初期化ベクトル"
    },
    {
      "indent": 0,
      "text": "5.9.3. Encrypting the Key",
      "section_title": true,
      "ja": "5.9.3. キーの暗号化"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 163) with the AES symmetric key (Figure 151) produces the following Encrypted Key:",
      "ja": "AES対称キー（図151）を使用してCEK（図163）でキー暗号化操作を実行すると、次の暗号化キーが生成されます。"
    },
    {
      "indent": 3,
      "text": "5vUT2WOtQxKWcekM_IzVQwkGgzlFDwPi",
      "ja": "5vUT2WOtQxKWcekM_IzVQwkGgzlFDwPi"
    },
    {
      "indent": 15,
      "text": "Figure 165: Encrypted Key, base64url-encoded",
      "ja": "図165：暗号化されたキー、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.9.4. Encrypting the Content",
      "section_title": true,
      "ja": "5.9.4. コンテンツの暗号化"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "ja": "コンテンツを暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 166, encoded to base64url [RFC4648] as Figure 167.",
      "ja": "o JWE保護ヘッダー。この例では、図167のbase64url [RFC4648]にエンコードされた図166のヘッダーを使用します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"A128KW\",\n  \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n  \"enc\": \"A128GCM\",\n  \"zip\": \"DEF\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 166: JWE Protected Header JSON",
      "ja": "図166：JWE保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04MzMyLTQzZDktYTQ2OC\n04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIiwiemlwIjoiREVGIn0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 167: JWE Protected Header, base64url-encoded",
      "ja": "図167：JWE保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the compressed Plaintext (Figure 162, encoded as an octet string) with the following:",
      "ja": "以下を使用して、圧縮されたプレーンテキスト（図162、オクテット文字列としてエンコード）に対してコンテンツ暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 163);",
      "ja": "o チェック（図163）;"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 164); and",
      "ja": "o 初期化ベクトル（図164）;そして"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 167) as authenticated data",
      "ja": "o JWE Protected Header (Figure 167) as authenticated data"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 168.",
      "ja": "o 図168の暗号文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 169.",
      "ja": "o 図169の認証タグ。"
    },
    {
      "indent": 3,
      "text": "HbDtOsdai1oYziSx25KEeTxmwnh8L8jKMFNc1k3zmMI6VB8hry57tDZ61jXyez\nSPt0fdLVfe6Jf5y5-JaCap_JQBcb5opbmT60uWGml8blyiMQmOn9J--XhhlYg0\nm-BHaqfDO5iTOWxPxFMUedx7WCy8mxgDHj0aBMG6152PsM-w5E_o2B3jDbrYBK\nhpYA7qi3AyijnCJ7BP9rr3U8kxExCpG3mK420TjOw",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 168: Ciphertext, base64url-encoded",
      "ja": "図168：base64urlでエンコードされた暗号文"
    },
    {
      "indent": 3,
      "text": "VILuUwuIxaLVmh5X-T7kmA",
      "ja": "VILuUwuIxaLVmh5X-T7kmA"
    },
    {
      "indent": 13,
      "text": "Figure 169: Authentication Tag, base64url-encoded",
      "ja": "図169：認証タグ、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.9.5. Output Results",
      "section_title": true,
      "ja": "5.9.5. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "ja": "以下は、結果のJWEオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 167)",
      "ja": "o JWE保護ヘッダー（図167）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 165)",
      "ja": "o 暗号化されたキー（図165）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 164)",
      "ja": "o 初期化ベクトル（図164）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 168)",
      "ja": "o 暗号文（図168）"
    },
    {
      "indent": 0,
      "text": " o Authentication Tag (Figure 169) The resulting JWE object using the JWE Compact Serialization:",
      "ja": "o認証タグ（図169）JWE Compact Serializationを使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04MzMyLTQzZDktYTQ2OC 04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIiwiemlwIjoiREVGIn0 . 5vUT2WOtQxKWcekM_IzVQwkGgzlFDwPi . p9pUq6XHY0jfEZIl . HbDtOsdai1oYziSx25KEeTxmwnh8L8jKMFNc1k3zmMI6VB8hry57tDZ61jXyez SPt0fdLVfe6Jf5y5-JaCap_JQBcb5opbmT60uWGml8blyiMQmOn9J--XhhlYg0 m-BHaqfDO5iTOWxPxFMUedx7WCy8mxgDHj0aBMG6152PsM-w5E_o2B3jDbrYBK hpYA7qi3AyijnCJ7BP9rr3U8kxExCpG3mK420TjOw . VILuUwuIxaLVmh5X-T7kmA",
      "ja": "eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04MzMyLTQzZDktYTQ2OC 04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIiwiemlwIjoiREVGIn0。 5vUT2WOtQxKWcekM_IzVQwkGgzlFDwPi。 p9pUq6XHY0jfEZIl。 HbDtOsdai1oYziSx25KEeTxmwnh8L8jKMFNc1k3zmMI6VB8hry57tDZ61jXyez SPt0fdLVfe6Jf5y5-JaCap_JQBcb5opbmT60uWGml8blyiMQmOn9J  -  XhhlYg0 M-BHaqfDO5iTOWxPxFMUedx7WCy8mxgDHj0aBMG6152PsM-w5E_o2B3jDbrYBK hpYA7qi3AyijnCJ7BP9rr3U8kxExCpG3mK420TjOw。 VILuUwuIxaLVmh5X-T7kmA"
    },
    {
      "indent": 19,
      "text": "Figure 170: JWE Compact Serialization",
      "ja": "Figure 170: JWE Compact Serialization"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "ja": "一般的なJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"5vUT2WOtQxKWcekM_IzVQwkGgzlFDwPi\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04Mz\n      MyLTQzZDktYTQ2OC04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIi\n      wiemlwIjoiREVGIn0\",\n  \"iv\": \"p9pUq6XHY0jfEZIl\",\n  \"ciphertext\": \"HbDtOsdai1oYziSx25KEeTxmwnh8L8jKMFNc1k3zmMI6V\n      B8hry57tDZ61jXyezSPt0fdLVfe6Jf5y5-JaCap_JQBcb5opbmT60uWG\n      ml8blyiMQmOn9J--XhhlYg0m-BHaqfDO5iTOWxPxFMUedx7WCy8mxgDH\n      j0aBMG6152PsM-w5E_o2B3jDbrYBKhpYA7qi3AyijnCJ7BP9rr3U8kxE\n      xCpG3mK420TjOw\",\n  \"tag\": \"VILuUwuIxaLVmh5X-T7kmA\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 171: General JWE JSON Serialization",
      "ja": "図171：一般的なJWE JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "ja": "The resulting JWE object using the flattened JWE JSON Serialization:"
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04Mz\n      MyLTQzZDktYTQ2OC04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIi\n      wiemlwIjoiREVGIn0\",\n  \"encrypted_key\": \"5vUT2WOtQxKWcekM_IzVQwkGgzlFDwPi\",\n  \"iv\": \"p9pUq6XHY0jfEZIl\",\n  \"ciphertext\": \"HbDtOsdai1oYziSx25KEeTxmwnh8L8jKMFNc1k3zmMI6V\n      B8hry57tDZ61jXyezSPt0fdLVfe6Jf5y5-JaCap_JQBcb5opbmT60uWG\n      ml8blyiMQmOn9J--XhhlYg0m-BHaqfDO5iTOWxPxFMUedx7WCy8mxgDH\n      j0aBMG6152PsM-w5E_o2B3jDbrYBKhpYA7qi3AyijnCJ7BP9rr3U8kxE\n      xCpG3mK420TjOw\",\n  \"tag\": \"VILuUwuIxaLVmh5X-T7kmA\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 172: Flattened JWE JSON Serialization",
      "ja": "図172：フラット化されたJWE JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "5.10. Including Additional Authenticated Data",
      "section_title": true,
      "ja": "5.10. 追加の認証済みデータを含める"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content that includes additional authenticated data. As this example includes an additional top-level property not present in the JWE Compact Serialization, only the flattened JWE JSON Serialization and general JWE JSON Serialization are possible.",
      "ja": "この例は、追加の認証済みデータを含むコンテンツの暗号化を示しています。この例には、JWE Compact Serializationにはない追加のトップレベルプロパティが含まれているため、フラット化されたJWE JSONシリアル化と一般的なJWE JSONシリアル化のみが可能です。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.10.1. Input Factors",
      "section_title": true,
      "ja": "5.10.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "ja": "暗号化プロセスを開始する前に、以下が提供されます。"
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "ja": "o 平文コンテンツ;この例では、図72のコンテンツを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Recipient encryption key; this example uses the key from Figure 151.",
      "ja": "o Recipient encryption key; this example uses the key from Figure 151."
    },
    {
      "indent": 3,
      "text": "o Key encryption algorithm; this example uses \"A128KW\".",
      "ja": "o 鍵暗号化アルゴリズム。この例では「A128KW」を使用しています。"
    },
    {
      "indent": 3,
      "text": "o Content encryption algorithm; this example uses \"A128GCM\".",
      "ja": "o コンテンツ暗号化アルゴリズム;この例では「A128GCM」を使用しています。"
    },
    {
      "indent": 3,
      "text": "o Additional Authenticated Data; this example uses a vCard [RFC7095] from Figure 173, serialized to UTF-8.",
      "ja": "o 追加の認証済みデータ;この例では、UTF-8にシリアル化された、図173のvCard [RFC7095]を使用しています。"
    },
    {
      "indent": 3,
      "text": "[\n  \"vcard\",\n  [\n    [ \"version\", {}, \"text\", \"4.0\" ],\n    [ \"fn\", {}, \"text\", \"Meriadoc Brandybuck\" ],\n    [ \"n\", {},\n      \"text\", [\n        \"Brandybuck\", \"Meriadoc\", \"Mr.\", \"\"\n      ]\n    ],\n    [ \"bday\", {}, \"text\", \"TA 2982\" ],\n    [ \"gender\", {}, \"text\", \"M\" ]\n  ]\n]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Figure 173: Additional Authenticated Data, in JSON Format",
      "ja": "図173：JSON形式の追加の認証済みデータ"
    },
    {
      "indent": 3,
      "text": "NOTE: Whitespace between JSON values was added for readability.",
      "ja": "注：JSON値間の空白は、読みやすくするために追加されました。"
    },
    {
      "indent": 0,
      "text": "5.10.2. Generated Factors",
      "section_title": true,
      "ja": "5.10.2. 生成された要因"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "ja": "暗号化する前に、次のものが生成されます。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 174.",
      "ja": "o コンテンツ暗号化キー（CEK）としてのAES対称キー。この例では、図174のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 175.",
      "ja": "o 初期化ベクトル;この例では、図175の初期化ベクトルを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Encoded Additional Authenticated Data (AAD); this example uses the Additional Authenticated Data from Figure 173, encoded to base64url [RFC4648] as Figure 176.",
      "ja": "o エンコードされた追加認証データ（AAD）;この例では、図176のbase64url [RFC4648]にエンコードされた、図173の追加認証データを使用しています。"
    },
    {
      "indent": 3,
      "text": "75m1ALsYv10pZTKPWrsqdg",
      "ja": "75m1ALsYv10pZTKPWrsqdg"
    },
    {
      "indent": 11,
      "text": "Figure 174: Content Encryption Key, base64url-encoded",
      "ja": "図174：base64urlエンコードされたコンテンツ暗号化キー"
    },
    {
      "indent": 3,
      "text": "veCx9ece2orS7c_N",
      "ja": "ゔぇＣｘ９えせ２おｒＳ７ｃ＿ん"
    },
    {
      "indent": 11,
      "text": "Figure 175: Initialization Vector, base64url-encoded",
      "ja": "図175：base64urlエンコードされた初期化ベクトル"
    },
    {
      "indent": 3,
      "text": "WyJ2Y2FyZCIsW1sidmVyc2lvbiIse30sInRleHQiLCI0LjAiXSxbImZuIix7fS\nwidGV4dCIsIk1lcmlhZG9jIEJyYW5keWJ1Y2siXSxbIm4iLHt9LCJ0ZXh0Iixb\nIkJyYW5keWJ1Y2siLCJNZXJpYWRvYyIsIk1yLiIsIiJdXSxbImJkYXkiLHt9LC\nJ0ZXh0IiwiVEEgMjk4MiJdLFsiZ2VuZGVyIix7fSwidGV4dCIsIk0iXV1d",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "Figure 176: Additional Authenticated Data, base64url-encoded",
      "ja": "Figure 176: Additional Authenticated Data, base64url-encoded"
    },
    {
      "indent": 0,
      "text": "5.10.3. Encrypting the Key",
      "section_title": true,
      "ja": "5.10.3. キーの暗号化"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 174) with the AES symmetric key (Figure 151) produces the following Encrypted Key:",
      "ja": "AES対称キー（図151）を使用してCEK（図174）でキー暗号化操作を実行すると、次の暗号化キーが生成されます。"
    },
    {
      "indent": 3,
      "text": "4YiiQ_ZzH76TaIkJmYfRFgOV9MIpnx4X",
      "ja": "4YiiQ_ZzH76TaIkJmYfRFgOV9MIpnx4X"
    },
    {
      "indent": 15,
      "text": "Figure 177: Encrypted Key, base64url-encoded",
      "ja": "図177：暗号化されたキー、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.10.4. Encrypting the Content",
      "section_title": true,
      "ja": "5.10.4. コンテンツの暗号化"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "ja": "コンテンツを暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 178, encoded to base64url [RFC4648] as Figure 179.",
      "ja": "o JWE保護ヘッダー。この例では、図179のbase64url [RFC4648]にエンコードされた図178のヘッダーを使用します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"A128KW\",\n  \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n  \"enc\": \"A128GCM\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 178: JWE Protected Header JSON",
      "ja": "図178：JWE保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04MzMyLTQzZDktYTQ2OC\n04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 179: JWE Protected Header, base64url-encoded",
      "ja": "図179：base64urlエンコードされたJWE保護ヘッダー"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext with the following:",
      "ja": "以下を使用して、平文上でコンテンツ暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 174);",
      "ja": "o CEK（図174）;"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 175); and",
      "ja": "o 初期化ベクトル（図175）;そして"
    },
    {
      "indent": 3,
      "text": "o Concatenation of the JWE Protected Header (Figure 179), \".\", and the base64url [RFC4648] encoding of Figure 173 as authenticated data",
      "ja": "o JWE保護ヘッダー（図179）、「。」、および認証データとしての図173のbase64url [RFC4648]エンコードの連結"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 180.",
      "ja": "o 図180の暗号文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 181.",
      "ja": "o 図181の認証タグ。"
    },
    {
      "indent": 3,
      "text": "Z_3cbr0k3bVM6N3oSNmHz7Lyf3iPppGf3Pj17wNZqteJ0Ui8p74SchQP8xygM1 oFRWCNzeIa6s6BcEtp8qEFiqTUEyiNkOWDNoF14T_4NFqF-p2Mx8zkbKxI7oPK 8KNarFbyxIDvICNqBLba-v3uzXBdB89fzOI-Lv4PjOFAQGHrgv1rjXAmKbgkft 9cB4WeyZw8MldbBhc-V_KWZslrsLNygon_JJWd_ek6LQn5NRehvApqf9ZrxB4a q3FXBxOxCys35PhCdaggy2kfUfl2OkwKnWUbgXVD1C6HxLIlqHhCwXDG59weHr RDQeHyMRoBljoV3X_bUTJDnKBFOod7nLz-cj48JMx3SnCZTpbQAkFV",
      "ja": "Z_3cbr0k3bVM6N3oSNmHz7Lyf3iPppGf3Pj17wNZqteJ0Ui8p74SchQP8xygM1 oFRWCNzeIa6s6BcEtp8qEFiqTUEyiNkOWDNoF14T_4NFqF-p2Mx8zkbKxI7oPK 8KNarFbyxIDvICNqBLba-v3uzXBdB89fzOI-Lv4PjOFAQGHrgv1rjXAmKbgkft 9cB4WeyZw8MldbBhc-V_KWZslrsLNygon_JJWd_ek6LQn5NRehvApqf9ZrxB4a q3FXBxOxCys35PhCdaggy2kfUfl2OkwKnWUbgXVD1C6HxLIlqHhCwXDG59weHr RDQeHyMRoBljoV3X_bUTJDnKBFOod7nLz-cj48JMx3SnCZTpbQAkFV"
    },
    {
      "indent": 17,
      "text": "Figure 180: Ciphertext, base64url-encoded",
      "ja": "図180：暗号化テキスト、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "vOaH_Rajnpy_3hOtqvZHRA",
      "ja": "wOaN_Rinepo_zxOtyavZNRA"
    },
    {
      "indent": 13,
      "text": "Figure 181: Authentication Tag, base64url-encoded",
      "ja": "図181：認証タグ、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.10.5. Output Results",
      "section_title": true,
      "ja": "5.10.5. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "ja": "以下は、結果のJWEオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 179)",
      "ja": "o JWE保護ヘッダー（図179）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 177)",
      "ja": "o 暗号化キー（図177）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 175)",
      "ja": "o 初期化ベクトル（図175）"
    },
    {
      "indent": 3,
      "text": "o Additional Authenticated Data (Figure 176)",
      "ja": "o 追加の認証済みデータ（図176）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 180)",
      "ja": "o 暗号文（図180）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 181)",
      "ja": "o 認証タグ（図181）"
    },
    {
      "indent": 3,
      "text": "The JWE Compact Serialization is not presented because it does not support this use case.",
      "ja": "JWEコンパクトシリアライゼーションは、このユースケースをサポートしていないため、表示されません。"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "ja": "一般的なJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"4YiiQ_ZzH76TaIkJmYfRFgOV9MIpnx4X\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04Mz\n      MyLTQzZDktYTQ2OC04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn\n      0\",\n  \"iv\": \"veCx9ece2orS7c_N\",\n  \"aad\": \"WyJ2Y2FyZCIsW1sidmVyc2lvbiIse30sInRleHQiLCI0LjAiXSxb\n      ImZuIix7fSwidGV4dCIsIk1lcmlhZG9jIEJyYW5keWJ1Y2siXSxbIm4i\n      LHt9LCJ0ZXh0IixbIkJyYW5keWJ1Y2siLCJNZXJpYWRvYyIsIk1yLiIs\n      IiJdXSxbImJkYXkiLHt9LCJ0ZXh0IiwiVEEgMjk4MiJdLFsiZ2VuZGVy\n      Iix7fSwidGV4dCIsIk0iXV1d\",\n  \"ciphertext\": \"Z_3cbr0k3bVM6N3oSNmHz7Lyf3iPppGf3Pj17wNZqteJ0\n      Ui8p74SchQP8xygM1oFRWCNzeIa6s6BcEtp8qEFiqTUEyiNkOWDNoF14\n      T_4NFqF-p2Mx8zkbKxI7oPK8KNarFbyxIDvICNqBLba-v3uzXBdB89fz\n      OI-Lv4PjOFAQGHrgv1rjXAmKbgkft9cB4WeyZw8MldbBhc-V_KWZslrs\n      LNygon_JJWd_ek6LQn5NRehvApqf9ZrxB4aq3FXBxOxCys35PhCdaggy\n      2kfUfl2OkwKnWUbgXVD1C6HxLIlqHhCwXDG59weHrRDQeHyMRoBljoV3\n      X_bUTJDnKBFOod7nLz-cj48JMx3SnCZTpbQAkFV\",\n  \"tag\": \"vOaH_Rajnpy_3hOtqvZHRA\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 182: General JWE JSON Serialization",
      "ja": "図182：一般的なJWE JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "ja": "平坦化されたJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04Mz\n      MyLTQzZDktYTQ2OC04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn\n      0\",\n  \"encrypted_key\": \"4YiiQ_ZzH76TaIkJmYfRFgOV9MIpnx4X\",\n  \"aad\": \"WyJ2Y2FyZCIsW1sidmVyc2lvbiIse30sInRleHQiLCI0LjAiXSxb\n      ImZuIix7fSwidGV4dCIsIk1lcmlhZG9jIEJyYW5keWJ1Y2siXSxbIm4i\n      LHt9LCJ0ZXh0IixbIkJyYW5keWJ1Y2siLCJNZXJpYWRvYyIsIk1yLiIs\n      IiJdXSxbImJkYXkiLHt9LCJ0ZXh0IiwiVEEgMjk4MiJdLFsiZ2VuZGVy\n      Iix7fSwidGV4dCIsIk0iXV1d\",\n  \"iv\": \"veCx9ece2orS7c_N\",\n  \"ciphertext\": \"Z_3cbr0k3bVM6N3oSNmHz7Lyf3iPppGf3Pj17wNZqteJ0\n      Ui8p74SchQP8xygM1oFRWCNzeIa6s6BcEtp8qEFiqTUEyiNkOWDNoF14\n      T_4NFqF-p2Mx8zkbKxI7oPK8KNarFbyxIDvICNqBLba-v3uzXBdB89fz\n      OI-Lv4PjOFAQGHrgv1rjXAmKbgkft9cB4WeyZw8MldbBhc-V_KWZslrs\n      LNygon_JJWd_ek6LQn5NRehvApqf9ZrxB4aq3FXBxOxCys35PhCdaggy\n      2kfUfl2OkwKnWUbgXVD1C6HxLIlqHhCwXDG59weHrRDQeHyMRoBljoV3\n      X_bUTJDnKBFOod7nLz-cj48JMx3SnCZTpbQAkFV\",\n  \"tag\": \"vOaH_Rajnpy_3hOtqvZHRA\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 183: Flattened JWE JSON Serialization",
      "ja": "図183：フラット化されたJWE JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "5.11. Protecting Specific Header Fields",
      "section_title": true,
      "ja": "5.11. 特定のヘッダーフィールドの保護"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content where only certain JOSE Header Parameters are protected. As this example includes parameters in the JWE Shared Unprotected Header, only the general JWE JSON Serialization and flattened JWE JSON Serialization are possible.",
      "ja": "この例は、特定のJOSEヘッダーパラメータのみが保護されているコンテンツの暗号化を示しています。この例では、JWE共有非保護ヘッダーにパラメーターが含まれているため、一般的なJWE JSONシリアル化とフラット化されたJWE JSONシリアル化のみが可能です。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.11.1. Input Factors",
      "section_title": true,
      "ja": "5.11.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "ja": "暗号化プロセスを開始する前に、以下が提供されます。"
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "ja": "o 平文コンテンツ;この例では、図72のコンテンツを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Recipient encryption key; this example uses the key from Figure 151.",
      "ja": "o 受信者の暗号化キー。この例では、図151のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Key encryption algorithm; this example uses \"A128KW\".",
      "ja": "o 鍵暗号化アルゴリズム。この例では「A128KW」を使用しています。"
    },
    {
      "indent": 3,
      "text": "o Content encryption algorithm; this example uses \"A128GCM\".",
      "ja": "o コンテンツ暗号化アルゴリズム;この例では「A128GCM」を使用しています。"
    },
    {
      "indent": 0,
      "text": "5.11.2. Generated Factors",
      "section_title": true,
      "ja": "5.11.2. 生成された要因"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "ja": "暗号化する前に、次のものが生成されます。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 184.",
      "ja": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 184."
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 185.",
      "ja": "o 初期化ベクトル;この例では、図185の初期化ベクトルを使用しています。"
    },
    {
      "indent": 3,
      "text": "WDgEptBmQs9ouUvArz6x6g",
      "ja": "WDgEptBmQs9ouUvArz6x6g"
    },
    {
      "indent": 11,
      "text": "Figure 184: Content Encryption Key, base64url-encoded",
      "ja": "Figure 184: Content Encryption Key, base64url-encoded"
    },
    {
      "indent": 3,
      "text": "WgEJsDS9bkoXQ3nR",
      "ja": "そしてc_display_setup_connect"
    },
    {
      "indent": 11,
      "text": "Figure 185: Initialization Vector, base64url-encoded",
      "ja": "図185：base64urlエンコードされた初期化ベクトル"
    },
    {
      "indent": 0,
      "text": "5.11.3. Encrypting the Key",
      "section_title": true,
      "ja": "5.11.3. キーの暗号化"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 184) with the AES symmetric key (Figure 151) produces the following Encrypted Key:",
      "ja": "AES対称キー（図151）を使用してCEK（図184）でキー暗号化操作を実行すると、次の暗号化キーが生成されます。"
    },
    {
      "indent": 3,
      "text": "jJIcM9J-hbx3wnqhf5FlkEYos0sHsF0H",
      "ja": "jJIcM9J-hbx3wnqhf5FlkEYos0sHsF0H"
    },
    {
      "indent": 15,
      "text": "Figure 186: Encrypted Key, base64url-encoded",
      "ja": "図186：暗号化されたキー、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.11.4. Encrypting the Content",
      "section_title": true,
      "ja": "5.11.4. コンテンツの暗号化"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "ja": "コンテンツを暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 187, encoded to base64url [RFC4648] as Figure 188.",
      "ja": "o JWE保護ヘッダー。この例では、図188のようにbase64url [RFC4648]にエンコードされた図187のヘッダーを使用します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"enc\": \"A128GCM\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 187: JWE Protected Header JSON",
      "ja": "図187：JWE保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJlbmMiOiJBMTI4R0NNIn0",
      "ja": "eyJlbmMiOiJBMTI4R0NNIn0"
    },
    {
      "indent": 12,
      "text": "Figure 188: JWE Protected Header, base64url-encoded",
      "ja": "図188：JWE保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext with the following:",
      "ja": "以下を使用して、平文上でコンテンツ暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 184);",
      "ja": "o CEK (Figure 184);"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 185); and",
      "ja": "o 初期化ベクトル（図185）;そして"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 188) as authenticated data",
      "ja": "o 認証済みデータとしてのJWE保護ヘッダー（図188）"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 189.",
      "ja": "o 図189の暗号文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 190.",
      "ja": "o 図190の認証タグ。"
    },
    {
      "indent": 3,
      "text": "lIbCyRmRJxnB2yLQOTqjCDKV3H30ossOw3uD9DPsqLL2DM3swKkjOwQyZtWsFL YMj5YeLht_StAn21tHmQJuuNt64T8D4t6C7kC9OCCJ1IHAolUv4MyOt80MoPb8 fZYbNKqplzYJgIL58g8N2v46OgyG637d6uuKPwhAnTGm_zWhqc_srOvgiLkzyF XPq1hBAURbc3-8BqeRb48iR1-_5g5UjWVD3lgiLCN_P7AW8mIiFvUNXBPJK3nO WL4teUPS8yHLbWeL83olU4UAgL48x-8dDkH23JykibVSQju-f7e-1xreHWXzWL Hs1NqBbre0dEwK3HX_xM0LjUz77Krppgegoutpf5qaKg3l-_xMINmf",
      "ja": "lIbCyRmRJxnB2yLQOTqjCDKV3H30ossOw3uD9DPsqLL2DM3swKkjOwQyZtWsFL YMj5YeLht_StAn21tHmQJuuNt64T8D4t6C7kC9OCCJ1IHAolUv4MyOt80MoPb8 fZYbNKqplzYJgIL58g8N2v46OgyG637d6uuKPwhAnTGm_zWhqc_srOvgiLkzyF XPq1hBAURbc3-8BqeRb48iR1-_5g5UjWVD3lgiLCN_P7AW8mIiFvUNXBPJK3nO WL4teUPS8yHLbWeL83olU4UAgL48x-8dDkH23JykibVSQju-f7e-1xreHWXzWL Hs1NqBbre0dEwK3HX_xM0LjUz77Krppgegoutpf5qaKg3l-_xMINmf"
    },
    {
      "indent": 17,
      "text": "Figure 189: Ciphertext, base64url-encoded",
      "ja": "Figure 189: Ciphertext, base64url-encoded"
    },
    {
      "indent": 3,
      "text": "fNYLqpUe84KD45lvDiaBAQ",
      "ja": "fNYLqpUe84KD45lvDiaBAQ"
    },
    {
      "indent": 13,
      "text": "Figure 190: Authentication Tag, base64url-encoded",
      "ja": "Figure 190: Authentication Tag, base64url-encoded"
    },
    {
      "indent": 0,
      "text": "5.11.5. Output Results",
      "section_title": true,
      "ja": "5.11.5. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "ja": "以下は、結果のJWEオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWE Shared Unprotected Header (Figure 191)",
      "ja": "o JWE共有無保護ヘッダー（図191）"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 188)",
      "ja": "o JWE保護ヘッダー（図188）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 186)",
      "ja": "o 暗号化されたキー（図186）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 185)",
      "ja": "o 初期化ベクトル（図185）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 189)",
      "ja": "o 暗号文（図189）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 190)",
      "ja": "o Authentication Tag (Figure 190)"
    },
    {
      "indent": 3,
      "text": "The JWE Compact Serialization is not presented because it does not support this use case.",
      "ja": "JWEコンパクトシリアライゼーションは、このユースケースをサポートしていないため、表示されません。"
    },
    {
      "indent": 3,
      "text": "The following JWE Shared Unprotected Header is generated before assembling the output results:",
      "ja": "次のJWE共有無保護ヘッダーは、出力結果を組み立てる前に生成されます。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"A128KW\",\n  \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Figure 191: JWE Shared Unprotected Header JSON",
      "ja": "図191：JWE共有無保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "ja": "一般的なJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"jJIcM9J-hbx3wnqhf5FlkEYos0sHsF0H\"\n    }\n  ],\n  \"unprotected\": {\n    \"alg\": \"A128KW\",\n    \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\"\n  },\n  \"protected\": \"eyJlbmMiOiJBMTI4R0NNIn0\",\n  \"iv\": \"WgEJsDS9bkoXQ3nR\",\n  \"ciphertext\": \"lIbCyRmRJxnB2yLQOTqjCDKV3H30ossOw3uD9DPsqLL2D\n      M3swKkjOwQyZtWsFLYMj5YeLht_StAn21tHmQJuuNt64T8D4t6C7kC9O\n      CCJ1IHAolUv4MyOt80MoPb8fZYbNKqplzYJgIL58g8N2v46OgyG637d6\n      uuKPwhAnTGm_zWhqc_srOvgiLkzyFXPq1hBAURbc3-8BqeRb48iR1-_5\n      g5UjWVD3lgiLCN_P7AW8mIiFvUNXBPJK3nOWL4teUPS8yHLbWeL83olU\n      4UAgL48x-8dDkH23JykibVSQju-f7e-1xreHWXzWLHs1NqBbre0dEwK3\n      HX_xM0LjUz77Krppgegoutpf5qaKg3l-_xMINmf\",\n  \"tag\": \"fNYLqpUe84KD45lvDiaBAQ\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 192: General JWE JSON Serialization",
      "ja": "図192：一般的なJWE JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "ja": "平坦化されたJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJlbmMiOiJBMTI4R0NNIn0\",\n  \"unprotected\": {\n    \"alg\": \"A128KW\",\n    \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\"\n  },\n  \"encrypted_key\": \"jJIcM9J-hbx3wnqhf5FlkEYos0sHsF0H\",\n  \"iv\": \"WgEJsDS9bkoXQ3nR\",\n  \"ciphertext\": \"lIbCyRmRJxnB2yLQOTqjCDKV3H30ossOw3uD9DPsqLL2D\n      M3swKkjOwQyZtWsFLYMj5YeLht_StAn21tHmQJuuNt64T8D4t6C7kC9O\n      CCJ1IHAolUv4MyOt80MoPb8fZYbNKqplzYJgIL58g8N2v46OgyG637d6\n      uuKPwhAnTGm_zWhqc_srOvgiLkzyFXPq1hBAURbc3-8BqeRb48iR1-_5\n      g5UjWVD3lgiLCN_P7AW8mIiFvUNXBPJK3nOWL4teUPS8yHLbWeL83olU\n      4UAgL48x-8dDkH23JykibVSQju-f7e-1xreHWXzWLHs1NqBbre0dEwK3\n      HX_xM0LjUz77Krppgegoutpf5qaKg3l-_xMINmf\",\n  \"tag\": \"fNYLqpUe84KD45lvDiaBAQ\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 193: Flattened JWE JSON Serialization",
      "ja": "図193：フラット化されたJWE JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "5.12. Protecting Content Only",
      "section_title": true,
      "ja": "5.12. コンテンツのみの保護"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content where none of the JOSE header parameters are protected. As this example includes parameters only in the JWE Shared Unprotected Header, only the flattened JWE JSON Serialization and general JWE JSON Serialization are possible.",
      "ja": "この例は、JOSEヘッダーパラメータが保護されていないコンテンツの暗号化を示しています。この例では、JWE共有非保護ヘッダーにのみパラメーターが含まれているため、フラット化されたJWE JSONシリアル化と一般的なJWE JSONシリアル化のみが可能です。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.12.1. Input Factors",
      "section_title": true,
      "ja": "5.12.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "ja": "暗号化プロセスを開始する前に、以下が提供されます。"
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "ja": "o 平文コンテンツ;この例では、図72のコンテンツを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Recipient encryption key; this example uses the key from Figure 151.",
      "ja": "o 受信者の暗号化キー。この例では、図151のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Key encryption algorithm; this example uses \"A128KW\".",
      "ja": "o 鍵暗号化アルゴリズム。この例では「A128KW」を使用しています。"
    },
    {
      "indent": 3,
      "text": "o Content encryption algorithm; this example uses \"A128GCM\".",
      "ja": "o コンテンツ暗号化アルゴリズム;この例では「A128GCM」を使用しています。"
    },
    {
      "indent": 0,
      "text": "5.12.2. Generated Factors",
      "section_title": true,
      "ja": "5.12.2. 生成された要因"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "ja": "暗号化する前に、次のものが生成されます。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key; this example the key from Figure 194.",
      "ja": "o コンテンツ暗号化キーとしてのAES対称キー。この例は、図194のキーです。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 195.",
      "ja": "o 初期化ベクトル;この例では、図195の初期化ベクトルを使用しています。"
    },
    {
      "indent": 3,
      "text": "KBooAFl30QPV3vkcZlXnzQ",
      "ja": "KBooAFl30QPV3vkcZlXnzQ"
    },
    {
      "indent": 11,
      "text": "Figure 194: Content Encryption Key, base64url-encoded",
      "ja": "図194：base64urlエンコードされたコンテンツ暗号化キー"
    },
    {
      "indent": 3,
      "text": "YihBoVOGsR1l7jCD",
      "ja": "YihBoVOGsR1l7jCD"
    },
    {
      "indent": 11,
      "text": "Figure 195: Initialization Vector, base64url-encoded",
      "ja": "図195：base64urlエンコードされた初期化ベクトル"
    },
    {
      "indent": 0,
      "text": "5.12.3. Encrypting the Key",
      "section_title": true,
      "ja": "5.12.3. キーの暗号化"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 194) with the AES symmetric key (Figure 151) produces the following Encrypted Key:",
      "ja": "AES対称キー（図151）を使用してCEK（図194）でキー暗号化操作を実行すると、次の暗号化キーが生成されます。"
    },
    {
      "indent": 3,
      "text": "244YHfO_W7RMpQW81UjQrZcq5LSyqiPv",
      "ja": "244YHfO_W7RMpQW81UjQrZcq5LSyqiPv"
    },
    {
      "indent": 15,
      "text": "Figure 196: Encrypted Key, base64url-encoded",
      "ja": "図196：暗号化されたキー、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.12.4. Encrypting the Content",
      "section_title": true,
      "ja": "5.12.4. コンテンツの暗号化"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext (Figure 72) using the following:",
      "ja": "以下を使用して、平文（図72）でコンテンツ暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 194);",
      "ja": "o チェック（図194）;"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 195); and",
      "ja": "o 初期化ベクトル（図195）;そして"
    },
    {
      "indent": 3,
      "text": "o Empty string as authenticated data",
      "ja": "o 認証済みデータとしての空の文字列"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 197.",
      "ja": "o 図197の暗号文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 198.",
      "ja": "o 図198の認証タグ。"
    },
    {
      "indent": 3,
      "text": "qtPIMMaOBRgASL10dNQhOa7Gqrk7Eal1vwht7R4TT1uq-arsVCPaIeFwQfzrSS 6oEUWbBtxEasE0vC6r7sphyVziMCVJEuRJyoAHFSP3eqQPb4Ic1SDSqyXjw_L3 svybhHYUGyQuTmUQEDjgjJfBOifwHIsDsRPeBz1NomqeifVPq5GTCWFo5k_MNI QURR2Wj0AHC2k7JZfu2iWjUHLF8ExFZLZ4nlmsvJu_mvifMYiikfNfsZAudISO a6O73yPZtL04k_1FI7WDfrb2w7OqKLWDXzlpcxohPVOLQwpA3mFNRKdY-bQz4Z 4KX9lfz1cne31N4-8BKmojpw-OdQjKdLOGkC445Fb_K1tlDQXw2sBF",
      "ja": "qtPIMMaOBRgASL10dNQhOa7Gqrk7Eal1vwht7R4TT1uq-arsVCPaIeFwQfzrSS 6oEUWbBtxEasE0vC6r7sphyVziMCVJEuRJyoAHFSP3eqQPb4Ic1SDSqyXjw_L3 svybhHYUGyQuTmUQEDjgjJfBOifwHIsDsRPeBz1NomqeifVPq5GTCWFo5k_MNI QURR2Wj0AHC2k7JZfu2iWjUHLF8ExFZLZ4nlmsvJu_mvifMYiikfNfsZAudISO a6O73yPZtL04k_1FI7WDfrb2w7OqKLWDXzlpcxohPVOLQwpA3mFNRKdY-bQz4Z 4KX9lfz1cne31N4-8BKmojpw-OdQjKdLOGkC445Fb_K1tlDQXw2sBF"
    },
    {
      "indent": 17,
      "text": "Figure 197: Ciphertext, base64url-encoded",
      "ja": "図197：base64urlでエンコードされた暗号文"
    },
    {
      "indent": 3,
      "text": "e2m0Vm7JvjK2VpCKXS-kyg",
      "ja": "e2m0Vm7JvjK2VpCKXS-kyg"
    },
    {
      "indent": 13,
      "text": "Figure 198: Authentication Tag, base64url-encoded",
      "ja": "図198：認証タグ、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "5.12.5. Output Results",
      "section_title": true,
      "ja": "5.12.5. 出力結果"
    },
    {
      "indent": 3,
      "text": "The JWE Compact Serialization is not presented because it does not support this use case.",
      "ja": "JWEコンパクトシリアライゼーションは、このユースケースをサポートしていないため、表示されません。"
    },
    {
      "indent": 3,
      "text": "The following JWE Shared Unprotected Header is generated before assembling the output results:",
      "ja": "次のJWE共有無保護ヘッダーは、出力結果を組み立てる前に生成されます。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"A128KW\",\n  \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n  \"enc\": \"A128GCM\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Figure 199: JWE Shared Unprotected Header JSON",
      "ja": "図199：JWE共有無保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "ja": "以下は、結果のJWEオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWE Shared Unprotected Header (Figure 199)",
      "ja": "o JWE共有非保護ヘッダー（図199）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 196)",
      "ja": "o Encrypted Key (Figure 196)"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 195)",
      "ja": "o 初期化ベクトル（図195）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 197)",
      "ja": "o 暗号文（図197）"
    },
    {
      "indent": 0,
      "text": " o Authentication Tag (Figure 198) The resulting JWE object using the general JWE JSON Serialization:",
      "ja": "o認証タグ（図198）一般的なJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"244YHfO_W7RMpQW81UjQrZcq5LSyqiPv\"\n    }\n  ],\n  \"unprotected\": {\n    \"alg\": \"A128KW\",\n    \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n    \"enc\": \"A128GCM\"\n  },\n  \"iv\": \"YihBoVOGsR1l7jCD\",\n  \"ciphertext\": \"qtPIMMaOBRgASL10dNQhOa7Gqrk7Eal1vwht7R4TT1uq-\n      arsVCPaIeFwQfzrSS6oEUWbBtxEasE0vC6r7sphyVziMCVJEuRJyoAHF\n      SP3eqQPb4Ic1SDSqyXjw_L3svybhHYUGyQuTmUQEDjgjJfBOifwHIsDs\n      RPeBz1NomqeifVPq5GTCWFo5k_MNIQURR2Wj0AHC2k7JZfu2iWjUHLF8\n      ExFZLZ4nlmsvJu_mvifMYiikfNfsZAudISOa6O73yPZtL04k_1FI7WDf\n      rb2w7OqKLWDXzlpcxohPVOLQwpA3mFNRKdY-bQz4Z4KX9lfz1cne31N4\n      -8BKmojpw-OdQjKdLOGkC445Fb_K1tlDQXw2sBF\",\n  \"tag\": \"e2m0Vm7JvjK2VpCKXS-kyg\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 200: General JWE JSON Serialization",
      "ja": "図200：一般的なJWE JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "ja": "平坦化されたJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"unprotected\": {\n    \"alg\": \"A128KW\",\n    \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n    \"enc\": \"A128GCM\"\n  },\n  \"encrypted_key\": \"244YHfO_W7RMpQW81UjQrZcq5LSyqiPv\",\n  \"iv\": \"YihBoVOGsR1l7jCD\",\n  \"ciphertext\": \"qtPIMMaOBRgASL10dNQhOa7Gqrk7Eal1vwht7R4TT1uq-\n      arsVCPaIeFwQfzrSS6oEUWbBtxEasE0vC6r7sphyVziMCVJEuRJyoAHF\n      SP3eqQPb4Ic1SDSqyXjw_L3svybhHYUGyQuTmUQEDjgjJfBOifwHIsDs\n      RPeBz1NomqeifVPq5GTCWFo5k_MNIQURR2Wj0AHC2k7JZfu2iWjUHLF8\n      ExFZLZ4nlmsvJu_mvifMYiikfNfsZAudISOa6O73yPZtL04k_1FI7WDf\n      rb2w7OqKLWDXzlpcxohPVOLQwpA3mFNRKdY-bQz4Z4KX9lfz1cne31N4\n      -8BKmojpw-OdQjKdLOGkC445Fb_K1tlDQXw2sBF\",\n  \"tag\": \"e2m0Vm7JvjK2VpCKXS-kyg\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 201: Flattened JWE JSON Serialization",
      "ja": "図201：フラット化されたJWE JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "5.13. Encrypting to Multiple Recipients",
      "section_title": true,
      "ja": "5.13. 複数の受信者への暗号化"
    },
    {
      "indent": 3,
      "text": "This example illustrates encryption content for multiple recipients. As this example has multiple recipients, only the general JWE JSON Serialization is possible.",
      "ja": "この例は、複数の受信者の暗号化コンテンツを示しています。この例には複数の受信者がいるため、一般的なJWE JSONシリアル化のみが可能です。"
    },
    {
      "indent": 3,
      "text": "Note that RSAES-PKCS1-v1_5 uses random data to generate the ciphertext; it might not be possible to exactly replicate the results in this section.",
      "ja": "RSAES-PKCS1-v1_5はランダムデータを使用して暗号文を生成することに注意してください。このセクションの結果を正確に複製することができない場合があります。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "セクション1.1で説明されているように、読みやすさのために空白が追加されていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.13.1. Input Factors",
      "section_title": true,
      "ja": "5.13.1. 入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "ja": "The following are supplied before beginning the encryption process:"
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the Plaintext from Figure 72.",
      "ja": "o 平文コンテンツ;この例では、図72のプレーンテキストを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Recipient keys; this example uses the following:",
      "ja": "o Recipient keys; this example uses the following:"
    },
    {
      "indent": 6,
      "text": "* The RSA public key from Figure 73 for the first recipient.",
      "ja": "* 最初の受信者用の図73のRSA公開鍵。"
    },
    {
      "indent": 6,
      "text": "* The EC public key from Figure 108 for the second recipient.",
      "ja": "* 2番目の受信者用の図108のEC公開鍵。"
    },
    {
      "indent": 6,
      "text": "* The AES symmetric key from Figure 138 for the third recipient.",
      "ja": "* 3番目の受信者用の図138のAES対称鍵。"
    },
    {
      "indent": 3,
      "text": "o Key encryption algorithms; this example uses the following:",
      "ja": "o 鍵暗号化アルゴリズム。この例では、以下を使用します。"
    },
    {
      "indent": 6,
      "text": "* \"RSA1_5\" for the first recipient.",
      "ja": "* 最初の受信者の「RSA1_5」。"
    },
    {
      "indent": 6,
      "text": "* \"ECDH-ES+A256KW\" for the second recipient.",
      "ja": "* \"ECDH-ES+A256KW\" for the second recipient."
    },
    {
      "indent": 6,
      "text": "* \"A256GCMKW\" for the third recipient.",
      "ja": "* 3番目の受信者の「A256GCMKW」。"
    },
    {
      "indent": 3,
      "text": "o Content encryption algorithm; this example uses \"A128CBC-HS256\".",
      "ja": "o コンテンツ暗号化アルゴリズム;この例では「A128CBC-HS256」を使用しています。"
    },
    {
      "indent": 0,
      "text": "5.13.2. Generated Factors",
      "section_title": true,
      "ja": "5.13.2. 生成された要因"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "ja": "The following are generated before encrypting:"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 202.",
      "ja": "o コンテンツ暗号化キー（CEK）としてのAES対称キー。この例では、図202のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 203.",
      "ja": "o 初期化ベクトル;この例では、図203の初期化ベクトルを使用しています。"
    },
    {
      "indent": 3,
      "text": "zXayeJ4gvm8NJr3IUInyokTUO-LbQNKEhe_zWlYbdpQ",
      "ja": "zXayeJ4gvm8NJr3IUInyokTUO-LbQNKEhe_zWlYbdpQ"
    },
    {
      "indent": 11,
      "text": "Figure 202: Content Encryption Key, base64url-encoded",
      "ja": "図202：base64urlエンコードされたコンテンツ暗号化キー"
    },
    {
      "indent": 3,
      "text": "VgEIHY20EnzUtZFl2RpB1g",
      "ja": "VgEIHY20EnzUtZFl2RpB1g"
    },
    {
      "indent": 11,
      "text": "Figure 203: Initialization Vector, base64url-encoded",
      "ja": "図203：base64urlエンコードされた初期化ベクトル"
    },
    {
      "indent": 0,
      "text": "5.13.3. Encrypting the Key to the First Recipient",
      "section_title": true,
      "ja": "5.13.3. 最初の受信者へのキーの暗号化"
    },
    {
      "indent": 3,
      "text": "Performing the \"RSA1_5\" key encryption operation over the CEK (Figure 202) with the first recipient's RSA key (Figure 73) produces the following Encrypted Key:",
      "ja": "最初の受信者のRSAキー（図73）を使用してCEK（図202）で「RSA1_5」キー暗号化操作を実行すると、次の暗号化キーが生成されます。"
    },
    {
      "indent": 3,
      "text": "dYOD28kab0Vvf4ODgxVAJXgHcSZICSOp8M51zjwj4w6Y5G4XJQsNNIBiqyvUUA OcpL7S7-cFe7Pio7gV_Q06WmCSa-vhW6me4bWrBf7cHwEQJdXihidAYWVajJIa KMXMvFRMV6iDlRr076DFthg2_AV0_tSiV6xSEIFqt1xnYPpmP91tc5WJDOGb-w qjw0-b-S1laS11QVbuP78dQ7Fa0zAVzzjHX-xvyM2wxj_otxr9clN1LnZMbeYS rRicJK5xodvWgkpIdkMHo4LvdhRRvzoKzlic89jFWPlnBq_V4n5trGuExtp_-d bHcGlihqc_wGgho9fLMK8JOArYLcMDNQ",
      "ja": "dYOD28kab0Vvf4ODgxVAJXgHcSZICSOp8M51zjwj4w6Y5G4XJQsNNIBiqyvUUA OcpL7S7-cFe7Pio7gV_Q06WmCSa-vhW6me4bWrBf7cHwEQJdXihidAYWVajJIa KMXMvFRMV6iDlRr076DFthg2_AV0_tSiV6xSEIFqt1xnYPpmP91tc5WJDOGb-W qjw0-B-S1laS11QVbuP78dQ7Fa0zAVzzjHX-xvyM2wxj_otxr9clN1LnZMbeYS rRicJK5xodvWgkpIdkMHo4LvdhRRvzoKzlic89jFWPlnBq_V4n5trGuExtp_-D bHcGlihqc_wGgho9fLMK8JOArYLcMDNQ"
    },
    {
      "indent": 9,
      "text": "Figure 204: Recipient #1 Encrypted Key, base64url-encoded",
      "ja": "図204：受信者＃1の暗号化キー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "The following is generated after encrypting the CEK for the first recipient:",
      "ja": "最初の受信者のCEKを暗号化した後、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o Recipient JWE Unprotected Header from Figure 205.",
      "ja": "o Recipient JWE Unprotected Header from Figure 205."
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"RSA1_5\",\n  \"kid\": \"frodo.baggins@hobbiton.example\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "Figure 205: Recipient #1 JWE Per-Recipient Unprotected Header JSON",
      "ja": "Figure 205: Recipient #1 JWE Per-Recipient Unprotected Header JSON"
    },
    {
      "indent": 3,
      "text": "The following is the assembled first recipient JSON:",
      "ja": "以下は、アセンブルされた最初の受信者JSONです。"
    },
    {
      "indent": 3,
      "text": "{\n  \"encrypted_key\": \"dYOD28kab0Vvf4ODgxVAJXgHcSZICSOp8M51zjwj4w\n      6Y5G4XJQsNNIBiqyvUUAOcpL7S7-cFe7Pio7gV_Q06WmCSa-vhW6me4b\n      WrBf7cHwEQJdXihidAYWVajJIaKMXMvFRMV6iDlRr076DFthg2_AV0_t\n      SiV6xSEIFqt1xnYPpmP91tc5WJDOGb-wqjw0-b-S1laS11QVbuP78dQ7\n      Fa0zAVzzjHX-xvyM2wxj_otxr9clN1LnZMbeYSrRicJK5xodvWgkpIdk\n      MHo4LvdhRRvzoKzlic89jFWPlnBq_V4n5trGuExtp_-dbHcGlihqc_wG\n      gho9fLMK8JOArYLcMDNQ\",\n  \"header\": {\n    \"alg\": \"RSA1_5\",\n    \"kid\": \"frodo.baggins@hobbiton.example\"\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 206: Recipient #1 JSON",
      "ja": "図206：受信者＃1 JSON"
    },
    {
      "indent": 0,
      "text": "5.13.4. Encrypting the Key to the Second Recipient",
      "section_title": true,
      "ja": "5.13.4. 2番目の受信者への鍵の暗号化"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the CEK for the second recipient:",
      "ja": "2番目の受信者のCEKを暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o Ephemeral EC private key on the same curve as the EC public key; this example uses the private key from Figure 207.",
      "ja": "o EC公開鍵と同じ曲線上の一時的なEC秘密鍵。この例では、図207の秘密鍵を使用しています。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"EC\",\n  \"crv\": \"P-384\",\n  \"x\": \"Uzdvk3pi5wKCRc1izp5_r0OjeqT-I68i8g2b8mva8diRhsE2xAn2Dt\n      MRb25Ma2CX\",\n  \"y\": \"VDrRyFJh-Kwd1EjAgmj5Eo-CTHAZ53MC7PjjpLioy3ylEjI1pOMbw9\n      1fzZ84pbfm\",\n  \"d\": \"1DKHfTv-PiifVw2VBHM_ZiVcwOMxkOyANS_lQHJcrDxVY3jhVCvZPw\n      MxJKIE793C\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Figure 207: Ephemeral Private Key for Recipient #2, in JWK Format",
      "ja": "図207：受信者＃2の一時的な秘密鍵（JWK形式）"
    },
    {
      "indent": 3,
      "text": "Performing the \"ECDH-ES+A256KW\" key encryption operation over the CEK (Figure 202) with the following:",
      "ja": "Performing the \"ECDH-ES+A256KW\" key encryption operation over the CEK (Figure 202) with the following:"
    },
    {
      "indent": 3,
      "text": "o Static Elliptic Curve public key (Figure 108).",
      "ja": "o 静的楕円曲線公開鍵（図108）。"
    },
    {
      "indent": 3,
      "text": "o Ephemeral Elliptic Curve private key (Figure 207).",
      "ja": "o エフェメラル楕円曲線の秘密鍵（図207）。"
    },
    {
      "indent": 3,
      "text": "produces the following Encrypted Key:",
      "ja": "次の暗号化キーを生成します。"
    },
    {
      "indent": 3,
      "text": "ExInT0io9BqBMYF6-maw5tZlgoZXThD1zWKsHixJuw_elY4gSSId_w",
      "ja": "ExInT0io9BqBMYF6-maw5tZlgoZXThD1zWKsHixJuw_elY4gSSId_w"
    },
    {
      "indent": 9,
      "text": "Figure 208: Recipient #2 Encrypted Key, base64url-encoded",
      "ja": "図208：受信者＃2の暗号化キー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "The following is generated after encrypting the CEK for the second recipient:",
      "ja": "2番目の受信者のCEKを暗号化した後、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o Recipient JWE Unprotected Header from Figure 209.",
      "ja": "o 図209の受信者JWE非保護ヘッダー。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"ECDH-ES+A256KW\",\n  \"kid\": \"peregrin.took@tuckborough.example\",\n  \"epk\": {\n    \"kty\": \"EC\",\n    \"crv\": \"P-384\",\n    \"x\": \"Uzdvk3pi5wKCRc1izp5_r0OjeqT-I68i8g2b8mva8diRhsE2xAn2\n        DtMRb25Ma2CX\",\n    \"y\": \"VDrRyFJh-Kwd1EjAgmj5Eo-CTHAZ53MC7PjjpLioy3ylEjI1pOMb\n        w91fzZ84pbfm\"\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "Figure 209: Recipient #2 JWE Per-Recipient Unprotected Header JSON",
      "ja": "図209：受信者＃2 JWE受信者ごとの無保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "The following is the assembled second recipient JSON:",
      "ja": "以下は、アセンブルされた2番目の受信者JSONです。"
    },
    {
      "indent": 3,
      "text": "{\n  \"encrypted_key\": \"ExInT0io9BqBMYF6-maw5tZlgoZXThD1zWKsHixJuw\n      _elY4gSSId_w\",\n  \"header\": {\n    \"alg\": \"ECDH-ES+A256KW\",\n    \"kid\": \"peregrin.took@tuckborough.example\",\n    \"epk\": {\n      \"kty\": \"EC\",\n      \"crv\": \"P-384\",\n      \"x\": \"Uzdvk3pi5wKCRc1izp5_r0OjeqT-I68i8g2b8mva8diRhsE2xA\n          n2DtMRb25Ma2CX\",\n      \"y\": \"VDrRyFJh-Kwd1EjAgmj5Eo-CTHAZ53MC7PjjpLioy3ylEjI1pO\n          Mbw91fzZ84pbfm\"\n    }\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 210: Recipient #2 JSON",
      "ja": "図210：受信者＃2 JSON"
    },
    {
      "indent": 0,
      "text": "5.13.5. Encrypting the Key to the Third Recipient",
      "section_title": true,
      "ja": "5.13.5. 3番目の受信者への鍵の暗号化"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the CEK for the third recipient:",
      "ja": "3番目の受信者のCEKを暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector for key wrapping; this example uses the Initialization Vector from Figure 211.",
      "ja": "o キーラッピングの初期化ベクトル。この例では、図211の初期化ベクトルを使用しています。"
    },
    {
      "indent": 3,
      "text": "AvpeoPZ9Ncn9mkBn",
      "ja": "AvpeoPZ9Ncn9mkBn"
    },
    {
      "indent": 5,
      "text": "Figure 211: Recipient #2 Initialization Vector for Key Wrapping, base64url-encoded",
      "ja": "図211：鍵ラッピング用の受信者＃2初期化ベクトル、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "Performing the \"A256GCMKW\" key encryption operation over the CEK (Figure 202) with the following:",
      "ja": "以下を使用して、CEK（図202）で「A256GCMKW」鍵暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key (Figure 138); and",
      "ja": "o AES symmetric key (Figure 138); and"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 211)",
      "ja": "o 初期化ベクトル（図211）"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Encrypted Key from Figure 212.",
      "ja": "o 図212の暗号化されたキー。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 213.",
      "ja": "o 図213の認証タグ。"
    },
    {
      "indent": 3,
      "text": "a7CclAejo_7JSuPB8zeagxXRam8dwCfmkt9-WyTpS1E",
      "ja": "a7CclAejo_7JSuPB8zeagxXRam8dwCfmkt9-WyTpS1E"
    },
    {
      "indent": 9,
      "text": "Figure 212: Recipient #3 Encrypted Key, base64url-encoded",
      "ja": "図212：受信者＃3暗号化キー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "59Nqh1LlYtVIhfD3pgRGvw",
      "ja": "59Nqh1LlYtVIhfD3pgRGvw"
    },
    {
      "indent": 6,
      "text": "Figure 213: Recipient #3 Authentication Tag from Key Wrapping, base64url-encoded",
      "ja": "図213：キーラッピングからの受信者＃3認証タグ、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "The following is generated after encrypting the CEK for the third recipient:",
      "ja": "3番目の受信者のCEKを暗号化した後、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o Recipient JWE Unprotected Header; this example uses the header from Figure 214.",
      "ja": "o 受信者のJWE保護されていないヘッダー。この例では、図214のヘッダーを使用しています。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"A256GCMKW\",\n  \"kid\": \"18ec08e1-bfa9-4d95-b205-2b4dd1d4321d\",\n  \"tag\": \"59Nqh1LlYtVIhfD3pgRGvw\",\n  \"iv\": \"AvpeoPZ9Ncn9mkBn\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "Figure 214: Recipient #3 JWE Per-Recipient Unprotected Header JSON",
      "ja": "図214：受信者＃3 JWE受信者ごとの保護されていないヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "The following is the assembled third recipient JSON:",
      "ja": "以下は、アセンブルされた3番目の受信者JSONです。"
    },
    {
      "indent": 3,
      "text": "{\n  \"encrypted_key\": \"a7CclAejo_7JSuPB8zeagxXRam8dwCfmkt9-WyTpS1\n      E\",\n  \"header\": {\n    \"alg\": \"A256GCMKW\",\n    \"kid\": \"18ec08e1-bfa9-4d95-b205-2b4dd1d4321d\",\n    \"tag\": \"59Nqh1LlYtVIhfD3pgRGvw\",\n    \"iv\": \"AvpeoPZ9Ncn9mkBn\"\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 23,
      "text": "Figure 215: Recipient #3 JSON",
      "ja": "図215：受信者＃3 JSON"
    },
    {
      "indent": 0,
      "text": "5.13.6. Encrypting the Content",
      "section_title": true,
      "ja": "5.13.6. Encrypting the Content"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "ja": "コンテンツを暗号化する前に、以下が生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 216, encoded to base64url [RFC4648] as Figure 217.",
      "ja": "o JWE保護ヘッダー。この例では、図216のヘッダーを使用し、図217のようにbase64url [RFC4648]にエンコードします。"
    },
    {
      "indent": 3,
      "text": "{\n  \"enc\": \"A128CBC-HS256\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 216: JWE Protected Header JSON",
      "ja": "図216：JWE保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJlbmMiOiJBMTI4Q0JDLUhTMjU2In0",
      "ja": "eyJlbmMiOiJBMTI4Q0JDLUhTMjU2In0"
    },
    {
      "indent": 12,
      "text": "Figure 217: JWE Protected Header, base64url-encoded",
      "ja": "図217：JWE保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext (Figure 72) with the following:",
      "ja": "以下を使用して、平文（図72）でコンテンツ暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 202),",
      "ja": "o チェック（図202）、"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 203), and",
      "ja": "o 初期化ベクトル（図203）、および"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 217) as the authenticated data",
      "ja": "o JWE Protected Header (Figure 217) as the authenticated data"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 218.",
      "ja": "o 図218の暗号文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 219.",
      "ja": "o 図219の認証タグ。"
    },
    {
      "indent": 3,
      "text": "ajm2Q-OpPXCr7-MHXicknb1lsxLdXxK_yLds0KuhJzfWK04SjdxQeSw2L9mu3a\n_k1C55kCQ_3xlkcVKC5yr__Is48VOoK0k63_QRM9tBURMFqLByJ8vOYQX0oJW4\nVUHJLmGhF-tVQWB7Kz8mr8zeE7txF0MSaP6ga7-siYxStR7_G07Thd1jh-zGT0\nwxM5g-VRORtq0K6AXpLlwEqRp7pkt2zRM0ZAXqSpe1O6FJ7FHLDyEFnD-zDIZu\nkLpCbzhzMDLLw2-8I14FQrgi-iEuzHgIJFIJn2wh9Tj0cg_kOZy9BqMRZbmYXM\nY9YQjorZ_P_JYG3ARAIF3OjDNqpdYe-K_5Q5crGJSDNyij_ygEiItR5jssQVH2\nofDQdLChtazE",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Figure 218: Ciphertext, base64url-encoded",
      "ja": "図218：暗号文、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "BESYyFN7T09KY7i8zKs5_g",
      "ja": "BESYyFN7T09KY7i8zKs5_g"
    },
    {
      "indent": 13,
      "text": "Figure 219: Authentication Tag, base64url-encoded",
      "ja": "図219：認証タグ、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "The following is generated after encrypting the Plaintext:",
      "ja": "プレーンテキストを暗号化した後、次のものが生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWE Shared Unprotected Header parameters; this example uses the header from Figure 220.",
      "ja": "o JWE共有無保護ヘッダーパラメーター。この例では、図220のヘッダーを使用しています。"
    },
    {
      "indent": 3,
      "text": "{\n  \"cty\": \"text/plain\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Figure 220: JWE Shared Unprotected Header JSON",
      "ja": "Figure 220: JWE Shared Unprotected Header JSON"
    },
    {
      "indent": 0,
      "text": "5.13.7. Output Results",
      "section_title": true,
      "ja": "5.13.7. 出力結果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "ja": "以下は、結果のJWEオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o Recipient #1 JSON (Figure 206)",
      "ja": "o 受信者＃1 JSON（図206）"
    },
    {
      "indent": 3,
      "text": "o Recipient #2 JSON (Figure 210)",
      "ja": "o 受信者＃2 JSON（図210）"
    },
    {
      "indent": 3,
      "text": "o Recipient #3 JSON (Figure 215)",
      "ja": "o 受信者＃3 JSON（図215）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 203)",
      "ja": "o 初期化ベクトル（図203）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 218)",
      "ja": "o 暗号文（図218）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 219)",
      "ja": "o Authentication Tag (Figure 219)"
    },
    {
      "indent": 3,
      "text": "The JWE Compact Serialization is not presented because it does not support this use case; the flattened JWE JSON Serialization is not presented because there is more than one recipient.",
      "ja": "JWEコンパクトシリアライゼーションは、このユースケースをサポートしていないため、表示されていません。複数の受信者がいるため、フラット化されたJWE JSONシリアル化は表示されません。"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "ja": "一般的なJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"dYOD28kab0Vvf4ODgxVAJXgHcSZICSOp8M51zj\n          wj4w6Y5G4XJQsNNIBiqyvUUAOcpL7S7-cFe7Pio7gV_Q06WmCSa-\n          vhW6me4bWrBf7cHwEQJdXihidAYWVajJIaKMXMvFRMV6iDlRr076\n          DFthg2_AV0_tSiV6xSEIFqt1xnYPpmP91tc5WJDOGb-wqjw0-b-S\n          1laS11QVbuP78dQ7Fa0zAVzzjHX-xvyM2wxj_otxr9clN1LnZMbe\n          YSrRicJK5xodvWgkpIdkMHo4LvdhRRvzoKzlic89jFWPlnBq_V4n\n          5trGuExtp_-dbHcGlihqc_wGgho9fLMK8JOArYLcMDNQ\",\n      \"header\": {\n        \"alg\": \"RSA1_5\",\n        \"kid\": \"frodo.baggins@hobbiton.example\"\n      }\n    },\n    {\n      \"encrypted_key\": \"ExInT0io9BqBMYF6-maw5tZlgoZXThD1zWKsHi\n          xJuw_elY4gSSId_w\",\n      \"header\": {\n        \"alg\": \"ECDH-ES+A256KW\",\n        \"kid\": \"peregrin.took@tuckborough.example\",\n        \"epk\": {\n          \"kty\": \"EC\",\n          \"crv\": \"P-384\",\n          \"x\": \"Uzdvk3pi5wKCRc1izp5_r0OjeqT-I68i8g2b8mva8diRhs\n              E2xAn2DtMRb25Ma2CX\",\n          \"y\": \"VDrRyFJh-Kwd1EjAgmj5Eo-CTHAZ53MC7PjjpLioy3ylEj\n              I1pOMbw91fzZ84pbfm\"\n        }\n      }\n    },\n    {\n      \"encrypted_key\": \"a7CclAejo_7JSuPB8zeagxXRam8dwCfmkt9-Wy\n          TpS1E\",\n      \"header\": {\n        \"alg\": \"A256GCMKW\",\n        \"kid\": \"18ec08e1-bfa9-4d95-b205-2b4dd1d4321d\",\n        \"tag\": \"59Nqh1LlYtVIhfD3pgRGvw\",\n        \"iv\": \"AvpeoPZ9Ncn9mkBn\"\n      }\n    }\n  ],\n  \"unprotected\": {\n    \"cty\": \"text/plain\"\n  },\n  \"protected\": \"eyJlbmMiOiJBMTI4Q0JDLUhTMjU2In0\",",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "  \"iv\": \"VgEIHY20EnzUtZFl2RpB1g\",\n  \"ciphertext\": \"ajm2Q-OpPXCr7-MHXicknb1lsxLdXxK_yLds0KuhJzfWK\n      04SjdxQeSw2L9mu3a_k1C55kCQ_3xlkcVKC5yr__Is48VOoK0k63_QRM\n      9tBURMFqLByJ8vOYQX0oJW4VUHJLmGhF-tVQWB7Kz8mr8zeE7txF0MSa\n      P6ga7-siYxStR7_G07Thd1jh-zGT0wxM5g-VRORtq0K6AXpLlwEqRp7p\n      kt2zRM0ZAXqSpe1O6FJ7FHLDyEFnD-zDIZukLpCbzhzMDLLw2-8I14FQ\n      rgi-iEuzHgIJFIJn2wh9Tj0cg_kOZy9BqMRZbmYXMY9YQjorZ_P_JYG3\n      ARAIF3OjDNqpdYe-K_5Q5crGJSDNyij_ygEiItR5jssQVH2ofDQdLCht\n      azE\",\n  \"tag\": \"BESYyFN7T09KY7i8zKs5_g\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 221: General JWE JSON Serialization",
      "ja": "図221：一般的なJWE JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "6. Nesting Signatures and Encryption",
      "section_title": true,
      "ja": "6. 入れ子の署名と暗号化"
    },
    {
      "indent": 3,
      "text": "This example illustrates nesting a JSON Web Signature (JWS) structure within a JSON Web Encryption (JWE) structure. The signature uses the \"PS256\" (RSASSA-PSS) algorithm; the encryption uses the \"RSA-OAEP\" (RSAES-OAEP) key encryption algorithm and the \"A128GCM\" (AES-GCM) content encryption algorithm.",
      "ja": "This example illustrates nesting a JSON Web Signature (JWS) structure within a JSON Web Encryption (JWE) structure. The signature uses the \"PS256\" (RSASSA-PSS) algorithm; the encryption uses the \"RSA-OAEP\" (RSAES-OAEP) key encryption algorithm and the \"A128GCM\" (AES-GCM) content encryption algorithm."
    },
    {
      "indent": 3,
      "text": "Note that RSASSA-PSS uses random data to generate the signature, and RSAES-OAEP uses random data to generate the ciphertext; it might not be possible to exactly replicate the results in this section.",
      "ja": "Note that RSASSA-PSS uses random data to generate the signature, and RSAES-OAEP uses random data to generate the ciphertext; it might not be possible to exactly replicate the results in this section."
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "ja": "Note that whitespace is added for readability as described in Section 1.1."
    },
    {
      "indent": 0,
      "text": "6.1. Signing Input Factors",
      "section_title": true,
      "ja": "6.1. 入力要素の署名"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "ja": "以下は、署名操作を開始する前に提供されます。"
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the JSON Web Token [JWT] content from Figure 222, encoded as base64url [RFC4648] to produce Figure 223.",
      "ja": "o Payload content; this example uses the JSON Web Token [JWT] content from Figure 222, encoded as base64url [RFC4648] to produce Figure 223."
    },
    {
      "indent": 3,
      "text": "o RSA private key; this example uses the key from Figure 224.",
      "ja": "o RSA private key; this example uses the key from Figure 224."
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"PS256\".",
      "ja": "o 「PS256」の「alg」パラメータ。"
    },
    {
      "indent": 3,
      "text": "{\n  \"iss\": \"hobbiton.example\",\n  \"exp\": 1300819380,\n  \"http://example.com/is_root\": true\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 222: Payload Content, in JSON Format",
      "ja": "図222：JSON形式のペイロードコンテンツ"
    },
    {
      "indent": 3,
      "text": "eyJpc3MiOiJob2JiaXRvbi5leGFtcGxlIiwiZXhwIjoxMzAwODE5MzgwLCJodH\nRwOi8vZXhhbXBsZS5jb20vaXNfcm9vdCI6dHJ1ZX0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Figure 223: Payload Content, base64url-encoded",
      "ja": "Figure 223: Payload Content, base64url-encoded"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"RSA\",\n  \"kid\": \"hobbiton.example\",\n  \"use\": \"sig\",\n  \"n\": \"kNrPIBDXMU6fcyv5i-QHQAQ-K8gsC3HJb7FYhYaw8hXbNJa-t8q0lD\n      KwLZgQXYV-ffWxXJv5GGrlZE4GU52lfMEegTDzYTrRQ3tepgKFjMGg6I\n      y6fkl1ZNsx2gEonsnlShfzA9GJwRTmtKPbk1s-hwx1IU5AT-AIelNqBg\n      cF2vE5W25_SGGBoaROVdUYxqETDggM1z5cKV4ZjDZ8-lh4oVB07bkac6\n      LQdHpJUUySH_Er20DXx30Kyi97PciXKTS-QKXnmm8ivyRCmux22ZoPUi\n      nd2BKC5OiG4MwALhaL2Z2k8CsRdfy-7dg7z41Rp6D0ZeEvtaUp4bX4aK\n      raL4rTfw\",\n  \"e\": \"AQAB\",\n  \"d\": \"ZLe_TIxpE9-W_n2VBa-HWvuYPtjvxwVXClJFOpJsdea8g9RMx34qEO\n      EtnoYc2un3CZ3LtJi-mju5RAT8YSc76YJds3ZVw0UiO8mMBeG6-iOnvg\n      obobNx7K57-xjTJZU72EjOr9kB7z6ZKwDDq7HFyCDhUEcYcHFVc7iL_6\n      TibVhAhOFONWlqlJgEgwVYd0rybNGKifdnpEbwyHoMwY6HM1qvnEFgP7\n      iZ0YzHUT535x6jj4VKcdA7ZduFkhUauysySEW7mxZM6fj1vdjJIy9LD1\n      fIz30Xv4ckoqhKF5GONU6tNmMmNgAD6gIViyEle1PrIxl1tBhCI14bRW\n      -zrpHgAQ\",\n  \"p\": \"yKWYoNIAqwMRQlgIBOdT1NIcbDNUUs2Rh-pBaxD_mIkweMt4Mg-0-B\n      2iSYvMrs8horhonV7vxCQagcBAATGW-hAafUehWjxWSH-3KccRM8toL4\n      e0q7M-idRDOBXSoe7Z2-CV2x_ZCY3RP8qp642R13WgXqGDIM4MbUkZSj\n      cY9-c\",\n  \"q\": \"uND4o15V30KDzf8vFJw589p1vlQVQ3NEilrinRUPHkkxaAzDzccGgr\n      WMWpGxGFFnNL3w5CqPLeU76-5IVYQq0HwYVl0hVXQHr7sgaGu-483Ad3\n      ENcL23FrOnF45m7_2ooAstJDe49MeLTTQKrSIBl_SKvqpYvfSPTczPcZ\n      kh9Kk\",\n  \"dp\": \"jmTnEoq2qqa8ouaymjhJSCnsveUXnMQC2gAneQJRQkFqQu-zV2PKP\n      KNbPvKVyiF5b2-L3tM3OW2d2iNDyRUWXlT7V5l0KwPTABSTOnTqAmYCh\n      Gi8kXXdlhcrtSvXldBakC6saxwI_TzGGY2MVXzc2ZnCvCXHV4qjSxOrf\n      P3pHFU\",\n  \"dq\": \"R9FUvU88OVzEkTkXl3-5-WusE4DjHmndeZIlu3rifBdfLpq_P-iWP\n      BbGaq9wzQ1c-J7SzCdJqkEJDv5yd2C7rnZ6kpzwBh_nmL8zscAk1qsun\n      nt9CJGAYz7-sGWy1JGShFazfP52ThB4rlCJ0YuEaQMrIzpY77_oLAhpm\n      DA0hLk\",\n  \"qi\": \"S8tC7ZknW6hPITkjcwttQOPLVmRfwirRlFAViuDb8NW9CrV_7F2Oq\n      UZCqmzHTYAumwGFHI1WVRep7anleWaJjxC_1b3fq_al4qH3Pe-EKiHg6\n      IMazuRtZLUROcThrExDbF5dYbsciDnfRUWLErZ4N1Be0bnxYuPqxwKd9\n      QZwMo0\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 224: RSA 2048-Bit Private Key, in JWK Format",
      "ja": "Figure 224: RSA 2048-Bit Private Key, in JWK Format"
    },
    {
      "indent": 0,
      "text": "6.2. Signing Operation",
      "section_title": true,
      "ja": "6.2. 署名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated to complete the signing operation:",
      "ja": "以下は、署名操作を完了するために生成されます。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 225, encoded using base64url [RFC4648] to produce Figure 226.",
      "ja": "o JWS保護ヘッダー。この例では、base64url [RFC4648]を使用してエンコードされた図225のヘッダーを使用して、図226を生成します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"PS256\",\n  \"typ\": \"JWT\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 225: JWS Protected Header JSON",
      "ja": "図225：JWS保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 226: JWS Protected Header, base64url-encoded",
      "ja": "図226：JWS保護ヘッダー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the combined JWS Protected Header (Figure 226) and payload content (Figure 222) produces the following signature:",
      "ja": "結合されたJWS保護ヘッダー（図226）とペイロードコンテンツ（図222）に対して署名操作を実行すると、次の署名が生成されます。"
    },
    {
      "indent": 3,
      "text": "dPpMqwRZxFYi1UfcDAaf8M99o7kwUWtiXZ-ByvVuJih4MhJ_aZqciprz0OWaIA kIvn1qskChirjKvY9ESZNUCP4JjvfyPS-nqjJxYoA5ztWOyFk2cZNIPXjcJXSQ wXPO9tEe-v4VSqgD0aKHqPxYog4N6Cz1lKph1U1sYDSI67_bLL7elg_vkjfMp5 _W5l5LuUYGMeh6hxQIaIUXf9EwV2JmvTMuZ-vBOWy0Sniy1EFo72CRTvmtrIf5 AROo5MNliY3KtUxeP-SOmD-LEYwW9SlkohYzMVAZDDOrVbv7KVRHpeYNaK75KE QqdCEEkS_rskZS-Qtt_nlegTWh1mEYaA",
      "ja": "dPpMqwRZxFYi1UfcDAaf8M99o7kwUWtiXZ-ByvVuJih4MhJ_aZqciprz0OWaIA kIvn1qskChirjKvY9ESZNUCP4JjvfyPS-nqjJxYoA5ztWOyFk2cZNIPXjcJXSQ wXPO9tEe-v4VSqgD0aKHqPxYog4N6Cz1lKph1U1sYDSI67_bLL7elg_vkjfMp5 _W5l5LuUYGMeh6hxQIaIUXf9EwV2JmvTMuZ-vBOWy0Sniy1EFo72CRTvmtrIf5 AROo5MNliY3KtUxeP-SOmD-LEYwW9SlkohYzMVAZDDOrVbv7KVRHpeYNaK75KE QqdCEEkS_rskZS-Qtt_nlegTWh1mEYaA"
    },
    {
      "indent": 15,
      "text": "Figure 227: JWS Signature, base64url-encoded",
      "ja": "図227：base64urlエンコードされたJWS署名"
    },
    {
      "indent": 0,
      "text": "6.3. Signing Output",
      "section_title": true,
      "ja": "6.3. 署名の出力"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "ja": "以下は、結果のJWSオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header (Figure 226)",
      "ja": "o JWS保護ヘッダー（図226）"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 223)",
      "ja": "o Payload content (Figure 223)"
    },
    {
      "indent": 0,
      "text": " o Signature (Figure 227) The resulting JWS object using the JWS Compact Serialization (which is the plaintext input to the following encryption operation):",
      "ja": "o署名（図227）JWSコンパクトシリアライゼーションを使用した結果のJWSオブジェクト（以下の暗号化操作への平文入力）："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9 . eyJpc3MiOiJob2JiaXRvbi5leGFtcGxlIiwiZXhwIjoxMzAwODE5MzgwLCJodH RwOi8vZXhhbXBsZS5jb20vaXNfcm9vdCI6dHJ1ZX0 . dPpMqwRZxFYi1UfcDAaf8M99o7kwUWtiXZ-ByvVuJih4MhJ_aZqciprz0OWaIA kIvn1qskChirjKvY9ESZNUCP4JjvfyPS-nqjJxYoA5ztWOyFk2cZNIPXjcJXSQ wXPO9tEe-v4VSqgD0aKHqPxYog4N6Cz1lKph1U1sYDSI67_bLL7elg_vkjfMp5 _W5l5LuUYGMeh6hxQIaIUXf9EwV2JmvTMuZ-vBOWy0Sniy1EFo72CRTvmtrIf5 AROo5MNliY3KtUxeP-SOmD-LEYwW9SlkohYzMVAZDDOrVbv7KVRHpeYNaK75KE QqdCEEkS_rskZS-Qtt_nlegTWh1mEYaA",
      "ja": "eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9 . eyJpc3MiOiJob2JiaXRvbi5leGFtcGxlIiwiZXhwIjoxMzAwODE5MzgwLCJodH RwOi8vZXhhbXBsZS5jb20vaXNfcm9vdCI6dHJ1ZX0 . dPpMqwRZxFYi1UfcDAaf8M99o7kwUWtiXZ-ByvVuJih4MhJ_aZqciprz0OWaIA kIvn1qskChirjKvY9ESZNUCP4JjvfyPS-nqjJxYoA5ztWOyFk2cZNIPXjcJXSQ wXPO9tEe-v4VSqgD0aKHqPxYog4N6Cz1lKph1U1sYDSI67_bLL7elg_vkjfMp5 _W5l5LuUYGMeh6hxQIaIUXf9EwV2JmvTMuZ-vBOWy0Sniy1EFo72CRTvmtrIf5 AROo5MNliY3KtUxeP-SOmD-LEYwW9SlkohYzMVAZDDOrVbv7KVRHpeYNaK75KE QqdCEEkS_rskZS-Qtt_nlegTWh1mEYaA"
    },
    {
      "indent": 19,
      "text": "Figure 228: JWS Compact Serialization",
      "ja": "図228：JWSコンパクトシリアライゼーション"
    },
    {
      "indent": 0,
      "text": "6.4. Encryption Input Factors",
      "section_title": true,
      "ja": "6.4. 暗号化の入力要素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "ja": "暗号化プロセスを開始する前に、以下が提供されます。"
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 228.",
      "ja": "o 平文コンテンツ;この例では、図228のコンテンツを使用しています。"
    },
    {
      "indent": 3,
      "text": "o RSA public key; this example uses the key from Figure 84.",
      "ja": "o RSA公開鍵。この例では、図84のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"RSA-OAEP\".",
      "ja": "o 「RSA-OAEP」の「alg」パラメータ。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128GCM\".",
      "ja": "o 「A128GCM」の「enc」パラメータ。"
    },
    {
      "indent": 0,
      "text": "6.5. Encryption Generated Factors",
      "section_title": true,
      "ja": "6.5. 暗号化によって生成された要素"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "ja": "暗号化する前に、次のものが生成されます。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 229.",
      "ja": "o コンテンツ暗号化キー（CEK）としてのAES対称キー。この例では、図229のキーを使用しています。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 230.",
      "ja": "o 初期化ベクトル;この例では、図230の初期化ベクトルを使用しています。"
    },
    {
      "indent": 3,
      "text": "0RHSNYwN-6-2QBGsYTZLSQ",
      "ja": "0RHSNYwN-6-2QBGsYTZLSQ"
    },
    {
      "indent": 11,
      "text": "Figure 229: Content Encryption Key, base64url-encoded",
      "ja": "図229：コンテンツ暗号化キー、base64urlエンコード"
    },
    {
      "indent": 3,
      "text": "GbX1i9kXz0sxXPmA",
      "ja": "GbX1i9kXz0sxXPmA"
    },
    {
      "indent": 11,
      "text": "Figure 230: Initialization Vector, base64url-encoded",
      "ja": "図230：初期化ベクトル、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "6.6. Encrypting the Key",
      "section_title": true,
      "ja": "6.6. キーの暗号化"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 229) with the RSA key (Figure 84) produces the following Encrypted Key:",
      "ja": "RSAキー（図84）を使用してCEK（図229）でキー暗号化操作を実行すると、次の暗号化キーが生成されます。"
    },
    {
      "indent": 3,
      "text": "a0JHRoITfpX4qRewImjlStn8m3CPxBV1ueYlVhjurCyrBg3I7YhCRYjphDOOS4 E7rXbr2Fn6NyQq-A-gqT0FXqNjVOGrG-bi13mwy7RoYhjTkBEC6P7sMYMXXx4g zMedpiJHQVeyI-zkZV7A9matpgevAJWrXzOUysYGTtwoSN6gtUVtlLaivjvb21 O0ul4YxSHV-ByK1kyeetRp_fuYJxHoKLQL9P424sKx2WGYb4zsBIPF4ssl_e5I R7nany-25_UmC2urosNkoFz9cQ82MypZP8gqbQJyPN-Fpp4Z-5o6yV64x6yzDU F_5JCIdl-Qv6H5dMVIY7q1eKpXcV1lWO_2FefEBqXxXvIjLeZivjNkzogCq3-I apSjVFnMjBxjpYLT8muaawo1yy1XXMuinIpNcOY3n4KKrXLrCcteX85m4IIHMZ a38s1Hpr56fPPseMA-Jltmt-a9iEDtOzhtxz8AXy9tsCAZV2XBWNG8c3kJusAa mBKOYwfk7JhLRDgOnJjlJLhn7TI4UxDp9dCmUXEN6z0v23W15qJIEXNJtqnblp ymooeWAHCT4e_Owbim1g0AEpTHUdA2iiLNs9WTX_H_TXuPC8yDDhi1smxS_X_x pkIHkiIHWDOLx03BpqDTivpKkBYwqP2UZkcxqX2Fo_GnVrNwlK7Lgxw6FSQvDO 0",
      "ja": "a0JHRoITfpX4qRewImjlStn8m3CPxBV1ueYlVhjurCyrBg3I7YhCRYjphDOOS4 E7rXbr2Fn6NyQq-A-gqT0FXqNjVOGrG-bi13mwy7RoYhjTkBEC6P7sMYMXXx4g zMedpiJHQVeyI-zkZV7A9matpgevAJWrXzOUysYGTtwoSN6gtUVtlLaivjvb21 O0ul4YxSHV-ByK1kyeetRp_fuYJxHoKLQL9P424sKx2WGYb4zsBIPF4ssl_e5I R7nany-25_UmC2urosNkoFz9cQ82MypZP8gqbQJyPN-Fpp4Z-5o6yV64x6yzDU F_5JCIdl-Qv6H5dMVIY7q1eKpXcV1lWO_2FefEBqXxXvIjLeZivjNkzogCq3-I apSjVFnMjBxjpYLT8muaawo1yy1XXMuinIpNcOY3n4KKrXLrCcteX85m4IIHMZ a38s1Hpr56fPPseMA-Jltmt-a9iEDtOzhtxz8AXy9tsCAZV2XBWNG8c3kJusAa mBKOYwfk7JhLRDgOnJjlJLhn7TI4UxDp9dCmUXEN6z0v23W15qJIEXNJtqnblp ymooeWAHCT4e_Owbim1g0AEpTHUdA2iiLNs9WTX_H_TXuPC8yDDhi1smxS_X_x pkIHkiIHWDOLx03BpqDTivpKkBYwqP2UZkcxqX2Fo_GnVrNwlK7Lgxw6FSQvDO 0"
    },
    {
      "indent": 15,
      "text": "Figure 231: Encrypted Key, base64url-encoded",
      "ja": "図231：暗号化されたキー、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "6.7. Encrypting the Content",
      "section_title": true,
      "ja": "6.7. コンテンツの暗号化"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the Plaintext:",
      "ja": "The following is generated before encrypting the Plaintext:"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 232, encoded using base64url [RFC4648] to produce Figure 233.",
      "ja": "o JWE保護ヘッダー。この例では、base64url [RFC4648]を使用してエンコードされた図232のヘッダーを使用して、図233を生成します。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"RSA-OAEP\",\n  \"cty\": \"JWT\",\n  \"enc\": \"A128GCM\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 232: JWE Protected Header JSON",
      "ja": "図232：JWE保護ヘッダーJSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSU0EtT0FFUCIsImN0eSI6IkpXVCIsImVuYyI6IkExMjhHQ00ifQ",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 233: JWE Protected Header, base64url-encoded",
      "ja": "Figure 233: JWE Protected Header, base64url-encoded"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext (Figure 228) with the following:",
      "ja": "以下を使用して、平文（図228）でコンテンツの暗号化操作を実行します。"
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 229);",
      "ja": "o CEK（図229）;"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 230); and",
      "ja": "o 初期化ベクトル（図230）;そして"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 233) as authenticated data",
      "ja": "o 認証済みデータとしてのJWE保護ヘッダー（図233）"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "ja": "以下を生成します："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 234.",
      "ja": "o 図234の暗号文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 235.",
      "ja": "o 図235の認証タグ。"
    },
    {
      "indent": 3,
      "text": "SZI4IvKHmwpazl_pJQXX3mHv1ANnOU4Wf9-utWYUcKrBNgCe2OFMf66cSJ8k2Q kxaQD3_R60MGE9ofomwtky3GFxMeGRjtpMt9OAvVLsAXB0_UTCBGyBg3C2bWLX qZlfJAAoJRUPRk-BimYZY81zVBuIhc7HsQePCpu33SzMsFHjn4lP_idrJz_glZ TNgKDt8zdnUPauKTKDNOH1DD4fuzvDYfDIAfqGPyL5sVRwbiXpXdGokEszM-9C hMPqW1QNhzuX_Zul3bvrJwr7nuGZs4cUScY3n8yE3AHCLurgls-A9mz1X38xEa ulV18l4Fg9tLejdkAuQZjPbqeHQBJe4IwGD5Ee0dQ-Mtz4NnhkIWx-YKBb_Xo2 zI3Q_1sYjKUuis7yWW-HTr_vqvFt0bj7WJf2vzB0TZ3dvsoGaTvPH2dyWwumUr lx4gmPUzBdwTO6ubfYSDUEEz5py0d_OtWeUSYcCYBKD-aM7tXg26qJo21gYjLf hn9zy-W19sOCZGuzgFjPhawXHpvnj_t-0_ES96kogjJLxS1IMU9Y5XmnwZMyNc 9EIwnogsCg-hVuvzyP0sIruktmI94_SL1xgMl7o03phcTMxtlMizR88NKU1WkB siXMCjy1Noue7MD-ShDp5dmM",
      "ja": "SZI4IvKHmwpazl_pJQXX3mHv1ANnOU4Wf9-utWYUcKrBNgCe2OFMf66cSJ8k2Q kxaQD3_R60MGE9ofomwtky3GFxMeGRjtpMt9OAvVLsAXB0_UTCBGyBg3C2bWLX qZlfJAAoJRUPRk-BimYZY81zVBuIhc7HsQePCpu33SzMsFHjn4lP_idrJz_glZ TNgKDt8zdnUPauKTKDNOH1DD4fuzvDYfDIAfqGPyL5sVRwbiXpXdGokEszM-9C hMPqW1QNhzuX_Zul3bvrJwr7nuGZs4cUScY3n8yE3AHCLurgls-A9mz1X38xEa ulV18l4Fg9tLejdkAuQZjPbqeHQBJe4IwGD5Ee0dQ-Mtz4NnhkIWx-YKBb_Xo2 zI3Q_1sYjKUuis7yWW-HTr_vqvFt0bj7WJf2vzB0TZ3dvsoGaTvPH2dyWwumUr lx4gmPUzBdwTO6ubfYSDUEEz5py0d_OtWeUSYcCYBKD-aM7tXg26qJo21gYjLf hn9zy-W19sOCZGuzgFjPhawXHpvnj_t-0_ES96kogjJLxS1IMU9Y5XmnwZMyNc 9EIwnogsCg-hVuvzyP0sIruktmI94_SL1xgMl7o03phcTMxtlMizR88NKU1WkB siXMCjy1Noue7MD-ShDp5dmM"
    },
    {
      "indent": 17,
      "text": "Figure 234: Ciphertext, base64url-encoded",
      "ja": "図234：base64urlエンコードされた暗号文"
    },
    {
      "indent": 3,
      "text": "KnIKEhN8U-3C9s4gtSpjSw",
      "ja": "KnIKEhN8U-3C9s4gtSpjSw"
    },
    {
      "indent": 13,
      "text": "Figure 235: Authentication Tag, base64url-encoded",
      "ja": "図235：認証タグ、base64urlエンコード"
    },
    {
      "indent": 0,
      "text": "6.8. Encryption Output",
      "section_title": true,
      "ja": "6.8. 暗号化出力"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "ja": "以下は、結果のJWEオブジェクトを構成します。"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 233)",
      "ja": "o JWE保護ヘッダー（図233）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 231)",
      "ja": "o 暗号化キー（図231）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 230)",
      "ja": "o 初期化ベクトル（図230）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 234)",
      "ja": "o 暗号文（図234）"
    },
    {
      "indent": 0,
      "text": " o Authentication Tag (Figure 235) The resulting JWE object using the JWE Compact Serialization:",
      "ja": "o認証タグ（図235）JWE Compact Serializationを使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSU0EtT0FFUCIsImN0eSI6IkpXVCIsImVuYyI6IkExMjhHQ00ifQ . a0JHRoITfpX4qRewImjlStn8m3CPxBV1ueYlVhjurCyrBg3I7YhCRYjphDOOS4 E7rXbr2Fn6NyQq-A-gqT0FXqNjVOGrG-bi13mwy7RoYhjTkBEC6P7sMYMXXx4g zMedpiJHQVeyI-zkZV7A9matpgevAJWrXzOUysYGTtwoSN6gtUVtlLaivjvb21 O0ul4YxSHV-ByK1kyeetRp_fuYJxHoKLQL9P424sKx2WGYb4zsBIPF4ssl_e5I R7nany-25_UmC2urosNkoFz9cQ82MypZP8gqbQJyPN-Fpp4Z-5o6yV64x6yzDU F_5JCIdl-Qv6H5dMVIY7q1eKpXcV1lWO_2FefEBqXxXvIjLeZivjNkzogCq3-I apSjVFnMjBxjpYLT8muaawo1yy1XXMuinIpNcOY3n4KKrXLrCcteX85m4IIHMZ a38s1Hpr56fPPseMA-Jltmt-a9iEDtOzhtxz8AXy9tsCAZV2XBWNG8c3kJusAa mBKOYwfk7JhLRDgOnJjlJLhn7TI4UxDp9dCmUXEN6z0v23W15qJIEXNJtqnblp ymooeWAHCT4e_Owbim1g0AEpTHUdA2iiLNs9WTX_H_TXuPC8yDDhi1smxS_X_x pkIHkiIHWDOLx03BpqDTivpKkBYwqP2UZkcxqX2Fo_GnVrNwlK7Lgxw6FSQvDO 0 . GbX1i9kXz0sxXPmA . SZI4IvKHmwpazl_pJQXX3mHv1ANnOU4Wf9-utWYUcKrBNgCe2OFMf66cSJ8k2Q kxaQD3_R60MGE9ofomwtky3GFxMeGRjtpMt9OAvVLsAXB0_UTCBGyBg3C2bWLX qZlfJAAoJRUPRk-BimYZY81zVBuIhc7HsQePCpu33SzMsFHjn4lP_idrJz_glZ TNgKDt8zdnUPauKTKDNOH1DD4fuzvDYfDIAfqGPyL5sVRwbiXpXdGokEszM-9C hMPqW1QNhzuX_Zul3bvrJwr7nuGZs4cUScY3n8yE3AHCLurgls-A9mz1X38xEa ulV18l4Fg9tLejdkAuQZjPbqeHQBJe4IwGD5Ee0dQ-Mtz4NnhkIWx-YKBb_Xo2 zI3Q_1sYjKUuis7yWW-HTr_vqvFt0bj7WJf2vzB0TZ3dvsoGaTvPH2dyWwumUr lx4gmPUzBdwTO6ubfYSDUEEz5py0d_OtWeUSYcCYBKD-aM7tXg26qJo21gYjLf hn9zy-W19sOCZGuzgFjPhawXHpvnj_t-0_ES96kogjJLxS1IMU9Y5XmnwZMyNc 9EIwnogsCg-hVuvzyP0sIruktmI94_SL1xgMl7o03phcTMxtlMizR88NKU1WkB siXMCjy1Noue7MD-ShDp5dmM . KnIKEhN8U-3C9s4gtSpjSw",
      "ja": "eyJhbGciOiJSU0EtT0FFUCIsImN0eSI6IkpXVCIsImVuYyI6IkExMjhHQ00ifQ。 a0JHRoITfpX4qRewImjlStn8m3CPxBV1ueYlVhjurCyrBg3I7YhCRYjphDOOS4 E7rXbr2Fn6NyQq-A-gqT0FXqNjVOGrG-bi13mwy7RoYhjTkBEC6P7sMYMXXx4g ​​zMedpiJHQVeyI-zkZV7A9matpgevAJWrXzOUysYGTtwoSN6gtUVtlLaivjvb21 O0ul4YxSHV-ByK1kyeetRp_fuYJxHoKLQL9P424sKx2WGYb4zsBIPF4ssl_e5I R7nany-25_UmC2urosNkoFz9cQ82MypZP8gqbQJyPN-Fpp4Z-5o6yV64x6yzDU F_5JCIdl-Qv6H5dMVIY7q1eKpXcV1lWO_2FefEBqXxXvIjLeZivjNkzogCq3-I apSjVFnMjBxjpYLT8muaawo1yy1XXMuinIpNcOY3n4KKrXLrCcteX85m4IIHMZ a38s1Hpr56fPPseMA-Jltmt-a9iEDtOzhtxz8AXy9tsCAZV2XBWNG8c3kJusAa mBKOYwfk7JhLRDgOnJjlJLhn7TI4UxDp9dCmUXEN6z0v23W15qJIEXNJtqnblp ymooeWAHCT4e_Owbim1g0AEpTHUdA2iiLNs9WTX_H_TXuPC8yDDhi1smxS_X_x pkIHkiIHWDOLx03BpqDTivpKkBYwqP2UZkcxqX2Fo_GnVrNwlK7Lgxw6FSQvDO 0。 GbX1i9kXz0sxXPmA。 SZI4IvKHmwpazl_pJQXX3mHv1ANnOU4Wf9-utWYUcKrBNgCe2OFMf66cSJ8k2Q kxaQD3_R60MGE9ofomwtky3GFxMeGRjtpMt9OAvVLsAXB0_UTCBGyBg3C2bWLX qZlfJAAoJRUPRk-BimYZY81zVBuIhc7HsQePCpu33SzMsFHjn4lP_idrJz_glZ TNgKDt8zdnUPauKTKDNOH1DD4fuzvDYfDIAfqGPyL5sVRwbiXpXdGokEszM-9C hMPqW1QNhzuX_Zul3bvrJwr7nuGZs4cUScY3n8yE3AHCLurgls-A9mz1X38xEa ulV18l4Fg9tLejdkAuQZjPbqeHQBJe4IwGD5Ee0dQ-Mtz4NnhkIWx-YKBb_Xo2 zI3Q_1sYjKUuis7yWW-HTr_vqvFt0bj7WJf2vzB0TZ3dvsoGaTvPH2dyWwumUr lx4gmPUzBdwTO6ubfYSDUEEz5py0d_OtWeUSYcCYBKD-aM7tXg26qJo21gYjLf hn9zy-W19sOCZGuzgFjPhawXHpvnj_t-0_ES96kogjJLxS1IMU9Y5XmnwZMyNc 9EIwnogsCg-hVuvzyP0sIruktmI94_SL1xgMl7o03phcTMxtlMizR88NKU1WkB siXMCjy1Noue7MD-ShDp5dmM。 KnIKEhN8U-3C9s4gtSpjSw"
    },
    {
      "indent": 19,
      "text": "Figure 236: JWE Compact Serialization",
      "ja": "図236：JWEコンパクトシリアライゼーション"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "ja": "一般的なJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"a0JHRoITfpX4qRewImjlStn8m3CPxBV1ueYlVh\n          jurCyrBg3I7YhCRYjphDOOS4E7rXbr2Fn6NyQq-A-gqT0FXqNjVO\n          GrG-bi13mwy7RoYhjTkBEC6P7sMYMXXx4gzMedpiJHQVeyI-zkZV\n          7A9matpgevAJWrXzOUysYGTtwoSN6gtUVtlLaivjvb21O0ul4YxS\n          HV-ByK1kyeetRp_fuYJxHoKLQL9P424sKx2WGYb4zsBIPF4ssl_e\n          5IR7nany-25_UmC2urosNkoFz9cQ82MypZP8gqbQJyPN-Fpp4Z-5\n          o6yV64x6yzDUF_5JCIdl-Qv6H5dMVIY7q1eKpXcV1lWO_2FefEBq\n          XxXvIjLeZivjNkzogCq3-IapSjVFnMjBxjpYLT8muaawo1yy1XXM\n          uinIpNcOY3n4KKrXLrCcteX85m4IIHMZa38s1Hpr56fPPseMA-Jl\n          tmt-a9iEDtOzhtxz8AXy9tsCAZV2XBWNG8c3kJusAamBKOYwfk7J\n          hLRDgOnJjlJLhn7TI4UxDp9dCmUXEN6z0v23W15qJIEXNJtqnblp\n          ymooeWAHCT4e_Owbim1g0AEpTHUdA2iiLNs9WTX_H_TXuPC8yDDh\n          i1smxS_X_xpkIHkiIHWDOLx03BpqDTivpKkBYwqP2UZkcxqX2Fo_\n          GnVrNwlK7Lgxw6FSQvDO0\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJSU0EtT0FFUCIsImN0eSI6IkpXVCIsImVuYy\n      I6IkExMjhHQ00ifQ\",\n  \"iv\": \"GbX1i9kXz0sxXPmA\",\n  \"ciphertext\": \"SZI4IvKHmwpazl_pJQXX3mHv1ANnOU4Wf9-utWYUcKrBN\n      gCe2OFMf66cSJ8k2QkxaQD3_R60MGE9ofomwtky3GFxMeGRjtpMt9OAv\n      VLsAXB0_UTCBGyBg3C2bWLXqZlfJAAoJRUPRk-BimYZY81zVBuIhc7Hs\n      QePCpu33SzMsFHjn4lP_idrJz_glZTNgKDt8zdnUPauKTKDNOH1DD4fu\n      zvDYfDIAfqGPyL5sVRwbiXpXdGokEszM-9ChMPqW1QNhzuX_Zul3bvrJ\n      wr7nuGZs4cUScY3n8yE3AHCLurgls-A9mz1X38xEaulV18l4Fg9tLejd\n      kAuQZjPbqeHQBJe4IwGD5Ee0dQ-Mtz4NnhkIWx-YKBb_Xo2zI3Q_1sYj\n      KUuis7yWW-HTr_vqvFt0bj7WJf2vzB0TZ3dvsoGaTvPH2dyWwumUrlx4\n      gmPUzBdwTO6ubfYSDUEEz5py0d_OtWeUSYcCYBKD-aM7tXg26qJo21gY\n      jLfhn9zy-W19sOCZGuzgFjPhawXHpvnj_t-0_ES96kogjJLxS1IMU9Y5\n      XmnwZMyNc9EIwnogsCg-hVuvzyP0sIruktmI94_SL1xgMl7o03phcTMx\n      tlMizR88NKU1WkBsiXMCjy1Noue7MD-ShDp5dmM\",\n  \"tag\": \"KnIKEhN8U-3C9s4gtSpjSw\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 237: General JWE JSON Serialization",
      "ja": "図237：一般的なJWE JSONシリアル化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "ja": "平坦化されたJWE JSONシリアル化を使用した結果のJWEオブジェクト："
    },
    {
      "indent": 3,
      "text": "{\n  \"encrypted_key\": \"a0JHRoITfpX4qRewImjlStn8m3CPxBV1ueYlVhjurC\n      yrBg3I7YhCRYjphDOOS4E7rXbr2Fn6NyQq-A-gqT0FXqNjVOGrG-bi13\n      mwy7RoYhjTkBEC6P7sMYMXXx4gzMedpiJHQVeyI-zkZV7A9matpgevAJ\n      WrXzOUysYGTtwoSN6gtUVtlLaivjvb21O0ul4YxSHV-ByK1kyeetRp_f\n      uYJxHoKLQL9P424sKx2WGYb4zsBIPF4ssl_e5IR7nany-25_UmC2uros\n      NkoFz9cQ82MypZP8gqbQJyPN-Fpp4Z-5o6yV64x6yzDUF_5JCIdl-Qv6\n      H5dMVIY7q1eKpXcV1lWO_2FefEBqXxXvIjLeZivjNkzogCq3-IapSjVF\n      nMjBxjpYLT8muaawo1yy1XXMuinIpNcOY3n4KKrXLrCcteX85m4IIHMZ\n      a38s1Hpr56fPPseMA-Jltmt-a9iEDtOzhtxz8AXy9tsCAZV2XBWNG8c3\n      kJusAamBKOYwfk7JhLRDgOnJjlJLhn7TI4UxDp9dCmUXEN6z0v23W15q\n      JIEXNJtqnblpymooeWAHCT4e_Owbim1g0AEpTHUdA2iiLNs9WTX_H_TX\n      uPC8yDDhi1smxS_X_xpkIHkiIHWDOLx03BpqDTivpKkBYwqP2UZkcxqX\n      2Fo_GnVrNwlK7Lgxw6FSQvDO0\",\n  \"protected\": \"eyJhbGciOiJSU0EtT0FFUCIsImN0eSI6IkpXVCIsImVuYy\n      I6IkExMjhHQ00ifQ\",\n  \"iv\": \"GbX1i9kXz0sxXPmA\",\n  \"ciphertext\": \"SZI4IvKHmwpazl_pJQXX3mHv1ANnOU4Wf9-utWYUcKrBN\n      gCe2OFMf66cSJ8k2QkxaQD3_R60MGE9ofomwtky3GFxMeGRjtpMt9OAv\n      VLsAXB0_UTCBGyBg3C2bWLXqZlfJAAoJRUPRk-BimYZY81zVBuIhc7Hs\n      QePCpu33SzMsFHjn4lP_idrJz_glZTNgKDt8zdnUPauKTKDNOH1DD4fu\n      zvDYfDIAfqGPyL5sVRwbiXpXdGokEszM-9ChMPqW1QNhzuX_Zul3bvrJ\n      wr7nuGZs4cUScY3n8yE3AHCLurgls-A9mz1X38xEaulV18l4Fg9tLejd\n      kAuQZjPbqeHQBJe4IwGD5Ee0dQ-Mtz4NnhkIWx-YKBb_Xo2zI3Q_1sYj\n      KUuis7yWW-HTr_vqvFt0bj7WJf2vzB0TZ3dvsoGaTvPH2dyWwumUrlx4\n      gmPUzBdwTO6ubfYSDUEEz5py0d_OtWeUSYcCYBKD-aM7tXg26qJo21gY\n      jLfhn9zy-W19sOCZGuzgFjPhawXHpvnj_t-0_ES96kogjJLxS1IMU9Y5\n      XmnwZMyNc9EIwnogsCg-hVuvzyP0sIruktmI94_SL1xgMl7o03phcTMx\n      tlMizR88NKU1WkBsiXMCjy1Noue7MD-ShDp5dmM\",\n  \"tag\": \"KnIKEhN8U-3C9s4gtSpjSw\"\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Figure 238: Flattened JWE JSON Serialization",
      "ja": "図238：フラット化されたJWE JSONシリアル化"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document is designed to provide examples for developers to use in checking their implementations. As such, it does not follow some of the security considerations and recommendations in the core documents (i.e., [JWS], [JWE], [JWK], and [JWA]). For instance:",
      "ja": "このドキュメントは、開発者が実装の確認に使用する例を提供することを目的としています。そのため、コアドキュメント（つまり、[JWS]、[JWE]、[JWK]、および[JWA]）のセキュリティに関する考慮事項と推奨事項には従いません。例えば："
    },
    {
      "indent": 3,
      "text": "o it does not always generate a new CEK value for every encrypted example;",
      "ja": "o 暗号化された例ごとに新しいCEK値が常に生成されるわけではありません。"
    },
    {
      "indent": 3,
      "text": "o it does not always generate a new Initialization Vector (IV) value for every encrypted example; and",
      "ja": "o 暗号化されたすべての例に対して、常に新しい初期化ベクトル（IV）値を生成するわけではありません。そして"
    },
    {
      "indent": 3,
      "text": "o it does not always generate a new ephemeral key for every ephemeral key example.",
      "ja": "o すべての一時キーの例に対して常に新しい一時キーが生成されるわけではありません。"
    },
    {
      "indent": 3,
      "text": "For each example, data that is expected to be generated for each signing or encryption operation is isolated to sections titled \"Generated Factors\".",
      "ja": "例ごとに、署名または暗号化操作ごとに生成されることが予想されるデータは、「生成された要素」というタイトルのセクションに分離されています。"
    },
    {
      "indent": 0,
      "text": "8. References",
      "section_title": true,
      "ja": "8. 参考文献"
    },
    {
      "indent": 0,
      "text": "8.1. Normative References",
      "section_title": true,
      "ja": "8.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[JWA] Jones, M., \"JSON Web Algorithms (JWA)\", RFC 7518, DOI 10.17487/RFC7518, May 2015, <http://www.rfc-editor.org/info/rfc7518>.",
      "ja": "[JWA]ジョーンズ、M。、「JSON Web Algorithms（JWA）」、RFC 7518、DOI 10.17487 / RFC7518、2015年5月、<http://www.rfc-editor.org/info/rfc7518>。"
    },
    {
      "indent": 3,
      "text": "[JWE] Jones, M. and J. Hildebrand, \"JSON Web Encryption (JWE)\", RFC 7516, DOI 10.17487/RFC7516, May 2015, <http://www.rfc-editor.org/info/rfc7516>.",
      "ja": "[JWE]ジョーンズ、M。およびJ.ヒルデブランド、「JSON Web Encryption（JWE）」、RFC 7516、DOI 10.17487 / RFC7516、2015年5月、<http://www.rfc-editor.org/info/rfc7516>。"
    },
    {
      "indent": 3,
      "text": "[JWK] Jones, M., \"JSON Web Key (JWK)\", RFC 7517, DOI 10.17487/RFC7517, May 2015, <http://www.rfc-editor.org/info/rfc7517>.",
      "ja": "[JWK]ジョーンズ、M。、「JSON Web Key（JWK）」、RFC 7517、DOI 10.17487 / RFC7517、2015年5月、<http://www.rfc-editor.org/info/rfc7517>。"
    },
    {
      "indent": 3,
      "text": "[JWS] Jones, M., Bradley, J., and N. Sakimura, \"JSON Web Signature (JWS)\", RFC 7515, DOI 10.17487/RFC7515, May 2015, <http://www.rfc-editor.org/info/rfc7515>.",
      "ja": "[JWS]ジョーンズ、M。、ブラッドリー、J.、N。崎村、「JSON Web Signature（JWS）」、RFC 7515、DOI 10.17487 / RFC7515、2015年5月、<http://www.rfc-editor.org / info / rfc7515>。"
    },
    {
      "indent": 3,
      "text": "[RFC4648] Josefsson, S., \"The Base16, Base32, and Base64 Data Encodings\", RFC 4648, DOI 10.17487/RFC4648, October 2006, <http://www.rfc-editor.org/info/rfc4648>.",
      "ja": "[RFC4648] Josefsson、S。、「The Base16、Base32、およびBase64データエンコーディング」、RFC 4648、DOI 10.17487 / RFC4648、2006年10月、<http://www.rfc-editor.org/info/rfc4648>。"
    },
    {
      "indent": 0,
      "text": "8.2. Informative References",
      "section_title": true,
      "ja": "8.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[JWT] Jones, M., Bradley, J., and N. Sakimura, \"JSON Web Token (JWT)\", RFC 7519, DOI 10.17487/RFC7519, May 2015, <http://www.rfc-editor.org/info/rfc7519>.",
      "ja": "[JWT]ジョーンズ、M。、ブラッドリー、J.、N。崎村、「JSON Web Token（JWT）」、RFC 7519、DOI 10.17487 / RFC7519、2015年5月、<http://www.rfc-editor.org / info / rfc7519>。"
    },
    {
      "indent": 3,
      "text": "[LOTR-FELLOWSHIP] Tolkien, J., \"The Fellowship of the Ring\", HarperCollins Publishers, ePub Edition, ISBN 9780061952838, March 2009.",
      "ja": "[LOTR-FELLOWSHIP] Tolkien、J。、「The Fellowship of the Ring」、HarperCollins Publishers、ePub Edition、ISBN 9780061952838、2009年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC1951] Deutsch, P., \"DEFLATE Compressed Data Format Specification version 1.3\", RFC 1951, DOI 10.17487/RFC1951, May 1996, <http://www.rfc-editor.org/info/rfc1951>.",
      "ja": "[RFC1951] Deutsch、P。、「DEFLATE Compressed Data Format Specification version 1.3」、RFC 1951、DOI 10.17487 / RFC1951、1996年5月、<http://www.rfc-editor.org/info/rfc1951>。"
    },
    {
      "indent": 3,
      "text": "[RFC7095] Kewisch, P., \"jCard: The JSON Format for vCard\", RFC 7095, DOI 10.17487/RFC7095, January 2014, <http://www.rfc-editor.org/info/rfc7095>.",
      "ja": "[RFC7095] Kewisch、P。、「jCard：The JSON Format for vCard」、RFC 7095、DOI 10.17487 / RFC7095、2014年1月、<http://www.rfc-editor.org/info/rfc7095>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Most of the examples herein use quotes and character names found in the novel \"The Fellowship of the Ring\" [LOTR-FELLOWSHIP], written by J. R. R. Tolkien.",
      "ja": "ここでの例のほとんどは、J。R. R. Tolkienによって書かれた小説 \"The Fellowship of the Ring\" [LOTR-FELLOWSHIP]にある引用符とキャラクター名を使用しています。"
    },
    {
      "indent": 3,
      "text": "Thanks to Richard Barnes, Brian Campbell, Mike Jones, and Jim Schaad for their input and review of the text. Thanks to Brian Campbell for verifying the Compact Serialization examples.",
      "ja": "テキストの入力とレビューをしてくれたRichard Barnes、Brian Campbell、Mike Jones、Jim Schaadに感謝します。 Compact Serializationの例を検証してくれたBrian Campbellに感謝します。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Matthew Miller Cisco Systems, Inc.",
      "ja": "マシューミラーCisco Systems、Inc."
    },
    {
      "indent": 3,
      "text": "EMail: mamille2@cisco.com",
      "raw": true,
      "ja": ""
    }
  ]
}