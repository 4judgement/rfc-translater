{
  "title": {
    "text": "RFC 7634 - ChaCha20, Poly1305, and Their Use in the Internet Key Exchange Protocol (IKE) and IPsec",
    "ja": "RFC 7634 - ChaCha20、Poly1305、およびインターネットキー交換プロトコル（IKE）とIPsecでのそれらの使用"
  },
  "number": 7634,
  "created_at": "2020-08-30 14:41:58.064050+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                            Y. Nir\nRequest for Comments: 7634                                   Check Point\nCategory: Standards Track                                    August 2015\nISSN: 2070-1721",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": " ChaCha20, Poly1305, and Their Use in the Internet Key Exchange Protocol (IKE) and IPsec",
      "ja": "ChaCha20、Poly1305、およびインターネットキー交換プロトコル（IKE）とIPsecでのそれらの使用"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document describes the use of the ChaCha20 stream cipher along with the Poly1305 authenticator, combined into an AEAD algorithm for the Internet Key Exchange Protocol version 2 (IKEv2) and for IPsec.",
      "ja": "このドキュメントでは、ChaCha20ストリーム暗号とPoly1305オーセンティケーターを組み合わせて、インターネットキーエクスチェンジプロトコルバージョン2（IKEv2）とIPsecのAEADアルゴリズムに組み合わせた方法について説明します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 5741のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7634.",
      "ja": "このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、http：//www.rfc-editor.org/info/rfc7634で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2015 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（http://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2\n  1.1.  Conventions Used in This Document . . . . . . . . . . . .   3\n2.  ChaCha20 and Poly1305 for ESP . . . . . . . . . . . . . . . .   3\n  2.1.  AAD Construction  . . . . . . . . . . . . . . . . . . . .   5\n3.  Use in IKEv2  . . . . . . . . . . . . . . . . . . . . . . . .   6\n4.  Negotiation in IKEv2  . . . . . . . . . . . . . . . . . . . .   6\n5.  Security Considerations . . . . . . . . . . . . . . . . . . .   6\n6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7\n7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   7\n  7.1.  Normative References  . . . . . . . . . . . . . . . . . .   7\n  7.2.  Informative References  . . . . . . . . . . . . . . . . .   8\nAppendix A.  ESP Example  . . . . . . . . . . . . . . . . . . . .   9\nAppendix B.  IKEv2 Example  . . . . . . . . . . . . . . . . . . .  11\nAcknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  13\nAuthor's Address  . . . . . . . . . . . . . . . . . . . . . . . .  13",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The Advanced Encryption Standard (AES) [FIPS-197] has become the go-to algorithm for encryption. It is now the most commonly used algorithm in many areas, including IPsec Virtual Private Networks (VPNs). On most modern platforms, AES is anywhere from four to ten times as fast as the previously popular cipher, Triple Data Encryption Standard (3DES) [SP800-67]. 3DES also uses a 64-bit block; this means that the amount of data that can be encrypted before rekeying is required is limited. These reasons make AES not only the best choice, but the only viable choice for IPsec.",
      "ja": "Advanced Encryption Standard（AES）[FIPS-197]は、暗号化の主要アルゴリズムになっています。これは現在、IPsec仮想プライベートネットワーク（VPN）を含む多くの分野で最も一般的に使用されているアルゴリズムです。最近のほとんどのプラットフォームでは、AESは以前のポピュラーな暗号であるTriple Data Encryption Standard（3DES）[SP800-67]の4〜10倍の速度です。 3DESも64ビットブロックを使用します。つまり、鍵の再生成が必要になる前に暗号化できるデータの量は限られています。これらの理由により、AESは最良の選択であるだけでなく、IPsecの唯一の実行可能な選択になります。"
    },
    {
      "indent": 3,
      "text": "The problem is that if future advances in cryptanalysis reveal a weakness in AES, VPN users will be in an unenviable position. With the only other widely supported cipher for IPsec implementations being the much slower 3DES, it is not feasible to reconfigure IPsec installations away from AES. [Standby-Cipher] describes this issue and the need for a standby cipher in greater detail.",
      "ja": "問題は、暗号解読の将来の進歩によってAESの弱点が明らかになった場合、VPNユーザーがうらやましい立場に置かれることです。 IPsecの実装で広くサポートされている他の唯一の暗号は3DESの速度が非常に遅いため、IPsecのインストールをAESから再構成することはできません。 [Standby-Cipher]では、この問題とスタンバイ暗号の必要性について詳しく説明しています。"
    },
    {
      "indent": 3,
      "text": "This document proposes the fast and secure ChaCha20 stream cipher as such a standby cipher in an Authenticated Encryption with Associated Data (AEAD) construction with the Poly1305 authenticator for use with the Encapsulated Security Protocol (ESP) [RFC4303] and the Internet Key Exchange Protocol version 2 (IKEv2) [RFC7296]. The algorithms are described in a separate document ([RFC7539]). This document only describes the IPsec-specific things.",
      "ja": "このドキュメントは、カプセル化セキュリティプロトコル（ESP）[RFC4303]とインターネットキー交換プロトコルバージョンで使用するために、Poly1305認証システムを使用した認証付き暗号化（AEAD）構造のスタンバイ暗号として、高速で安全なChaCha20ストリーム暗号を提案します。 2（IKEv2）[RFC7296]。アルゴリズムは別のドキュメント（[RFC7539]）で説明されています。このドキュメントでは、IPsec固有のものについてのみ説明します。"
    },
    {
      "indent": 0,
      "text": "1.1. Conventions Used in This Document",
      "section_title": true,
      "ja": "1.1. このドキュメントで使用される規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は、 [RFC2119]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. ChaCha20 and Poly1305 for ESP",
      "section_title": true,
      "ja": "2. ESPのChaCha20およびPoly1305"
    },
    {
      "indent": 3,
      "text": "AEAD_CHACHA20_POLY1305 ([RFC7539]) is a combined mode algorithm, or AEAD. Usage follows the AEAD construction in Section 2.8 of RFC 7539:",
      "ja": "AEAD_CHACHA20_POLY1305（[RFC7539]）は、複合モードアルゴリズム、つまりAEADです。使用法は、RFC 7539のセクション2.8のAEAD構成に従います。"
    },
    {
      "indent": 3,
      "text": "o The Initialization Vector (IV) is 64 bits and is used as part of the nonce. The IV MUST be unique for each invocation for a particular security association (SA) but does not need to be unpredictable. The use of a counter or a linear feedback shift register (LFSR) is RECOMMENDED.",
      "ja": "o 初期化ベクトル（IV）は64ビットであり、ナンスの一部として使用されます。 IVは、特定のセキュリティアソシエーション（SA）の呼び出しごとに一意である必要がありますが、予測可能である必要はありません。カウンターまたは線形フィードバックシフトレジスタ（LFSR）の使用をお勧めします。"
    },
    {
      "indent": 3,
      "text": "o A 32-bit Salt is prepended to the 64-bit IV to form the 96-bit nonce. The salt is fixed per SA, and it is not transmitted as part of the ESP packet.",
      "ja": "o 32ビットのソルトが64ビットのIVの前に付加されて、96ビットのナンスが形成されます。ソルトはSAごとに固定され、ESPパケットの一部として送信されません。"
    },
    {
      "indent": 3,
      "text": "o The encryption key is 256 bits.",
      "ja": "o 暗号化キーは256ビットです。"
    },
    {
      "indent": 3,
      "text": "o The Internet Key Exchange Protocol generates a bitstring called KEYMAT using a pseudorandom function (PRF). That KEYMAT is divided into keys for encryption, message authentication, and whatever else is needed. The KEYMAT requested for each ChaCha20-Poly1305 key is 36 octets. The first 32 octets are the 256-bit ChaCha20 key, and the remaining 4 octets are used as the Salt value in the nonce.",
      "ja": "o Internet Key Exchange Protocolは、疑似ランダム関数（PRF）を使用してKEYMATと呼ばれるビット文字列を生成します。そのKEYMATは、暗号化、メッセージ認証、およびその他の必要なもののための鍵に分割されます。 ChaCha20-Poly1305キーごとに要求されるKEYMATは36オクテットです。最初の32オクテットは256ビットのChaCha20キーで、残りの4オクテットはノンスのソルト値として使用されます。"
    },
    {
      "indent": 3,
      "text": "The ChaCha20 encryption algorithm requires the following parameters: a 256-bit key, a 96-bit nonce, and a 32-bit Initial Block Counter. For ESP, we set these as follows:",
      "ja": "ChaCha20暗号化アルゴリズムには、256ビットキー、96ビットナンス、32ビット初期ブロックカウンターのパラメーターが必要です。 ESPの場合、これらを次のように設定します。"
    },
    {
      "indent": 3,
      "text": "o The key is set as mentioned above.",
      "ja": "o キーは上記のように設定されます。"
    },
    {
      "indent": 3,
      "text": "o The 96-bit nonce is formed from a concatenation of the 32-bit Salt and the 64-bit IV, as described above.",
      "ja": "o 前述のように、96ビットのノンスは、32ビットのソルトと64ビットのIVの連結から形成されます。"
    },
    {
      "indent": 3,
      "text": "o The Initial Block Counter is set to one (1). The reason that one is used for the initial counter rather than zero is that zero is reserved for generating the one-time Poly1305 key (see below).",
      "ja": "o 初期ブロックカウンターは1に設定されます。ゼロではなく1が初期カウンターに使用される理由は、ゼロが1回限りのPoly1305キーの生成用に予約されているためです（以下を参照）。"
    },
    {
      "indent": 3,
      "text": "As the ChaCha20 block function is not applied directly to the plaintext, no padding should be necessary. However, in keeping with the specification in RFC 4303, the plaintext always has a pad length octet and a Next Header octet, and it may require padding octets so as to align the buffer to an integral multiple of 4 octets.",
      "ja": "ChaCha20ブロック関数はプレーンテキストに直接適用されないため、パディングは必要ありません。ただし、RFC 4303の仕様に準拠して、プレーンテキストには常に埋め込み長オクテットと次ヘッダーオクテットがあり、バッファーを4オクテットの整数倍に揃えるために埋め込みオクテットが必要な場合があります。"
    },
    {
      "indent": 3,
      "text": "The same key and nonce, along with a block counter of zero, are passed to the ChaCha20 block function, and the top 256 bits of the result are used as the Poly1305 key.",
      "ja": "同じキーとノンス、およびゼロのブロックカウンターがChaCha20ブロック関数に渡され、結果の上位256ビットがPoly1305キーとして使用されます。"
    },
    {
      "indent": 3,
      "text": "Finally, the Poly1305 function is run on the data to be authenticated, which is, as specified in Section 2.8 of [RFC7539], a concatenation of the following in the order below:",
      "ja": "最後に、Poly1305関数は、認証対象のデータに対して実行されます。これは、[RFC7539]のセクション2.8で指定されているとおり、以下の順序で以下を連結したものです。"
    },
    {
      "indent": 3,
      "text": "o The Authenticated Additional Data (AAD); see Section 2.1.",
      "ja": "o Authenticated Additional Data（AAD）;セクション2.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "o Zero-octet padding that rounds the length up to 16 octets. This is 4 or 8 octets depending on the length of the AAD.",
      "ja": "o 長さを16オクテットに丸めるゼロオクテットパディング。これは、AADの長さに応じて4または8オクテットです。"
    },
    {
      "indent": 3,
      "text": "o The ciphertext.",
      "ja": "o 暗号文。"
    },
    {
      "indent": 3,
      "text": "o Zero-octet padding that rounds the total length up to an integral multiple of 16 octets.",
      "ja": "o 全長を16オクテットの整数倍に丸めるゼロオクテットパディング。"
    },
    {
      "indent": 3,
      "text": "o The length of the AAD in octets (as a 64-bit integer encoded in little-endian byte order).",
      "ja": "o オクテット単位のAADの長さ（リトルエンディアンバイトオーダーでエンコードされた64ビット整数として）。"
    },
    {
      "indent": 3,
      "text": "o The length of the ciphertext in octets (as a 64-bit integer encoded in little-endian byte order).",
      "ja": "o オクテット単位の暗号文の長さ（リトルエンディアンバイトオーダーでエンコードされた64ビット整数として）。"
    },
    {
      "indent": 3,
      "text": "The 128-bit output of Poly1305 is used as the tag. All 16 octets are included in the packet.",
      "ja": "Poly1305の128ビット出力がタグとして使用されます。すべての16オクテットがパケットに含まれています。"
    },
    {
      "indent": 3,
      "text": "The figure below is a copy of Figure 2 in RFC 4303:",
      "ja": "次の図は、RFC 4303の図2のコピーです。"
    },
    {
      "indent": 3,
      "text": "  0                   1                   2                   3\n  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               Security Parameters Index (SPI)                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      Sequence Number                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---\n|                    IV (optional)                              | ^ p\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | a\n|                    Rest of Payload Data  (variable)           | | y\n~                                                               ~ | l\n|                                                               | | o\n+               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | a\n|               |         TFC Padding * (optional, variable)    | v d\n+-+-+-+-+-+-+-+-+         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+---\n|                         |        Padding (0-255 bytes)        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                               |  Pad Length   | Next Header   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|         Integrity Check Value-ICV   (variable)                |\n~                                                               ~\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "o The IV field is 64 bits. It is the final 64 bits of the 96-bit nonce. If the counter method is used for generating unique IVs, then the final 32 bits of the IV will be equal to the Sequence Number field.",
      "ja": "o IVフィールドは64ビットです。これは、96ビットノンスの最後の64ビットです。カウンター方式を使用して固有のIVを生成する場合、IVの最後の32ビットはシーケンス番号フィールドと等しくなります。"
    },
    {
      "indent": 3,
      "text": "o The length of the Padding field need not exceed 4 octets. However, neither RFC 4303 nor this specification require using the minimal padding length.",
      "ja": "o Paddingフィールドの長さは4オクテットを超える必要はありません。ただし、RFC 4303もこの仕様も、最小のパディング長を使用する必要はありません。"
    },
    {
      "indent": 3,
      "text": "o The Integrity Check Value field contains the 16-octet tag.",
      "ja": "o Integrity Check Valueフィールドには、16オクテットのタグが含まれています。"
    },
    {
      "indent": 0,
      "text": "2.1. AAD Construction",
      "section_title": true,
      "ja": "2.1. AAD建設"
    },
    {
      "indent": 3,
      "text": "The construction of the Additional Authenticated Data (AAD) is similar to the one in [RFC4106]. For security associations (SAs) with 32-bit sequence numbers, the AAD is 8 octets: a 4-octet SPI followed by a 4-octet sequence number ordered exactly as it is in the packet. For SAs with an Extended Sequence Number (ESN), the AAD is 12 octets: a 4-octet SPI followed by an 8-octet sequence number as a 64-bit integer in big-endian byte order.",
      "ja": "追加認証データ（AAD）の構成は、[RFC4106]の構成に似ています。 32ビットのシーケンス番号を持つセキュリティアソシエーション（SA）の場合、AADは8オクテットです。4オクテットのSPIとそれに続く4オクテットのシーケンス番号が、パケット内とまったく同じ順序で続きます。拡張シーケンス番号（ESN）のSAの場合、AADは12オクテットです。4オクテットのSPIの後に、ビッグエンディアンバイトオーダーの64ビット整数として8オクテットのシーケンス番号が続きます。"
    },
    {
      "indent": 0,
      "text": "3. Use in IKEv2",
      "section_title": true,
      "ja": "3. IKEv2での使用"
    },
    {
      "indent": 3,
      "text": "AEAD algorithms can be used in IKE, as described in [RFC5282]. More specifically:",
      "ja": "AEADアルゴリズムは、[RFC5282]で説明されているように、IKEで使用できます。すなわち："
    },
    {
      "indent": 3,
      "text": "o The Encrypted Payload is as described in Section 3 of RFC 5282.",
      "ja": "o 暗号化されたペイロードは、RFC 5282のセクション3に記載されています。"
    },
    {
      "indent": 3,
      "text": "o The ChaCha20-Poly1305 keying material is derived similarly to ESP: 36 octets are requested for each of SK_ei and SK_er, of which the first 32 form the key and the last 4 form the salt. No octets are requested for SK_ai and SK_ar.",
      "ja": "o ChaCha20-Poly1305キーイングマテリアルはESPと同様に導出されます。SK_eiとSK_erのそれぞれに36オクテットが要求されます。最初の32はキーを形成し、最後の4はソルトを形成します。 SK_aiとSK_arではオクテットは要求されません。"
    },
    {
      "indent": 3,
      "text": "o The IV is 64 bits, as described in Section 2, and is included explicitly in the Encrypted payload.",
      "ja": "o セクション2で説明したように、IVは64ビットであり、暗号化されたペイロードに明示的に含まれています。"
    },
    {
      "indent": 3,
      "text": "o The sender SHOULD include no padding and set the Pad Length field to zero. The receiver MUST accept any length of padding.",
      "ja": "o 送信者はパディングを含めず、Pad Lengthフィールドをゼロに設定する必要があります（SHOULD）。レシーバーは、任意の長さのパディングを受け入れる必要があります。"
    },
    {
      "indent": 3,
      "text": "o The AAD is as described in Section 5.1 of RFC 5282, so it is 32 octets (28 for the IKEv2 header plus 4 octets for the encrypted payload header), assuming no unencrypted payloads.",
      "ja": "o AADはRFC 5282のセクション5.1で説明されているとおりなので、暗号化されていないペイロードがないと仮定すると、32オクテット（IKEv2ヘッダーに28オクテットと暗号化されたペイロードヘッダーに4オクテット）になります。"
    },
    {
      "indent": 0,
      "text": "4. Negotiation in IKEv2",
      "section_title": true,
      "ja": "4. IKEv2での交渉"
    },
    {
      "indent": 3,
      "text": "When negotiating the ChaCha20-Poly1305 algorithm for use in IKE or IPsec, the value ENCR_CHACHA20_POLY1305 (28) should be used in the transform substructure of the SA payload as the ENCR (type 1) transform ID. As with other AEAD algorithms, INTEG (type 3) transform substructures MUST NOT be specified, or just one INTEG transform MAY be included with value NONE (0).",
      "ja": "ChaCha20-Poly1305アルゴリズムをIKEまたはIPsecで使用するためにネゴシエートする場合、値ENCR_CHACHA20_POLY1305（28）をSAペイロードの変換サブ構造でENCR（タイプ1）変換IDとして使用する必要があります。他のAEADアルゴリズムと同様に、INTEG（タイプ3）変換サブ構造を指定してはなりません（MUST NOT）。または、値NONE（0）のINTEG変換を1つだけ含めることができます（MAY）。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The ChaCha20 cipher is designed to provide 256-bit security.",
      "ja": "ChaCha20暗号は、256ビットのセキュリティを提供するように設計されています。"
    },
    {
      "indent": 3,
      "text": "The Poly1305 authenticator is designed to ensure that forged messages are rejected with a probability of 1-(n/(2^102)) for a 16n-octet message, even after sending 2^64 legitimate messages, so it is SUF-CMA (strong unforgeability against chosen-message attacks) in the terminology of [AE].",
      "ja": "Poly1305オーセンティケーターは、2 ^ 64の正当なメッセージを送信した後でも、16nオクテットメッセージに対して1-（n /（2 ^ 102））の確率で偽造されたメッセージが確実に拒否されるように設計されているため、SUF-CMA（ [AE]の用語では、選択したメッセージ攻撃に対する強力な偽造不能性）。"
    },
    {
      "indent": 3,
      "text": "The most important security consideration in implementing this document is the uniqueness of the nonce used in ChaCha20. The nonce should be selected uniquely for a particular key, but unpredictability of the nonce is not required. Counters and LFSRs are both acceptable ways of generating unique nonces.",
      "ja": "このドキュメントを実装する上で最も重要なセキュリティの考慮事項は、ChaCha20で使用されるナンスの一意性です。ナンスは特定のキーに対して一意に選択する必要がありますが、ナンスの予測不能性は必要ありません。カウンターとLFSRはどちらも、一意のナンスを生成するための受け入れ可能な方法です。"
    },
    {
      "indent": 3,
      "text": "Another issue with implementing these algorithms is avoiding side channels. This is trivial for ChaCha20, but requires some care for Poly1305. Considerations for implementations of these algorithms are in [RFC7539].",
      "ja": "これらのアルゴリズムの実装に関するもう1つの問題は、サイドチャネルの回避です。これはChaCha20にとっては取るに足らないことですが、Poly1305については注意が必要です。これらのアルゴリズムの実装に関する考慮事項は、[RFC7539]にあります。"
    },
    {
      "indent": 3,
      "text": "The Salt value in used nonce construction in ESP and IKEv2 is derived from the keystream, same as the encryption key. It is never transmitted on the wire, but the security of the algorithm does not depend on its secrecy. Thus, implementations that keep keys and other secret material within some security boundary MAY export the Salt from the security boundary. This may be useful if the API provided by the library accepts the nonce as a parameter rather than the IV.",
      "ja": "ESPおよびIKEv2で使用されるnonce構造のソルト値は、暗号化キーと同じキーストリームから派生します。これはネットワーク上で送信されることはありませんが、アルゴリズムのセキュリティはその秘密性に依存しません。したがって、鍵や他の秘密の資料をセキュリティ境界内に保持する実装は、Saltをセキュリティ境界からエクスポートしてもよい（MAY）。これは、ライブラリーが提供するAPIがIVではなくnonceをパラメーターとして受け入れる場合に役立ちます。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has assigned the value 28 as a transform identifier for the algorithm described in this document in the \"Transform Type 1 - Encryption Algorithm Transform IDs\" registry with name ENCR_CHACHA20_POLY1305 and this document as reference for both ESP and IKEv2.",
      "ja": "IANAは、値28を、このドキュメントで説明されているアルゴリズムの変換識別子としてENCR_CHACHA20_POLY1305という名前の「Transform Type 1-Encryption Algorithm Transform IDs」レジストリで割り当て、ESPとIKEv2の両方の参照としてこのドキュメントを割り当てました。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7. 参考文献"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC4303] Kent, S., \"IP Encapsulating Security Payload (ESP)\", RFC 4303, DOI 10.17487/RFC4303, December 2005, <http://www.rfc-editor.org/info/rfc4303>.",
      "ja": "[RFC4303]ケント、S。、「IPカプセル化セキュリティペイロード（ESP）」、RFC 4303、DOI 10.17487 / RFC4303、2005年12月、<http://www.rfc-editor.org/info/rfc4303>。"
    },
    {
      "indent": 3,
      "text": "[RFC5282] Black, D. and D. McGrew, \"Using Authenticated Encryption Algorithms with the Encrypted Payload of the Internet Key Exchange version 2 (IKEv2) Protocol\", RFC 5282, DOI 10.17487/RFC5282, August 2008, <http://www.rfc-editor.org/info/rfc5282>.",
      "ja": "[RFC5282] Black、D。、およびD. McGrew、「インターネットキーエクスチェンジバージョン2（IKEv2）プロトコルの暗号化ペイロードでの認証済み暗号化アルゴリズムの使用」、RFC 5282、DOI 10.17487 / RFC5282、2008年8月、<http：// www.rfc-editor.org/info/rfc5282>。"
    },
    {
      "indent": 3,
      "text": "[RFC7296] Kaufman, C., Hoffman, P., Nir, Y., Eronen, P., and T. Kivinen, \"Internet Key Exchange Protocol Version 2 (IKEv2)\", STD 79, RFC 7296, DOI 10.17487/RFC7296, October 2014, <http://www.rfc-editor.org/info/rfc7296>.",
      "ja": "[RFC7296] Kaufman、C.、Hoffman、P.、Nir、Y.、Eronen、P。、およびT. Kivinen、「Internet Key Exchange Protocol Version 2（IKEv2）」、STD 79、RFC 7296、DOI 10.17487 / RFC7296 、2014年10月、<http://www.rfc-editor.org/info/rfc7296>。"
    },
    {
      "indent": 3,
      "text": "[RFC7539] Nir, Y. and A. Langley, \"ChaCha20 and Poly1305 for IETF Protocols\", RFC 7539, DOI 10.17487/RFC7539, May 2015, <http://www.rfc-editor.org/info/rfc7539>.",
      "ja": "[RFC7539] Nir、Y。およびA. Langley、「IETFプロトコル用のChaCha20およびPoly1305」、RFC 7539、DOI 10.17487 / RFC7539、2015年5月、<http://www.rfc-editor.org/info/rfc7539>。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[AE] Bellare, M. and C. Namprempre, \"Authenticated Encryption: Relations among notions and analysis of the generic composition paradigm\", DOI 10.1007/s00145-008-9026-x, September 2008, <http://cseweb.ucsd.edu/~mihir/papers/oem.html>.",
      "ja": "[AE] Bellare、M。およびC. Namprempre、「Authenticated Encryption：Relations between notions and analysis of the generic composition paradigm」、DOI 10.1007 / s00145-008-9026-x、2008年9月、<http：//cseweb.ucsd .edu /〜mihir / papers / oem.html>。"
    },
    {
      "indent": 3,
      "text": "[FIPS-197] National Institute of Standards and Technology, \"Advanced Encryption Standard (AES)\", FIPS PUB 197, November 2001, <http://csrc.nist.gov/publications/fips/fips197/ fips-197.pdf>.",
      "ja": "[FIPS-197]米国国立標準技術研究所、「Advanced Encryption Standard（AES）」、FIPS PUB 197、2001年11月、<http://csrc.nist.gov/publications/fips/fips197/ fips-197.pdf >。"
    },
    {
      "indent": 3,
      "text": "[RFC1761] Callaghan, B. and R. Gilligan, \"Snoop Version 2 Packet Capture File Format\", RFC 1761, DOI 10.17487/RFC1761, February 1995, <http://www.rfc-editor.org/info/rfc1761>.",
      "ja": "[RFC1761] Callaghan、B。およびR. Gilligan、「Snoop Version 2 Packet Capture File Format」、RFC 1761、DOI 10.17487 / RFC1761、1995年2月、<http://www.rfc-editor.org/info/rfc1761> 。"
    },
    {
      "indent": 3,
      "text": "[RFC4106] Viega, J. and D. McGrew, \"The Use of Galois/Counter Mode (GCM) in IPsec Encapsulating Security Payload (ESP)\", RFC 4106, DOI 10.17487/RFC4106, June 2005, <http://www.rfc-editor.org/info/rfc4106>.",
      "ja": "[RFC4106] Viega、J。およびD. McGrew、「The Use of Galois / Counter Mode（GCM）in IPsec Encapsulating Security Payload（ESP）」、RFC 4106、DOI 10.17487 / RFC4106、2005年6月、<http：// www .rfc-editor.org / info / rfc4106>。"
    },
    {
      "indent": 3,
      "text": "[SP800-67] National Institute of Standards and Technology, \"Recommendation for the Triple Data Encryption Algorithm (TDEA) Block Cipher\", FIPS SP800-67, January 2012, <http://csrc.nist.gov/publications/nistpubs/800-67-Rev1/ SP-800-67-Rev1.pdf>.",
      "ja": "[SP800-67]米国国立標準技術研究所、「トリプルデータ暗号化アルゴリズム（TDEA）ブロック暗号の推奨」、FIPS SP800-67、2012年1月、<http://csrc.nist.gov/publications/nistpubs/ 800-67-Rev1 / SP-800-67-Rev1.pdf>。"
    },
    {
      "indent": 3,
      "text": "[Standby-Cipher] McGrew, D., Grieco, A., and Y. Sheffer, \"Selection of Future Cryptographic Standards\", Work in Progress draft-mcgrew-standby-cipher-00, January 2013.",
      "ja": "[Standby-Cipher] McGrew、D.、Grieco、A。、およびY. Sheffer、「Selection of Future Cryptographic Standards」、Work in Progress draft-mcgrew-standby-cipher-00、2013年1月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. ESP Example",
      "section_title": true,
      "ja": "付録A. ESPの例"
    },
    {
      "indent": 3,
      "text": "For this example, we will use a tunnel-mode ESP SA using the ChaCha20-Poly1305 algorithm. The keying material is as follows:",
      "ja": "この例では、ChaCha20-Poly1305アルゴリズムを使用するトンネルモードESP SAを使用します。キー材料は次のとおりです。"
    },
    {
      "indent": 2,
      "text": "KEYMAT:\n000  80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f  ................\n016  90 91 92 93 94 95 96 97 98 99 9a 9b 9c 9d 9e 9f  ................\n032  a0 a1 a2 a3                                      ....",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Obviously not a great PRF. The first 32 octets are the key and the final 4 octets (0xa0 0xa1 0xa2 0xa3) are the salt. For the packet, we will use an ICMP packet from 198.51.100.5 to 192.0.2.5:",
      "ja": "明らかに素晴らしいPRFではありません。最初の32オクテットが鍵で、最後の4オクテット（0xa0 0xa1 0xa2 0xa3）がソルトです。パケットには、198.51.100.5から192.0.2.5までのICMPパケットを使用します。"
    },
    {
      "indent": 2,
      "text": "Source Packet:\n000  45 00 00 54 a6 f2 00 00 40 01 e7 78 c6 33 64 05  E..T....@..x.3d.\n016  c0 00 02 05 08 00 5b 7a 3a 08 00 00 55 3b ec 10  ......[z:...U;..\n032  00 07 36 27 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13  ..6'............\n048  14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23  ............ !\"#\n064  24 25 26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33  $%&'()*+,-./0123\n080  34 35 36 37                                      4567",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The SA details are as follows:",
      "ja": "SAの詳細は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o The key and Salt are as above.",
      "ja": "o キーとソルトは上記の通りです。"
    },
    {
      "indent": 3,
      "text": "o The SPI is 0x01 0x02 0x03 0x04.",
      "ja": "o SPIは0x01 0x02 0x03 0x04です。"
    },
    {
      "indent": 3,
      "text": "o The next sequence number is 5; ESN is not enabled.",
      "ja": "o 次のシーケンス番号は5です。 ESNが有効になっていません。"
    },
    {
      "indent": 3,
      "text": "o The gateway IP address for this side is 203.0.113.153; The peer address is 203.0.113.5.",
      "ja": "o このサイドのゲートウェイIPアドレスは203.0.113.153です。ピアアドレスは203.0.113.5です。"
    },
    {
      "indent": 3,
      "text": "o NAT was not detected.",
      "ja": "o NATは検出されませんでした。"
    },
    {
      "indent": 3,
      "text": "The 64-bit IV is 0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17. Putting together the salt and IV we get the nonce:",
      "ja": "64ビットIVは0x10 0x11 0x12 0x13 0x14 0x15 0x16 0x17です。ソルトとIVを組み合わせると、ナンスが得られます。"
    },
    {
      "indent": 3,
      "text": "The nonce:\n000  a0 a1 a2 a3 10 11 12 13 14 15 16 17              ............",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The plaintext to encrypt consists of the source IP packet plus the padding:",
      "ja": "暗号化する平文は、ソースIPパケットとパディングで構成されます。"
    },
    {
      "indent": 2,
      "text": "Plaintext (includes padding and pad length):\n000  45 00 00 54 a6 f2 00 00 40 01 e7 78 c6 33 64 05  E..T....@..x.3d.\n016  c0 00 02 05 08 00 5b 7a 3a 08 00 00 55 3b ec 10  ......[z:...U;..\n032  00 07 36 27 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13  ..6'............\n048  14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23  ............ !\"#\n064  24 25 26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33  $%&'()*+,-./0123\n080  34 35 36 37 01 02 02 04                          4567....",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "With the key, nonce, and plaintext available, we can call the ChaCha20 function and encrypt the packet, producing the ciphertext:",
      "ja": "利用可能なキー、ノンス、プレーンテキストを使用して、ChaCha20関数を呼び出してパケットを暗号化し、暗号文を生成します。"
    },
    {
      "indent": 2,
      "text": "Ciphertext:\n000  24 03 94 28 b9 7f 41 7e 3c 13 75 3a 4f 05 08 7b  $..(..A~<.u:O..{\n016  67 c3 52 e6 a7 fa b1 b9 82 d4 66 ef 40 7a e5 c6  g.R.......f.@z..\n032  14 ee 80 99 d5 28 44 eb 61 aa 95 df ab 4c 02 f7  .....(D.a....L..\n048  2a a7 1e 7c 4c 4f 64 c9 be fe 2f ac c6 38 e8 f3  *..|LOd.../..8..\n064  cb ec 16 3f ac 46 9b 50 27 73 f6 fb 94 e6 64 da  ...?.F.P's....d.\n080  91 65 b8 28 29 f6 41 e0                          .e.().A.",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "To calculate the tag, we need a one-time Poly1305 key, which we calculate by calling the ChaCha20 function again with the same key and nonce, but a block count of zero.",
      "ja": "タグを計算するには、1回限りのPoly1305キーが必要です。これは、同じキーとノンスを使用して、ChaCha20関数を再度呼び出すことによって計算しますが、ブロック数はゼロです。"
    },
    {
      "indent": 2,
      "text": "Poly1305 one-time key:\n000  af 1f 41 2c c1 15 ad ce 5e 4d 0e 29 d5 c1 30 bf  ..A,....^M.)..0.\n016  46 31 21 0e 0f ef 74 31 c0 45 4f e7 0f d7 c2 d1  F1!...t1.EO.....",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The AAD is constructed by concatenating the SPI to the sequence number:",
      "ja": "AADは、SPIをシーケンス番号に連結することによって構築されます。"
    },
    {
      "indent": 3,
      "text": "000  01 02 03 04 00 00 00 05                          ........",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The input to the Poly1305 function is constructed by concatenating and padding the AAD and ciphertext:",
      "ja": "Poly1305関数への入力は、AADと暗号文を連結してパディングすることによって構築されます。"
    },
    {
      "indent": 2,
      "text": "Poly1305 Input:\n000  01 02 03 04 00 00 00 05 00 00 00 00 00 00 00 00  ................\n016  24 03 94 28 b9 7f 41 7e 3c 13 75 3a 4f 05 08 7b  $..(..A~<.u:O..{\n032  67 c3 52 e6 a7 fa b1 b9 82 d4 66 ef 40 7a e5 c6  g.R.......f.@z..\n048  14 ee 80 99 d5 28 44 eb 61 aa 95 df ab 4c 02 f7  .....(D.a....L..\n064  2a a7 1e 7c 4c 4f 64 c9 be fe 2f ac c6 38 e8 f3  *..|LOd.../..8..\n080  cb ec 16 3f ac 46 9b 50 27 73 f6 fb 94 e6 64 da  ...?.F.P's....d.\n096  91 65 b8 28 29 f6 41 e0 00 00 00 00 00 00 00 00  .e.().A.........\n112  08 00 00 00 00 00 00 00 58 00 00 00 00 00 00 00  ........X.......",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The resulting tag is:",
      "ja": "結果のタグは次のとおりです。"
    },
    {
      "indent": 2,
      "text": "Tag:\n000  76 aa a8 26 6b 7f b0 f7 b1 1b 36 99 07 e1 ad 43  v..&k.....6....C",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Putting it all together, the resulting packet is as follows:",
      "ja": "すべてをまとめると、結果のパケットは次のようになります。"
    },
    {
      "indent": 2,
      "text": "ESP packet:\n000  45 00 00 8c 23 45 00 00 40 32 de 5b cb 00 71 99  E...#E..@2.[..q.\n016  cb 00 71 05 01 02 03 04 00 00 00 05 10 11 12 13  ..q.............\n032  14 15 16 17 24 03 94 28 b9 7f 41 7e 3c 13 75 3a  ....$..(..A~<.u:\n048  4f 05 08 7b 67 c3 52 e6 a7 fa b1 b9 82 d4 66 ef  O..{g.R.......f.\n064  40 7a e5 c6 14 ee 80 99 d5 28 44 eb 61 aa 95 df  @z.......(D.a...\n080  ab 4c 02 f7 2a a7 1e 7c 4c 4f 64 c9 be fe 2f ac  .L..*..|LOd.../.\n096  c6 38 e8 f3 cb ec 16 3f ac 46 9b 50 27 73 f6 fb  .8.....?.F.P's..\n112  94 e6 64 da 91 65 b8 28 29 f6 41 e0 76 aa a8 26  ..d..e.().A.v..&\n128  6b 7f b0 f7 b1 1b 36 99 07 e1 ad 43              k.....6....C",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix B. IKEv2 Example",
      "section_title": true,
      "ja": "付録B. IKEv2の例"
    },
    {
      "indent": 3,
      "text": "For the IKEv2 example, we'll use the following:",
      "ja": "IKEv2の例では、以下を使用します。"
    },
    {
      "indent": 3,
      "text": "o The key is 0x80..0x9f, the same as in Appendix A.",
      "ja": "o キーは0x80..0x9fで、付録Aと同じです。"
    },
    {
      "indent": 3,
      "text": "o The Salt is 0xa0 0xa1 0xa2 0xa3.",
      "ja": "o ソルトは0xa0 0xa1 0xa2 0xa3です。"
    },
    {
      "indent": 3,
      "text": "o The IV will also be the same as in the previous example. The fact that the IV and Salt are both the same means that the nonce is also the same.",
      "ja": "o IVも前の例と同じです。 IVとソルトが同じであるということは、ナンスも同じであることを意味します。"
    },
    {
      "indent": 3,
      "text": "o Because the key and nonce are the same, so is the one-time Poly1305 key.",
      "ja": "o キーとナンスは同じなので、1回限りのPoly1305キーも同じです。"
    },
    {
      "indent": 3,
      "text": "o The packet will be an INFORMATIONAL request carrying a single payload: a Notify payload with type SET_WINDOW_SIZE, setting the window size to 10.",
      "ja": "o パケットは、単一のペイロードを運ぶINFORMATIONALリクエストになります。ウィンドウサイズを10に設定した、SET_WINDOW_SIZEタイプのNotifyペイロードです。"
    },
    {
      "indent": 3,
      "text": "o iSPI = 0xc0 0xc1 0xc2 0xc3 0xc4 0xc5 0xc6 0xc7.",
      "ja": "o iSPI = 0xc0 0xc1 0xc2 0xc3 0xc4 0xc5 0xc6 0xc7。"
    },
    {
      "indent": 3,
      "text": "o rSPI = 0xd0 0xd1 0xd2 0xd3 0xd4 0xd5 0xd6 0xd7.",
      "ja": "o rSPI = 0xd0 0xd1 0xd2 0xd3 0xd4 0xd5 0xd6 0xd7。"
    },
    {
      "indent": 3,
      "text": "o Message ID shall be 9.",
      "ja": "o メッセージIDは9です。"
    },
    {
      "indent": 3,
      "text": "The Notify Payload:\n000  00 00 00 0c 00 00 40 01 00 00 00 0a              ......@.....",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Plaintext (with no padding and a zero pad length):\n000  00 00 00 0c 00 00 40 01 00 00 00 0a 00           ......@......",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Ciphertext:\n000  61 03 94 70 1f 8d 01 7f 7c 12 92 48 89           a..p....|..H.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The AAD is constructed by appending the IKE header to the encrypted payload header. Note that the length field in the IKE header and the length field in the encrypted payload header have to be calculated before constructing the AAD:",
      "ja": "AADは、IKEヘッダーを暗号化されたペイロードヘッダーに追加することによって構築されます。 IKEヘッダーの長さフィールドと暗号化されたペイロードヘッダーの長さフィールドは、AADを構築する前に計算する必要があることに注意してください。"
    },
    {
      "indent": 2,
      "text": "AAD:\n000  c0 c1 c2 c3 c4 c5 c6 c7 d0 d1 d2 d3 d4 d5 d6 d7  ................\n016  2e 20 25 00 00 00 00 09 00 00 00 45 29 00 00 29  . %........E)..)",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In this case, the length of the AAD is an integral multiple of 16, so when constructing the input to Poly1305 there was no need for padding. The ciphertext is 13 octets long, so it is followed by 3 zero octets. The input to Poly1305 is 32 octets of AAD, 13 octets of ciphertext, 3 octets of zero padding, and two 8-octet length fields in little-endian byte order.",
      "ja": "この場合、AADの長さは16の整数倍であるため、Poly1305への入力を構築するときにパディングは必要ありませんでした。暗号文は13オクテット長であるため、その後に3つのゼロオクテットが続きます。 Poly1305への入力は、32オクテットのAAD、13オクテットの暗号文、3オクテットのゼロパディング、および2つの8オクテット長フィールドで、リトルエンディアンバイトオーダーです。"
    },
    {
      "indent": 2,
      "text": "Poly1305 Input:\n000  c0 c1 c2 c3 c4 c5 c6 c7 d0 d1 d2 d3 d4 d5 d6 d7  ................\n016  2e 20 25 00 00 00 00 09 00 00 00 45 29 00 00 29  . %........E)..)\n032  61 03 94 70 1f 8d 01 7f 7c 12 92 48 89 00 00 00  a..p....|..H....\n048  20 00 00 00 00 00 00 00 0d 00 00 00 00 00 00 00   ...............",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "Tag:\n000  6b 71 bf e2 52 36 ef d7 cd c6 70 66 90 63 15 b2  kq..R6....pf.c..",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "Encrypted Payload:\n000  29 00 00 29 10 11 12 13 14 15 16 17 61 03 94 70  )..)........a..p\n016  1f 8d 01 7f 7c 12 92 48 89 6b 71 bf e2 52 36 ef  ....|..H.kq..R6.\n032  d7 cd c6 70 66 90 63 15 b2                       ...pf.c..",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "The IKE Message:\n000  c0 c1 c2 c3 c4 c5 c6 c7 d0 d1 d2 d3 d4 d5 d6 d7  ................\n016  2e 20 25 00 00 00 00 09 00 00 00 45 29 00 00 29  . %........E)..)\n032  10 11 12 13 14 15 16 17 61 03 94 70 1f 8d 01 7f  ........a..p....\n048  7c 12 92 48 89 6b 71 bf e2 52 36 ef d7 cd c6 70  |..H.kq..R6....p\n064  66 90 63 15 b2                                   f.c..",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The below file in the snoop format [RFC1761] contains three packets: The first is the ICMP packet from the example in Appendix A, the second is the ESP packet from the same appendix, and the third is the IKEv2 packet from this appendix. To convert this text back into a file, you can use a Unix command line tool such as \"openssl enc -d -a\":",
      "ja": "次のsnoop形式のファイル[RFC1761]には3つのパケットが含まれています。1つ目は付録Aの例のICMPパケット、2つ目は同じ付録のESPパケット、3つ目はこの付録のIKEv2パケットです。このテキストをファイルに戻すには、「openssl enc -d -a」などのUnixコマンドラインツールを使用できます。"
    },
    {
      "indent": 3,
      "text": "c25vb3AAAAAAAAACAAAABAAAAGIAAABiAAAAegAAAABVPq8PAAADVdhs6fUQBHgx wbcpwggARQAAVKbyAABAAed4xjNkBcAAAgUIAFt6OggAAFU77BAABzYnCAkKCwwN Dg8QERITFBUWFxgZGhscHR4fICEiIyQlJicoKSorLC0uLzAxMjM0NTY3AAAAmgAA AJoAAACyAAAAAFU+rw8AAAo62Gzp9RAEeDHBtynCCABFAACMI0UAAEAy3lvLAHGZ ywBxBQECAwQAAAAFEBESExQVFhckA5QouX9BfjwTdTpPBQh7Z8NS5qf6sbmC1Gbv QHrlxhTugJnVKETrYaqV36tMAvcqpx58TE9kyb7+L6zGOOjzy+wWP6xGm1Anc/b7 lOZk2pFluCgp9kHgdqqoJmt/sPexGzaZB+GtQwAAAG8AAABvAAAAhwAAAABVPq8P AAARH9hs6fUQBHgxwbcpwggARQAAYSNFAABAEd6nywBxmcsAcQUB9AH0AE0IUcDB wsPExcbH0NHS09TV1tcuICUAAAAACQAAAEUpAAApEBESExQVFhdhA5RwH40Bf3wS kkiJa3G/4lI279fNxnBmkGMVsg==",
      "ja": "c25vb3AAAAAAAAACAAAABAAAAGIAAABiAAAAegAAAABVPq8PAAADVdhs6fUQBHgx wbcpwggARQAAVKbyAABAAed4xjNkBcAAAgUIAFt6OggAAFU77BAABzYnCAkKCwwN Dg8QERITFBUWFxgZGhscHR4fICEiIyQlJicoKSorLC0uLzAxMjM0NTY3AAAAmgAA AJoAAACyAAAAAFU rw8AAAo62Gzp9RAEeDHBtynCCABFAACMI0UAAEAy3lvLAHGZ ywBxBQECAwQAAAAFEBESExQVFhckA5QouX9BfjwTdTpPBQh7Z8NS5qf6sbmC1Gbv QHrlxhTugJnVKETrYaqV36tMAvcqpx58TE9kyb7 + + + L6zGOOjzy wWP6xGm1Anc / B7 lOZk2pFluCgp9kHgdqqoJmt / sPexGzaZB + GtQwAAAG8AAABvAAAAhwAAAABVPq8P AAARH9hs6fUQBHgxwbcpwggARQAAYSNFAABAEd6nywBxmcsAcQUB9AH0AE0IUcDB wsPExcbH0NHS09TV1tcuICUAAAAACQAAAEUpAAApEBESExQVFhdhA5RwH40Bf3wS kkiJa3G / 4lI279fNxnBmkGMVsg =="
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "All of the algorithms in this document were designed by D. J. Bernstein. The AEAD construction was designed by Adam Langley. The author would also like to thank Adam for helpful comments, as well as Yaron Sheffer for telling me to write the algorithms document. Thanks also to Martin Willi for pointing out the discrepancy with the final version of the algorithm document, and to Valery Smyslov and Tero Kivinen for helpful comments on this document. Thanks to Steve Doyle and Martin Willi for pointing out mistakes in my examples.",
      "ja": "このドキュメントのすべてのアルゴリズムは、D。J. Bernsteinによって設計されました。 AEAD構造は、Adam Langleyによって設計されました。また、有用なコメントを提供してくれたAdamと、アルゴリズムドキュメントを書くように言ってくれたYaron Shefferにも感謝します。アルゴリズムドキュメントの最終バージョンとの不一致を指摘してくれたMartin Williと、このドキュメントに関する有益なコメントをしてくれたValery SmyslovとTero Kivinenにも感謝します。私の例の間違いを指摘してくれたSteve DoyleとMartin Williに感謝します。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Yoav Nir Check Point Software Technologies Ltd. 5 Hasolelim St. Tel Aviv 6789735 Israel",
      "ja": "Yoav Nir ​​Check Point Software Technologies Ltd. 5 Hasolelim St. Tel Aviv 6789735 Israel"
    },
    {
      "indent": 3,
      "text": "Email: ynir.ietf@gmail.com",
      "raw": true,
      "ja": ""
    }
  ]
}