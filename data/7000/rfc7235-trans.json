{
  "title": {
    "text": "RFC 7235 - Hypertext Transfer Protocol (HTTP/1.1): Authentication",
    "ja": "RFC 7235 - ハイパーテキスト転送プロトコル（HTTP / 1.1）：認証"
  },
  "number": 7235,
  "created_at": "2020-08-15 15:22:00.729082+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                  R. Fielding, Ed.\nRequest for Comments: 7235                                         Adobe\nObsoletes: 2616                                          J. Reschke, Ed.\nUpdates: 2617                                                 greenbytes\nCategory: Standards Track                                      June 2014\nISSN: 2070-1721",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Hypertext Transfer Protocol (HTTP/1.1): Authentication",
      "ja": "ハイパーテキスト転送プロトコル（HTTP / 1.1）：認証"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypermedia information systems. This document defines the HTTP Authentication framework.",
      "ja": "ハイパーテキスト転送プロトコル（HTTP）は、分散型の協調型ハイパーメディア情報システム用のステートレスアプリケーションレベルプロトコルです。このドキュメントでは、HTTP認証フレームワークを定義します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 5741のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7235.",
      "ja": "このドキュメントの現在のステータス、正誤表、およびフィードバックの提供方法に関する情報は、http：//www.rfc-editor.org/info/rfc7235で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2014 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2014 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびこの文書の発行日に有効なIETF文書に関するIETFトラストの法的規定（http://trustee.ietf.org/license-info）の対象となります。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 3,
      "text": "This document may contain material from IETF Documents or IETF Contributions published or made publicly available before November 10, 2008. The person(s) controlling the copyright in some of this material may not have granted the IETF Trust the right to allow modifications of such material outside the IETF Standards Process. Without obtaining an adequate license from the person(s) controlling the copyright in such materials, this document may not be modified outside the IETF Standards Process, and derivative works of it may not be created outside the IETF Standards Process, except to format it for publication as an RFC or to translate it into languages other than English.",
      "ja": "このドキュメントには、2008年11月10日より前に公開または公開されたIETFドキュメントまたはIETFコントリビューションの素材が含まれている場合があります。この素材の一部で著作権を管理している人が、IETFトラストにそのような素材の変更を許可する権利を付与していない可能性がありますIETF標準プロセス外。このような資料の著作権を管理する人から適切なライセンスを取得せずに、このドキュメントをIETF標準プロセス外で変更したり、その派生物をIETF標準プロセス外で作成したりすることはできません。 RFCとして、またはそれを英語以外の言語に翻訳するための出版物。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Conformance and Error Handling .............................3\n   1.2. Syntax Notation ............................................3\n2. Access Authentication Framework .................................3\n   2.1. Challenge and Response .....................................3\n   2.2. Protection Space (Realm) ...................................5\n3. Status Code Definitions .........................................6\n   3.1. 401 Unauthorized ...........................................6\n   3.2. 407 Proxy Authentication Required ..........................6\n4. Header Field Definitions ........................................7\n   4.1. WWW-Authenticate ...........................................7\n   4.2. Authorization ..............................................8\n   4.3. Proxy-Authenticate .........................................8\n   4.4. Proxy-Authorization ........................................9\n5. IANA Considerations .............................................9\n   5.1. Authentication Scheme Registry .............................9\n        5.1.1. Procedure ...........................................9\n        5.1.2. Considerations for New Authentication Schemes ......10\n   5.2. Status Code Registration ..................................11\n   5.3. Header Field Registration .................................11\n6. Security Considerations ........................................12\n   6.1. Confidentiality of Credentials ............................12\n   6.2. Authentication Credentials and Idle Clients ...............12\n   6.3. Protection Spaces .........................................13\n7. Acknowledgments ................................................14\n8. References .....................................................14\n   8.1. Normative References ......................................14\n   8.2. Informative References ....................................14\nAppendix A. Changes from RFCs 2616 and 2617 .......................16\nAppendix B. Imported ABNF .........................................16\nAppendix C. Collected ABNF ........................................17\nIndex .............................................................18",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "HTTP provides a general framework for access control and authentication, via an extensible set of challenge-response authentication schemes, which can be used by a server to challenge a client request and by a client to provide authentication information. This document defines HTTP/1.1 authentication in terms of the architecture defined in \"Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing\" [RFC7230], including the general framework previously described in \"HTTP Authentication: Basic and Digest Access Authentication\" [RFC2617] and the related fields and status codes previously defined in \"Hypertext Transfer Protocol -- HTTP/1.1\" [RFC2616].",
      "ja": "HTTPは、サーバーがクライアント要求にチャレンジし、クライアントが認証情報を提供するために使用できる、拡張可能なチャレンジ/レスポンス認証スキームのセットを介して、アクセス制御と認証のための一般的なフレームワークを提供します。このドキュメントでは、「Hypertext Transfer Protocol（HTTP / 1.1）：Message Syntax and Routing」[RFC7230]で定義されたアーキテクチャに関して、HTTP / 1.1認証を定義しています。これには、「HTTP認証：基本認証とダイジェストアクセス認証」で説明した一般的なフレームワークも含まれます。 [RFC2617]、および「ハイパーテキスト転送プロトコル-HTTP / 1.1」[RFC2616]で以前に定義された関連フィールドとステータスコード。"
    },
    {
      "indent": 3,
      "text": "The IANA Authentication Scheme Registry (Section 5.1) lists registered authentication schemes and their corresponding specifications, including the \"basic\" and \"digest\" authentication schemes previously defined by RFC 2617.",
      "ja": "IANA認証方式レジストリ（セクション5.1）には、以前にRFC 2617で定義された「基本」および「ダイジェスト」認証方式を含む、登録された認証方式とそれらに対応する仕様がリストされています。"
    },
    {
      "indent": 0,
      "text": "1.1. Conformance and Error Handling",
      "section_title": true,
      "ja": "1.1. 適合性とエラー処理"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は、 [RFC2119]で説明されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "Conformance criteria and considerations regarding error handling are defined in Section 2.5 of [RFC7230].",
      "ja": "エラー処理に関する適合基準と考慮事項は、[RFC7230]のセクション2.5で定義されています。"
    },
    {
      "indent": 0,
      "text": "1.2. Syntax Notation",
      "section_title": true,
      "ja": "1.2. 構文表記"
    },
    {
      "indent": 3,
      "text": "This specification uses the Augmented Backus-Naur Form (ABNF) notation of [RFC5234] with a list extension, defined in Section 7 of [RFC7230], that allows for compact definition of comma-separated lists using a '#' operator (similar to how the '*' operator indicates repetition). Appendix B describes rules imported from other documents. Appendix C shows the collected grammar with all list operators expanded to standard ABNF notation.",
      "ja": "この仕様では、[RFC7230]のセクション7で定義されているリスト拡張子付きの[RFC5234]の拡張バッカスナウア記法（ABNF）表記を使用して、「＃」演算子を使用したコンマ区切りリストのコンパクトな定義を可能にしています（ 「*」演算子が繰り返しを示す方法）。付録Bでは、他のドキュメントからインポートされたルールについて説明します。付録Cは、すべてのリスト演算子が標準のABNF表記に拡張された、収集された文法を示しています。"
    },
    {
      "indent": 0,
      "text": "2. Access Authentication Framework",
      "section_title": true,
      "ja": "2. アクセス認証フレームワーク"
    },
    {
      "indent": 0,
      "text": "2.1. Challenge and Response",
      "section_title": true,
      "ja": "2.1. 挑戦と対応"
    },
    {
      "indent": 3,
      "text": "HTTP provides a simple challenge-response authentication framework that can be used by a server to challenge a client request and by a client to provide authentication information. It uses a case-insensitive token as a means to identify the authentication scheme, followed by additional information necessary for achieving authentication via that scheme. The latter can be either a comma-separated list of parameters or a single sequence of characters capable of holding base64-encoded information.",
      "ja": "HTTPは、サーバーがクライアント要求にチャレンジするために使用したり、クライアントが認証情報を提供したりするために使用できる単純なチャレンジ/レスポンス認証フレームワークを提供します。認証方式を識別する手段として大文字と小文字を区別しないトークンを使用し、その後、その方式で認証を行うために必要な追加情報が続きます。後者は、パラメーターのコンマ区切りのリスト、またはbase64でエンコードされた情報を保持できる単一の文字シーケンスのいずれかです。"
    },
    {
      "indent": 3,
      "text": "Authentication parameters are name=value pairs, where the name token is matched case-insensitively, and each parameter name MUST only occur once per challenge.",
      "ja": "認証パラメーターは名前=値のペアであり、名前トークンは大文字と小文字を区別せずに照合され、各パラメーター名はチャレンジごとに1回だけ出現する必要があります。"
    },
    {
      "indent": 5,
      "text": "auth-scheme = token",
      "ja": "auth-scheme =トークン"
    },
    {
      "indent": 5,
      "text": "auth-param     = token BWS \"=\" BWS ( token / quoted-string )",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "token68        = 1*( ALPHA / DIGIT /\n                     \"-\" / \".\" / \"_\" / \"~\" / \"+\" / \"/\" ) *\"=\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The token68 syntax allows the 66 unreserved URI characters ([RFC3986]), plus a few others, so that it can hold a base64, base64url (URL and filename safe alphabet), base32, or base16 (hex) encoding, with or without padding, but excluding whitespace ([RFC4648]).",
      "ja": "token68構文では、66の予約されていないURI文字（[RFC3986]）といくつかの他の文字が許可されているため、base64、base64url（URLおよびファイル名の安全なアルファベット）、base32、またはbase16（16進）エンコーディングを、パディングありまたはなしで保持できます、ただし空白は除きます（[RFC4648]）。"
    },
    {
      "indent": 3,
      "text": "A 401 (Unauthorized) response message is used by an origin server to challenge the authorization of a user agent, including a WWW-Authenticate header field containing at least one challenge applicable to the requested resource.",
      "ja": "要求されたリソースに適用可能なチャレンジを少なくとも1つ含むWWW-Authenticateヘッダーフィールドを含む、ユーザーエージェントの承認を要求するために、オリジンサーバーは401（無許可）応答メッセージを使用します。"
    },
    {
      "indent": 3,
      "text": "A 407 (Proxy Authentication Required) response message is used by a proxy to challenge the authorization of a client, including a Proxy-Authenticate header field containing at least one challenge applicable to the proxy for the requested resource.",
      "ja": "407（Proxy Authentication Required）応答メッセージは、要求されたリソースのプロキシに適用可能な少なくとも1つのチャレンジを含むProxy-Authenticateヘッダーフィールドを含む、クライアントの承認を要求するためにプロキシによって使用されます。"
    },
    {
      "indent": 5,
      "text": "challenge   = auth-scheme [ 1*SP ( token68 / #auth-param ) ]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Note: Many clients fail to parse a challenge that contains an unknown scheme. A workaround for this problem is to list well-supported schemes (such as \"basic\") first.",
      "ja": "注：多くのクライアントは、不明なスキームを含むチャレンジの解析に失敗します。この問題の回避策は、十分にサポートされているスキーム（「基本」など）を最初にリストすることです。"
    },
    {
      "indent": 3,
      "text": "A user agent that wishes to authenticate itself with an origin server -- usually, but not necessarily, after receiving a 401 (Unauthorized) -- can do so by including an Authorization header field with the request.",
      "ja": "通常は401（Unauthorized）を受け取った後、オリジンサーバーで認証することを希望するユーザーエージェントは、リクエストにAuthorizationヘッダーフィールドを含めることで認証できます。"
    },
    {
      "indent": 3,
      "text": "A client that wishes to authenticate itself with a proxy -- usually, but not necessarily, after receiving a 407 (Proxy Authentication Required) -- can do so by including a Proxy-Authorization header field with the request.",
      "ja": "407（プロキシ認証が必要）を受信した後、通常は、プロキシで認証することを希望するクライアントは、リクエストにProxy-Authorizationヘッダーフィールドを含めることで認証できます。"
    },
    {
      "indent": 3,
      "text": "Both the Authorization field value and the Proxy-Authorization field value contain the client's credentials for the realm of the resource being requested, based upon a challenge received in a response (possibly at some point in the past). When creating their values, the user agent ought to do so by selecting the challenge with what it considers to be the most secure auth-scheme that it understands, obtaining credentials from the user as appropriate. Transmission of credentials within header field values implies significant security considerations regarding the confidentiality of the underlying connection, as described in Section 6.1.",
      "ja": "Authorizationフィールド値とProxy-Authorizationフィールド値の両方に、応答で受信したチャレンジ（おそらく過去のある時点）に基づいて、要求されているリソースのレルムに対するクライアントの資格情報が含まれています。それらの値を作成するとき、ユーザーエージェントは、それが理解する最も安全な認証方式であると考えるものを使用してチャレンジを選択し、必要に応じてユーザーから資格情報を取得することによって、それを行う必要があります。セクション6.1で説明されているように、ヘッダーフィールド値内の資格情報の送信は、基礎となる接続の機密性に関する重要なセキュリティ上の考慮事項を意味します。"
    },
    {
      "indent": 5,
      "text": "credentials = auth-scheme [ 1*SP ( token68 / #auth-param ) ]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Upon receipt of a request for a protected resource that omits credentials, contains invalid credentials (e.g., a bad password) or partial credentials (e.g., when the authentication scheme requires more than one round trip), an origin server SHOULD send a 401 (Unauthorized) response that contains a WWW-Authenticate header field with at least one (possibly new) challenge applicable to the requested resource.",
      "ja": "資格情報を省略し、無効な資格情報（たとえば、不正なパスワード）または部分的な資格情報（たとえば、認証スキームに複数のラウンドトリップが必要な場合）を含む保護リソースのリクエストを受信すると、オリジンサーバーは401（無許可）を送信する必要があります（SHOULD） ）要求されたリソースに適用可能な少なくとも1つの（おそらく新しい）チャレンジを含むWWW-Authenticateヘッダーフィールドを含む応答。"
    },
    {
      "indent": 3,
      "text": "Likewise, upon receipt of a request that omits proxy credentials or contains invalid or partial proxy credentials, a proxy that requires authentication SHOULD generate a 407 (Proxy Authentication Required) response that contains a Proxy-Authenticate header field with at least one (possibly new) challenge applicable to the proxy.",
      "ja": "同様に、プロキシ資格情報を省略したり、無効または部分的なプロキシ資格情報を含むリクエストを受信すると、認証を必要とするプロキシは、少なくとも1つ（おそらく新しい）のProxy-Authenticateヘッダーフィールドを含む407（Proxy Authentication Required）応答を生成する必要があります（SHOULD）。プロキシに適用可能なチャレンジ。"
    },
    {
      "indent": 3,
      "text": "A server that receives valid credentials that are not adequate to gain access ought to respond with the 403 (Forbidden) status code (Section 6.5.3 of [RFC7231]).",
      "ja": "アクセスを取得するのに十分でない有効な認証情報を受信したサーバーは、403（禁止）ステータスコードで応答する必要があります（[RFC7231]のセクション6.5.3）。"
    },
    {
      "indent": 3,
      "text": "HTTP does not restrict applications to this simple challenge-response framework for access authentication. Additional mechanisms can be used, such as authentication at the transport level or via message encapsulation, and with additional header fields specifying authentication information. However, such additional mechanisms are not defined by this specification.",
      "ja": "HTTPは、アプリケーションをアクセス認証のためのこの単純なチャレンジ/レスポンスフレームワークに制限しません。トランスポートレベルでの認証やメッセージのカプセル化による認証など、追加のメカニズムを使用したり、追加のヘッダーフィールドで認証情報を指定したりできます。ただし、このような追加のメカニズムは、この仕様では定義されていません。"
    },
    {
      "indent": 0,
      "text": "2.2. Protection Space (Realm)",
      "section_title": true,
      "ja": "2.2. 保護スペース（レルム）"
    },
    {
      "indent": 3,
      "text": "The \"realm\" authentication parameter is reserved for use by authentication schemes that wish to indicate a scope of protection.",
      "ja": "「レルム」認証パラメータは、保護の範囲を示すことを望む認証スキームによる使用のために予約されています。"
    },
    {
      "indent": 3,
      "text": "A protection space is defined by the canonical root URI (the scheme and authority components of the effective request URI; see Section 5.5 of [RFC7230]) of the server being accessed, in combination with the realm value if present. These realms allow the protected resources on a server to be partitioned into a set of protection spaces, each with its own authentication scheme and/or authorization database. The realm value is a string, generally assigned by the origin server, that can have additional semantics specific to the authentication scheme. Note that a response can have multiple challenges with the same auth-scheme but with different realms.",
      "ja": "保護スペースは、存在する場合はレルム値と組み合わせて、アクセスされるサーバーの正規ルートURI（有効な要求URIのスキームおよび権限コンポーネント。[RFC7230]のセクション5.5を参照）によって定義されます。これらのレルムを使用すると、サーバー上の保護されたリソースを、それぞれ独自の認証スキームや承認データベースを持つ一連の保護スペースに分割できます。レルム値は文字列であり、通常はオリジンサーバーによって割り当てられ、認証スキームに固有の追加のセマンティクスを持つことができます。応答には、同じauth-schemeで異なるレルムを持つ複数のチャレンジが含まれる可能性があることに注意してください。"
    },
    {
      "indent": 3,
      "text": "The protection space determines the domain over which credentials can be automatically applied. If a prior request has been authorized, the user agent MAY reuse the same credentials for all other requests within that protection space for a period of time determined by the authentication scheme, parameters, and/or user preferences (such as a configurable inactivity timeout). Unless specifically allowed by the authentication scheme, a single protection space cannot extend outside the scope of its server.",
      "ja": "保護スペースは、資格情報を自動的に適用できるドメインを決定します。以前のリクエストが承認されている場合、ユーザーエージェントは、認証スキーム、パラメーター、および/またはユーザー設定（構成可能な無活動タイムアウトなど）によって決定された期間、その保護スペース内の他のすべてのリクエストに同じ資格情報を再利用できます（MAY）。 。認証スキームで特に許可されていない限り、単一の保護スペースがサーバーのスコープ外に拡張することはできません。"
    },
    {
      "indent": 3,
      "text": "For historical reasons, a sender MUST only generate the quoted-string syntax. Recipients might have to support both token and quoted-string syntax for maximum interoperability with existing clients that have been accepting both notations for a long time.",
      "ja": "歴史的な理由により、送信者は引用文字列構文のみを生成する必要があります。受信者は、長い間両方の表記法を受け入れてきた既存のクライアントとの相互運用性を最大にするために、トークンと引用符付き文字列の両方の構文をサポートする必要がある場合があります。"
    },
    {
      "indent": 0,
      "text": "3. Status Code Definitions",
      "section_title": true,
      "ja": "3. ステータスコードの定義"
    },
    {
      "indent": 0,
      "text": "3.1. 401 Unauthorized",
      "section_title": true,
      "ja": "3.1. 401無許可"
    },
    {
      "indent": 3,
      "text": "The 401 (Unauthorized) status code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource. The server generating a 401 response MUST send a WWW-Authenticate header field (Section 4.1) containing at least one challenge applicable to the target resource.",
      "ja": "401（無許可）ステータスコードは、ターゲットリソースの有効な認証資格情報がないため、要求が適用されなかったことを示します。 401応答を生成するサーバーは、ターゲットリソースに適用可能なチャレンジを少なくとも1つ含むWWW-Authenticateヘッダーフィールド（セクション4.1）を送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "If the request included authentication credentials, then the 401 response indicates that authorization has been refused for those credentials. The user agent MAY repeat the request with a new or replaced Authorization header field (Section 4.2). If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user agent SHOULD present the enclosed representation to the user, since it usually contains relevant diagnostic information.",
      "ja": "要求に認証資格情報が含まれている場合、401応答は、それらの資格情報の承認が拒否されたことを示します。ユーザーエージェントは、新しいまたは置き換えられたAuthorizationヘッダーフィールド（セクション4.2）を使用して要求を繰り返すことができます（MAY）。 401応答に以前の応答と同じチャレンジが含まれていて、ユーザーエージェントが少なくとも1回は認証を試みている場合、ユーザーエージェントは通常、関連する診断情報を含んでいるため、囲まれた表現をユーザーに提示する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.2. 407 Proxy Authentication Required",
      "section_title": true,
      "ja": "3.2. 407プロキシ認証が必要です"
    },
    {
      "indent": 3,
      "text": "The 407 (Proxy Authentication Required) status code is similar to 401 (Unauthorized), but it indicates that the client needs to authenticate itself in order to use a proxy. The proxy MUST send a Proxy-Authenticate header field (Section 4.3) containing a challenge applicable to that proxy for the target resource. The client MAY repeat the request with a new or replaced Proxy-Authorization header field (Section 4.4).",
      "ja": "407（Proxy Authentication Required）ステータスコードは401（Unauthorized）に似ていますが、プロキシを使用するためにクライアントが自身を認証する必要があることを示しています。プロキシは、ターゲットリソースのそのプロキシに適用可能なチャレンジを含むProxy-Authenticateヘッダーフィールド（4.3節）を送信する必要があります。クライアントは、新しいまたは置き換えられたProxy-Authorizationヘッダーフィールド（セクション4.4）を使用して要求を繰り返すことができます（MAY）。"
    },
    {
      "indent": 0,
      "text": "4. Header Field Definitions",
      "section_title": true,
      "ja": "4. ヘッダーフィールドの定義"
    },
    {
      "indent": 3,
      "text": "This section defines the syntax and semantics of header fields related to the HTTP authentication framework.",
      "ja": "このセクションでは、HTTP認証フレームワークに関連するヘッダーフィールドの構文とセマンティクスを定義します。"
    },
    {
      "indent": 0,
      "text": "4.1. WWW-Authenticate",
      "section_title": true,
      "ja": "4.1. WWW-認証"
    },
    {
      "indent": 3,
      "text": "The \"WWW-Authenticate\" header field indicates the authentication scheme(s) and parameters applicable to the target resource.",
      "ja": "「WWW-Authenticate」ヘッダーフィールドは、ターゲットリソースに適用可能な認証方式とパラメータを示します。"
    },
    {
      "indent": 5,
      "text": "WWW-Authenticate = 1#challenge",
      "ja": "WWW-Authenticate = 1＃challenge"
    },
    {
      "indent": 3,
      "text": "A server generating a 401 (Unauthorized) response MUST send a WWW-Authenticate header field containing at least one challenge. A server MAY generate a WWW-Authenticate header field in other response messages to indicate that supplying credentials (or different credentials) might affect the response.",
      "ja": "401（無許可）応答を生成するサーバーは、少なくとも1つのチャレンジを含むWWW-Authenticateヘッダーフィールドを送信する必要があります。サーバーは、他の応答メッセージにWWW-Authenticateヘッダーフィールドを生成して、資格情報（または異なる資格情報）の提供が応答に影響を与える可能性があることを示す場合があります。"
    },
    {
      "indent": 3,
      "text": "A proxy forwarding a response MUST NOT modify any WWW-Authenticate fields in that response.",
      "ja": "応答を転送するプロキシは、その応答のWWW-Authenticateフィールドを変更してはなりません（MUST NOT）。"
    },
    {
      "indent": 3,
      "text": "User agents are advised to take special care in parsing the field value, as it might contain more than one challenge, and each challenge can contain a comma-separated list of authentication parameters. Furthermore, the header field itself can occur multiple times.",
      "ja": "ユーザーエージェントは、フィールド値の解析に特別な注意を払うことをお勧めします。フィールド値には複数のチャレンジが含まれる可能性があり、各チャレンジには認証パラメーターのコンマ区切りのリストが含まれる可能性があるためです。さらに、ヘッダーフィールド自体が複数回発生する可能性があります。"
    },
    {
      "indent": 3,
      "text": "For instance:",
      "ja": "例えば："
    },
    {
      "indent": 5,
      "text": "WWW-Authenticate: Newauth realm=\"apps\", type=1,\n                  title=\"Login to \\\"apps\\\"\", Basic realm=\"simple\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This header field contains two challenges; one for the \"Newauth\" scheme with a realm value of \"apps\", and two additional parameters \"type\" and \"title\", and another one for the \"Basic\" scheme with a realm value of \"simple\".",
      "ja": "このヘッダーフィールドには2つの課題があります。 1つは、レルム値が「apps」の2つの追加パラメーター「type」と「title」を持つ「Newauth」スキーム用で、もう1つは、レルム値が「simple」の「Basic」スキーム用です。"
    },
    {
      "indent": 6,
      "text": "Note: The challenge grammar production uses the list syntax as well. Therefore, a sequence of comma, whitespace, and comma can be considered either as applying to the preceding challenge, or to be an empty entry in the list of challenges. In practice, this ambiguity does not affect the semantics of the header field value and thus is harmless.",
      "ja": "注：チャレンジ文法の生成では、リスト構文も使用します。したがって、コンマ、空白、およびコンマのシーケンスは、前のチャレンジに適用されているか、またはチャレンジのリストの空のエントリであると見なすことができます。実際には、このあいまいさはヘッダーフィールド値のセマンティクスに影響を与えないため、無害です。"
    },
    {
      "indent": 0,
      "text": "4.2. Authorization",
      "section_title": true,
      "ja": "4.2. 認可"
    },
    {
      "indent": 3,
      "text": "The \"Authorization\" header field allows a user agent to authenticate itself with an origin server -- usually, but not necessarily, after receiving a 401 (Unauthorized) response. Its value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.",
      "ja": "「Authorization」ヘッダーフィールドを使用すると、ユーザーエージェントはオリジンサーバーで自分自身を認証できます。通常は、401（Unauthorized）応答を受け取った後、必ずしもそうとは限りません。その値は、要求されているリソースのレルムのユーザーエージェントの認証情報を含む資格情報で構成されます。"
    },
    {
      "indent": 5,
      "text": "Authorization = credentials",
      "ja": "承認=資格情報"
    },
    {
      "indent": 3,
      "text": "If a request is authenticated and a realm specified, the same credentials are presumed to be valid for all other requests within this realm (assuming that the authentication scheme itself does not require otherwise, such as credentials that vary according to a challenge value or using synchronized clocks).",
      "ja": "リクエストが認証され、レルムが指定されている場合、同じ資格情報がこのレルム内の他のすべてのリクエストに対して有効であると見なされます（認証値自体が、チャレンジ値によって異なる資格情報や同期の使用など、他に必要としない場合）クロック）。"
    },
    {
      "indent": 3,
      "text": "A proxy forwarding a request MUST NOT modify any Authorization fields in that request. See Section 3.2 of [RFC7234] for details of and requirements pertaining to handling of the Authorization field by HTTP caches.",
      "ja": "リクエストを転送するプロキシは、そのリクエストの認証フィールドを変更してはなりません。 HTTPキャッシュによるAuthorizationフィールドの処理に関する詳細と要件については、[RFC7234]のセクション3.2を参照してください。"
    },
    {
      "indent": 0,
      "text": "4.3. Proxy-Authenticate",
      "section_title": true,
      "ja": "4.3. プロキシ認証"
    },
    {
      "indent": 3,
      "text": "The \"Proxy-Authenticate\" header field consists of at least one challenge that indicates the authentication scheme(s) and parameters applicable to the proxy for this effective request URI (Section 5.5 of [RFC7230]). A proxy MUST send at least one Proxy-Authenticate header field in each 407 (Proxy Authentication Required) response that it generates.",
      "ja": "「Proxy-Authenticate」ヘッダーフィールドは、この有効なリクエストURIのプロキシに適用できる認証スキームとパラメータを示す少なくとも1つのチャレンジで構成されます（[RFC7230]のセクション5.5）。プロキシは、生成する各407（Proxy Authentication Required）応答で少なくとも1つのProxy-Authenticateヘッダーフィールドを送信する必要があります。"
    },
    {
      "indent": 5,
      "text": "Proxy-Authenticate = 1#challenge",
      "ja": "プロキシ認証= 1＃challenge"
    },
    {
      "indent": 3,
      "text": "Unlike WWW-Authenticate, the Proxy-Authenticate header field applies only to the next outbound client on the response chain. This is because only the client that chose a given proxy is likely to have the credentials necessary for authentication. However, when multiple proxies are used within the same administrative domain, such as office and regional caching proxies within a large corporate network, it is common for credentials to be generated by the user agent and passed through the hierarchy until consumed. Hence, in such a configuration, it will appear as if Proxy-Authenticate is being forwarded because each proxy will send the same challenge set.",
      "ja": "WWW-Authenticateとは異なり、Proxy-Authenticateヘッダーフィールドは、応答チェーンの次の送信クライアントにのみ適用されます。これは、特定のプロキシを選択したクライアントのみが、認証に必要な資格情報を持つ可能性があるためです。ただし、大規模な企業ネットワーク内のオフィスやリージョナルキャッシングプロキシなど、同じ管理ドメイン内で複数のプロキシが使用される場合、資格情報はユーザーエージェントによって生成され、消費されるまで階層を通過するのが一般的です。したがって、このような構成では、各プロキシが同じチャレンジセットを送信するため、プロキシ認証が転送されているように見えます。"
    },
    {
      "indent": 3,
      "text": "Note that the parsing considerations for WWW-Authenticate apply to this header field as well; see Section 4.1 for details.",
      "ja": "WWW-Authenticateの解析に関する考慮事項は、このヘッダーフィールドにも適用されることに注意してください。詳細については、セクション4.1を参照してください。"
    },
    {
      "indent": 0,
      "text": "4.4. Proxy-Authorization",
      "section_title": true,
      "ja": "4.4. プロキシ承認"
    },
    {
      "indent": 3,
      "text": "The \"Proxy-Authorization\" header field allows the client to identify itself (or its user) to a proxy that requires authentication. Its value consists of credentials containing the authentication information of the client for the proxy and/or realm of the resource being requested.",
      "ja": "「Proxy-Authorization」ヘッダーフィールドを使用すると、クライアントは、認証が必要なプロキシに対して自身（またはそのユーザー）を識別できます。その値は、要求されているリソースのプロキシまたはレルム、あるいはその両方のクライアントの認証情報を含む資格情報で構成されています。"
    },
    {
      "indent": 5,
      "text": "Proxy-Authorization = credentials",
      "ja": "Proxy-Authorization =資格情報"
    },
    {
      "indent": 3,
      "text": "Unlike Authorization, the Proxy-Authorization header field applies only to the next inbound proxy that demanded authentication using the Proxy-Authenticate field. When multiple proxies are used in a chain, the Proxy-Authorization header field is consumed by the first inbound proxy that was expecting to receive credentials. A proxy MAY relay the credentials from the client request to the next proxy if that is the mechanism by which the proxies cooperatively authenticate a given request.",
      "ja": "Authorizationとは異なり、Proxy-Authorizationヘッダーフィールドは、Proxy-Authenticateフィールドを使用して認証を要求した次のインバウンドプロキシにのみ適用されます。複数のプロキシがチェーンで使用されている場合、Proxy-Authorizationヘッダーフィールドは、資格情報の受信を予期していた最初の受信プロキシによって消費されます。プロキシーが指定された要求を協調的に認証するメカニズムである場合、プロキシーは資格情報をクライアント要求から次のプロキシーにリレーしてもよい（MAY）。"
    },
    {
      "indent": 0,
      "text": "5. IANA Considerations",
      "section_title": true,
      "ja": "5. IANAに関する考慮事項"
    },
    {
      "indent": 0,
      "text": "5.1. Authentication Scheme Registry",
      "section_title": true,
      "ja": "5.1. 認証方式レジストリ"
    },
    {
      "indent": 3,
      "text": "The \"Hypertext Transfer Protocol (HTTP) Authentication Scheme Registry\" defines the namespace for the authentication schemes in challenges and credentials. It has been created and is now maintained at <http://www.iana.org/assignments/http-authschemes>.",
      "ja": "「Hypertext Transfer Protocol（HTTP）Authentication Scheme Registry」は、チャレンジと資格情報の認証スキームの名前空間を定義します。これは作成され、現在<http://www.iana.org/assignments/http-authschemes>で維持されています。"
    },
    {
      "indent": 0,
      "text": "5.1.1. Procedure",
      "section_title": true,
      "ja": "5.1.1. 手順"
    },
    {
      "indent": 3,
      "text": "Registrations MUST include the following fields:",
      "ja": "登録には次のフィールドを含める必要があります。"
    },
    {
      "indent": 3,
      "text": "o Authentication Scheme Name",
      "ja": "o 認証スキーム名"
    },
    {
      "indent": 3,
      "text": "o Pointer to specification text",
      "ja": "o 仕様テキストへのポインタ"
    },
    {
      "indent": 3,
      "text": "o Notes (optional)",
      "ja": "o メモ（オプション）"
    },
    {
      "indent": 3,
      "text": "Values to be added to this namespace require IETF Review (see [RFC5226], Section 4.1).",
      "ja": "この名前空間に追加される値には、IETFレビューが必要です（[RFC5226]、セクション4.1を参照）。"
    },
    {
      "indent": 0,
      "text": "5.1.2. Considerations for New Authentication Schemes",
      "section_title": true,
      "ja": "5.1.2. 新しい認証スキームに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "There are certain aspects of the HTTP Authentication Framework that put constraints on how new authentication schemes can work:",
      "ja": "HTTP認証フレームワークには、新しい認証スキームが機能する方法を制限する特定の側面があります。"
    },
    {
      "indent": 3,
      "text": "o HTTP authentication is presumed to be stateless: all of the information necessary to authenticate a request MUST be provided in the request, rather than be dependent on the server remembering prior requests. Authentication based on, or bound to, the underlying connection is outside the scope of this specification and inherently flawed unless steps are taken to ensure that the connection cannot be used by any party other than the authenticated user (see Section 2.3 of [RFC7230]).",
      "ja": "o HTTP認証はステートレスであると推定されます。以前の要求を記憶しているサーバーに依存するのではなく、要求を認証するために必要なすべての情報を要求で提供する必要があります。基になる接続に基づく、またはバインドされている認証は、この仕様の範囲外であり、認証されたユーザー以外の者が接続を使用できないようにするための手順を講じない限り、本質的に欠陥があります（[RFC7230]のセクション2.3を参照）。 。"
    },
    {
      "indent": 3,
      "text": "o The authentication parameter \"realm\" is reserved for defining protection spaces as described in Section 2.2. New schemes MUST NOT use it in a way incompatible with that definition.",
      "ja": "o 認証パラメータ「レルム」は、セクション2.2で説明されている保護スペースを定義するために予約されています。新しいスキームは、その定義と互換性のない方法でそれを使用してはなりません。"
    },
    {
      "indent": 3,
      "text": "o The \"token68\" notation was introduced for compatibility with existing authentication schemes and can only be used once per challenge or credential. Thus, new schemes ought to use the auth-param syntax instead, because otherwise future extensions will be impossible.",
      "ja": "o \"token68\"表記は、既存の認証スキームとの互換性のために導入され、チャレンジまたは資格情報ごとに1回のみ使用できます。したがって、新しいスキーマでは代わりにauth-param構文を使用する必要があります。そうしないと、将来の拡張が不可能になるためです。"
    },
    {
      "indent": 3,
      "text": "o The parsing of challenges and credentials is defined by this specification and cannot be modified by new authentication schemes. When the auth-param syntax is used, all parameters ought to support both token and quoted-string syntax, and syntactical constraints ought to be defined on the field value after parsing (i.e., quoted-string processing). This is necessary so that recipients can use a generic parser that applies to all authentication schemes.",
      "ja": "o チャレンジとクレデンシャルの解析はこの仕様で定義されており、新しい認証スキームで変更することはできません。 auth-param構文を使用する場合、すべてのパラメーターはトークンと引用符付き文字列の両方の構文をサポートする必要があり、構文制約は解析（つまり引用符付き文字列処理）後にフィールド値に定義する必要があります。これは、受信者がすべての認証スキームに適用される汎用パーサーを使用できるようにするために必要です。"
    },
    {
      "indent": 6,
      "text": "Note: The fact that the value syntax for the \"realm\" parameter is restricted to quoted-string was a bad design choice not to be repeated for new parameters.",
      "ja": "注：「レルム」パラメーターの値の構文がquoted-stringに制限されているという事実は、新しいパラメーターに対して繰り返されないように設計を選択するのに不適切でした。"
    },
    {
      "indent": 3,
      "text": "o Definitions of new schemes ought to define the treatment of unknown extension parameters. In general, a \"must-ignore\" rule is preferable to a \"must-understand\" rule, because otherwise it will be hard to introduce new parameters in the presence of legacy recipients. Furthermore, it's good to describe the policy for defining new parameters (such as \"update the specification\" or \"use this registry\").",
      "ja": "o 新しいスキームの定義は、未知の拡張パラメータの扱いを定義する必要があります。一般に、「無視する必要がある」ルールは、「理解する必要がある」ルールよりも望ましいです。そうしないと、レガシー受信者が存在する場合に新しいパラメーターを導入することが困難になるためです。さらに、新しいパラメーターを定義するためのポリシー（「仕様の更新」や「このレジストリーの使用」など）を記述することは良いことです。"
    },
    {
      "indent": 3,
      "text": "o Authentication schemes need to document whether they are usable in origin-server authentication (i.e., using WWW-Authenticate), and/or proxy authentication (i.e., using Proxy-Authenticate).",
      "ja": "o 認証スキームは、それらがオリジンサーバー認証（つまり、WWW-Authenticateを使用）、またはプロキシ認証（つまり、Proxy-Authenticateを使用）で使用可能かどうかを文書化する必要があります。"
    },
    {
      "indent": 3,
      "text": "o The credentials carried in an Authorization header field are specific to the user agent and, therefore, have the same effect on HTTP caches as the \"private\" Cache-Control response directive (Section 5.2.2.6 of [RFC7234]), within the scope of the request in which they appear.",
      "ja": "o Authorizationヘッダーフィールドで送信される認証情報はユーザーエージェントに固有であるため、「プライベート」のCache-Control応答ディレクティブ（[RFC7234]のセクション5.2.2.6）と同じように、HTTPキャッシュに同じ影響を及ぼします。それらが現れるリクエスト"
    },
    {
      "indent": 6,
      "text": "Therefore, new authentication schemes that choose not to carry credentials in the Authorization header field (e.g., using a newly defined header field) will need to explicitly disallow caching, by mandating the use of either Cache-Control request directives (e.g., \"no-store\", Section 5.2.1.5 of [RFC7234]) or response directives (e.g., \"private\").",
      "ja": "したがって、Authorizationヘッダーフィールドに資格情報を保持しないことを選択する新しい認証スキーム（たとえば、新しく定義されたヘッダーフィールドを使用）は、いずれかのCache-Control要求ディレクティブ（たとえば、「no-ストア」、[RFC7234]のセクション5.2.1.5）またはレスポンスディレクティブ（「プライベート」など）。"
    },
    {
      "indent": 0,
      "text": "5.2. Status Code Registration",
      "section_title": true,
      "ja": "5.2. ステータスコードの登録"
    },
    {
      "indent": 3,
      "text": "The \"Hypertext Transfer Protocol (HTTP) Status Code Registry\" located at <http://www.iana.org/assignments/http-status-codes> has been updated with the registrations below:",
      "ja": "<http://www.iana.org/assignments/http-status-codes>にある「ハイパーテキスト転送プロトコル（HTTP）ステータスコードレジストリ」は、以下の登録で更新されています。"
    },
    {
      "indent": 3,
      "text": "+-------+-------------------------------+-------------+\n| Value | Description                   | Reference   |\n+-------+-------------------------------+-------------+\n| 401   | Unauthorized                  | Section 3.1 |\n| 407   | Proxy Authentication Required | Section 3.2 |\n+-------+-------------------------------+-------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.3. Header Field Registration",
      "section_title": true,
      "ja": "5.3. ヘッダーフィールドの登録"
    },
    {
      "indent": 3,
      "text": "HTTP header fields are registered within the \"Message Headers\" registry maintained at <http://www.iana.org/assignments/message-headers/>.",
      "ja": "HTTPヘッダーフィールドは、<http://www.iana.org/assignments/message-headers/>で管理されている「メッセージヘッダー」レジストリ内に登録されます。"
    },
    {
      "indent": 3,
      "text": "This document defines the following HTTP header fields, so the \"Permanent Message Header Field Names\" registry has been updated accordingly (see [BCP90]).",
      "ja": "このドキュメントでは、次のHTTPヘッダーフィールドを定義しているため、「Permanent Message Header Field Names」レジストリはそれに応じて更新されています（[BCP90]を参照）。"
    },
    {
      "indent": 3,
      "text": "+---------------------+----------+----------+-------------+\n| Header Field Name   | Protocol | Status   | Reference   |\n+---------------------+----------+----------+-------------+\n| Authorization       | http     | standard | Section 4.2 |\n| Proxy-Authenticate  | http     | standard | Section 4.3 |\n| Proxy-Authorization | http     | standard | Section 4.4 |\n| WWW-Authenticate    | http     | standard | Section 4.1 |\n+---------------------+----------+----------+-------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The change controller is: \"IETF (iesg@ietf.org) - Internet Engineering Task Force\".",
      "ja": "変更管理者は、「IETF（iesg@ietf.org）-Internet Engineering Task Force」です。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This section is meant to inform developers, information providers, and users of known security concerns specific to HTTP authentication. More general security considerations are addressed in HTTP messaging [RFC7230] and semantics [RFC7231].",
      "ja": "このセクションは、HTTP認証に固有の既知のセキュリティ問題を開発者、情報プロバイダー、およびユーザーに通知することを目的としています。セキュリティに関するより一般的な考慮事項は、HTTPメッセージング[RFC7230]およびセマンティクス[RFC7231]で対処されています。"
    },
    {
      "indent": 3,
      "text": "Everything about the topic of HTTP authentication is a security consideration, so the list of considerations below is not exhaustive. Furthermore, it is limited to security considerations regarding the authentication framework, in general, rather than discussing all of the potential considerations for specific authentication schemes (which ought to be documented in the specifications that define those schemes). Various organizations maintain topical information and links to current research on Web application security (e.g., [OWASP]), including common pitfalls for implementing and using the authentication schemes found in practice.",
      "ja": "HTTP認証のトピックに関するすべてはセキュリティ上の考慮事項であるため、以下の考慮事項のリストは完全ではありません。さらに、特定の認証スキーム（これらのスキームを定義する仕様で文書化する必要があります）の潜在的な考慮事項のすべてを議論するのではなく、認証フレームワークに関するセキュリティの考慮事項に限定されます。さまざまな組織が、実際に見られる認証スキームの実装と使用に関する一般的な落とし穴など、トピック情報とWebアプリケーションセキュリティに関する現在の研究（[OWASP]など）へのリンクを維持しています。"
    },
    {
      "indent": 0,
      "text": "6.1. Confidentiality of Credentials",
      "section_title": true,
      "ja": "6.1. 資格情報の機密性"
    },
    {
      "indent": 3,
      "text": "The HTTP authentication framework does not define a single mechanism for maintaining the confidentiality of credentials; instead, each authentication scheme defines how the credentials are encoded prior to transmission. While this provides flexibility for the development of future authentication schemes, it is inadequate for the protection of existing schemes that provide no confidentiality on their own, or that do not sufficiently protect against replay attacks. Furthermore, if the server expects credentials that are specific to each individual user, the exchange of those credentials will have the effect of identifying that user even if the content within credentials remains confidential.",
      "ja": "HTTP認証フレームワークは、資格情報の機密性を維持するための単一のメカニズムを定義していません。代わりに、各認証スキームは、送信前に資格情報をエンコードする方法を定義します。これは、将来の認証スキームの開発に柔軟性を提供しますが、それ自体では機密性を提供しない、またはリプレイ攻撃から十分に保護しない既存のスキームの保護には不十分です。さらに、サーバーが個々のユーザーに固有の資格情報を期待している場合、それらの資格情報を交換すると、資格情報内のコンテンツが機密のままであっても、そのユーザーを識別する効果があります。"
    },
    {
      "indent": 3,
      "text": "HTTP depends on the security properties of the underlying transport-or session-level connection to provide confidential transmission of header fields. In other words, if a server limits access to authenticated users using this framework, the server needs to ensure that the connection is properly secured in accordance with the nature of the authentication scheme used. For example, services that depend on individual user authentication often require a connection to be secured with TLS (\"Transport Layer Security\", [RFC5246]) prior to exchanging any credentials.",
      "ja": "HTTPは、ヘッダーフィールドの機密送信を提供するために、基になるトランスポートレベルまたはセッションレベルの接続のセキュリティプロパティに依存しています。つまり、サーバーがこのフレームワークを使用して認証されたユーザーへのアクセスを制限する場合、サーバーは、使用される認証スキームの性質に従って、接続が適切に保護されていることを確認する必要があります。たとえば、個々のユーザー認証に依存するサービスでは、資格情報を交換する前に、TLS（ \"Transport Layer Security\"、[RFC5246]）で接続を保護する必要があることがよくあります。"
    },
    {
      "indent": 0,
      "text": "6.2. Authentication Credentials and Idle Clients",
      "section_title": true,
      "ja": "6.2. 認証資格情報とアイドルクライアント"
    },
    {
      "indent": 3,
      "text": "Existing HTTP clients and user agents typically retain authentication information indefinitely. HTTP does not provide a mechanism for the origin server to direct clients to discard these cached credentials, since the protocol has no awareness of how credentials are obtained or managed by the user agent. The mechanisms for expiring or revoking credentials can be specified as part of an authentication scheme definition.",
      "ja": "既存のHTTPクライアントとユーザーエージェントは、通常、認証情報を無期限に保持します。 HTTPは、オリジンサーバーがこれらのキャッシュされた資格情報を破棄するようにクライアントに指示するメカニズムを提供しません。これは、プロトコルがユーザーエージェントによって資格情報が取得または管理される方法を認識していないためです。資格情報を期限切れまたは失効させるメカニズムは、認証スキーム定義の一部として指定できます。"
    },
    {
      "indent": 3,
      "text": "Circumstances under which credential caching can interfere with the application's security model include but are not limited to:",
      "ja": "資格情報のキャッシュがアプリケーションのセキュリティモデルに干渉する可能性のある状況には、以下が含まれますが、これらに限定されません。"
    },
    {
      "indent": 3,
      "text": "o Clients that have been idle for an extended period, following which the server might wish to cause the client to re-prompt the user for credentials.",
      "ja": "o 長期間アイドル状態であったクライアント。その後、サーバーはクライアントにユーザーに資格情報の再プロンプトを表示させる場合があります。"
    },
    {
      "indent": 3,
      "text": "o Applications that include a session termination indication (such as a \"logout\" or \"commit\" button on a page) after which the server side of the application \"knows\" that there is no further reason for the client to retain the credentials.",
      "ja": "o セッション終了指示（ページ上の「ログアウト」または「コミット」ボタンなど）を含むアプリケーション。その後、アプリケーションのサーバー側は、クライアントが資格情報を保持する理由がないことを「認識」します。"
    },
    {
      "indent": 3,
      "text": "User agents that cache credentials are encouraged to provide a readily accessible mechanism for discarding cached credentials under user control.",
      "ja": "資格情報をキャッシュするユーザーエージェントは、ユーザー制御下でキャッシュされた資格情報を破棄するためのすぐにアクセスできるメカニズムを提供することが推奨されます。"
    },
    {
      "indent": 0,
      "text": "6.3. Protection Spaces",
      "section_title": true,
      "ja": "6.3. 保護スペース"
    },
    {
      "indent": 3,
      "text": "Authentication schemes that solely rely on the \"realm\" mechanism for establishing a protection space will expose credentials to all resources on an origin server. Clients that have successfully made authenticated requests with a resource can use the same authentication credentials for other resources on the same origin server. This makes it possible for a different resource to harvest authentication credentials for other resources.",
      "ja": "保護スペースを確立するための「レルム」メカニズムのみに依存する認証スキームは、オリジンサーバー上のすべてのリソースに資格情報を公開します。リソースを使用して認証済みリクエストを正常に作成したクライアントは、同じオリジンサーバー上の他のリソースに同じ認証資格情報を使用できます。これにより、別のリソースが他のリソースの認証資格情報を取得できるようになります。"
    },
    {
      "indent": 3,
      "text": "This is of particular concern when an origin server hosts resources for multiple parties under the same canonical root URI (Section 2.2). Possible mitigation strategies include restricting direct access to authentication credentials (i.e., not making the content of the Authorization request header field available), and separating protection spaces by using a different host name (or port number) for each party.",
      "ja": "オリジンサーバーが同じ正規ルートURIの下で複数のパーティのリソースをホストする場合、これは特に問題になります（セクション2.2）。可能な緩和戦略には、認証資格情報への直接アクセスを制限する（つまり、Authorizationリクエストヘッダーフィールドのコンテンツを利用可能にしない）ことと、各当事者に異なるホスト名（またはポート番号）を使用して保護スペースを分離することが含まれます。"
    },
    {
      "indent": 0,
      "text": "7. Acknowledgments",
      "section_title": true,
      "ja": "7. 謝辞"
    },
    {
      "indent": 3,
      "text": "This specification takes over the definition of the HTTP Authentication Framework, previously defined in RFC 2617. We thank John Franks, Phillip M. Hallam-Baker, Jeffery L. Hostetler, Scott D. Lawrence, Paul J. Leach, Ari Luotonen, and Lawrence C. Stewart for their work on that specification. See Section 6 of [RFC2617] for further acknowledgements.",
      "ja": "この仕様は、RFC 2617で以前に定義されたHTTP認証フレームワークの定義を引き継ぎます。ジョンフランクス、フィリップM.ハラムベイカー、ジェフリーL.ホセトラー、スコットD.ローレンス、ポールJ.リーチ、アリルオトネン、ローレンスに感謝します。 C.その仕様に取り組んだStewart氏。さらなる謝辞については、[RFC2617]のセクション6を参照してください。"
    },
    {
      "indent": 3,
      "text": "See Section 10 of [RFC7230] for the Acknowledgments related to this document revision.",
      "ja": "このドキュメントの改訂に関連する謝辞については、[RFC7230]のセクション10を参照してください。"
    },
    {
      "indent": 0,
      "text": "8. References",
      "section_title": true,
      "ja": "8. 参考文献"
    },
    {
      "indent": 0,
      "text": "8.1. Normative References",
      "section_title": true,
      "ja": "8.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, January 2008.",
      "ja": "[RFC5234]クロッカー、D。、エド。およびP. Overell、「構文仕様の拡張BNF：ABNF」、STD 68、RFC 5234、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC7230] Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing\", RFC 7230, June 2014.",
      "ja": "[RFC7230]フィールディング、R。、エド。およびJ. Reschke編、「Hypertext Transfer Protocol（HTTP / 1.1）：Message Syntax and Routing」、RFC 7230、2014年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC7231] Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content\", RFC 7231, June 2014.",
      "ja": "[RFC7231]フィールディング、R。、エド。およびJ. Reschke編、「Hypertext Transfer Protocol（HTTP / 1.1）：Semantics and Content」、RFC 7231、2014年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC7234] Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke, Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Caching\", RFC 7234, June 2014.",
      "ja": "[RFC7234] Fielding、R.、Ed。、Nottingham、M.、Ed。、and J. Reschke、Ed。、 \"Hypertext Transfer Protocol（HTTP / 1.1）：Caching\"、RFC 7234、June 2014。"
    },
    {
      "indent": 0,
      "text": "8.2. Informative References",
      "section_title": true,
      "ja": "8.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[BCP90] Klyne, G., Nottingham, M., and J. Mogul, \"Registration Procedures for Message Header Fields\", BCP 90, RFC 3864, September 2004.",
      "ja": "[BCP90] Klyne、G.、Nottingham、M。、およびJ. Mogul、「メッセージヘッダーフィールドの登録手順」、BCP 90、RFC 3864、2004年9月。"
    },
    {
      "indent": 3,
      "text": "[OWASP] van der Stock, A., Ed., \"A Guide to Building Secure Web Applications and Web Services\", The Open Web Application Security Project (OWASP) 2.0.1, July 2005, <https://www.owasp.org/>.",
      "ja": "[OWASP] van der Stock、A。、編、「セキュリティで保護されたWebアプリケーションとWebサービスの構築ガイド」、Open Web Application Security Project（OWASP）2.0.1、2005年7月、<https：//www.owasp .org />。"
    },
    {
      "indent": 3,
      "text": "[RFC2616] Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.",
      "ja": "[RFC2616] Fielding、R.、Gettys、J.、Mogul、J.、Frystyk、H.、Masinter、L.、Leach、P。、およびT. Berners-Lee、「ハイパーテキスト転送プロトコル-HTTP / 1.1」 、RFC 2616、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC2617] Franks, J., Hallam-Baker, P., Hostetler, J., Lawrence, S., Leach, P., Luotonen, A., and L. Stewart, \"HTTP Authentication: Basic and Digest Access Authentication\", RFC 2617, June 1999.",
      "ja": "[RFC2617] Franks、J.、Hallam-Baker、P.、Hostetler、J.、Lawrence、S.、Leach、P.、Luotonen、A。、およびL. Stewart、「HTTP Authentication：Basic and Digest Access Authentication」 、RFC 2617、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.",
      "ja": "[RFC3986] Berners-Lee、T.、Fielding、R。、およびL. Masinter、「Uniform Resource Identifier（URI）：Generic Syntax」、STD 66、RFC 3986、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC4648] Josefsson, S., \"The Base16, Base32, and Base64 Data Encodings\", RFC 4648, October 2006.",
      "ja": "[RFC4648] Josefsson、S。、「The Base16、Base32、およびBase64データエンコーディング」、RFC 4648、2006年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, May 2008.",
      "ja": "[RFC5226] Narten、T。およびH. Alvestrand、「RFCでIANAの考慮事項セクションを作成するためのガイドライン」、BCP 26、RFC 5226、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[RFC5246] Dierks、T。およびE. Rescorla、「The Transport Layer Security（TLS）Protocol Version 1.2」、RFC 5246、2008年8月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Changes from RFCs 2616 and 2617",
      "section_title": true,
      "ja": "付録A. RFC 2616および2617からの変更点"
    },
    {
      "indent": 3,
      "text": "The framework for HTTP Authentication is now defined by this document, rather than RFC 2617.",
      "ja": "HTTP認証のフレームワークは、RFC 2617ではなく、このドキュメントで定義されるようになりました。"
    },
    {
      "indent": 3,
      "text": "The \"realm\" parameter is no longer always required on challenges; consequently, the ABNF allows challenges without any auth parameters. (Section 2)",
      "ja": "「レルム」パラメータは、チャレンジで常に必要になることはなくなりました。その結果、ABNFは認証パラメーターなしでチャレンジを許可します。 （第2節）"
    },
    {
      "indent": 3,
      "text": "The \"token68\" alternative to auth-param lists has been added for consistency with legacy authentication schemes such as \"Basic\". (Section 2)",
      "ja": "auth-paramリストの代わりに「token68」が追加され、「Basic」などのレガシー認証スキームとの一貫性が保たれています。 （第2節）"
    },
    {
      "indent": 3,
      "text": "This specification introduces the Authentication Scheme Registry, along with considerations for new authentication schemes. (Section 5.1)",
      "ja": "この仕様では、認証スキームレジストリと、新しい認証スキームに関する考慮事項を紹介しています。 （セクション5.1）"
    },
    {
      "indent": 0,
      "text": "Appendix B. Imported ABNF",
      "section_title": true,
      "ja": "付録B.インポートされたABNF"
    },
    {
      "indent": 3,
      "text": "The following core rules are included by reference, as defined in Appendix B.1 of [RFC5234]: ALPHA (letters), CR (carriage return), CRLF (CR LF), CTL (controls), DIGIT (decimal 0-9), DQUOTE (double quote), HEXDIG (hexadecimal 0-9/A-F/a-f), LF (line feed), OCTET (any 8-bit sequence of data), SP (space), and VCHAR (any visible US-ASCII character).",
      "ja": "[RFC5234]の付録B.1で定義されている次のコアルールが参照として含まれています：ALPHA（文字）、CR（キャリッジリターン）、CRLF（CR LF）、CTL（コントロール）、DIGIT（10進数0-9） 、DQUOTE（二重引用符）、HEXDIG（16進数の0-9 / AF / af）、LF（ラインフィード）、OCTET（データの任意の8ビットシーケンス）、SP（スペース）、およびVCHAR（目に見えるUS-ASCII文字） ）。"
    },
    {
      "indent": 3,
      "text": "The rules below are defined in [RFC7230]:",
      "ja": "以下のルールは[RFC7230]で定義されています："
    },
    {
      "indent": 5,
      "text": "BWS           = <BWS, see [RFC7230], Section 3.2.3>\nOWS           = <OWS, see [RFC7230], Section 3.2.3>\nquoted-string = <quoted-string, see [RFC7230], Section 3.2.6>\ntoken         = <token, see [RFC7230], Section 3.2.6>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix C. Collected ABNF",
      "section_title": true,
      "ja": "付録C.収集されたABNF"
    },
    {
      "indent": 3,
      "text": "In the collected ABNF below, list rules are expanded as per Section 1.2 of [RFC7230].",
      "ja": "以下の収集されたABNFでは、リストルールが[RFC7230]のセクション1.2に従って拡張されています。"
    },
    {
      "indent": 3,
      "text": "Authorization = credentials",
      "ja": "承認=資格情報"
    },
    {
      "indent": 3,
      "text": "BWS = <BWS, see [RFC7230], Section 3.2.3>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "OWS = <OWS, see [RFC7230], Section 3.2.3>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Proxy-Authenticate = *( \",\" OWS ) challenge *( OWS \",\" [ OWS\n challenge ] )\nProxy-Authorization = credentials",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "WWW-Authenticate = *( \",\" OWS ) challenge *( OWS \",\" [ OWS challenge\n ] )",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "auth-param = token BWS \"=\" BWS ( token / quoted-string )\nauth-scheme = token",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "challenge = auth-scheme [ 1*SP ( token68 / [ ( \",\" / auth-param ) *(\n OWS \",\" [ OWS auth-param ] ) ] ) ]\ncredentials = auth-scheme [ 1*SP ( token68 / [ ( \",\" / auth-param )\n *( OWS \",\" [ OWS auth-param ] ) ] ) ]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "quoted-string = <quoted-string, see [RFC7230], Section 3.2.6>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "token = <token, see [RFC7230], Section 3.2.6>\ntoken68 = 1*( ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\" / \"+\" / \"/\" )\n *\"=\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Index",
      "ja": "索引"
    },
    {
      "indent": 3,
      "text": "4 401 Unauthorized (status code) 6 407 Proxy Authentication Required (status code) 6",
      "ja": "4 401無許可（ステータスコード）6 407プロキシ認証が必要（ステータスコード）6"
    },
    {
      "indent": 3,
      "text": "A Authorization header field 8",
      "ja": "Authorizationヘッダーフィールド8"
    },
    {
      "indent": 3,
      "text": "C Canonical Root URI 5",
      "ja": "C正規ルートURI 5"
    },
    {
      "indent": 3,
      "text": "G Grammar auth-param 4 auth-scheme 4 Authorization 8 challenge 4 credentials 5 Proxy-Authenticate 8 Proxy-Authorization 9 token68 4 WWW-Authenticate 7",
      "ja": "G文法auth-param 4 auth-scheme 4承認8チャレンジ4資格情報5プロキシ認証8プロキシ認証9トークン68 4 WWW認証7"
    },
    {
      "indent": 3,
      "text": "P Protection Space 5 Proxy-Authenticate header field 8 Proxy-Authorization header field 9",
      "ja": "P保護スペース5プロキシ認証ヘッダーフィールド8プロキシ認証ヘッダーフィールド9"
    },
    {
      "indent": 3,
      "text": "R Realm 5",
      "ja": "Rレルム5"
    },
    {
      "indent": 3,
      "text": "W WWW-Authenticate header field 7",
      "ja": "W WWW-Authenticateヘッダーフィールド7"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Roy T. Fielding (editor) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA",
      "ja": "ロイT.フィールディング（編集者）Adobe Systems Incorporated 345 Park Ave San Jose、CA 95110 USA"
    },
    {
      "indent": 3,
      "text": "EMail: fielding@gbiv.com\nURI:   http://roy.gbiv.com/",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Julian F. Reschke (editor) greenbytes GmbH Hafenweg 16 Muenster, NW 48155 Germany",
      "ja": "Julian F. Reschke（編集者）greenbytes GmbH Hafenweg 16 Muenster、NW 48155ドイツ"
    },
    {
      "indent": 3,
      "text": "EMail: julian.reschke@greenbytes.de\nURI:   http://greenbytes.de/tech/webdav/",
      "raw": true,
      "ja": ""
    }
  ]
}