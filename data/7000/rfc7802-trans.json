{
  "title": {
    "text": "RFC 7802 - A Pseudo-Random Function (PRF) for the Kerberos V Generic Security Service Application Program Interface (GSS-API) Mechanism",
    "ja": "RFC 7802 - Kerberos V Generic Security Serviceアプリケーションプログラムインターフェイス（GSS-API）メカニズムの疑似ランダム関数（PRF）"
  },
  "number": 7802,
  "created_at": "2020-08-29 19:37:36.348645+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                          S. Emery\nRequest for Comments: 7802                                        Oracle\nObsoletes: 4402                                              N. Williams\nCategory: Standards Track                                   Cryptonector\nISSN: 2070-1721                                               March 2016",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "A Pseudo-Random Function (PRF) for the Kerberos V Generic Security Service Application Program Interface (GSS-API) Mechanism",
      "ja": "Kerberos V Generic Security Serviceアプリケーションプログラムインターフェイス（GSS-API）メカニズムの疑似ランダム関数（PRF）"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document defines the Pseudo-Random Function (PRF) for the Kerberos V mechanism for the Generic Security Service Application Program Interface (GSS-API), based on the PRF defined for the Kerberos V cryptographic framework, for keying application protocols given an established Kerberos V GSS-API security context.",
      "ja": "このドキュメントでは、Kerberos V暗号化フレームワーク用に定義されたPRFに基づいて、Generic Security Service Application Program Interface（GSS-API）のKerberos Vメカニズム用の疑似ランダム関数（PRF）を定義し、確立されたKerberosが指定されたアプリケーションプロトコルをキーイングします。 V GSS-APIセキュリティコンテキスト。"
    },
    {
      "indent": 3,
      "text": "This document obsoletes RFC 4402 and reclassifies that document as Historic. RFC 4402 starts the PRF+ counter at 1; however, a number of implementations start the counter at 0. As a result, the original specification would not be interoperable with existing implementations.",
      "ja": "このドキュメントはRFC 4402を廃止し、そのドキュメントをHistoricとして再分類します。 RFC 4402はPRF +カウンターを1から開始します。ただし、多くの実装ではカウンターが0から始まります。その結果、元の仕様は既存の実装と相互運用できなくなります。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 5741のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7802.",
      "ja": "このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、http：//www.rfc-editor.org/info/rfc7802で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2016 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2016 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（http://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2\n2.  Conventions Used in This Document . . . . . . . . . . . . . .   2\n3.  Kerberos V GSS Mechanism PRF  . . . . . . . . . . . . . . . .   3\n4.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   3\n5.  Security Considerations . . . . . . . . . . . . . . . . . . .   4\n6.  Normative References  . . . . . . . . . . . . . . . . . . . .   4\nAppendix A.  Test Vectors . . . . . . . . . . . . . . . . . . . .   6\nAcknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .   8\nAuthors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   8",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document specifies the Kerberos V GSS-API mechanism's [RFC4121] pseudo-random function corresponding to [RFC4401]. The function is a \"PRF+\" style construction. For more information, see [RFC4401], [RFC2743], [RFC2744], and [RFC4121].",
      "ja": "このドキュメントは、[RFC4401]に対応するKerberos V GSS-APIメカニズムの[RFC4121]疑似ランダム関数を指定します。関数は「PRF +」スタイルの構造です。詳細については、[RFC4401]、[RFC2743]、[RFC2744]、および[RFC4121]を参照してください。"
    },
    {
      "indent": 3,
      "text": "This document obsoletes RFC 4402 and reclassifies that document as Historic. RFC 4402 starts the PRF+ counter at 1; however, a number of implementations start the counter at 0. As a result, the original specification would not be interoperable with existing implementations.",
      "ja": "このドキュメントはRFC 4402を廃止し、そのドキュメントをHistoricとして再分類します。 RFC 4402はPRF +カウンターを1から開始します。ただし、多くの実装ではカウンターが0から始まります。その結果、元の仕様は既存の実装と相互運用できなくなります。"
    },
    {
      "indent": 0,
      "text": "2. Conventions Used in This Document",
      "section_title": true,
      "ja": "2. このドキュメントで使用される規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は、 [RFC2119]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Kerberos V GSS Mechanism PRF",
      "section_title": true,
      "ja": "3. Kerberos V GSSメカニズムPRF"
    },
    {
      "indent": 3,
      "text": "The GSS-API PRF [RFC4401] function for the Kerberos V mechanism [RFC4121] shall be the output of a PRF+ function based on the encryption type's PRF function keyed with the negotiated session key of the security context corresponding to the 'prf_key' input parameter of GSS_Pseudo_random().",
      "ja": "Kerberos VメカニズムのGSS-API PRF [RFC4401]関数[RFC4121]は、「prf_key」入力パラメーターに対応するセキュリティコンテキストのネゴシエートされたセッションキーでキー付けされた暗号化タイプのPRF関数に基づくPRF +関数の出力です。 GSS_Pseudo_random()の。"
    },
    {
      "indent": 3,
      "text": "This PRF+ MUST be keyed with the key indicated by the 'prf_key' input parameter as follows:",
      "ja": "このPRF +は、次のように「prf_key」入力パラメーターで示されるキーでキー入力する必要があります。"
    },
    {
      "indent": 3,
      "text": "o GSS_C_PRF_KEY_FULL -- use the sub-session key asserted by the acceptor (if any exists), or the sub-session asserted by the initiator (if any exists), or the Ticket's session key.",
      "ja": "o GSS_C_PRF_KEY_FULL-アクセプターによってアサートされたサブセッションキー（存在する場合）、またはイニシエーターによってアサートされたサブセッション（存在する場合）、またはチケットのセッションキーを使用します。"
    },
    {
      "indent": 3,
      "text": "o GSS_C_PRF_KEY_PARTIAL -- use the sub-session key asserted by the initiator (if any exists) or the Ticket's session key.",
      "ja": "o GSS_C_PRF_KEY_PARTIAL-イニシエーター（存在する場合）またはチケットのセッションキーによってアサートされたサブセッションキーを使用します。"
    },
    {
      "indent": 3,
      "text": "The PRF+ function is a simple counter-based extension of the Kerberos V pseudo-random function [RFC3961] for the encryption type of the security context's keys:",
      "ja": "PRF +関数は、セキュリティコンテキストのキーの暗号化タイプ用のKerberos V疑似ランダム関数[RFC3961]の単純なカウンターベースの拡張です。"
    },
    {
      "indent": 9,
      "text": "PRF+(K, L, S) = truncate(L, T0 || T1 || .. || Tn)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Tn = pseudo-random(K, n || S)",
      "ja": "Tn =疑似ランダム（K、n || S）"
    },
    {
      "indent": 3,
      "text": "where K is the key indicated by the 'prf_key' parameter, '||' is the concatenation operator, 'n' is encoded as a network byte order 32-bit unsigned binary number, truncate(L, S) truncates the input octet string S to length L, and pseudo-random() is the Kerberos V pseudo-random function [RFC3961].",
      "ja": "ここで、Kは「prf_key」パラメーター「||」で示されるキーです。は連結演算子です。「n」はネットワークバイトオーダー32ビットの符号なし2進数としてエンコードされ、truncate（L、S）は入力オクテット文字列Sを長さLにトランケートし、疑似ランダム()はKerberos V疑似ランダム関数[RFC3961]。"
    },
    {
      "indent": 3,
      "text": "The maximum output size of the Kerberos V mechanism's GSS-API PRF then is, necessarily, 2^32 times the output size of the pseudo-random() function for the encryption type of the given key.",
      "ja": "その場合、Kerberos VメカニズムのGSS-API PRFの最大出力サイズは、必然的に、指定された鍵の暗号化タイプのpseudo-random()関数の出力サイズの2 ^ 32倍になります。"
    },
    {
      "indent": 3,
      "text": "When the input size is longer than 2^14 octets as per [RFC4401] and exceeds an implementation's resources, then the mechanism MUST return GSS_S_FAILURE and GSS_KRB5_S_KG_INPUT_TOO_LONG as the minor status code.",
      "ja": "[RFC4401]に従って入力サイズが2 ^ 14オクテットより長く、実装のリソースを超える場合、メカニズムはGSS_S_FAILUREおよびGSS_KRB5_S_KG_INPUT_TOO_LONGをマイナーステータスコードとして返す必要があります。"
    },
    {
      "indent": 0,
      "text": "4. IANA Considerations",
      "section_title": true,
      "ja": "4. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no IANA considerations currently. If and when a relevant IANA registry of GSS-API symbols and constants is created, then the GSS_KRB5_S_KG_INPUT_TOO_LONG minor status code should be added to such a registry.",
      "ja": "現在、このドキュメントにはIANAに関する考慮事項はありません。 GSS-APIシンボルと定数の関連するIANAレジストリが作成された場合、そのようなレジストリにGSS_KRB5_S_KG_INPUT_TOO_LONGマイナーステータスコードを追加する必要があります。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "Kerberos V encryption types' PRF functions use a key derived from contexts' session keys and should preserve the forward security properties of the mechanisms' key exchanges.",
      "ja": "Kerberos V暗号化タイプのPRF関数は、コンテキストのセッションキーから派生したキーを使用し、メカニズムのキー交換の転送セキュリティプロパティを保持する必要があります。"
    },
    {
      "indent": 3,
      "text": "Legacy Kerberos V encryption types may be weak, particularly the single-DES encryption types.",
      "ja": "従来のKerberos V暗号化タイプ、特にシングルDES暗号化タイプは弱い場合があります。"
    },
    {
      "indent": 3,
      "text": "See also [RFC4401] for generic security considerations of GSS_Pseudo_random().",
      "ja": "GSS_Pseudo_random()の一般的なセキュリティの考慮事項については、[RFC4401]も参照してください。"
    },
    {
      "indent": 3,
      "text": "See also [RFC3961] for generic security considerations of the Kerberos V cryptographic framework.",
      "ja": "Kerberos V暗号化フレームワークの一般的なセキュリティの考慮事項については、[RFC3961]も参照してください。"
    },
    {
      "indent": 3,
      "text": "Use of Ticket session keys, rather than sub-session keys, when initiators and acceptors fail to assert sub-session keys, is dangerous as ticket reuse can lead to key reuse; therefore, initiators should assert sub-session keys always, and acceptors should assert sub-session keys at least when initiators fail to do so.",
      "ja": "イニシエーターとアクセプターがサブセッションキーのアサートに失敗した場合、チケットの再利用がキーの再利用につながる可能性があるため、サブセッションキーではなくチケットセッションキーを使用すると危険です。したがって、イニシエーターは常にサブセッションキーをアサートし、アクセプターは少なくともイニシエーターがサブセッションキーをアサートできない場合にサブセッションキーをアサートする必要があります。"
    },
    {
      "indent": 3,
      "text": "The computational cost of computing this PRF+ may vary depending on the Kerberos V encryption types being used, but generally the computation of this PRF+ gets more expensive as the input and output octet string lengths grow (note that the use of a counter in the PRF+ construction allows for parallelization).",
      "ja": "このPRF +の計算の計算コストは​​、使用されているKerberos V暗号化タイプによって異なる場合がありますが、一般的に、このPRF +の計算は、入力と出力のオクテット文字列の長さが長くなるにつれて高くなります（PRF +構造でのカウンターの使用に注意してください）並列化が可能です）。"
    },
    {
      "indent": 0,
      "text": "6. Normative References",
      "section_title": true,
      "ja": "6. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC2743] Linn, J., \"Generic Security Service Application Program Interface Version 2, Update 1\", RFC 2743, DOI 10.17487/RFC2743, January 2000, <http://www.rfc-editor.org/info/rfc2743>.",
      "ja": "[RFC2743] Linn、J。、「Generic Security Service Application Program Interface Version 2、Update 1」、RFC 2743、DOI 10.17487 / RFC2743、2000年1月、<http://www.rfc-editor.org/info/rfc2743> 。"
    },
    {
      "indent": 3,
      "text": "[RFC2744] Wray, J., \"Generic Security Service API Version 2 : C-bindings\", RFC 2744, DOI 10.17487/RFC2744, January 2000, <http://www.rfc-editor.org/info/rfc2744>.",
      "ja": "[RFC2744] Wray、J。、「Generic Security Service API Version 2：C-bindings」、RFC 2744、DOI 10.17487 / RFC2744、2000年1月、<http://www.rfc-editor.org/info/rfc2744>。"
    },
    {
      "indent": 3,
      "text": "[RFC3961] Raeburn, K., \"Encryption and Checksum Specifications for Kerberos 5\", RFC 3961, DOI 10.17487/RFC3961, February 2005, <http://www.rfc-editor.org/info/rfc3961>.",
      "ja": "[RFC3961] Raeburn、K。、「Kerberos 5の暗号化とチェックサムの仕様」、RFC 3961、DOI 10.17487 / RFC3961、2005年2月、<http://www.rfc-editor.org/info/rfc3961>。"
    },
    {
      "indent": 3,
      "text": "[RFC4121] Zhu, L., Jaganathan, K., and S. Hartman, \"The Kerberos Version 5 Generic Security Service Application Program Interface (GSS-API) Mechanism: Version 2\", RFC 4121, DOI 10.17487/RFC4121, July 2005, <http://www.rfc-editor.org/info/rfc4121>.",
      "ja": "[RFC4121] Zhu、L.、Jaganathan、K。、およびS. Hartman、「The Kerberos Version 5 Generic Security Service Application Program Interface（GSS-API）Mechanism：Version 2」、RFC 4121、DOI 10.17487 / RFC4121、2005年7月、<http://www.rfc-editor.org/info/rfc4121>。"
    },
    {
      "indent": 3,
      "text": "[RFC4401] Williams, N., \"A Pseudo-Random Function (PRF) API Extension for the Generic Security Service Application Program Interface (GSS-API)\", RFC 4401, DOI 10.17487/RFC4401, February 2006, <http://www.rfc-editor.org/info/rfc4401>.",
      "ja": "[RFC4401]ウィリアムズ、N。、「Generic Security Service Application Program Interface（GSS-API）の疑似ランダム関数（PRF）API拡張」、RFC 4401、DOI 10.17487 / RFC4401、2006年2月、<http：// www.rfc-editor.org/info/rfc4401>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Test Vectors",
      "section_title": true,
      "ja": "付録A.テストベクトル"
    },
    {
      "indent": 3,
      "text": "Here are some test vectors from the MIT implementation provided by Greg Hudson. Test cases used include input string lengths of 0 and 61 bytes, and an output length of 44 bytes. 61 bytes of input is just enough to produce a partial second MD5 or SHA1 hash block with the four-byte counter prefix. 44 bytes of output requires two full and one partial RFC 3961 PRF output for all existing enctypes. All keys were randomly generated.",
      "ja": "以下は、Greg Hudsonが提供するMIT実装からのテストベクトルです。使用されるテストケースには、0および61バイトの入力文字列長と44バイトの出力長が含まれます。 61バイトの入力は、4バイトのカウンタープレフィックスを持つ2番目のMD5またはSHA1ハッシュブロックを部分的に生成するのに十分です。 44バイトの出力では、既存のすべてのenctypeに対して2つの完全なRFCと1つの部分的なRFC 3961 PRF出力が必要です。すべてのキーはランダムに生成されました。"
    },
    {
      "indent": 3,
      "text": "Enctype: des-cbc-crc\nKey: E607FE9DABB57AE0\nInput: (empty string)\nOutput: 803C4121379FC4B87CE413B67707C4632EBED2C6D6B7\n        2A55E878836E35E21600D915D590DED5B6D77BB30A1F",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Enctype: des-cbc-crc\nKey: 54758316B6257A75\nInput: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\nOutput: 279E4105F7ADC9BD6EF28ABE31D89B442FE0058388BA\n        33264ACB5729562DC637950F6BD144B654BE7700B2D6",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Enctype: des3-cbc-sha1\nKey: 70378A19CD64134580C27C0115D6B34A1CF2FEECEF9886A2\nInput: (empty string)\nOutput: 9F8D127C520BB826BFF3E0FE5EF352389C17E0C073D9\n        AC4A333D644D21BA3EF24F4A886D143F85AC9F6377FB",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Enctype: des3-cbc-sha1\nKey: 3452A167DF1094BA1089E0A20E9E51ABEF1525922558B69E\nInput: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\nOutput: 6BF24FABC858F8DD9752E4FCD331BB831F238B5BE190\n        4EEA42E38F7A60C588F075C5C96A67E7F8B7BD0AECF4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Enctype: rc4-hmac\nKey: 3BB3AE288C12B3B9D06B208A4151B3B6\nInput: (empty string)\nOutput: 9AEA11A3BCF3C53F1F91F5A0BA2132E2501ADF5F3C28\n        3C8A983AB88757CE865A22132D6100EAD63E9E291AFA",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Enctype: rc4-hmac\nKey: 6DB7B33A01BD2B72F7655CB7B3D5FA0B\nInput: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\nOutput: CDA9A544869FC84873B692663A82AFDA101C8611498B\n        A46138B01E927C9B95EEC953B562807434037837DDDF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Enctype: aes128-cts-hmac-sha1-96\nKey: 6C742096EB896230312B73972FA28B5D\nInput: (empty string)\nOutput: 94208D982FC1BB7778128BDD77904420B45C9DA699F3\n        117BCE66E39602128EF0296611A6D191A5828530F20F",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Enctype: aes128-cts-hmac-sha1-96\nKey: FA61138C109D834A477D24C7311BE6DA\nInput: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\nOutput: 0FAEDF0F842CC834FEE750487E1B622739286B975FE5\n        B7F45AB053143C75CA0DF5D3D4BBB80F6A616C7C9027",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Enctype: aes256-cts-hmac-sha1-96\nKey: 08FCDAFD5832611B73BA7B497FEBFF8C954B4B58031CAD9B977C3B8C25192FD6\nInput: (empty string)\nOutput: E627EFC14EF5B6D629F830C7109DEA0D3D7D36E8CD57\n        A1F301C5452494A1928F05AFFBEE3360232209D3BE0D",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Enctype: aes256-cts-hmac-sha1-96\nKey: F5B68B7823D8944F33F41541B4E4D38C9B2934F8D16334A796645B066152B4BE\nInput: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\nOutput: 112F2B2D878590653CCC7DE278E9F0AA46FA5A380B62\n        59F774CB7C134FCD37F61A50FD0D9F89BF8FE1A6B593",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Enctype: camellia128-cts-cmac\nKey: 866E0466A178279A32AC0BDA92B72AEB\nInput: (empty string)\nOutput: 97FBB354BF341C3A160DCC86A7A910FDA824601DF677\n        68797BACEEBF5D250AE929DEC9760772084267F50A54",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Enctype: camellia128-cts-cmac\nKey: D4893FD37DA1A211E12DD1E03E0F03B7\nInput: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\nOutput: 1DEE2FF126CA563A2A2326B9DD3F0095013257414C83\n        FAD4398901013D55F367C82681186B7B2FE62F746BA4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Enctype: camellia256-cts-cmac\nKey: 203071B1AE77BD3D6FCE70174AF95C225B1CED46B35CF52B6479EFEB47E6B063\nInput: (empty string)\nOutput: 9B30020634C10FDA28420CEE7B96B70A90A771CED43A\n        D8346554163E5949CBAE2FB8EF36AFB6B32CE75116A0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Enctype: camellia256-cts-cmac\nKey: A171AD582C1AFBBAD52ABD622EE6B6A14D19BF95C6914B2BA40FFD99A88EC660\nInput: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789\nOutput: A47CBB6E104DCC77E4DB48A7A474B977F2FB6A7A1AB6\n        52317D50508AE72B7BE2E4E4BA24164E029CBACF786B",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "This document is an update to RFC 4402, which was authored by Nico Williams. Greg Hudson has provided the test vectors based on MIT's implementation.",
      "ja": "このドキュメントは、Nico Williamsによって作成されたRFC 4402の更新版です。 Greg Hudsonは、MITの実装に基づくテストベクトルを提供しています。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Shawn Emery Oracle Corporation 500 Eldorado Blvd Bldg 1 Broomfield, CO 78727 United States",
      "ja": "Shawn Emery Oracle Corporation 500 Eldorado Blvd Bldg 1 Broomfield、CO 78727 United States"
    },
    {
      "indent": 3,
      "text": "EMail: shawn.emery@oracle.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Nicolas Williams Cryptonector, LLC",
      "ja": "ニコラスウィリアムズクリプトネクター、LLC"
    },
    {
      "indent": 3,
      "text": "EMail: nico@cryptonector.com",
      "raw": true,
      "ja": ""
    }
  ]
}