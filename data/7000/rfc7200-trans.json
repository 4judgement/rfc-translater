{
  "title": {
    "text": "RFC 7200 - A Session Initiation Protocol (SIP) Load-Control Event Package",
    "ja": "RFC 7200 - セッション開始プロトコル（SIP）負荷制御イベントパッケージ"
  },
  "number": 7200,
  "created_at": "2020-09-03 20:30:31.782302+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                           C. Shen\nRequest for Comments: 7200                                H. Schulzrinne\nCategory: Standards Track                                    Columbia U.\nISSN: 2070-1721                                                 A. Koike\n                                                                     NTT\n                                                              April 2014",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "A Session Initiation Protocol (SIP) Load-Control Event Package",
      "ja": "セッション開始プロトコル（SIP）負荷制御イベントパッケージ"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This specification defines a load-control event package for the Session Initiation Protocol (SIP). It allows SIP entities to distribute load-filtering policies to other SIP entities in the network. The load-filtering policies contain rules to throttle calls from a specific user or based on their source or destination domain, telephone number prefix. The mechanism helps to prevent signaling overload and complements feedback-based SIP overload control efforts.",
      "ja": "この仕様は、セッション開始プロトコル（SIP）の負荷制御イベントパッケージを定義します。 SIPエンティティは、負荷フィルタリングポリシーをネットワーク内の他のSIPエンティティに配布できます。負荷フィルタリングポリシーには、特定のユーザーからの呼び出しを調整するためのルール、または送信元または宛先のドメイン、電話番号のプレフィックスに基づいたルールが含まれています。このメカニズムは、シグナリングの過負荷を防ぎ、フィードバックベースのSIP過負荷制御の取り組みを補完します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 5741のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7200.",
      "ja": "このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、http：//www.rfc-editor.org/info/rfc7200で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2014 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2014 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびこの文書の発行日に有効なIETF文書に関するIETFトラストの法的規定（http://trustee.ietf.org/license-info）の対象となります。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n2. Conventions .....................................................3\n3. SIP Load-Filtering Overview .....................................4\n   3.1. Load-Filtering Policy Format ...............................4\n   3.2. Load-Filtering Policy Computation ..........................4\n   3.3. Load-Filtering Policy Distribution .........................4\n   3.4. Applicable Network Domains .................................8\n4. Load-Control Event Package ......................................9\n   4.1. Event Package Name .........................................9\n   4.2. Event Package Parameters ...................................9\n   4.3. SUBSCRIBE Bodies ...........................................9\n   4.4. SUBSCRIBE Duration .........................................9\n   4.5. NOTIFY Bodies .............................................10\n   4.6. Notifier Processing of SUBSCRIBE Requests .................10\n   4.7. Notifier Generation of NOTIFY Requests ....................10\n   4.8. Subscriber Processing of NOTIFY Requests ..................10\n   4.9. Handling of Forked Requests ...............................12\n   4.10. Rate of Notifications ....................................12\n   4.11. State Delta ..............................................12\n5. Load-Control Document ..........................................13\n   5.1. Format ....................................................13\n   5.2. Namespace .................................................13\n   5.3. Conditions ................................................14\n        5.3.1. Call Identity ......................................14\n        5.3.2. Method .............................................16\n        5.3.3. Target SIP Entity ..................................17\n        5.3.4. Validity ...........................................18\n   5.4. Actions ...................................................18\n6. XML Schema Definition for Load Control .........................20\n7. Security Considerations ........................................23\n8. IANA Considerations ............................................24\n   8.1. Load-Control Event Package Registration ...................24\n   8.2. application/load-control+xml Media Type Registration ......24\n   8.3. URN Sub-Namespace Registration ............................25\n   8.4. Load-Control Schema Registration ..........................26\n9. Acknowledgements ...............................................27\n10. References ....................................................27\n   10.1. Normative References .....................................27\n   10.2. Informative References ...................................28\nAppendix A. Definitions ...........................................30\nAppendix B. Design Requirements ...................................30\nAppendix C. Discussion of How This Specification Meets the\n            Requirements of RFC 5390 ..............................31\nAppendix D. Complete Examples .....................................36\n   D.1. Load-Control Document Examples ............................36\n   D.2. Message Flow Examples .....................................40",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Appendix E.  Related Work .........................................41\n   E.1. Relationship to Load Filtering in PSTN ....................41\n   E.2. Relationship with Other IETF SIP Overload Control Efforts .42",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "SIP load-control mechanisms are needed to prevent congestion collapse [RFC6357] in cases of SIP server overload [RFC5390]. There are two types of load-control approaches. In the first approach, feedback control, SIP servers provide load limits to upstream servers, to reduce the incoming rate of all SIP requests [SIP-OVERLOAD]. These upstream servers then drop or delay incoming SIP requests. Feedback control is reactive and affects signaling messages that have already been issued by user agent clients. This approach works well when SIP proxy servers in the core networks (core proxy servers) or destination-specific SIP proxy servers in the edge networks (edge proxy servers) are overloaded. By their nature, they need to distribute rate, drop, or window information to all upstream SIP proxy servers and normally affect all calls equally, regardless of destination.",
      "ja": "SIPサーバーの過負荷[RFC5390]の場合に、輻輳の崩壊を防ぐためにSIP負荷制御メカニズムが必要です[RFC6357]。負荷制御アプローチには2つのタイプがあります。最初のアプローチであるフィードバック制御では、SIPサーバーはアップストリームサーバーに負荷制限を提供し、すべてのSIPリクエストの受信レートを削減します[SIP-OVERLOAD]。これらの上流サーバーは、着信SIP要求をドロップまたは遅延します。フィードバック制御はリアクティブであり、ユーザーエージェントクライアントによって既に発行されているシグナリングメッセージに影響を与えます。このアプローチは、コアネットワークのSIPプロキシサーバー（コアプロキシサーバー）またはエッジネットワークの宛先固有のSIPプロキシサーバー（エッジプロキシサーバー）が過負荷の場合にうまく機能します。その性質上、レート、ドロップ、またはウィンドウ情報をすべてのアップストリームSIPプロキシサーバーに配信する必要があり、通常、宛先に関係なく、すべてのコールに等しく影響します。"
    },
    {
      "indent": 3,
      "text": "This specification proposes an additional, complementary load-control mechanism, called \"load filtering\". It is most applicable for situations where a traffic surge and its source/destination distribution can be predicted in advance. In those cases, network operators create load-filtering policies that indicate calls to specific destinations or from specific sources should be rate-limited or randomly dropped. These load-filtering policies are then distributed to SIP servers and possibly SIP user agents that are likely to generate calls to the affected destinations or from the affected sources. Load filtering works best if it prevents calls as close to the originating user agent clients as possible. The applicability of SIP load filtering can also be extended beyond overload control, e.g., to implement service level agreement commitments.",
      "ja": "この仕様は、「負荷フィルタリング」と呼ばれる追加の補足的な負荷制御メカニズムを提案します。これは、トラフィックの急増とその送信元/宛先の分布を事前に予測できる状況に最も適しています。このような場合、ネットワークオペレーターは、特定の宛先へのコールまたは特定のソースからのコールをレート制限するかランダムにドロップする必要があることを示す負荷フィルタリングポリシーを作成します。次に、これらの負荷フィルタリングポリシーは、影響を受ける宛先への、または影響を受けるソースからの呼び出しを生成する可能性が高いSIPサーバーおよび場合によってはSIPユーザーエージェントに配布されます。ロードフィルタリングは、発信元のユーザーエージェントクライアントに可能な限り近い場所で通話を防ぐ場合に最適に機能します。 SIPロードフィルタリングの適用範囲は、たとえばサービスレベル契約のコミットメントを実装するために、過負荷制御を超えて拡張することもできます。"
    },
    {
      "indent": 0,
      "text": "2. Conventions",
      "section_title": true,
      "ja": "2. 規約"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は、 [RFC2119]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. SIP Load-Filtering Overview",
      "section_title": true,
      "ja": "3. SIPロードフィルタリングの概要"
    },
    {
      "indent": 0,
      "text": "3.1. Load-Filtering Policy Format",
      "section_title": true,
      "ja": "3.1. ロードフィルタリングポリシーの形式"
    },
    {
      "indent": 3,
      "text": "Load-filtering policies are specified by sets of rules. Each rule contains both load-filtering conditions and actions. The load-filtering conditions define identities of the targets to be filtered (Section 5.3.1). For example, there are two typical resource limits in a possible overload situation, i.e., human destination limits (number of call takers) and node capacity limits. The load-filtering targets in these two cases can be the specific callee numbers or the destination domain corresponding to the overload. Load-filtering conditions also indicate the specific message type to be matched (Section 5.3.2), with which target SIP entity the filtering policy is associated (Section 5.3.3), and the period of time when the filtering policy should be activated and deactivated (Section 5.3.4). Load-filtering actions describe the desired control functions such as keeping the request rate below a specified level (Section 5.4).",
      "ja": "負荷フィルタリングポリシーは、一連のルールによって指定されます。各ルールには、負荷フィルタリングの条件とアクションの両方が含まれています。負荷フィルタリング条件は、フィルタリングするターゲットのIDを定義します（セクション5.3.1）。たとえば、可能性のある過負荷状況では、2つの典型的なリソース制限があります。つまり、人間の宛先制限（呼び出し側の数）とノードキャパシティ制限です。これら2つの場合の負荷フィルタリングターゲットは、特定の呼び出し先番号または過負荷に対応する宛先ドメインにすることができます。負荷フィルタリング条件は、一致する特定のメッセージタイプ（セクション5.3.2）、フィルタリングポリシーが関連付けられているターゲットSIPエンティティ（セクション5.3.3）、およびフィルタリングポリシーをアクティブ化する必要がある期間と、非アクティブ化（セクション5.3.4）。負荷フィルタリングアクションは、要求レートを指定したレベル以下に維持するなどの目的の制御機能を記述します（セクション5.4）。"
    },
    {
      "indent": 0,
      "text": "3.2. Load-Filtering Policy Computation",
      "section_title": true,
      "ja": "3.2. 負荷フィルタリングポリシーの計算"
    },
    {
      "indent": 3,
      "text": "When computing the load-filtering policies, one needs to take into consideration information such as overload time, scope and network topology, as well as service policies. It is also important to make sure that there is no resource allocation loop and that server capacity is allocated in a way that both prevents overload and maximizes effective throughput (commonly called goodput). In some cases, in order to better utilize system resources, it may be preferable to employ an algorithm that dynamically computes the load-filtering policies based on currently observed server load status, rather than using a purely static filtering policy assignment. The computation algorithm for load-filtering policies is beyond the scope of this specification.",
      "ja": "負荷フィルタリングポリシーを計算するときは、サービスポリシーだけでなく、過負荷時間、スコープ、ネットワークトポロジなどの情報も考慮する必要があります。また、リソース割り当てループがないこと、およびサーバーの容量が過負荷を防止し、効果的なスループット（一般にグッドプットと呼ばれる）を最大化する方法で割り当てられていることを確認することも重要です。場合によっては、システムリソースをより有効に利用するために、純粋に静的なフィルタリングポリシーの割り当てを使用するのではなく、現在監視されているサーバーの負荷状態に基づいて負荷フィルタリングポリシーを動的に計算するアルゴリズムを採用することが望ましい場合があります。負荷フィルタリングポリシーの計算アルゴリズムは、この仕様の範囲を超えています。"
    },
    {
      "indent": 0,
      "text": "3.3. Load-Filtering Policy Distribution",
      "section_title": true,
      "ja": "3.3. ロードフィルタリングポリシーの配布"
    },
    {
      "indent": 3,
      "text": "For distributing load-filtering policies, this specification defines the SIP event package for load control, which is an \"instantiation\" of the generic SIP event notification framework [RFC6665]. This specification also defines the XML schema of a load-control document (Section 5), which is used to encode load-filtering policies.",
      "ja": "負荷フィルタリングポリシーを配布するために、この仕様は負荷制御用のSIPイベントパッケージを定義します。これは、一般的なSIPイベント通知フレームワーク[RFC6665]の「インスタンス化」です。この仕様では、負荷制御ドキュメントのXMLスキーマも定義されています（セクション5）。これは、負荷フィルタリングポリシーのエンコードに使用されます。"
    },
    {
      "indent": 0,
      "text": " In order for load-filtering policies to be properly distributed, each capable SIP entity in the network subscribes to the SIP load-control event package of each SIP entity to which it sends signaling requests. A SIP entity that accepts subscription requests is called a \"notifier\" (Section 4.6). Subscription is initiated and maintained during normal server operation. The subscription of neighboring SIP entities needs to be persistent, as described in Sections 4.1 and 4.2 of [RFC6665]. The refresh procedure is described in Section 4.7 below. Subscribers may terminate the subscription if they have not received notifications for an extended time period, and can resubscribe if they determine that signaling with the notifier becomes active again.",
      "ja": "負荷フィルタリングポリシーが適切に分散されるように、ネットワーク内の対応する各SIPエンティティは、シグナリング要求の送信先である各SIPエンティティのSIP負荷制御イベントパッケージにサブスクライブします。サブスクリプション要求を受け入れるSIPエンティティは、「通知機能」と呼ばれます（第4.6項）。サブスクリプションは、通常のサーバー操作中に開始および維持されます。 [RFC6665]のセクション4.1および4.2で説明されているように、隣接するSIPエンティティのサブスクリプションは永続的である必要があります。リフレッシュ手順については、以下のセクション4.7で説明します。サブスクライバーは、長期間にわたって通知を受け取らなかった場合はサブスクリプションを終了し、通知機能を使用したシグナリングが再びアクティブになったと判断した場合は再サブスクライブできます。"
    },
    {
      "indent": 3,
      "text": "An example architecture is shown in Figure 1 to illustrate SIP load-filtering policy distribution. This scenario consists of two networks belonging to Service Provider A and Service Provider B, respectively. Each provider's network is made up of two SIP core proxy servers and four SIP edge proxy servers. The core proxy servers and edge proxy servers of Service Provider A are denoted as CPa1 to CPa2 and EPa1 to EPa4; the core proxy servers and edge proxy servers of Service Provider B are denoted as CPb1 to CPb2 and EPb1 to EPb4.",
      "ja": "アーキテクチャの例を図1に示し、SIPロードフィルタリングポリシーの配布を示します。このシナリオは、サービスプロバイダーAとサービスプロバイダーBにそれぞれ属する2つのネットワークで構成されています。各プロバイダーのネットワークは、2つのSIPコアプロキシサーバーと4つのSIPエッジプロキシサーバーで構成されています。サービスプロバイダーAのコアプロキシサーバーおよびエッジプロキシサーバーは、CPa1〜CPa2およびEPa1〜EPa4として示されます。サービスプロバイダーBのコアプロキシサーバーおよびエッジプロキシサーバーは、CPb1〜CPb2およびEPb1〜EPb4として示されます。"
    },
    {
      "indent": 5,
      "text": " +-----------+   +-----------+   +-----------+   +-----------+\n |           |   |           |   |           |   |           |\n |   EPa1    |   |   EPa2    |   |   EPa3    |   |   EPa4    |\n |           |   |           |   |           |   |           |\n +-----------+   +-----------+   +-----------+   +-----------+\n         \\         /                    \\          /\n          \\       /                      \\        /\n           \\     /                        \\      /\n         +-----------+                  +-----------+\n         |           |                  |           |\n         |   CPa1    |------------------|   CPa2    |\n         |           |                  |           |\n         +-----------+                  +-----------+\n               |                              |\n Service       |                              |\n Provider A    |                              |\n               |                              |\n=================================================================\n               |                              |\n Service       |                              |\n Provider B    |                              |\n               |                              |\n         +-----------+                  +-----------+\n         |           |                  |           |\n         |   CPb1    |------------------|   CPb2    |\n         |           |                  |           |\n         +-----------+                  +-----------+\n           /      \\                        /     \\\n          /        \\                      /       \\\n         /          \\                    /         \\\n +-----------+   +-----------+   +-----------+   +-----------+\n |           |   |           |   |           |   |           |\n |   EPb1    |   |   EPb2    |   |   EPb3    |   |   EPb4    |\n |           |   |           |   |           |   |           |\n +-----------+   +-----------+   +-----------+   +-----------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Figure 1: Example Network Scenario Using SIP Load-Control Event Package Mechanism",
      "ja": "図1：SIP負荷制御イベントパッケージメカニズムを使用したネットワークシナリオの例"
    },
    {
      "indent": 3,
      "text": "During the initialization stage, the proxy servers first identify all their outgoing signaling neighbors and subscribe to them. Service providers can provision neighbors, or the proxy servers can incrementally learn who their neighbors are by inspecting signaling messages that they send and receive. Assuming all signaling relationships in Figure 1 are bidirectional, after this initialization stage, each proxy server will be subscribed to all its neighbors.",
      "ja": "初期化段階では、プロキシサーバーは最初にすべての発信シグナリングネイバーを識別し、それらにサブスクライブします。サービスプロバイダーはネイバーをプロビジョニングできます。または、プロキシサーバーは、送受信するシグナリングメッセージを検査することにより、ネイバーが誰であるかを段階的に学習できます。図1のすべての信号関係が双方向であるとすると、この初期化段階の後、各プロキシサーバーはそのすべてのネイバーにサブスクライブされます。"
    },
    {
      "indent": 3,
      "text": "Case I: EPa1 serves a TV program hotline and decides to limit the total number of incoming calls to the hotline to prevent an overload. To do so, EPa1 sends a notification to CPa1 with the specific hotline number, time of activation, and total acceptable call rate. Depending on the load-filtering policy computation algorithm, CPa1 may allocate the received total acceptable call rate among its neighbors, namely, EPa2, CPa2, and CPb1, and notify them about the resulting allocation along with the hotline number and the activation time. CPa2 and CPb1 may perform further allocation among their own neighbors and notify the corresponding proxy servers. This process continues until all edge proxy servers in the network have been informed about the event and have proper load-filtering policies configured.",
      "ja": "ケースI：EPa1はTVプログラムのホットラインを提供し、過負荷を防ぐためにホットラインへの着信コールの総数を制限することを決定します。これを行うために、EPa1は特定のホットライン番号、アクティブ化の時間、および受け入れ可能な合計コールレートを含む通知をCPa1に送信します。ロードフィルタリングポリシーの計算アルゴリズムに応じて、CPa1は受信した合計許容コールレートをネイバー、つまりEPa2、CPa2、およびCPb1に割り当て、ホットライン番号とアクティベーション時間とともに結果の割り当てについて通知します。 CPa2とCPb1は、それら自身のネイバー間でさらに割り当てを実行し、対応するプロキシサーバーに通知します。このプロセスは、ネットワーク内のすべてのエッジプロキシサーバーにイベントが通知され、適切な負荷フィルタリングポリシーが構成されるまで続きます。"
    },
    {
      "indent": 3,
      "text": "In the above case, the network entity where load-filtering policy is first introduced is the SIP server providing access to the resource that creates the overload situation. In other cases, the network entry point of introducing load-filtering policy could also be an entity that hosts this resource. For example, an operator may host an application server that performs toll-free-number (\"800 number\") translation services. The application server itself may be a SIP proxy server or a SIP Back-to-Back User Agent (B2BUA). If one of the toll-free numbers hosted at the application server creates the overload condition, the load-filtering policies can be introduced from the application server and then propagated to other SIP proxy servers in the network.",
      "ja": "上記の場合、負荷フィルタリングポリシーが最初に導入されるネットワークエンティティは、過負荷状態を作成するリソースへのアクセスを提供するSIPサーバーです。他の場合では、負荷フィルタリングポリシーを導入するネットワークエントリポイントも、このリソースをホストするエンティティである可能性があります。例えば、オペレーターは、フリーダイヤル番号（「800番号」）の翻訳サービスを実行するアプリケーションサーバーをホストする場合があります。アプリケーションサーバー自体は、SIPプロキシサーバーまたはSIPバックツーバックユーザーエージェント（B2BUA）の場合があります。アプリケーションサーバーでホストされているフリーダイヤル番号の1つが過負荷状態を作成する場合、負荷フィルタリングポリシーをアプリケーションサーバーから導入し、ネットワーク内の他のSIPプロキシサーバーに伝達できます。"
    },
    {
      "indent": 3,
      "text": "Case II: A hurricane affects the region covered by CPb2, EPb3, and EPb4. All three of these SIP proxy servers are overloaded. The rescue team determines that outbound calls are more valuable than inbound calls in this specific situation. Therefore, EPb3 and EPb4 are configured with load-filtering policies to accept more outbound calls than inbound calls. CPb2 may be configured the same way or receive dynamically computed load-filtering policies from EPb3 and EPb4. Depending on the load-filtering policy computation algorithm, CPb2 may also send out notifications to its outside neighbors, namely CPb1 and CPa2, specifying a limit on the acceptable rate of inbound calls to CPb2's responsible domain. CPb1 and CPa2 may subsequently notify their neighbors about limiting the calls to CPb2's area. The same process could continue until all edge proxy servers are notified and have load-filtering policies configured.",
      "ja": "ケースII：ハリケーンは、CPb2、EPb3、およびEPb4がカバーする領域に影響を与えます。これらの3つのSIPプロキシサーバーはすべて過負荷です。レスキューチームは、この特定の状況では、アウトバウンドコールがインバウンドコールよりも価値があると判断しました。したがって、EPb3とEPb4は、インバウンドコールよりも多くのアウトバウンドコールを受け入れるように負荷フィルタリングポリシーで構成されています。 CPb2は同じ方法で構成するか、EPb3およびEPb4から動的に計算された負荷フィルタリングポリシーを受信します。ロードフィルタリングポリシーの計算アルゴリズムに応じて、CPb2はその外部ネイバー、つまりCPb1とCPa2にも通知を送信し、CPb2の担当ドメインへの着信呼び出しの許容レートの制限を指定します。 CPb1とCPa2は、その後、CPb2のエリアへの呼び出しを制限することについてネイバーに通知する場合があります。すべてのエッジプロキシサーバーに通知が送られ、負荷フィルタリングポリシーが設定されるまで、同じプロセスが続きます。"
    },
    {
      "indent": 3,
      "text": "Note that this specification does not define the provisioning interface between the party who determines the load-filtering policy and the network entry point where the policy is introduced. One of the options for the provisioning interface is the Extensible Markup Language (XML) Configuration Access Protocol (XCAP) [RFC4825].",
      "ja": "この仕様は、負荷フィルタリングポリシーを決定するパーティと、ポリシーが導入されるネットワークエントリポイントとの間のプロビジョニングインターフェイスを定義しないことに注意してください。プロビジョニングインターフェイスのオプションの1つは、Extensible Markup Language（XML）構成アクセスプロトコル（XCAP）[RFC4825]です。"
    },
    {
      "indent": 0,
      "text": "3.4. Applicable Network Domains",
      "section_title": true,
      "ja": "3.4. 該当するネットワークドメイン"
    },
    {
      "indent": 3,
      "text": "This specification MUST be applied inside a \"Trust Domain\". The concept of a Trust Domain is similar to that defined in [RFC3324] and [RFC3325]. A Trust Domain, for the purpose of SIP load filtering, is a set of SIP entities such as SIP proxy servers that are trusted to exchange load-filtering policies defined in this specification. In the simplest case, a Trust Domain is a network of SIP entities belonging to a single service provider who deploys it and accurately knows the behavior of those SIP entities. Such simple Trust Domains may be joined to form larger Trust Domains by bilateral agreements between the service providers of the SIP entities.",
      "ja": "この仕様は、「信頼ドメイン」内で適用する必要があります。信頼ドメインの概念は、[RFC3324]と[RFC3325]で定義されているものと似ています。信頼ドメインは、SIP負荷フィルタリングの目的で、この仕様で定義されている負荷フィルタリングポリシーを交換することが信頼されているSIPプロキシサーバーなどのSIPエンティティのセットです。最も単純なケースでは、信頼ドメインは単一のサービスプロバイダーに属するSIPエンティティのネットワークであり、それを展開して、それらのSIPエンティティの動作を正確に把握しています。そのような単純な信頼ドメインを結合して、SIPエンティティのサービスプロバイダー間の二国間合意により、より大きな信頼ドメインを形成することができます。"
    },
    {
      "indent": 3,
      "text": "The key requirement of a Trust Domain for the purpose of SIP load filtering is that the behavior of all SIP entities within a given Trust Domain is known to comply to the following set of specifications.",
      "ja": "SIP負荷フィルタリングを目的とした信頼ドメインの重要な要件は、特定の信頼ドメイン内のすべてのSIPエンティティの動作が、次の一連の仕様に準拠していることがわかっていることです。"
    },
    {
      "indent": 3,
      "text": "o SIP entities in the Trust Domain agree on the mechanisms used to secure the communication among SIP entities within the Trust Domain.",
      "ja": "o 信頼ドメイン内のSIPエンティティは、信頼ドメイン内のSIPエンティティ間の通信を保護するために使用されるメカニズムに同意します。"
    },
    {
      "indent": 3,
      "text": "o SIP entities in the Trust Domain agree on the manner used to determine which SIP entities are part of the Trust Domain.",
      "ja": "o 信頼ドメインのSIPエンティティは、信頼ドメインの一部であるSIPエンティティを決定するために使用される方法に同意します。"
    },
    {
      "indent": 3,
      "text": "o SIP entities in the Trust Domain are compliant to SIP [RFC3261].",
      "ja": "o 信頼ドメイン内のSIPエンティティは、SIP [RFC3261]に準拠しています。"
    },
    {
      "indent": 3,
      "text": "o SIP entities in the Trust Domain are compliant to SIP-Specific Event Notification[RFC6665].",
      "ja": "o 信頼ドメイン内のSIPエンティティは、SIP固有のイベント通知[RFC6665]に準拠しています。"
    },
    {
      "indent": 3,
      "text": "o SIP entities in the Trust Domain are compliant to this specification.",
      "ja": "o 信頼ドメインのSIPエンティティは、この仕様に準拠しています。"
    },
    {
      "indent": 3,
      "text": "o SIP entities in the Trust Domain agree on what types of calls can be affected by this SIP load-filtering mechanism. For example, <call-identity> condition elements (Section 5.3.1) <one> and <many> might be limited to describe within certain prefixes.",
      "ja": "o 信頼ドメイン内のSIPエンティティは、このSIP負荷フィルタリングメカニズムによって影響を受ける可能性があるコールのタイプについて合意します。たとえば、<call-identity>条件要素（セクション5.3.1）<one>および<many>は、特定のプレフィックス内での記述に制限される場合があります。"
    },
    {
      "indent": 3,
      "text": "o SIP entities in the Trust Domain agree on the destinations to which calls may be redirected when the \"redirect\" action (Section 5.4) is used. For example, the URI might have to match a given set of domains.",
      "ja": "o 信頼ドメインのSIPエンティティは、「リダイレクト」アクション（セクション5.4）が使用された場合に、コールがリダイレクトされる宛先に同意します。たとえば、URIは特定のドメインセットと一致する必要がある場合があります。"
    },
    {
      "indent": 0,
      "text": " SIP load filtering is only effective if all neighbors that are possible signaling sources participate and enforce the designated load-filtering policies. Otherwise, a single non-conforming neighbor could make all filtering efforts useless by pumping in excessive traffic to overload the server. Therefore, the SIP server that distributes load-filtering policies needs to take countermeasures towards any non-conforming neighbors. A simple method is to reject excessive requests with 503 \"Service Unavailable\" response messages as if they were obeying the rate. Considering the rejection costs, a more complicated but fairer method would be to allocate at the overloaded server the same amount of processing to the combination of both normal processing and rejection as the overloaded server would devote to processing requests for a conforming upstream SIP server. These approaches work as long as the total rejection cost does not overwhelm the entire server resources. In addition, SIP servers need to handle message prioritization properly while performing load filtering, which is described in Section 4.8.",
      "ja": "SIPロードフィルタリングは、可能なシグナリングソースであるすべてのネイバーが参加し、指定されたロードフィルタリングポリシーを実施する場合にのみ有効です。そうしないと、単一の非準拠ネイバーが過剰なトラフィックを送り込んでサーバーに過負荷をかけることにより、すべてのフィルタリング作業を無意味にする可能性があります。したがって、負荷フィルタリングポリシーを配布するSIPサーバーは、非準拠のネイバーに対して対策を講じる必要があります。単純な方法は、503 \"Service Unavailable\"応答メッセージで過度の要求を拒否し、あたかもレートに従っているかのように拒否することです。拒否コストを考慮すると、より複雑でより公平な方法は、過負荷のサーバーで、正規の処理と拒否の両方の組み合わせに同じ量の処理を割り当てることです。過負荷のサーバーは、適合する上流のSIPサーバーの要求の処理に専念します。これらのアプローチは、総拒否コストがサーバーリソース全体を圧倒しない限り機能します。さらに、SIPサーバーは、セクション4.8で説明されているロードフィルタリングの実行中にメッセージの優先順位付けを適切に処理する必要があります。"
    },
    {
      "indent": 0,
      "text": "4. Load-Control Event Package",
      "section_title": true,
      "ja": "4. 負荷制御イベントパッケージ"
    },
    {
      "indent": 3,
      "text": "The SIP load-filtering mechanism defines a load-control event package for SIP based on [RFC6665].",
      "ja": "SIPロードフィルタリングメカニズムは、[RFC6665]に基づいてSIPのロード制御イベントパッケージを定義します。"
    },
    {
      "indent": 0,
      "text": "4.1. Event Package Name",
      "section_title": true,
      "ja": "4.1. イベントパッケージ名"
    },
    {
      "indent": 3,
      "text": "The name of this event package is \"load-control\". This name is carried in the Event and Allow-Events header, as specified in [RFC6665].",
      "ja": "このイベントパッケージの名前は「load-control」です。この名前は、[RFC6665]で指定されているように、EventおよびAllow-Eventsヘッダーで伝達されます。"
    },
    {
      "indent": 0,
      "text": "4.2. Event Package Parameters",
      "section_title": true,
      "ja": "4.2. イベントパッケージパラメータ"
    },
    {
      "indent": 3,
      "text": "No package-specific event header field parameters are defined for this event package.",
      "ja": "このイベントパッケージには、パッケージ固有のイベントヘッダーフィールドパラメータは定義されていません。"
    },
    {
      "indent": 0,
      "text": "4.3. SUBSCRIBE Bodies",
      "section_title": true,
      "ja": "4.3. サブスクライブボディ"
    },
    {
      "indent": 3,
      "text": "This specification does not define the content of SUBSCRIBE bodies. Future specifications could define bodies for SUBSCRIBE messages, for example, to request specific types of load-control event notifications.",
      "ja": "この仕様は、SUBSCRIBEボディの内容を定義していません。将来の仕様では、SUBSCRIBEメッセージの本文を定義して、たとえば、特定のタイプのロード制御イベント通知を要求することができます。"
    },
    {
      "indent": 3,
      "text": "A SUBSCRIBE request sent without a body implies the default subscription behavior as specified in Section 4.7.",
      "ja": "本文なしで送信されたSUBSCRIBEリクエストは、セクション4.7で指定されているデフォルトのサブスクリプション動作を意味します。"
    },
    {
      "indent": 0,
      "text": "4.4. SUBSCRIBE Duration",
      "section_title": true,
      "ja": "4.4. 購読期間"
    },
    {
      "indent": 3,
      "text": "The default expiration time for a subscription to load-filtering policy is one hour. Since the desired expiration time may vary significantly for subscriptions among SIP entities with different signaling relationships, the subscribers and notifiers are RECOMMENDED to explicitly negotiate appropriate subscription duration when knowledge about the mutual signaling relationship is available.",
      "ja": "ロードフィルタリングポリシーへのサブスクリプションのデフォルトの有効期限は1時間です。希望する有効期限は、シグナリング関係が異なるSIPエンティティ間のサブスクリプションで大きく異なる可能性があるため、相互のシグナリング関係に関する知識が利用できる場合、サブスクライバーと通知者は適切なサブスクリプション期間を明示的にネゴシエートすることをお勧めします。"
    },
    {
      "indent": 0,
      "text": "4.5. NOTIFY Bodies",
      "section_title": true,
      "ja": "4.5. 通知するボディ"
    },
    {
      "indent": 3,
      "text": "The body of a NOTIFY request in this event package contains load-filtering policies. The format of the NOTIFY request body MUST be in one of the formats defined in the Accept header field of the SUBSCRIBE request or be the default format, as specified in [RFC6665]. The default data format for the NOTIFY request body of this event package is \"application/load-control+xml\" (defined in Section 5). This means that when a NOTIFY request body exists but no Accept header field is specified in a SUBSCRIBE request, the NOTIFY request body MUST contain content conforming to the \"application/ load-control+xml\" format.",
      "ja": "このイベントパッケージのNOTIFYリクエストの本文には、負荷フィルタリングポリシーが含まれています。 [RFC6665]で指定されているように、NOTIFYリクエスト本文のフォーマットは、SUBSCRIBEリクエストのAcceptヘッダーフィールドで定義されたフォーマットの1つであるか、デフォルトのフォーマットである必要があります。このイベントパッケージのNOTIFYリクエスト本文のデフォルトのデータ形式は、「application / load-control + xml」です（セクション5で定義）。これは、NOTIFYリクエストボディが存在するが、SUBSCRIBEリクエストでAcceptヘッダーフィールドが指定されていない場合、NOTIFYリクエストボディには、「application / load-control + xml」形式に準拠したコンテンツが含まれている必要があることを意味します。"
    },
    {
      "indent": 0,
      "text": "4.6. Notifier Processing of SUBSCRIBE Requests",
      "section_title": true,
      "ja": "4.6. SUBSCRIBEリクエストの通知処理"
    },
    {
      "indent": 3,
      "text": "The notifier accepts a new subscription or updates an existing subscription upon receiving a valid SUBSCRIBE request.",
      "ja": "通知機能は、有効なSUBSCRIBEリクエストを受信すると、新しいサブスクリプションを受け入れるか、既存のサブスクリプションを更新します。"
    },
    {
      "indent": 3,
      "text": "If the identity of the subscriber sending the SUBSCRIBE request is not allowed to receive load-filtering policies, the notifier MUST return a 403 \"Forbidden\" response.",
      "ja": "SUBSCRIBE要求を送信するサブスクライバーのIDが負荷フィルタリングポリシーの受信を許可されていない場合、通知機能は403 \"Forbidden\"応答を返さなければなりません（MUST）。"
    },
    {
      "indent": 3,
      "text": "If none of the media types specified in the Accept header of the SUBSCRIBE request are supported, the notifier SHOULD return a 406 \"Not Acceptable\" response.",
      "ja": "SUBSCRIBEリクエストのAcceptヘッダーで指定されたメディアタイプがサポートされていない場合、通知機能は406「Not Acceptable」応答を返す必要があります（SHOULD）。"
    },
    {
      "indent": 0,
      "text": "4.7. Notifier Generation of NOTIFY Requests",
      "section_title": true,
      "ja": "4.7. NOTIFYリクエストの通知機能の生成"
    },
    {
      "indent": 3,
      "text": "A notifier MUST send a NOTIFY request with its current load-filtering policy to the subscriber upon successfully accepting or refreshing a subscription. If no load-filtering policy needs to be distributed when the subscription is received, the notifier SHOULD sent a NOTIFY request without a body to the subscriber. The content-type header field of this NOTIFY request MUST indicate the correct body format as if the body were present (e.g., \"application/load-control+xml\"). Notifiers are likely to send NOTIFY requests without a body when a subscription is initiated for the first time, e.g., when a SIP entity is just introduced, because there may be no planned events that require load filtering at that time. A notifier SHOULD generate NOTIFY requests each time the load-filtering policy changes, with the maximum notification rate not exceeding values defined in Section 4.10.",
      "ja": "ノーティファイアは、サブスクリプションを正常に受け入れまたは更新すると、現在のロードフィルタリングポリシーを含むNOTIFYリクエストをサブスクライバに送信する必要があります。サブスクリプションの受信時に負荷フィルタリングポリシーを配布する必要がない場合、通知機能は、本体なしでNOTIFYリクエストをサブスクライバーに送信する必要があります（SHOULD）。このNOTIFYリクエストのcontent-typeヘッダーフィールドは、ボディが存在するかのように正しいボディフォーマットを示す必要があります（例： \"application / load-control + xml\"）。通知は、サブスクリプションが最初に開始されたとき（たとえば、SIPエンティティが導入された直後）にボディなしでNOTIFYリクエストを送信する可能性があります。これは、その時点でロードフィルタリングを必要とする予定のイベントがないためです。通知機能は、ロードフィルタリングポリシーが変更されるたびにNOTIFYリクエストを生成する必要があります（SHOULD）。最大通知レートは、セクション4.10で定義された値を超えません。"
    },
    {
      "indent": 0,
      "text": "4.8. Subscriber Processing of NOTIFY Requests",
      "section_title": true,
      "ja": "4.8. NOTIFYリクエストのサブスクライバー処理"
    },
    {
      "indent": 0,
      "text": " The subscriber is the load-filtering server that enforces load-filtering policies received from the notifier. The way subscribers process NOTIFY requests depends on the load-filtering policies conveyed in the notifications. Typically, load-filtering policies consist of rules specifying actions to be applied to requests matching certain conditions. A subscriber receiving a notification first installs these rules and then enforces corresponding actions on requests matching those conditions, for example, limiting the sending rate of call requests destined for a specific callee.",
      "ja": "サブスクライバは、通知機能から受け取った負荷フィルタリングポリシーを適用する負荷フィルタリングサーバーです。サブスクライバーがNOTIFY要求を処理する方法は、通知で伝達される負荷フィルターポリシーによって異なります。通常、負荷フィルタリングポリシーは、特定の条件に一致するリクエストに適用されるアクションを指定するルールで構成されます。通知を受信するサブスクライバーは、最初にこれらのルールをインストールしてから、それらの条件に一致する要求に対応するアクションを適用します。たとえば、特定の呼び出し先宛ての呼び出し要求の送信レートを制限します。"
    },
    {
      "indent": 3,
      "text": "In the case when load-filtering policies specify a future validity, it is possible that when the validity time arrives, the subscription to the specific notifier that conveyed the rules has expired. In this case, it is RECOMMENDED that the subscriber re-activate its subscription with the corresponding notifier. Regardless of whether or not this re-activation of subscription is successful, when the validity time is reached, the subscriber SHOULD enforce the corresponding rules.",
      "ja": "ロードフィルタリングポリシーで将来の有効性が指定されている場合、有効時間に達したときに、ルールを伝達した特定の通知機能へのサブスクリプションが期限切れになった可能性があります。この場合、サブスクライバーは、対応する通知機能を使用してサブスクリプションを再アクティブ化することをお勧めします。このサブスクリプションの再アクティブ化が成功したかどうかに関係なく、有効期限に達した場合、サブスクライバーは対応するルールを適用する必要があります（SHOULD）。"
    },
    {
      "indent": 3,
      "text": "Upon receipt of a NOTIFY request with a Subscription-State header field containing the value \"terminated\", the subscription status with the particular notifier will be terminated. Meanwhile, subscribers MUST also terminate previously received load-filtering policies from that notifier.",
      "ja": "「terminated」という値を含むSubscription-Stateヘッダーフィールドを含むNOTIFYリクエストを受信すると、特定の通知機能を持つサブスクリプションステータスが終了します。一方、サブスクライバーは、その通知機能から以前に受信した負荷フィルタリングポリシーも終了する必要があります。"
    },
    {
      "indent": 3,
      "text": "The subscriber MUST discard unknown bodies. If the NOTIFY request contains several bodies, none of them being supported, it SHOULD unsubscribe unless it has knowledge that it will possibly receive NOTIFY requests with supported bodies from that notifier. A NOTIFY request without a body indicates that no load-filtering policies need to be updated.",
      "ja": "サブスクライバーは不明なボディを破棄する必要があります。 NOTIFYリクエストに複数のボディが含まれていて、サポートされていない場合、そのノーティファイアからサポートされているボディを含むNOTIFYリクエストを受け取る可能性があることを認識していない限り、サブスクライブを解除する必要があります。本文のないNOTIFYリクエストは、ロードフィルタリングポリシーを更新する必要がないことを示します。"
    },
    {
      "indent": 3,
      "text": "When the subscriber enforces load-filtering policies, it needs to prioritize requests and select those requests that need to be rejected or redirected. This selection is largely a matter of local policy. It is expected that the subscriber will follow local policy as long as the result in reduction of traffic is consistent with the overload algorithm in effect at that node. Accordingly, the normative behavior described in the next three paragraphs should be interpreted with the understanding that the subscriber will aim to preserve local policy to the fullest extent possible.",
      "ja": "サブスクライバーは、負荷フィルターポリシーを適用する場合、要求に優先順位を付け、拒否またはリダイレクトする必要がある要求を選択する必要があります。この選択は主に地域の政策の問題です。トラフィックの削減の結果がそのノードで有効な過負荷アルゴリズムと一致する限り、加入者はローカルポリシーに従うことが期待されます。したがって、次の3つの段落で説明する規範的な動作は、加入者がローカルポリシーを可能な限り最大限に維持することを目的としていることを理解して解釈する必要があります。"
    },
    {
      "indent": 3,
      "text": "o The subscriber SHOULD honor the local policy for prioritizing SIP requests such as policies based on message type, e.g., INVITEs versus requests associated with existing sessions.",
      "ja": "o サブスクライバーは、メッセージタイプに基づいたポリシーなどのSIPリクエスト（たとえば、INVITEと既存のセッションに関連付けられたリクエスト）の優先順位を付けるために、ローカルポリシーを尊重する必要があります（SHOULD）。"
    },
    {
      "indent": 0,
      "text": " o The subscriber SHOULD honor the local policy for prioritizing SIP requests based on the content of the Resource-Priority header (RPH, [RFC4412]). Specific (namespace.value) RPH contents may indicate high-priority requests that should be preserved as much as possible during overload. The RPH contents can also indicate a low-priority request that is eligible to be dropped during times of overload.",
      "ja": "o加入者は、Resource-Priorityヘッダー（RPH、[RFC4412]）の内容に基づいてSIPリクエストに優先順位を付けるためのローカルポリシーを尊重する必要があります（SHOULD）。特定の（namespace.value）RPHコンテンツは、過負荷時に可能な限り保持する必要がある優先度の高いリクエストを示している場合があります。 RPHの内容は、過負荷時にドロップするのに適格な優先度の低いリクエストを示している場合もあります。"
    },
    {
      "indent": 3,
      "text": "o The subscriber SHOULD honor the local policy for prioritizing SIP requests relating to emergency calls as identified by the sos URN [RFC5031] indicating an emergency request.",
      "ja": "o 加入者は、緊急リクエストを示すsos URN [RFC5031]で識別されるように、緊急コールに関連するSIPリクエストを優先するためのローカルポリシーを尊重する必要があります。"
    },
    {
      "indent": 3,
      "text": "A local policy can be expected to combine both the SIP request type and the prioritization markings and SHOULD be honored when overload conditions prevail.",
      "ja": "ローカルポリシーは、SIP要求タイプと優先順位付けマーキングの両方を組み合わせることが期待でき、過負荷状態が発生した場合はそれに従う必要があります。"
    },
    {
      "indent": 0,
      "text": "4.9. Handling of Forked Requests",
      "section_title": true,
      "ja": "4.9. フォークされたリクエストの処理"
    },
    {
      "indent": 3,
      "text": "Forking is not applicable when this load-control event package mechanism is used within a single-hop distance between neighboring SIP entities. If communication scope of the load-control event package mechanism is among multiple hops, forking is also not expected to happen because the subscription request is addressed to a clearly defined SIP entity. However, in the unlikely case when forking does happen, the load-control event package only allows the first potential dialog-establishing message to create a dialog, as specified in Section 5.4.9 of [RFC6665].",
      "ja": "この負荷制御イベントパッケージメカニズムが隣接するSIPエンティティ間のシングルホップ距離内で使用される場合、フォークは適用されません。負荷制御イベントパッケージメカニズムの通信範囲が複数のホップにまたがっている場合、サブスクリプション要求は明確に定義されたSIPエンティティにアドレス指定されるため、分岐も発生しないと予想されます。ただし、フォークが発生する可能性は低いですが、[RFC6665]のセクション5.4.9で指定されているように、ロード制御イベントパッケージでは、最初の潜在的なダイアログ確立メッセージのみがダイアログを作成できます。"
    },
    {
      "indent": 0,
      "text": "4.10. Rate of Notifications",
      "section_title": true,
      "ja": "4.10. 通知の割合"
    },
    {
      "indent": 3,
      "text": "The rate of notifications is unlikely to be of concern for this local control event package mechanism when it is used in a non-real-time mode for relatively static load-filtering policies. Nevertheless, if a situation does arise in which a rather frequently used load filtering policy update is needed, it is RECOMMENDED that the notifier not generate notifications at a rate higher than once per second in all cases, in order to avoid the NOTIFY request itself overloading the system.",
      "ja": "通知が比較的静的な負荷フィルタリングポリシーの非リアルタイムモードで使用されている場合、このローカル制御イベントパッケージメカニズムでは、通知の速度が問題になることはほとんどありません。それにもかかわらず、かなり頻繁に使用されるロードフィルタリングポリシーの更新が必要な状況が発生した場合は、NOTIFYリクエスト自体の過負荷を回避するために、通知機能がすべてのケースで毎秒1回より高いレートで通知を生成しないことが推奨されます。システム。"
    },
    {
      "indent": 0,
      "text": "4.11. State Delta",
      "section_title": true,
      "ja": "4.11. 州デルタ"
    },
    {
      "indent": 3,
      "text": "It is likely that updates to specific load-filtering policies are made by changing only part of the policy parameters (e.g., acceptable request rate or percentage, but not matching identities). This will typically be because the utilization of a resource subject to overload depends upon dynamic unknowns such as holding time and the relative distribution of offered loads over subscribing SIP entities. The updates could originate manually or be determined automatically by an algorithm that dynamically computes the load-filtering policies (Section 3.2). Another factor that is usually not known precisely or",
      "ja": "特定の負荷フィルタリングポリシーの更新は、ポリシーパラメータの一部のみを変更することで行われる可能性があります（たとえば、許容可能なリクエストレートまたはパーセンテージは一致するが、一致するIDは変更されません）。これは通常、過負荷の影響を受けるリソースの使用率が、保持時間やサブスクライブしているSIPエンティティに対する提供された負荷の相対的な分布などの動的な未知数に依存するためです。更新は手動で開始することも、負荷フィルタリングポリシーを動的に計算するアルゴリズムによって自動的に決定することもできます（セクション3.2）。通常正確に知られていない別の要因または"
    },
    {
      "indent": 3,
      "text": "needs to be computed automatically is the duration of the event requiring load filtering. Therefore, it would also be common for the validity to change frequently.",
      "ja": "自動的に計算する必要があるのは、負荷のフィルタリングが必要なイベントの期間です。したがって、有効性が頻繁に変更されることもよくあります。"
    },
    {
      "indent": 3,
      "text": "This event package allows the use of state delta as in [RFC6665] to accommodate frequent updates of partial policy parameters. For each NOTIFY transaction in a subscription, a version number that increases by exactly one MUST be included in the NOTIFY request body when the body is present. When the subscriber receives a state delta, it associates the partial updates to the particular policy by matching the appropriate rule id (Appendix D). If the subscriber receives a NOTIFY request with a version number that is increased by more than one, it knows that it has missed a state delta and needs to ask for a full state snapshot. Therefore, the subscriber ignores that NOTIFY request containing the state delta, and resends a SUBSCRIBE request to force a NOTIFY request containing a complete state snapshot.",
      "ja": "このイベントパッケージでは、[RFC6665]のように状態デルタを使用して、部分的なポリシーパラメータの頻繁な更新に対応できます。サブスクリプション内のNOTIFYトランザクションごとに、ボディが存在する場合、NOTIFYリクエストボディにバージョン番号を1つだけ増やす必要があります。サブスクライバーは、状態のデルタを受信すると、適切なルールIDを照合することにより、部分的な更新を特定のポリシーに関連付けます（付録D）。サブスクライバーは、バージョン番号が1つ以上増加したNOTIFY要求を受信した場合、状態デルタを見逃しており、完全な状態のスナップショットを要求する必要があることを認識しています。したがって、サブスクライバーは、状態デルタを含むNOTIFY要求を無視し、SUBSCRIBE要求を再送信して、完全な状態スナップショットを含むNOTIFY要求を強制します。"
    },
    {
      "indent": 0,
      "text": "5. Load-Control Document",
      "section_title": true,
      "ja": "5. 負荷制御ドキュメント"
    },
    {
      "indent": 0,
      "text": "5.1. Format",
      "section_title": true,
      "ja": "5.1. フォーマット"
    },
    {
      "indent": 3,
      "text": "A load-control document is an XML document that describes the load-filtering policies. It inherits and enhances the common policy document defined in [RFC4745]. A common policy document contains a set of rules. Each rule consists of three parts: conditions, actions, and transformations. The conditions part is a set of expressions containing attributes such as identity, domain, and validity time information. Each expression evaluates to TRUE or FALSE. Conditions are matched on \"equality\" or \"greater than\" style comparison. There is no regular expression matching. Conditions are evaluated on receipt of an initial SIP request for a dialog or standalone transaction. If a request matches all conditions in a rule set, the action part and the transformation part are consulted to determine the \"permission\" on how to handle the request. Each action or transformation specifies a positive grant to the policy server to perform the resulting actions. Well-defined mechanism are available for combining actions and transformations obtained from more than one sources.",
      "ja": "ロード制御ドキュメントは、ロードフィルタリングポリシーを記述するXMLドキュメントです。 [RFC4745]で定義されている共通のポリシードキュメントを継承および拡張します。共通のポリシードキュメントには、一連のルールが含まれています。各ルールは、条件、アクション、変換の3つの部分で構成されています。条件部分は、ID、ドメイン、有効期間情報などの属性を含む式のセットです。各式はTRUEまたはFALSEに評価されます。条件は、「等しい」または「より大きい」スタイルの比較で一致します。正規表現の一致はありません。条件は、ダイアログまたはスタンドアロントランザクションの最初のSIPリクエストの受信時に評価されます。要求がルールセットのすべての条件に一致する場合、アクション部分と変換部分が参照され、要求の処理方法に関する「許可」が決定されます。各アクションまたは変換は、結果のアクションを実行するためのポリシーサーバーへの肯定的な許可を指定します。複数のソースから取得したアクションと変換を組み合わせるために、明確に定義されたメカニズムを利用できます。"
    },
    {
      "indent": 0,
      "text": "5.2. Namespace",
      "section_title": true,
      "ja": "5.2. 名前空間"
    },
    {
      "indent": 3,
      "text": "The namespace URI for elements defined by this specification is a Uniform Resource Namespace (URN) ([RFC2141]), using the namespace identifier \"ietf\" defined by [RFC2648] and extended by [RFC3688]. The URN is as follows:",
      "ja": "この仕様で定義されている要素の名前空間URIは、[RFC2648]で定義され[RFC3688]で拡張された名前空間識別子「ietf」を使用するUniform Resource Namespace（URN）（[RFC2141]）です。 URNは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "urn:ietf:params:xml:ns:load-control",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.3. Conditions",
      "section_title": true,
      "ja": "5.3. 条件"
    },
    {
      "indent": 3,
      "text": "[RFC4745] defines three condition elements: <identity>, <sphere>, and <validity>. This specification defines new condition elements and reuses the <validity> element. The <sphere> element is not used.",
      "ja": "[RFC4745]は、3つの条件要素<identity>、<sphere>、および<validity>を定義します。この仕様では、新しい条件要素を定義し、<validity>要素を再利用しています。 <sphere>要素は使用されません。"
    },
    {
      "indent": 0,
      "text": "5.3.1. Call Identity",
      "section_title": true,
      "ja": "5.3.1. コールアイデンティティ"
    },
    {
      "indent": 3,
      "text": "Since the problem space of this specification is different from that of [RFC4745], the [RFC4745] <identity> element is not sufficient for use with load filtering. First, load filtering may be applied to different identities contained in a request, including identities of both the receiving entity and the sending entity. Second, the importance of authentication varies when different identities of a request are concerned. This specification defines new identity conditions that can accommodate the granularity of specific SIP identity header fields. The requirement for authentication depends on which field is to be matched.",
      "ja": "この仕様の問題空間は[RFC4745]の問題空間とは異なるため、[RFC4745] <identity>要素はロードフィルタリングでの使用には不十分です。第１に、受信エンティティと送信エンティティの両方のアイデンティティを含む、要求に含まれる異なるアイデンティティに負荷フィルタリングを適用することができる。次に、リクエストのIDが異なる場合、認証の重要性は異なります。この仕様は、特定のSIP IDヘッダーフィールドの細分性に対応できる新しいID条件を定義します。認証の要件は、照合するフィールドによって異なります。"
    },
    {
      "indent": 3,
      "text": "The identity condition for load filtering is specified by the <call-identity> element and its sub-element <sip>. The <sip> element itself contains sub-elements representing SIP sending and receiving identity header fields: <from>, <to>, <request-uri>, and <p-asserted-identity>. All those sub-elements are of an extended form of the [RFC4745] <identity> element. In addition to the sub-elements including <one>, <except>, and <many> in the <identity> element from [RFC4745], the extended form adds two new sub-elements, namely, <many-tel> and <except-tel>, which will be explained later in this section.",
      "ja": "ロードフィルタリングの識別条件は、<call-identity>要素とそのサブ要素<sip>によって指定されます。 <sip>要素自体には、SIP送信および受信IDヘッダーフィールドを表すサブ要素が含まれます：<from>、<to>、<request-uri>、および<p-asserted-identity>。これらのサブ要素はすべて、[RFC4745] <identity>要素の拡張形式です。 [RFC4745]の<identity>要素の<one>、<except>、および<many>を含むサブ要素に加えて、拡張された形式では、2つの新しいサブ要素、つまり<many-tel>と< except-tel>については、このセクションで後述します。"
    },
    {
      "indent": 3,
      "text": "The [RFC4745] <one> and <except> elements may contain an \"id\" attribute, which is the URI of a single entity to be included or excluded in the condition. When used in the <from>, <to>, <request-uri>, and <p-asserted-identity> elements, this \"id\" value is the URI contained in the corresponding SIP header field, i.e., From, To, Request-URI, and P-Asserted-Identity.",
      "ja": "[RFC4745] <one>および<except>要素には、「id」属性を含めることができます。これは、条件に含めるまたは除外する単一のエンティティのURIです。 <from>、<to>、<request-uri>、および<p-asserted-identity>要素で使用される場合、この「id」値は、対応するSIPヘッダーフィールドに含まれるURI、つまりFrom、To、 Request-URI、およびP-Asserted-Identity。"
    },
    {
      "indent": 0,
      "text": " When the <call-identity> element contains multiple <sip> sub-elements, the result is combined using logical OR. When the <from>, <to>, <request-uri>, and <p-asserted-identity> elements contain multiple <one>, <many>, or <many-tel> sub-elements, the result is also combined using logical OR. When the <many> sub-element further contains one or more <except> sub-elements, or when the <many-tel> sub-element further contains one or more <except-tel> sub-elements, the result of each <except> or <except-tel> sub-element is combined using a logical OR, similar to that of the [RFC4745] <identity> element. However, when the <sip> element contains multiple <from>, <to>, <request-uri>, and <p-asserted-identity> sub-elements, the result is combined using logical AND. This allows the call identity to be specified by multiple fields of a SIP request simultaneously, e.g., both the From and the To header fields.",
      "ja": "<call-identity>要素に複数の<sip>サブ要素が含まれている場合、結果は論理ORを使用して結合されます。 <from>、<to>、<request-uri>、および<p-asserted-identity>要素に複数の<one>、<many>、または<many-tel>サブ要素が含まれている場合、結果も結合されます論理ORを使用します。 <many>サブ要素に1つ以上の<except>サブ要素がさらに含まれる場合、または<many-tel>サブ要素に1つ以上の<except-tel>サブ要素がさらに含まれる場合、各<の結果except>または<except-tel>サブ要素は、[RFC4745] <identity>要素と同様に、論理ORを使用して結合されます。ただし、<sip>要素に複数の<from>、<to>、<request-uri>、および<p-asserted-identity>サブ要素が含まれている場合、結果は論理ANDを使用して結合されます。これにより、SIP要求の複数のフィールド（たとえば、FromヘッダーフィールドとToヘッダーフィールドの両方）でコールIDを同時に指定できます。"
    },
    {
      "indent": 3,
      "text": "The following shows an example of the <call-identity> element, which matches call requests whose To header field contains the SIP URI \"sip:alice@hotline.example.com\" or the 'tel' URI \"tel:+1-212-555-1234\".",
      "ja": "次に、<call-identity>要素の例を示します。これは、ToヘッダーフィールドにSIP URI \"sip：alice@hotline.example.com\"または 'tel' URI \"tel：+ 1-212\"が含まれているコールリクエストに一致します。 -555-1234」。"
    },
    {
      "indent": 15,
      "text": "<call-identity>\n    <sip>\n        <to>\n            <one id=\"sip:alice@hotline.example.com\"/>\n            <one id=\"tel:+1-212-555-1234\"/>\n        </to>\n    </sip>\n</call-identity>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Before evaluating <call-identity> conditions, the subscriber shall convert URIs received in SIP header fields in canonical form as per [RFC3261], except that the \"phone-context\" parameter shall not be removed, if present.",
      "ja": "<call-identity>条件を評価する前に、サブスクライバーは[RFC3261]に従って、SIPヘッダーフィールドで受信したURIを正規の形式で変換する必要があります。ただし、「phone-context」パラメーターは削除されません。"
    },
    {
      "indent": 3,
      "text": "The [RFC4745] <many> and <except> elements may take a \"domain\" attribute. The \"domain\" attribute specifies a domain name to be matched by the domain part of the candidate identity. Thus, it allows matching a large and possibly unknown number of entities within a domain. The \"domain\" attribute works well for SIP URIs.",
      "ja": "[RFC4745] <many>要素と<except>要素は、「ドメイン」属性を取る場合があります。 「ドメイン」属性は、候補IDのドメイン部分と照合するドメイン名を指定します。したがって、ドメイン内の多数の、場合によっては不明な数のエンティティを照合できます。 「ドメイン」属性はSIP URIに適しています。"
    },
    {
      "indent": 3,
      "text": "A URI identifying a SIP user, however, can also be a 'tel' URI. Therefore, a similar way to match a group of 'tel' URIs is needed. There are two forms of 'tel' URIs: for global numbers and local numbers. According to [RFC3966], \"All phone numbers MUST use the global form unless they cannot be represented as such...Local numbers MUST be tagged with a 'phone-context'\". The global number 'tel' URIs start with a \"+\". The \"phone-context\" parameter of local numbers may be labeled as a global number or any number of its leading digits or a domain name. Both forms of the 'tel' URI make the resulting URI globally unique.",
      "ja": "ただし、SIPユーザーを識別するURIは「tel」URIにすることもできます。したがって、「tel」URIのグループに一致する同様の方法が必要です。 「tel」URIには、グローバル番号とローカル番号の2つの形式があります。 [RFC3966]によれば、「すべての電話番号は、そのように表現できない場合を除き、グローバルフォームを使用する必要があります...ローカル番号は、「電話コンテキスト」でタグ付けする必要があります。」グローバル番号 'tel' URIは「+」で始まります。ローカル番号の「電話コンテキスト」パラメータは、グローバル番号、またはその先頭の数字の任意の数、またはドメイン名としてラベル付けできます。どちらの形式の「tel」URIでも、結果のURIはグローバルに一意になります。"
    },
    {
      "indent": 0,
      "text": " 'tel' URIs of global numbers can be grouped by prefixes consisting of any number of common leading digits. For example, a prefix formed by a country code or both the country and area code identifies telephone numbers within a country or an area. Since the length of the country and area code for different regions are different, the length of the number prefix also varies. This allows further flexibility such as grouping the numbers into sub-areas within the same area code. 'tel' URIs of local numbers can be grouped by the value of the \"phone-context\" parameter.",
      "ja": "グローバル番号の「tel」URIは、任意の数の共通の先行数字で構成されるプレフィックスによってグループ化できます。たとえば、国コードまたは国コードと市外局番の両方によって形成されるプレフィックスは、国または地域内の電話番号を識別します。国の長さと地域ごとの市外局番が異なるため、番号プレフィックスの長さも異なります。これにより、同じエリアコード内のサブエリアに番号をグループ化するなどの柔軟性がさらに高まります。ローカル番号の「tel」URIは、「phone-context」パラメーターの値によってグループ化できます。"
    },
    {
      "indent": 3,
      "text": "The <many> and <except> sub-elements in the <identity> element of [RFC4745] do not allow additional attributes to be added directly. Redefining behavior of their existing \"domain\" attribute creates backward-compatibility issues. Therefore, this specification defines the <many-tel> and <except-tel> sub-elements that extend the [RFC4745] <identity> element. Both of them have a \"prefix\" attribute for grouping 'tel' URIs, similar to the \"domain\" attribute for grouping SIP URIs in existing <many> and <except> sub-elements. For global numbers, the \"prefix\" attribute value holds any number of common leading digits, for example, \"+1-212\" for US phone numbers within area code \"212\" or \"+1-212-854\" for the organization with US area code \"212\" and local prefix \"854\". For local numbers, the \"prefix\" attribute value contains the \"phone-context\" parameter value. It should be noted that visual separators (such as the \"-\" sign) in 'tel' URIs are not used for URI comparison as per [RFC3966].",
      "ja": "[RFC4745]の<identity>要素の<many>および<except>サブ要素では、追加の属性を直接追加できません。既存の「ドメイン」属性の動作を再定義すると、下位互換性の問題が発生します。したがって、この仕様では、[RFC4745] <identity>要素を拡張する<many-tel>および<except-tel>サブ要素を定義しています。どちらにも、既存の<many>および<except>サブ要素のSIP URIをグループ化するための「domain」属性と同様に、「tel」URIをグループ化するための「prefix」属性があります。グローバル番号の場合、「prefix」属性値は任意の数の共通の先行数字を保持します。たとえば、市外局番「212」内の米国の電話番号の「+ 1-212」または次の組織の「+ 1-212-854」米国の市外局番「212」とローカルプレフィックス「854」。市内番号の場合、「prefix」属性値には「phone-context」パラメータ値が含まれています。 [RFC3966]のように、「tel」URIの視覚的なセパレータ（「-」記号など）はURI比較に使用されないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "The following example shows the use of the \"prefix\" attribute along with the \"domain\" attribute. It matches those requests calling to the number \"+1-202-999-1234\" but are not calling from a \"+1-212\" prefix or a SIP From URI domain of \"manhattan.example.com\".",
      "ja": "次の例は、「prefix」属性と「domain」属性の使用方法を示しています。 「+ 1-202-999-1234」を呼び出す要求に一致しますが、「+ 1-212」プレフィックスまたは「manhattan.example.com」のSIP From URIドメインから呼び出しません。"
    },
    {
      "indent": 15,
      "text": "<call-identity>\n    <sip>\n        <from>\n            <many>\n                <except domain=\"manhattan.example.com\"/>\n            </many>\n            <many-tel>\n                <except-tel prefix=\"+1-212\"/>\n            </many-tel>\n        </from>\n        <to>\n            <one id=\"tel:+1-202-999-1234\"/>\n        </to>\n    </sip>\n</call-identity>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.3.2. Method",
      "section_title": true,
      "ja": "5.3.2. 方法"
    },
    {
      "indent": 0,
      "text": " The load created on a SIP server depends on the type of initial SIP requests for dialogs or standalone transactions. The <method> element specifies the SIP method to which the load-filtering action applies. When this element is not included, the load-filtering actions are applicable to all applicable initial requests. These requests include INVITE, MESSAGE, REGISTER, SUBSCRIBE, OPTIONS, and PUBLISH. Non-initial requests, such as ACK, BYE, and CANCEL MUST NOT be subjected to load filtering. In addition, SUBSCRIBE requests are not filtered if the event-type header field indicates the event package defined in this specification.",
      "ja": "SIPサーバーで作成される負荷は、ダイアログまたはスタンドアロントランザクションの初期SIPリクエストのタイプによって異なります。 <method>要素は、ロードフィルタリングアクションが適用されるSIPメソッドを指定します。この要素が含まれていない場合、ロードフィルタリングアクションは、該当するすべての初期リクエストに適用できます。これらの要求には、INVITE、MESSAGE、REGISTER、SUBSCRIBE、OPTIONS、およびPUBLISHが含まれます。 ACK、BYE、CANCELなどの非初期リクエストは、ロードフィルタリングの対象にはなりません。さらに、イベントタイプヘッダーフィールドがこの仕様で定義されているイベントパッケージを示している場合、SUBSCRIBEリクエストはフィルタリングされません。"
    },
    {
      "indent": 3,
      "text": "The following example shows the use of the <method> element in the case the filtering actions should be applied to INVITE requests.",
      "ja": "次の例は、フィルタリングアクションをINVITEリクエストに適用する必要がある場合の<method>要素の使用方法を示しています。"
    },
    {
      "indent": 11,
      "text": "<method>INVITE</method>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.3.3. Target SIP Entity",
      "section_title": true,
      "ja": "5.3.3. ターゲットSIPエンティティ"
    },
    {
      "indent": 3,
      "text": "A SIP server that performs load-filtering may have multiple paths to route call requests matching the same set of call identity elements. In those situations, the SIP load-filtering server may desire to take advantage of alternative paths and only apply load-filtering actions to matching requests for the next-hop SIP entity that originated the corresponding load-filtering policy. To achieve that, the SIP load-filtering server needs to associate every load-filtering policy with its originating SIP entity. The <target-sip-entity> element is defined for that purpose, and it contains the URI of the entity that initiated the load-filtering policy, which is generally the corresponding notifier. A notifier MAY include this element as part of the condition of its filtering policy being sent to the subscriber, as below.",
      "ja": "負荷フィルタリングを実行するSIPサーバーには、同じセットの呼び出しID要素と一致する呼び出し要求をルーティングするための複数のパスがある場合があります。これらの状況では、SIPロードフィルタリングサーバーは、代替パスを利用して、対応するロードフィルタリングポリシーを発信したネクストホップSIPエンティティの一致するリクエストにのみロードフィルタリングアクションを適用することを望む場合があります。これを実現するには、SIPロードフィルタリングサーバーがすべてのロードフィルタリングポリシーを元のSIPエンティティに関連付ける必要があります。 <target-sip-entity>要素はその目的のために定義されており、ロードフィルタリングポリシーを開始したエンティティのURIを含みます。これは通常、対応する通知機能です。通知機能は、以下のように、サブスクライバーに送信されるフィルターポリシーの条件の一部としてこの要素を含めることができます（MAY）。"
    },
    {
      "indent": 3,
      "text": "<target-sip-entity>sip:biloxi.example.com</target-sip-entity>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When a SIP load-filtering server receives a policy with a <target-sip-entity> element, it SHOULD record it and take it into consideration when making load-filtering decisions. If the load-filtering server receives a load-filtering policy that does not contain a <target-sip-entity> element, it MAY still record the URI of the load-filtering policy's originator as the <target-sip-entity> information and consider it when making load-filtering decisions.",
      "ja": "SIPロードフィルタリングサーバーが<target-sip-entity>要素を含むポリシーを受信すると、それを記録し、ロードフィルタリングを決定する際に考慮に入れる必要があります（SHOULD）。ロードフィルタリングサーバーが<target-sip-entity>要素を含まないロードフィルタリングポリシーを受信した場合でも、ロードフィルタリングポリシーの発信者のURIを<target-sip-entity>情報として記録し、ロードフィルタリングを決定する際は、この点を考慮してください。"
    },
    {
      "indent": 6,
      "text": "The following are two examples of using the <target-sip-entity> element.",
      "ja": "次に、<target-sip-entity>要素の使用例を2つ示します。"
    },
    {
      "indent": 0,
      "text": " Use case I: The network has user A connected to SIP Proxy 1 (SP1), user B connected to SIP Proxy 3 (SP3), SP1 and SP3 connected via SIP Proxy 2 (SP2), and SP2 connected to an Application Server (AS). Under normal load conditions, a call from A to B is routed along the following path: A-SP1-SP2-AS-SP3-B. The AS provides a nonessential service and can be bypassed in case of overload. Now let's assume that AS is overloaded and sends to SP2 a load-filtering policy requesting that 50% of all INVITE requests be dropped. SP2 can maintain AS as the <target-sip-entity> for that policy so that it knows the 50% drop action is only applicable to call requests that must go through AS, without affecting those calls directly routed through SP3 to B.",
      "ja": "ユースケースI：ネットワークには、ユーザーAがSIPプロキシ1（SP1）に接続され、ユーザーBがSIPプロキシ3（SP3）に接続され、SP1およびSP3がSIPプロキシ2（SP2）を介して接続され、SP2がアプリケーションサーバー（AS ）。通常の負荷状態では、AからBへのコールは、A-SP1-SP2-AS-SP3-Bのパスに沿ってルーティングされます。 ASは重要でないサービスを提供し、過負荷の場合はバイパスできます。ここで、ASが過負荷で、すべてのINVITE要求の50％を削除するよう要求する負荷フィルタリングポリシーをSP2に送信するとします。 SP2は、ASをそのポリシーの<target-sip-entity>として維持できるため、50％のドロップアクションは、SP3を介してBに直接ルーティングされるコールに影響を与えることなく、ASを経由する必要があるコールリクエストにのみ適用できることがわかります。"
    },
    {
      "indent": 6,
      "text": "Use case II: A translation service for toll-free numbers is installed on two Application Servers, AS1 and AS2. User A is connected to SP1 and calls 800-1234-4529, which is translated by AS1 and AS2 into a regular E.164 number depending on, e.g., the caller's location. SP1 forwards INVITE requests with Request-URI = \"800 number\" to AS1 or AS2 based on a load-balancing strategy. As calls to 800-1234-4529 create a pre-overload condition in AS1, AS1 sends to SP1 a load-filtering policy requesting that 50% of calls towards 800-1234-4529 be rejected. In this case, SP1 can maintain AS1 as the <target-sip-entity> for the rule, and only apply the load-filtering policy on incoming requests that are intended to be sent to AS1. Those requests that are sent to AS2, although matching the <call-identity> of the filter, will not be affected.",
      "ja": "使用例II：フリーダイヤル番号の変換サービスが2つのアプリケーションサーバーAS1とAS2にインストールされています。ユーザーAはSP1に接続され、800-1234-4529を呼び出します。これは、AS1とAS2によって、発信者の場所などに応じて通常のE.164番号に変換されます。 SP1は、負荷分散戦略に基づいて、Request-URI = \"800 number\"のINVITE要求をAS1またはAS2に転送します。 800-1234-4529への呼び出しがAS1で事前過負荷状態を作成すると、AS1はSP1に負荷フィルタリングポリシーを送信し、800-1234-4529への呼び出しの50％を拒否するように要求します。この場合、SP1はAS1をルールの<target-sip-entity>として維持し、AS1に送信されることが意図されている着信要求にのみ負荷フィルタリングポリシーを適用できます。 AS2に送信される要求は、フィルターの<call-identity>に一致しますが、影響を受けません。"
    },
    {
      "indent": 0,
      "text": "5.3.4. Validity",
      "section_title": true,
      "ja": "5.3.4. 有効"
    },
    {
      "indent": 3,
      "text": "A filtering policy is usually associated with a validity period condition. This specification reuses the <validity> element of [RFC4745], which specifies a period of validity time by pairs of <from> and <until> sub-elements. When multiple time periods are defined, the validity condition is evaluated to TRUE if the current time falls into any of the specified time periods. That is, it represents a logical OR operation across all validity time periods.",
      "ja": "フィルタリングポリシーは通常、有効期間の条件に関連付けられています。この仕様は、[RFC4745]の<validity>要素を再利用します。これは、<from>と<until>サブ要素のペアによって有効期間を指定します。複数の期間が定義されている場合、現在の時刻が指定された期間のいずれかに該当すると、妥当性条件はTRUEと評価されます。つまり、すべての有効期間にわたる論理OR演算を表します。"
    },
    {
      "indent": 3,
      "text": "The following example shows a <validity> element specifying a valid period from 12:00 to 15:00 US Eastern Standard Time on 2008-05-31.",
      "ja": "次の例は、2008-05-31の米国東部標準時の12:00から15:00までの有効な期間を指定する<validity>要素を示しています。"
    },
    {
      "indent": 15,
      "text": "<validity>\n    <from>2008-05-31T12:00:00-05:00</from>\n    <until>2008-05-31T15:00:00-05:00</until>\n</validity>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.4. Actions",
      "section_title": true,
      "ja": "5.4. 行動"
    },
    {
      "indent": 0,
      "text": " The actions a load-filtering server takes on loads matching the load-filtering conditions are defined by the <accept> element in the load-filtering policy, which includes any one of the three sub-elements <rate>, <percent>, and <win>. The <rate> element denotes an absolute value of the maximum acceptable request rate in requests per second; the <percent> element specifies the relative percentage of incoming requests that should be accepted; the <win> element describes the acceptable window size supplied by the receiver, which is applicable in window-based load-filtering. In static load-filtering policy configuration scenarios, using the <rate> sub-element is RECOMMENDED because it is hard to enforce the percentage rate or window-based load filtering when incoming load from upstream or reactions from downstream are uncertain. (See [SIP-OVERLOAD] and [RFC6357] for more details on rate-based, loss-based, and window-based load control.)",
      "ja": "負荷フィルタリングサーバーが負荷フィルタリング条件に一致する負荷に対して実行するアクションは、3つのサブ要素<rate>、<percent>、および<勝利>。 <rate>要素は、1秒あたりのリクエスト数の最大許容リクエストレートの絶対値を示します。 <percent>要素は、受け入れる必要がある着信要求の相対的な割合を指定します。 <win>要素は、ウィンドウベースの負荷フィルタリングに適用可能な、レシーバーによって提供される許容可能なウィンドウサイズを示します。静的負荷フィルタリングポリシー構成シナリオでは、上流からの受信負荷または下流からの反応が不確かな場合に、割合率またはウィンドウベースの負荷フィルタリングを実施することが難しいため、<rate>サブ要素の使用が推奨されます。 （レートベース、損失ベース、およびウィンドウベースの負荷制御の詳細については、[SIP-OVERLOAD]および[RFC6357]を参照してください。）"
    },
    {
      "indent": 3,
      "text": "In addition, the <accept> element takes an optional \"alt-action\" attribute that can be used to explicitly specify the desired action in case a request cannot be processed. The \"alt-action\" can take one of the following three values: \"reject\", \"redirect\", or \"drop\".",
      "ja": "さらに、<accept>要素はオプションの「alt-action」属性を取り、リクエストを処理できない場合に目的のアクションを明示的に指定するために使用できます。 「alt-action」は、「reject」、「redirect」、または「drop」の3つの値のいずれかを取ります。"
    },
    {
      "indent": 3,
      "text": "o The \"reject\" action is the default value for \"alt-action\". It means that the load-filtering server will reject the request with a 503 \"Service Unavailable\" response message.",
      "ja": "o 「拒否」アクションは、「alt-action」のデフォルト値です。これは、負荷フィルタリングサーバーが503 \"Service Unavailable\"応答メッセージで要求を拒否することを意味します。"
    },
    {
      "indent": 3,
      "text": "o The \"redirect\" action means redirecting the request to another target. When it is used, an \"alt-target\" attribute MUST be defined. The \"alt-target\" specifies one URI or a list of URIs where the request should be redirected. The server sends out the redirect URIs in a 300-class response message.",
      "ja": "o 「リダイレクト」アクションは、リクエストを別のターゲットにリダイレクトすることを意味します。使用する場合は、「alt-target」属性を定義する必要があります。 「alt-target」は、リクエストがリダイレクトされる1つのURIまたはURIのリストを指定します。サーバーは、300クラスの応答メッセージでリダイレクトURIを送信します。"
    },
    {
      "indent": 3,
      "text": "o The \"drop\" action means simply ignoring the request without doing anything, which can, in certain cases, help save processing capability during overload. For example, when SIP is running over a reliable transport such as TCP, the \"drop\" action does not send out the rejection response, neither does it close the transport connection. However, when running SIP over an unreliable transport such as UDP, using the \"drop\" action will create message retransmissions that further worsen the possible overload situation. Therefore, any \"drop\" action applied to an unreliable transport MUST be treated as if it were \"reject\".",
      "ja": "o 「ドロップ」アクションとは、何もせずに要求を単に無視することを意味します。これにより、特定の場合に、過負荷時の処理能力の節約に役立ちます。たとえば、SIPがTCPなどの信頼できるトランスポート上で実行されている場合、「ドロップ」アクションは拒否応答を送信せず、トランスポート接続を閉じません。ただし、UDPなどの信頼性の低いトランスポートでSIPを実行している場合、「ドロップ」アクションを使用すると、メッセージの再送信が発生し、過負荷の状況がさらに悪化します。したがって、信頼できないトランスポートに適用される「ドロップ」アクションは、「拒否」されたかのように扱われなければなりません（MUST）。"
    },
    {
      "indent": 3,
      "text": "The above \"alt-action\" processing can also be illustrated through the following pseudocode.",
      "ja": "上記の「alt-action」処理は、次の疑似コードでも説明できます。"
    },
    {
      "indent": 11,
      "text": "SWITCH \"alt-action\"\n  \"redirect\": \"redirect\"\n  \"drop\":\n    IF unreliable-transport\n      THEN treat as \"reject\"\n    ELSE\n      \"drop\"\n  \"reject\": \"reject\"\n  default: \"reject\"\nEND",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In the following <actions> element example, the server accepts maximum of 100 call requests per second. The remaining calls are redirected to an answering machine.",
      "ja": "次の<actions>要素の例では、サーバーは1秒あたり最大100件の呼び出し要求を受け入れます。残りの通話は留守番電話にリダイレクトされます。"
    },
    {
      "indent": 11,
      "text": "<actions>\n    <accept alt-action=\"redirect\" alt-target=\n            \"sip:answer-machine@example.com\">\n        <rate>100</rate>\n    </accept>\n</actions>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6. XML Schema Definition for Load Control",
      "section_title": true,
      "ja": "6. ロードコントロールのXMLスキーマ定義"
    },
    {
      "indent": 3,
      "text": "This section defines the XML schema for the load-control document. It extends the Common Policy schema in [RFC4745] in two ways. Firstly, it defines two mandatory attributes for the <ruleset> element: \"version\" and \"state\". The \"version\" attribute allows the recipient of the notification to properly order them. Versions start at zero and increase by one for each new document sent to a subscriber within the same subscription. Versions MUST be representable using a non-negative 32-bit integer. The \"state\" attribute indicates whether the document contains a full load-filtering policy update or only state delta as partial update. Secondly, it defines new members of the <conditions> and <actions> elements.",
      "ja": "このセクションでは、負荷制御ドキュメントのXMLスキーマを定義します。 [RFC4745]のCommon Policyスキーマを2つの方法で拡張します。まず、<ruleset>要素の「version」と「state」の2つの必須属性を定義します。 「バージョン」属性により、通知の受信者はそれらを適切に順序付けることができます。バージョンはゼロから始まり、同じサブスクリプション内のサブスクライバーに送信される新しいドキュメントごとに1ずつ増加します。バージョンは、負でない32ビット整数を使用して表現可能でなければなりません。 「状態」属性は、ドキュメントに完全なロードフィルタリングポリシーの更新が含まれているか、部分的な更新として状態デルタのみが含まれているかを示します。次に、<conditions>要素と<actions>要素の新しいメンバーを定義します。"
    },
    {
      "indent": 3,
      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema targetNamespace=\"urn:ietf:params:xml:ns:load-control\"\n    xmlns:lc=\"urn:ietf:params:xml:ns:load-control\"\n    xmlns:cp=\"urn:ietf:params:xml:ns:common-policy\"\n    xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n    elementFormDefault=\"qualified\"\n    attributedFormDefault=\"unqualified\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<xs:import namespace=\"urn:ietf:params:xml:ns:common-policy\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!-- RULESET -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<xs:element name=\"ruleset\">\n  <xs:complexType>\n    <xs:complexContent>\n      <xs:restriction base=\"xs:anyType\">\n        <xs:sequence>\n          <xs:element name=\"rule\" type=\"cp:ruleType\"\n          minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n        </xs:sequence>\n      </xs:restriction>\n    </xs:complexContent>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "    <xs:attribute name=\"version\" type=\"xs:integer\" use=\"required\"/>\n    <xs:attribute name=\"state\" use=\"required\">\n      <xs:simpleType>\n        <xs:restriction base=\"xs:string\">\n          <xs:enumeration value=\"full\"/>\n          <xs:enumeration value=\"partial\"/>\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n  </xs:complexType>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!-- CONDITIONS -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!-- CALL IDENTITY -->\n<xs:element name=\"call-identity\" type=\"lc:call-identity-type\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!-- CALL IDENTITY TYPE -->\n<xs:complexType name=\"call-identity-type\">\n  <xs:choice>\n    <xs:element name=\"sip\" type=\"lc:sip-id-type\"/>\n    <any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\"\n    maxOccurs=\"unbounded\"/>\n  </xs:choice>\n  <anyAtrribute namespace=\"##other\" processContents=\"lax\"/>\n</xs:complexType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!-- SIP ID TYPE -->\n<xs:complexType name=\"sip-id-type\">\n  <xs:sequence>\n    <element name=\"from\" type=\"lc:identityType\" minOccurs=\"0\"/>\n    <element name=\"to\" type=\"lc:identityType\" minOccurs=\"0\"/>\n    <element name=\"request-uri\" type=\"lc:identityType\"\n    minOccurs=\"0\"/>\n    <element name=\"p-asserted-identity\" type=\"lc:identityType\"\n    minOccurs=\"0\"/>\n    <any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\"\n    maxOccurs=\"unbounded\"/>\n  </xs:sequence>\n  <anyAtrribute namespace=\"##other\" processContents=\"lax\"/>\n</xs:complexType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!-- IDENTITY TYPE -->\n<xs:complexType name=\"identityType\">\n  <xs:complexContent>\n    <xs:restriction base=\"xs:anyType\">\n      <xs:choice minOccurs=\"1\" maxOccurs=\"unbounded\">\n        <xs:element name=\"one\" type=\"cp:oneType\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "        <xs:element name=\"many\" type=\"lc:manyType\"/>\n        <xs:element name=\"many-tel\" type=\"lc:manyTelType\"/>\n        <xs:any namespace=\"##other\" processContents=\"lax\"/>\n      </xs:choice>\n    </xs:restriction>\n  </xs:complexContent>\n</xs:complexType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!-- MANY-TEL TYPE -->\n<xs:complexType name=\"manyTelType\">\n  <xs:complexContent>\n    <xs:restriction base=\"xs:anyType\">\n      <xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">\n        <xs:element name=\"except-tel\" type=\"lc:exceptTelType\"/>\n        <xs:any namespace=\"##other\"\n        minOccurs=\"0\" processContents=\"lax\"/>\n      </xs:choice>\n      <xs:attribute name=\"prefix\"\n      use=\"optional\" type=\"xs:string\"/>\n    </xs:restriction>\n  </xs:complexContent>\n</xs:complexType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!-- EXCEPT-TEL TYPE -->\n<xs:complexType name=\"exceptTelType\">\n  <xs:attribute name=\"prefix\" type=\"xs:string\" use=\"optional\"/>\n  <xs:attribute name=\"id\" type=\"xs:anyURI\" use=\"optional\"/>\n</xs:complexType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!-- METHOD -->\n<xs:element name=\"method\" type=\"lc:method-type\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!-- METHOD TYPE -->\n<xs:simpleType name=\"method-type\">\n  <xs:restriction base=\"xs:string\">\n    <xs:enumeration value=\"INVITE\"/>\n    <xs:enumeration value=\"MESSAGE\"/>\n    <xs:enumeration value=\"REGISTER\"/>\n    <xs:enumeration value=\"SUBSCRIBE\"/>\n    <xs:enumeration value=\"OPTIONS\"/>\n    <xs:enumeration value=\"PUBLISH\"/>\n  </xs:restriction>\n</xs:simpleType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!-- TARGET SIP ENTITY -->\n<xs:element name=\"target-sip-entity\" type=\"xs:anyURI\" minOccurs=\"0\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!-- ACTIONS -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<xs:element name=\"accept\">\n  <xs:choice>\n    <element name=\"rate\" type=\"xs:decimal\" minOccurs=\"0\"/>\n    <element name=\"win\" type=\"xs:integer\" minOccurs=\"0\"/>\n    <element name=\"percent\" type=\"xs:decimal\" minOccurs=\"0\"/>\n    <any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\"\n    maxOccurs=\"unbounded\"/>\n  </xs:choice>\n  <xs:attribute name=\"alt-action\" type=\"xs:string\" default=\"reject\"/>\n  <xs:attribute name=\"alt-target\" type=\"lc:alt-target-type\"\n  use=\"optional\"/>\n  <anyAtrribute namespace=\"##other\" processContents=\"lax\"/>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<!-- ALT TARGET TYPE -->\n<xs:simpleType name=\"alt-target-type\">\n  <xs:list itemType=\"xs:anyURI\"/>\n</xs:simpleType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "Two primary security considerations arise from this specification. One is the distribution mechanism for the load filtering policy that is based on the SIP event notification framework, and the other is the enforcement mechanism for the load-filtering policy.",
      "ja": "この仕様には、2つの主要なセキュリティ上の考慮事項があります。 1つはSIPイベント通知フレームワークに基づく負荷フィルタリングポリシーの配布メカニズムであり、もう1つは負荷フィルタリングポリシーの実施メカニズムです。"
    },
    {
      "indent": 3,
      "text": "Security considerations for SIP event package mechanisms are covered in Section 6 of [RFC6665]. A particularly relevant security concern for this event package is that if the notifiers can be spoofed, attackers can send fake notifications asking subscribers to throttle all traffic, leading to denial-of-service (DoS) attacks. Therefore, this SIP load-filtering mechanism MUST be used in a Trust Domain (Section 3.4). But if a legitimate notifier in the Trust Domain is itself compromised, additional mechanisms will be needed to detect the attack.",
      "ja": "SIPイベントパッケージメカニズムのセキュリティに関する考慮事項は、[RFC6665]のセクション6で説明されています。このイベントパッケージに特に関連するセキュリティ上の懸念は、通知機能が偽造される可能性がある場合、攻撃者が偽の通知を送信してサブスクライバーにすべてのトラフィックを抑制するように要求し、サービス拒否（DoS）攻撃を引き起こす可能性があることです。したがって、このSIP負荷フィルタリングメカニズムは、信頼ドメインで使用する必要があります（セクション3.4）。ただし、信頼ドメインの正当な通知者自体が危険にさらされている場合、攻撃を検出するために追加のメカニズムが必要になります。"
    },
    {
      "indent": 3,
      "text": "Security considerations for load-filtering policy enforcement depends very much on the contents of the policy. This specification defines a possible match of the following SIP header fields in a load-filtering policy: <from>, <to>, <request-uri>, and <p-asserted-identity>. The exact requirement to authenticate and authorize these fields is up to the service provider. In general, if the identity field represents the source of the request, it SHOULD be authenticated and authorized; if the identity field represents the destination of the request, the authentication and authorization is optional.",
      "ja": "ロードフィルタリングポリシーの適用に関するセキュリティの考慮事項は、ポリシーの内容に大きく依存します。この仕様は、ロードフィルタリングポリシーの次のSIPヘッダーフィールドの可能な一致を定義します：<from>、<to>、<request-uri>、および<p-asserted-identity>。これらのフィールドを認証および承認するための正確な要件は、サービスプロバイダーの責任です。一般に、identityフィールドがリクエストのソースを表す場合、それは認証および承認されるべきです（SHOULD）。 IDフィールドが要求の宛先を表す場合、認証と許可はオプションです。"
    },
    {
      "indent": 3,
      "text": "In addition, the \"redirect\" action (Section 5.4) could facilitate a reflection denial-of-service attack. If a number of SIP proxy servers in a Trust Domain are using UDP and configured to get their policies from a central server. An attacker spoofs the central server's address to send a number of NOTIFY bodies telling the proxy servers to redirect all calls to victim@outside-of-trust-domain.com. The proxy servers then redirect all calls to the victim, who then becomes a victim of Denial of Service attack and becomes inaccessiable from the Internet. To address this type of threat, this specification requires that a Trust Domain agrees on what types of calls can be affected as well as on the destinations to which calls may be redirected, as in Section 3.4.",
      "ja": "さらに、「リダイレクト」アクション（セクション5.4）は、リフレクションサービス拒否攻撃を容易にする可能性があります。信頼ドメイン内のいくつかのSIPプロキシサーバーがUDPを使用しており、中央サーバーからポリシーを取得するように構成されている場合。攻撃者は中央サーバーのアドレスを偽装して多数のNOTIFY本文を送信し、すべての呼び出しをvictim@outside-of-trust-domain.comにリダイレクトするようにプロキシサーバーに指示します。次に、プロキシサーバーはすべての呼び出しを被害者にリダイレクトします。被害者はサービス拒否攻撃の被害者になり、インターネットからアクセスできなくなります。このタイプの脅威に対処するために、この仕様では、信頼ドメインが、セクション3.4にあるように、どのタイプのコールが影響を受ける可能性があるか、およびコールがリダイレクトされる宛先に同意する必要があります。"
    },
    {
      "indent": 0,
      "text": "8. IANA Considerations",
      "section_title": true,
      "ja": "8. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This specification registers a SIP event package, a new media type, a new XML namespace, and a new XML schema.",
      "ja": "この仕様は、SIPイベントパッケージ、新しいメディアタイプ、新しいXML名前空間、および新しいXMLスキーマを登録します。"
    },
    {
      "indent": 0,
      "text": "8.1. Load-Control Event Package Registration",
      "section_title": true,
      "ja": "8.1. 負荷制御イベントパッケージの登録"
    },
    {
      "indent": 3,
      "text": "This section registers an event package based on the registration procedures defined in [RFC6665].",
      "ja": "このセクションでは、[RFC6665]で定義されている登録手順に基づいてイベントパッケージを登録します。"
    },
    {
      "indent": 3,
      "text": "Package name: load-control",
      "ja": "パッケージ名：load-control"
    },
    {
      "indent": 3,
      "text": "Type: package",
      "ja": "タイプ：パッケージ"
    },
    {
      "indent": 3,
      "text": "Published specification: This specification",
      "ja": "公開された仕様：この仕様"
    },
    {
      "indent": 3,
      "text": "Person to contact: Charles Shen, charles@cs.columbia.edu",
      "ja": "連絡先：Charles Shen、charles @ cs.columbia.edu"
    },
    {
      "indent": 0,
      "text": "8.2. application/load-control+xml Media Type Registration",
      "section_title": true,
      "ja": "8.2. application / load-control + xmlメディアタイプの登録"
    },
    {
      "indent": 3,
      "text": "This section registers a new media type based on the procedures defined in [RFC6838] and guidelines in [RFC3023].",
      "ja": "このセクションでは、[RFC6838]で定義された手順と[RFC3023]のガイドラインに基づいて、新しいメディアタイプを登録します。"
    },
    {
      "indent": 3,
      "text": "Type name: application",
      "ja": "タイプ名：アプリケーション"
    },
    {
      "indent": 3,
      "text": "Subtype name: load-control+xml",
      "ja": "サブタイプ名：load-control + xml"
    },
    {
      "indent": 3,
      "text": "Required parameters: none",
      "ja": "必須パラメーター：なし"
    },
    {
      "indent": 3,
      "text": "Optional parameters: Same as charset parameter of application/xml as specified in [RFC3023].",
      "ja": "オプションのパラメーター：[RFC3023]で指定されているapplication / xmlのcharsetパラメーターと同じです。"
    },
    {
      "indent": 3,
      "text": "Encoding considerations: Same as encoding considerations of application/xml as specified in [RFC3023].",
      "ja": "エンコーディングに関する考慮事項：[RFC3023]で指定されているapplication / xmlのエンコーディングに関する考慮事項と同じです。"
    },
    {
      "indent": 3,
      "text": "Security considerations: See Section 10 of [RFC3023] and Section 7 of this specification.",
      "ja": "セキュリティに関する考慮事項：[RFC3023]のセクション10とこの仕様のセクション7をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Interoperability considerations: none",
      "ja": "相互運用性に関する考慮事項：なし"
    },
    {
      "indent": 3,
      "text": "Published specification: This specification",
      "ja": "公開された仕様：この仕様"
    },
    {
      "indent": 3,
      "text": "Applications that use this media type: Applications that perform load control of SIP entities.",
      "ja": "このメディアタイプを使用するアプリケーション：SIPエンティティの負荷制御を実行するアプリケーション。"
    },
    {
      "indent": 3,
      "text": "Fragment identifier considerations: Same as fragment identifier considerations of application/xml as specified in [RFC3023].",
      "ja": "フラグメント識別子の考慮事項：[RFC3023]で指定されているapplication / xmlのフラグメント識別子の考慮事項と同じです。"
    },
    {
      "indent": 3,
      "text": "Additional Information:",
      "ja": "追加情報："
    },
    {
      "indent": 6,
      "text": "Deprecated alias names for this type: none",
      "ja": "このタイプの非推奨のエイリアス名：なし"
    },
    {
      "indent": 6,
      "text": "Magic Number(s): none",
      "ja": "マジックナンバー：なし"
    },
    {
      "indent": 6,
      "text": "File Extension(s): .xml",
      "ja": "ファイル拡張子：.xml"
    },
    {
      "indent": 6,
      "text": "Macintosh file type code(s): \"TEXT\"",
      "ja": "Macintoshファイルタイプコード：「TEXT」"
    },
    {
      "indent": 3,
      "text": "Person and email address for further information: Charles Shen, charles@cs.columbia.edu",
      "ja": "詳細情報の人とメールアドレス：Charles Shen、charles @ cs.columbia.edu"
    },
    {
      "indent": 3,
      "text": "Intended usage: COMMON",
      "ja": "使用目的：COMMON"
    },
    {
      "indent": 3,
      "text": "Restrictions on usage: none",
      "ja": "使用上の制限：なし"
    },
    {
      "indent": 3,
      "text": "Author: Charles Shen, Henning Schulzrinne, Arata Koike",
      "ja": "あうてょｒ： ちゃｒぇｓ しぇん、 へんいんｇ Ｓちゅｌｚりんえ、 あらた こいけ"
    },
    {
      "indent": 3,
      "text": "Change controller: IESG",
      "ja": "コントローラーの変更：IESG"
    },
    {
      "indent": 3,
      "text": "Provisional registration? (standards tree only): no",
      "ja": "仮登録？ （標準ツリーのみ）：いいえ"
    },
    {
      "indent": 0,
      "text": "8.3. URN Sub-Namespace Registration",
      "section_title": true,
      "ja": "8.3. URNサブ名前空間の登録"
    },
    {
      "indent": 3,
      "text": "This section registers a new XML namespace, as per the guidelines in [RFC3688]",
      "ja": "このセクションは、[RFC3688]のガイドラインに従って、新しいXML名前空間を登録します。"
    },
    {
      "indent": 3,
      "text": "URI: The URI for this namespace is",
      "ja": "URI：この名前空間のURIは"
    },
    {
      "indent": 6,
      "text": "urn:ietf:params:xml:ns:load-control",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": " Registrant Contact: IETF SOC Working Group <sip-overload@ietf.org>, as designated by the IESG <iesg@ietf.org> XML:",
      "ja": "登録者の連絡先：IESG <iesg@ietf.org> XMLで指定されているIETF SOCワーキンググループ<sip-overload@ietf.org>"
    },
    {
      "indent": 3,
      "text": "BEGIN\n<?xml version=\"1.0\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML Basic 1.0//EN\"\n             \"http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <meta http-equiv=\"content-type\"\n    content=\"text/html;charset=iso-8859-1\"/>\n  <title>SIP Load-Control Namespace</title>\n</head>\n<body>\n  <h1>Namespace for SIP Load Control</h1>\n  <h2>urn:ietf:params:xml:ns:load-control</h2>\n  <p>See <a href=\"http://www.rfc-editor.org/rfc/rfc7200.txt\">\n      RFC 7200</a>.</p>\n</body>\n</html>\nEND",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "8.4. Load-Control Schema Registration",
      "section_title": true,
      "ja": "8.4. 負荷制御スキーマ登録"
    },
    {
      "indent": 3,
      "text": "URI: urn:ietf:params:xml:schema:load-control",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Registrant Contact: IETF SOC working group, Charles Shen (charles@cs.columbia.edu).",
      "ja": "登録者の連絡先：IETF SOCワーキンググループ、Charles Shen（charles@cs.columbia.edu）。"
    },
    {
      "indent": 3,
      "text": "XML: the XML schema contained in Section 6 has been registered.",
      "ja": "XML：セクション6に含まれるXMLスキーマが登録されています。"
    },
    {
      "indent": 3,
      "text": "Its first line is",
      "ja": "その最初の行は"
    },
    {
      "indent": 3,
      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "and its last line is",
      "ja": "そして最後の行は"
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9. Acknowledgements",
      "section_title": true,
      "ja": "9. 謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Jari Arkko, Richard Barnes, Stewart Bryant, Gonzalo Camarillo, Bruno Chatras, Benoit Claise, Spencer Dawkins, Martin Dolly, Keith Drage, Ashutosh Dutta, Donald Eastlake, Adrian Farrel, Stephen Farrell, Janet Gunn, Vijay Gurbani, Brian Haberman, Volker Hilt, Geoff Hunt, Carolyn Johnson, Hadriel Kaplan, Paul Kyzivat, Barry Leiba, Pearl Liang, Salvatore Loreto, Timothy Moran, Eric Noel, Parthasarathi R, Pete Resnick, Adam Roach, Dan Romascanu, Shida Schubert, Robert Sparks, Martin Stiemerling, Sean Turner, Phil Williams, and other members of the SOC and SIPPING working groups for many helpful comments. In particular, Bruno Chatras proposed the <method> and <target-sip-entity> condition elements along with many other text improvements. Janet Gunn provided detailed text suggestions including Appendix C. Eric Noel suggested clarification on load-filtering policy distribution initialization process. Shida Schubert made many suggestions such as terminology usage. Phil Williams suggested adding support for delta updates. Ashutosh Dutta gave pointers to Public Switched Telephone Network (PSTN) references. Adam Roach suggested improvements related to RFC 6665 and offered other helpful clarifications. Richard Barnes made many suggestions such as referencing the Trust Domain concept of RFCs 3324 and 3325, the use of a separate element for 'tel' URI grouping, and addressing the \"redirect\" action security threat.",
      "ja": "著者は、Jari Arkko、Richard Barnes、Stewart Bryant、Gonzalo Camarillo、Bruno Chatras、Benoit Claise、Spencer Dawkins、Martin Dolly、Keith Drage、Ashutosh Dutta、Donald Eastlake、Adrian Farrel、Stephen Farrell、Janet Gunn、Vijay Gurbaniに感謝します、ブライアンハーバーマン、フォルカーヒルト、ジェフハント、キャロリンジョンソン、ハドリエルカプラン、ポールキジバット、バリーレイバ、パールリャン、サルヴァトーレロレート、ティモシーモラン、エリックノエル、パルタサラティR、ピートレズニック、アダムローチ、ダンロマスカヌ、シダシューベルト、ロバートSparks、Martin Stiemerling、Sean Turner、Phil Williams、およびSOCとSIPPINGワーキンググループの他のメンバーの多くの役立つコメント。特に、Bruno Chatrasは、<method>および<target-sip-entity>条件要素を、他の多くのテキストの改善とともに提案しました。 Janet Gunnは、付録Cを含む詳細なテキストの提案を提供しました。EricNoelは、負荷フィルタリングポリシー配布の初期化プロセスの説明を提案しました。志田シューベルトは、用語の使い方など、多くの提案をしました。 Phil Williamsは、差分更新のサポートを追加することを提案しました。 Ashutosh Duttaは、公衆交換電話網（PSTN）の参照へのポインタを示しました。 Adam RoachはRFC 6665に関連する改善を提案し、他の役立つ説明を提供しました。 Richard Barnesは、RFC 3324および3325の信頼ドメインの概念の参照、「tel」URIグループ化のための個別の要素の使用、「リダイレクト」アクションのセキュリティ脅威への対処など、多くの提案を行いました。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10. 参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2141] Moats, R., \"URN Syntax\", RFC 2141, May 1997.",
      "ja": "[RFC2141] Moats、R。、「URN Syntax」、RFC 2141、1997年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC3023] Murata, M., St. Laurent, S., and D. Kohn, \"XML Media Types\", RFC 3023, January 2001.",
      "ja": "[RFC3023] Murata、M.、St。Laurent、S。、およびD. Kohn、「XML Media Types」、RFC 3023、2001年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC3261] Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A., Peterson, J., Sparks, R., Handley, M., and E. Schooler, \"SIP: Session Initiation Protocol\", RFC 3261, June 2002.",
      "ja": "[RFC3261] Rosenberg、J.、Schulzrinne、H.、Camarillo、G.、Johnston、A.、Peterson、J.、Sparks、R.、Handley、M。、およびE. Schooler、「SIP：セッション開始プロトコル」 、RFC 3261、2002年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3688] Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688, January 2004.",
      "ja": "[RFC3688] Mealling M。、「The IETF XML Registry」、BCP 81、RFC 3688、2004年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC3966] Schulzrinne, H., \"The tel URI for Telephone Numbers\", RFC 3966, December 2004.",
      "ja": "[RFC3966] Schulzrinne、H。、「電話番号のtel URI」、RFC 3966、2004年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC4745] Schulzrinne, H., Tschofenig, H., Morris, J., Cuellar, J., Polk, J., and J. Rosenberg, \"Common Policy: A Document Format for Expressing Privacy Preferences\", RFC 4745, February 2007.",
      "ja": "[RFC4745] Schulzrinne、H.、Tschofenig、H.、Morris、J.、Cuellar、J.、Polk、J.、J。Rosenberg、「Common Policy：A Document Format for Expressing Privacy Preferences」、RFC 4745、2月2007年"
    },
    {
      "indent": 3,
      "text": "[RFC6665] Roach, A., \"SIP-Specific Event Notification\", RFC 6665, July 2012.",
      "ja": "[RFC6665] Roach、A。、「SIP固有のイベント通知」、RFC 6665、2012年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC6838] Freed, N., Klensin, J., and T. Hansen, \"Media Type Specifications and Registration Procedures\", BCP 13, RFC 6838, January 2013.",
      "ja": "[RFC6838] Freed、N.、Klensin、J。、およびT. Hansen、「メディアタイプの仕様と登録手順」、BCP 13、RFC 6838、2013年1月。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[E.300SerSup3] ITU-T, \"North American Precise Audible Tone Plan\", Recommendation E.300 Series Supplement 3, November 1988.",
      "ja": "[E.300SerSup3] ITU-T、「北米の正確な可聴トーンプラン」、勧告E.300シリーズの補足3、1988年11月。"
    },
    {
      "indent": 3,
      "text": "[E.412] ITU-T, \"Network Management Controls\", Recommendation E.412-2003, January 2003.",
      "ja": "[E.412] ITU-T、「ネットワーク管理制御」、勧告E.412-2003、2003年1月。"
    },
    {
      "indent": 3,
      "text": "[Q.1248.2] ITU-T, \"Interface Recommendation for Intelligent Network Capability Set4:SCF-SSF interface\", Recommendation Q.1248.2, July 2001.",
      "ja": "[Q.1248.2] ITU-T、「インテリジェントネットワーク機能セット4のインターフェイスの推奨事項：SCF-SSFインターフェイス」、推奨事項Q.1248.2、2001年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC2648] Moats, R., \"A URN Namespace for IETF Documents\", RFC 2648, August 1999.",
      "ja": "[RFC2648] Moats、R。、「IETFドキュメントのURN名前空間」、RFC 2648、1999年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC3324] Watson, M., \"Short Term Requirements for Network Asserted Identity\", RFC 3324, November 2002.",
      "ja": "[RFC3324] Watson、M.、「ネットワークアサートされたIDの短期要件」、RFC 3324、2002年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC3325] Jennings, C., Peterson, J., and M. Watson, \"Private Extensions to the Session Initiation Protocol (SIP) for Asserted Identity within Trusted Networks\", RFC 3325, November 2002.",
      "ja": "[RFC3325] Jennings、C.、Peterson、J。、およびM. Watson、「Trusted Networks内のAsserted IdentityのためのSession Initiation Protocol（SIP）のプライベート拡張」、RFC 3325、2002年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC4412] Schulzrinne, H. and J. Polk, \"Communications Resource Priority for the Session Initiation Protocol (SIP)\", RFC 4412, February 2006.",
      "ja": "[RFC4412] Schulzrinne、H.およびJ. Polk、「Communications Resource Priority for the Session Initiation Protocol（SIP）」、RFC 4412、2006年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC4825] Rosenberg, J., \"The Extensible Markup Language (XML) Configuration Access Protocol (XCAP)\", RFC 4825, May 2007.",
      "ja": "[RFC4825] Rosenberg、J。、「Extensible Markup Language（XML）Configuration Access Protocol（XCAP）」、RFC 4825、2007年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC5031] Schulzrinne, H., \"A Uniform Resource Name (URN) for Emergency and Other Well-Known Services\", RFC 5031, January 2008.",
      "ja": "[RFC5031] Schulzrinne、H.、「緊急およびその他の既知のサービスのためのUniform Resource Name（URN）」、RFC 5031、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5390] Rosenberg, J., \"Requirements for Management of Overload in the Session Initiation Protocol\", RFC 5390, December 2008.",
      "ja": "[RFC5390] Rosenberg、J。、「Session Initiation Protocolにおける過負荷の管理の要件」、RFC 5390、2008年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC6357] Hilt, V., Noel, E., Shen, C., and A. Abdelal, \"Design Considerations for Session Initiation Protocol (SIP) Overload Control\", RFC 6357, August 2011.",
      "ja": "[RFC6357] Hilt、V.、Noel、E.、Shen、C。、およびA. Abdelal、「Session Initiation Protocol（SIP）Overload Controlに関する設計上の考慮事項」、RFC 6357、2011年8月。"
    },
    {
      "indent": 3,
      "text": "[SIP-OVERLOAD] Gurbani, V., Ed., Hilt, V., and H. Schulzrinne, \"Session Initiation Protocol (SIP) Overload Control\", Work in Progress, March 2014.",
      "ja": "[SIP-OVERLOAD] Gurbani、V.、Ed。、Hilt、V。、およびH. Schulzrinne、「Session Initiation Protocol（SIP）Overload Control」、Work in Progress、2014年3月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Definitions",
      "section_title": true,
      "ja": "付録A定義"
    },
    {
      "indent": 3,
      "text": "This specification reuses the definitions for \"Event Package\", \"Notification\", \"Notifier\", \"Subscriber\", and \"Subscription\" as in [RFC6665]. The following additional definitions are also used.",
      "ja": "この仕様は、[RFC6665]のように、「イベントパッケージ」、「通知」、「通知」、「サブスクライバー」、および「サブスクリプション」の定義を再利用します。以下の追加の定義も使用されます。"
    },
    {
      "indent": 3,
      "text": "Load Filtering: A load-control mechanism that applies specific actions to selected loads (e.g., SIP requests) matching specific conditions.",
      "ja": "負荷フィルタリング：特定の条件に一致する特定のアクションを、選択した負荷（SIPリクエストなど）に適用する負荷制御メカニズム。"
    },
    {
      "indent": 3,
      "text": "Load-Filtering Policy: A set of zero or more load-filtering rules, also known as load-filtering rule set.",
      "ja": "負荷フィルタリングポリシー：ゼロ以上の負荷フィルタリングルールのセット。負荷フィルタリングルールセットとも呼ばれます。"
    },
    {
      "indent": 3,
      "text": "Load-Filtering Rule: Conditions and actions to be applied for load filtering.",
      "ja": "負荷フィルタリングルール：負荷フィルタリングに適用される条件とアクション。"
    },
    {
      "indent": 3,
      "text": "Load-Filtering Condition: Elements that describe how to select loads to apply load-filtering actions. This specification defines the <call-identity>, <method>, <target-sip-identity>, and <validity> condition elements (Section 5.3).",
      "ja": "負荷フィルタリング条件：負荷フィルタリングアクションを適用する負荷を選択する方法を説明する要素。この仕様では、<call-identity>、<method>、<target-sip-identity>、および<validity>条件要素を定義しています（セクション5.3）。"
    },
    {
      "indent": 3,
      "text": "Load-Filtering Action: An operation to be taken by a load-filtering server on loads that match the load-filtering conditions. This specification allows actions such as accept, reject, and redirect of loads (Section 5.4).",
      "ja": "負荷フィルタリングアクション：負荷フィルタリングサーバーが負荷フィルタリング条件に一致する負荷に対して実行する操作。この仕様では、ロードの受け入れ、拒否、リダイレクトなどのアクションを許可しています（セクション5.4）。"
    },
    {
      "indent": 3,
      "text": "Load-Filtering Server: A server that performs load filtering. In the context of this specification, the load-filtering server is the subscriber, which receives load-filtering policies from the notifier and enforces those policies during load filtering.",
      "ja": "負荷フィルタリングサーバー：負荷フィルタリングを実行するサーバー。この仕様のコンテキストでは、ロードフィルタリングサーバーはサブスクライバであり、通知機能からロードフィルタリングポリシーを受信し、ロードフィルタリング中にそれらのポリシーを適用します。"
    },
    {
      "indent": 3,
      "text": "Load-Control Document: An XML document that describes the load-filtering policies (Section 5). It inherits and enhances the common policy document defined in [RFC4745].",
      "ja": "負荷制御ドキュメント：負荷フィルタリングポリシーを説明するXMLドキュメント（セクション5）。 [RFC4745]で定義されている共通のポリシードキュメントを継承および拡張します。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Design Requirements",
      "section_title": true,
      "ja": "付録B.設計要件"
    },
    {
      "indent": 3,
      "text": "The SIP load-filtering mechanism needs to satisfy the following requirements:",
      "ja": "SIPロードフィルタリングメカニズムは、次の要件を満たす必要があります。"
    },
    {
      "indent": 3,
      "text": "o For simplicity, the solution should focus on a method for controlling SIP load, rather than a generic application-layer mechanism.",
      "ja": "o 簡単にするために、ソリューションは、一般的なアプリケーション層メカニズムではなく、SIP負荷を制御する方法に焦点を当てる必要があります。"
    },
    {
      "indent": 3,
      "text": "o The load-filtering policy needs to be distributed efficiently to possibly a large subset of all SIP elements.",
      "ja": "o 負荷フィルタリングポリシーは、すべてのSIP要素の大きなサブセットに効率的に配布する必要があります。"
    },
    {
      "indent": 3,
      "text": "o The solution should reuse existing SIP protocol mechanisms to reduce implementation and deployment complexity.",
      "ja": "o このソリューションでは、既存のSIPプロトコルメカニズムを再利用して、実装と展開の複雑さを軽減する必要があります。"
    },
    {
      "indent": 3,
      "text": "o For predictable overload situations, such as holidays and mass calling events, the load-filtering policy should specify during what time it is to be applied, so that the information can be distributed ahead of time.",
      "ja": "o 休日や大量の呼び出しイベントなどの予測可能な過負荷状況では、情報を事前に配布できるように、負荷フィルタリングポリシーを適用する時間帯を指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "o For destination-specific overload situations, the load-filtering policy should be able to describe the destination domain or the callee.",
      "ja": "o 宛先固有の過負荷状況では、負荷フィルタリングポリシーで宛先ドメインまたは呼び出し先を記述できる必要があります。"
    },
    {
      "indent": 3,
      "text": "o To address accidental and intentional high-volume call generators, the load-filtering policy should be able to specify the caller.",
      "ja": "o 偶発的および意図的な大量のコールジェネレータに対処するには、ロードフィルタリングポリシーで発信者を指定できる必要があります。"
    },
    {
      "indent": 3,
      "text": "o Caller and callee need to be specified as both SIP URIs and 'tel' URIs [RFC3966] in load-filtering policies.",
      "ja": "o 発信者と着信者は、ロードフィルタリングポリシーでSIP URIと「tel」URI [RFC3966]の両方として指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "o It should be possible to specify particular information in the SIP headers (e.g., prefixes in telephone numbers) that allow load filtering over limited regionally focused overloads.",
      "ja": "o SIPヘッダーで特定の情報（電話番号のプレフィックスなど）を指定して、地域に限定された限定された過負荷に対する負荷フィルタリングを可能にする必要があります。"
    },
    {
      "indent": 3,
      "text": "o The solution should draw upon experiences from related PSTN mechanisms [Q.1248.2] [E.412] [E.300SerSup3] where applicable.",
      "ja": "o ソリューションは、関連するPSTNメカニズム[Q.1248.2] [E.412] [E.300SerSup3]からの経験を適用する必要があります。"
    },
    {
      "indent": 3,
      "text": "o The solution should be extensible to meet future needs.",
      "ja": "o ソリューションは、将来のニーズを満たすために拡張可能である必要があります。"
    },
    {
      "indent": 0,
      "text": "Appendix C. Discussion of How This Specification Meets the Requirements of RFC 5390",
      "ja": "付録C.この仕様がRFC 5390の要件を満たす方法の説明"
    },
    {
      "indent": 3,
      "text": "This section evaluates whether the load-control event package mechanism defined in this specification satisfies various SIP overload control requirements set forth by [RFC5390]. As mentioned in Section 1, this specification complements other efforts in the overall SIP load-control solution space. Therefore, not all RFC 5390 requirements are found applicable to this specification. This specification categorizes the assessment results into Yes (the requirement is met), P/A (Partially Applicable), No (must be used in conjunction with another mechanism to meet the requirement), and N/A (Not Applicable).",
      "ja": "このセクションでは、この仕様で定義されている負荷制御イベントパッケージメカニズムが、[RFC5390]で規定されているさまざまなSIP過負荷制御要件を満たすかどうかを評価します。セクション1で述べたように、この仕様はSIP負荷制御ソリューション全体における他の取り組みを補完します。したがって、すべてのRFC 5390要件がこの仕様に適用できるとは限りません。この仕様は、評価結果をはい（要件が満たされている）、P / A（部分的に適用可能）、いいえ（要件を満たすために別のメカニズムと組み合わせて使用​​する必要があります）、およびN / A（適用外）に分類します。"
    },
    {
      "indent": 6,
      "text": "REQ 1: The overload mechanism shall strive to maintain the overall useful throughput (taking into consideration the quality-of-service needs of the using applications) of a SIP server at reasonable levels, even when the incoming load on the network is far in excess of its capacity. The overall throughput under load is the ultimate measure of the value of an overload control mechanism.",
      "ja": "REQ 1：過負荷メカニズムは、ネットワークへの着信負荷がはるかに大きい場合でも、SIPサーバーの全体的な有効スループット（使用するアプリケーションのサービス品質のニーズを考慮に入れて）を妥当なレベルに維持するように努力します。その容量の。負荷がかかった状態での全体的なスループットは、過負荷制御メカニズムの価値の最終的な尺度です。"
    },
    {
      "indent": 3,
      "text": "P/A. The goal of load filtering is to prevent overload or maintain overall goodput during the time of overload, but it is dependent on the predictions of the load and the computations as well as distribution of the filtering policies. If the load predictions or filtering policy computations are incorrect, or the filtering policy is not properly distributed, the mechanism will be less effective. On the other hand, if the load can be accurately predicted and filtering policies be computed and distributed appropriately, this requirement can be met.",
      "ja": "P / A。負荷フィルタリングの目的は、過負荷を防止するか、過負荷時に全体的なグッドプットを維持することですが、それは、負荷の予測と計算、およびフィルタリングポリシーの分散に依存しています。負荷予測またはフィルタリングポリシーの計算が正しくない場合、またはフィルタリングポリシーが適切に分散されていない場合、メカニズムの効果は低くなります。一方、負荷を正確に予測でき、フィルタリングポリシーを適切に計算して分散できる場合は、この要件を満たすことができます。"
    },
    {
      "indent": 6,
      "text": "REQ 2: When a single network element fails, goes into overload, or suffers from reduced processing capacity, the mechanism should strive to limit the impact of this on other elements in the network. This helps to prevent a small-scale failure from becoming a widespread outage.",
      "ja": "REQ 2：単一のネットワーク要素に障害が発生したり、過負荷になったり、処理能力が低下したりする場合、メカニズムは、ネットワーク内の他の要素への影響を制限するよう努めるべきです。これは、小規模な障害が広範囲にわたる停止になるのを防ぐのに役立ちます。"
    },
    {
      "indent": 3,
      "text": "N/A if load-filtering policies are installed in advance and do not change during the potential overload period, P/A if load-filtering policies are dynamically adjusted. The algorithm to dynamically compute load-filtering policies is outside the scope of this specification, while the distribution of the updated filtering policies uses the event package mechanism of this specification.",
      "ja": "事前にロードフィルタリングポリシーがインストールされていて、潜在的な過負荷期間中に変更されない場合はN / A、ロードフィルタリングポリシーが動的に調整される場合はP / A。負荷フィルタリングポリシーを動的に計算するアルゴリズムはこの仕様の範囲外ですが、更新されたフィルタリングポリシーの配布では、この仕様のイベントパッケージメカニズムを使用します。"
    },
    {
      "indent": 6,
      "text": "REQ 3: The mechanism should seek to minimize the amount of configuration required in order to work. For example, it is better to avoid needing to configure a server with its SIP message throughput, as these kinds of quantities are hard to determine.",
      "ja": "REQ 3：メカニズムは、機能するために必要な構成の量を最小限に抑えるよう努めるべきです。たとえば、SIPメッセージのスループットを使用してサーバーを構成する必要がないようにすることをお勧めします。これらの種類の量を決定することは難しいためです。"
    },
    {
      "indent": 3,
      "text": "No. This mechanism is entirely dependent on advance configuration, based on advance knowledge. In order to satisfy REQ 3, it should be used in conjunction with other mechanisms that are not based on advance configuration.",
      "ja": "いいえ。このメカニズムは、事前の知識に基づいて、事前の構成に完全に依存しています。 REQ 3を満たすには、事前設定に基づいていない他のメカニズムと組み合わせて使用​​する必要があります。"
    },
    {
      "indent": 6,
      "text": "REQ 4: The mechanism must be capable of dealing with elements that do not support it, so that a network can consist of a mix of elements that do and don't support it. In other words, the mechanism should not work only in environments where all elements support it. It is reasonable to assume that it works better in such environments, of course. Ideally, there should be incremental improvements in overall network throughput as increasing numbers of elements in the network support the mechanism.",
      "ja": "REQ 4：メカニズムは、ネットワークがそれをサポートする要素とサポートしない要素の組み合わせで構成できるように、それをサポートしない要素を処理できる必要があります。つまり、このメカニズムは、すべての要素がそれをサポートする環境でのみ機能するべきではありません。もちろん、そのような環境でうまく機能すると想定するのは当然です。理想的には、ネットワーク内の要素の数が増えるとメカニズムがサポートされるため、ネットワーク全体のスループットが徐々に向上するはずです。"
    },
    {
      "indent": 3,
      "text": "No. This mechanism is entirely dependent on the participation of all possible neighbors. In order to satisfy REQ 4, it should be used in conjunction with other mechanisms, some of which are described in Section 3.4.",
      "ja": "いいえ。このメカニズムは、考えられるすべての近隣者の参加に完全に依存しています。 REQ 4を満たすためには、他のメカニズムと組み合わせて使用​​する必要があります。そのいくつかは、セクション3.4で説明されています。"
    },
    {
      "indent": 6,
      "text": "REQ 5: The mechanism should not assume that it will only be deployed in environments with completely trusted elements. It should seek to operate as effectively as possible in environments where other elements are malicious; this includes preventing malicious elements from obtaining more than a fair share of service.",
      "ja": "REQ 5：メカニズムは、完全に信頼された要素を持つ環境でのみ展開されると想定すべきではありません。他の要素が悪意のある環境でできるだけ効果的に動作するように努める必要があります。これには、悪意のある要素が公平なサービス以上のものを取得するのを防ぐことが含まれます。"
    },
    {
      "indent": 3,
      "text": "No. This mechanism is entirely dependent on the non-malicious participation of all possible neighbors. In order to satisfy REQ 5, it should be used in conjunction with other mechanisms, some of which are described in Section 3.4.",
      "ja": "いいえ。このメカニズムは、考えられるすべての近隣者の悪意のない参加に完全に依存しています。 REQ 5を満たすには、他のメカニズムと組み合わせて使用​​する必要があります。そのメカニズムのいくつかについては、セクション3.4で説明しています。"
    },
    {
      "indent": 6,
      "text": "REQ 6: When overload is signaled by means of a specific message, the message must clearly indicate that it is being sent because of overload, as opposed to other, non overload-based failure conditions. This requirement is meant to avoid some of the problems that have arisen from the reuse of the 503 response code for multiple purposes. Of course, overload is also signaled by lack of response to requests. This requirement applies only to explicit overload signals.",
      "ja": "REQ 6：特定のメッセージによって過負荷が通知された場合、メッセージは、他の非過負荷ベースの障害状態とは対照的に、過負荷が原因で送信されていることを明確に示す必要があります。この要件は、503応答コードを複数の目的で再利用することで発生した問題の一部を回避するためのものです。もちろん、過負荷は要求に対する応答がないことによっても示されます。この要件は、明示的な過負荷信号にのみ適用されます。"
    },
    {
      "indent": 3,
      "text": "N/A. This mechanism signals anticipated overload, not actual overload. However, the signals in this mechanism are not used for any other purpose.",
      "ja": "なし。このメカニズムは、実際の過負荷ではなく、予想される過負荷を通知します。ただし、このメカニズムの信号は他の目的には使用されません。"
    },
    {
      "indent": 6,
      "text": "REQ 7: The mechanism shall provide a way for an element to throttle the amount of traffic it receives from an upstream element. This throttling shall be graded so that it is not all-or-nothing as with the current 503 mechanism. This recognizes the fact that \"overload\" is not a binary state and that there are degrees of overload.",
      "ja": "REQ 7：メカニズムは、要素が上流の要素から受信するトラフィックの量を抑制する方法を提供するものとします。このスロットリングは、現在の503メカニズムのようにオールオアナッシングではないように段階付けされます。これは、「過負荷」がバイナリ状態ではなく、ある程度の過負荷があることを認識しています。"
    },
    {
      "indent": 3,
      "text": "Yes. This event package allows rate-/loss-/window-based overload control options as discussed in Section 5.4.",
      "ja": "はい。このイベントパッケージでは、セクション5.4で説明するように、レート/損失/ウィンドウベースの過負荷制御オプションを使用できます。"
    },
    {
      "indent": 6,
      "text": "REQ 8: The mechanism shall ensure that, when a request was not processed successfully due to overload (or failure) of a downstream element, the request will not be retried on another element that is also overloaded or whose status is unknown. This requirement derives from REQ 1.",
      "ja": "REQ 8：メカニズムは、ダウンストリーム要素の過負荷（または障害）により要求が正常に処理されなかった場合に、過負荷状態またはステータスが不明な別の要素で要求が再試行されないようにします。この要件はREQ 1から派生しています。"
    },
    {
      "indent": 3,
      "text": "N/A to the load-control event package mechanism itself.",
      "ja": "負荷制御イベントパッケージメカニズム自体には該当しません。"
    },
    {
      "indent": 6,
      "text": "REQ 9: That a request has been rejected from an overloaded element shall not unduly restrict the ability of that request to be submitted to and processed by an element that is not overloaded. This requirement derives from REQ 1.",
      "ja": "REQ 9：オーバーロードされた要素からのリクエストが拒否されたことは、そのリクエストがオーバーロードされていない要素に送信されて処理される能力を過度に制限してはなりません。この要件はREQ 1から派生しています。"
    },
    {
      "indent": 3,
      "text": "Yes. For example, load-filtering policy (Section 3.1) can include alternative forwarding destinations for rejected requests.",
      "ja": "はい。たとえば、負荷フィルタリングポリシー（セクション3.1）には、拒否された要求の代替転送先を含めることができます。"
    },
    {
      "indent": 6,
      "text": "REQ 10: The mechanism should support servers that receive requests from a large number of different upstream elements, where the set of upstream elements is not enumerable.",
      "ja": "REQ 10：このメカニズムは、一連の上流要素を列挙できない、多数の異なる上流要素から要求を受信するサーバーをサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "No. Because this mechanism requires advance configuration of specifically identified neighbors, it does not support environments where the number and identity of the upstream neighbors are not known in advance. In order to satisfy REQ 10, it should be used in conjunction with other mechanisms.",
      "ja": "いいえ。このメカニズムでは、特定されたネイバーの事前設定が必要なため、上流のネイバーの数とIDが事前にわからない環境はサポートされていません。 REQ 10を満たすには、他のメカニズムと組み合わせて使用​​する必要があります。"
    },
    {
      "indent": 6,
      "text": "REQ 11: The mechanism should support servers that receive requests from a finite set of upstream elements, where the set of upstream elements is enumerable.",
      "ja": "REQ 11：このメカニズムは、上流要素のセットが列挙可能な有限の上流要素のセットから要求を受信するサーバーをサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "Yes. See also answer to REQ 10.",
      "ja": "はい。 REQ 10への回答も参照してください。"
    },
    {
      "indent": 6,
      "text": "REQ 12: The mechanism should work between servers in different domains.",
      "ja": "REQ 12：このメカニズムは、異なるドメインのサーバー間で機能する必要があります。"
    },
    {
      "indent": 3,
      "text": "Yes. The load-control event package mechanism is not limited by domain boundaries. However, it is likely more applicable in intra-domain scenarios than in inter-domain scenarios due to security and other concerns (see also Section 3.4).",
      "ja": "はい。負荷制御イベントパッケージメカニズムは、ドメイン境界によって制限されません。ただし、セキュリティやその他の問題があるため、ドメイン内のシナリオよりもドメイン内のシナリオの方が適切です（セクション3.4も参照）。"
    },
    {
      "indent": 6,
      "text": "REQ 13: The mechanism must not dictate a specific algorithm for prioritizing the processing of work within a proxy during times of overload. It must permit a proxy to prioritize requests based on any local policy, so that certain ones (such as a call for emergency services or a call with a specific value of the Resource-Priority header field [RFC4412]) are given preferential treatment, such as not being dropped, being given additional retransmission, or being processed ahead of others.",
      "ja": "REQ 13：メカニズムは、過負荷時のプロキシ内の処理の優先順位付けのために特定のアルゴリズムを指示してはなりません。プロキシがローカルポリシーに基づいて要求に優先順位を付けることを許可する必要があるため、特定の要求（緊急サービスの呼び出しまたはResource-Priorityヘッダーフィールド[RFC4412]の特定の値を持つ呼び出しなど）が優先的に処理されます。ドロップされない、追加の再送信が与えられる、または他より先に処理される。"
    },
    {
      "indent": 3,
      "text": "P/A. This mechanism does not specifically address the prioritizing of work during times of overload. But it does not preclude any particular local policy.",
      "ja": "P / A。このメカニズムは、過負荷時の作業の優先順位付けには特に対処していません。ただし、特定のローカルポリシーを排除するものではありません。"
    },
    {
      "indent": 6,
      "text": "REQ 14: The mechanism should provide unambiguous directions to clients on when they should retry a request and when they should not. This especially applies to TCP connection establishment and SIP registrations, in order to mitigate against avalanche restart.",
      "ja": "REQ 14：メカニズムは、要求を再試行する必要がある場合と再試行しない場合について、クライアントに明確な指示を提供する必要があります。これは、雪崩の再起動を軽減するために、特にTCP接続の確立とSIP登録に適用されます。"
    },
    {
      "indent": 3,
      "text": "N/A to the load-control event package mechanism itself.",
      "ja": "負荷制御イベントパッケージメカニズム自体には該当しません。"
    },
    {
      "indent": 6,
      "text": "REQ 15: In cases where a network element fails, is so overloaded that it cannot process messages, or cannot communicate due to a network failure or network partition, it will not be able to provide explicit indications of the nature of the failure or its levels of congestion. The mechanism must properly function in these cases.",
      "ja": "REQ 15：ネットワーク要素に障害が発生したり、負荷が高すぎてメッセージを処理できなかったり、ネットワーク障害やネットワークパーティションが原因で通信できない場合、障害の性質やそのレベルを明示的に示すことができません。混雑の。メカニズムは、これらの場合に適切に機能する必要があります。"
    },
    {
      "indent": 3,
      "text": "P/A. Because the load-filtering policies are provisioned in advance, they are not affected by the overload or failure of other network elements. On the other hand, they may not, in those cases, be able to protect the overloaded network elements (see REQ 1).",
      "ja": "P / A。負荷フィルタリングポリシーは事前にプロビジョニングされているため、他のネットワーク要素の過負荷や障害の影響を受けません。一方、これらのケースでは、過負荷のネットワーク要素を保護できない場合があります（REQ 1を参照）。"
    },
    {
      "indent": 6,
      "text": "REQ 16: The mechanism should attempt to minimize the overhead of the overload control messaging.",
      "ja": "REQ 16：メカニズムは、過負荷制御メッセージングのオーバーヘッドを最小化しようとする必要があります。"
    },
    {
      "indent": 3,
      "text": "Yes. The standardized SIP event package mechanism [RFC6665] is used.",
      "ja": "はい。標準化されたSIPイベントパッケージメカニズム[RFC6665]が使用されます。"
    },
    {
      "indent": 6,
      "text": "REQ 17: The overload mechanism must not provide an avenue for malicious attack, including DoS and DDoS attacks.",
      "ja": "REQ 17：過負荷メカニズムは、DoS攻撃やDDoS攻撃を含む悪意のある攻撃の手段を提供してはなりません。"
    },
    {
      "indent": 3,
      "text": "P/A. This mechanism does provide a potential avenue for malicious attacks. Therefore, the security mechanisms for SIP event packages, in general, [RFC6665] and Section 7 of this specification should be used.",
      "ja": "P / A。このメカニズムは、悪意のある攻撃に対する潜在的な手段を提供します。したがって、SIPイベントパッケージのセキュリティメカニズムは、一般に[RFC6665]とこの仕様のセクション7を使用する必要があります。"
    },
    {
      "indent": 6,
      "text": "REQ 18: The overload mechanism should be unambiguous about whether a load indication applies to a specific IP address, host, or URI, so that an upstream element can determine the load of the entity to which a request is to be sent.",
      "ja": "REQ 18：過負荷メカニズムは、負荷表示が特定のIPアドレス、ホスト、またはURIに適用されるかどうかについて明確でなければなりません。これにより、上流要素は、要求の送信先となるエンティティの負荷を判別できます。"
    },
    {
      "indent": 3,
      "text": "Yes. The identity of load indication is covered in the load-filtering policy format definition in Section 3.1.",
      "ja": "はい。負荷表示の識別は、セクション3.1の負荷フィルタリングポリシー形式の定義で説明されています。"
    },
    {
      "indent": 6,
      "text": "REQ 19: The specification for the overload mechanism should give guidance on which message types might be desirable to process over others during times of overload, based on SIP-specific considerations. For example, it may be more beneficial to process a SUBSCRIBE refresh with Expires of zero than a SUBSCRIBE refresh with a non-zero expiration (since the former reduces the overall amount of load on the element), or to process re-INVITEs over new INVITEs.",
      "ja": "REQ 19：過負荷メカニズムの仕様は、SIP固有の考慮事項に基づいて、過負荷時に他のメッセージタイプよりも処理が望ましいメッセージタイプに関するガイダンスを提供する必要があります。たとえば、有効期限がゼロでないSUBSCRIBEリフレッシュよりも有効期限がゼロのSUBSCRIBEリフレッシュを処理する方が（前者が要素の全体的な負荷量を減らすため）、または新しい招待。"
    },
    {
      "indent": 3,
      "text": "N/A to the load-control event package mechanism itself.",
      "ja": "負荷制御イベントパッケージメカニズム自体には該当しません。"
    },
    {
      "indent": 6,
      "text": "REQ 20: In a mixed environment of elements that do and do not implement the overload mechanism, no disproportionate benefit shall accrue to the users or operators of the elements that do not implement the mechanism.",
      "ja": "REQ 20：過負荷メカニズムを実装する要素と実装しない要素が混在する環境では、メカニズムを実装しない要素のユーザーまたはオペレーターに不相応な利益が発生することはありません。"
    },
    {
      "indent": 3,
      "text": "No. This mechanism is entirely dependent on the participation of all possible neighbors. In order to satisfy REQ 20, it should be used in conjunction with other mechanisms, some of which are described in Section 3.4.",
      "ja": "いいえ。このメカニズムは、考えられるすべての近隣者の参加に完全に依存しています。 REQ 20を満たすには、他のメカニズムと組み合わせて使用​​する必要があります。そのメカニズムのいくつかについては、セクション3.4で説明しています。"
    },
    {
      "indent": 6,
      "text": "REQ 21: The overload mechanism should ensure that the system remains stable. When the offered load drops from above the overall capacity of the network to below the overall capacity, the throughput should stabilize and become equal to the offered load.",
      "ja": "REQ 21：過負荷メカニズムは、システムが安定したままであることを保証する必要があります。提供された負荷がネットワークの全体的な容量を超えてから全体的な容量を下回ると、スループットは安定し、提供された負荷と等しくなります。"
    },
    {
      "indent": 3,
      "text": "N/A to the load-control event package mechanism itself.",
      "ja": "負荷制御イベントパッケージメカニズム自体には該当しません。"
    },
    {
      "indent": 6,
      "text": "REQ 22: It must be possible to disable the reporting of load information towards upstream targets based on the identity of those targets. This allows a domain administrator who considers the load of their elements to be sensitive information, to restrict access to that information. Of course, in such cases, there is no expectation that the overload mechanism itself will help prevent overload from that upstream target.",
      "ja": "REQ 22：それらのターゲットのIDに基づいて、上流ターゲットへの負荷情報のレポートを無効にすることが可能でなければなりません。これにより、要素の負荷を機密情報と見なすドメイン管理者は、その情報へのアクセスを制限できます。もちろん、そのような場合、オーバーロードメカニズム自体がその上流ターゲットからのオーバーロードを防止するのに役立つとは期待されていません。"
    },
    {
      "indent": 3,
      "text": "N/A to the load-control event package mechanism itself.",
      "ja": "負荷制御イベントパッケージメカニズム自体には該当しません。"
    },
    {
      "indent": 6,
      "text": "REQ 23: It must be possible for the overload mechanism to work in cases where there is a load balancer in front of a farm of proxies.",
      "ja": "REQ 23：プロキシのファームの前にロードバランサーがある場合、過負荷メカニズムが機能することが可能でなければなりません。"
    },
    {
      "indent": 3,
      "text": "Yes. The load-control event package mechanism does not preclude its use in a scenario with server farms.",
      "ja": "はい。負荷制御イベントパッケージメカニズムは、サーバーファームでのシナリオでの使用を妨げません。"
    },
    {
      "indent": 0,
      "text": "Appendix D. Complete Examples",
      "section_title": true,
      "ja": "付録D.完全な例"
    },
    {
      "indent": 0,
      "text": "D.1. Load-Control Document Examples",
      "section_title": true,
      "ja": "D.1. 負荷制御ドキュメントの例"
    },
    {
      "indent": 3,
      "text": "This section presents two complete examples of load-control documents valid with respect to the XML schema defined in Section 6.",
      "ja": "このセクションでは、セクション6で定義されたXMLスキーマに関して有効なロード制御ドキュメントの2つの完全な例を示します。"
    },
    {
      "indent": 3,
      "text": "The first example assumes that a set of hotlines are set up at \"sip:alice@hotline.example.com\" and \"tel:+1-212-555-1234\". The hotlines are activated from 12:00 to 15:00 US Eastern Standard Time on 2008-05-31. The goal is to limit the incoming calls to the hotlines to 100 requests per second. Calls that exceed the rate limit are explicitly rejected.",
      "ja": "最初の例では、一連のホットラインが「sip：alice@hotline.example.com」と「tel：+ 1-212-555-1234」に設定されていると想定しています。ホットラインは、2008年5月31日の米国東部標準時の12:00から15:00まで有効です。目標は、ホットラインへの着信を1秒あたり100リクエストに制限することです。レート制限を超える通話は明示的に拒否されます。"
    },
    {
      "indent": 3,
      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ruleset xmlns=\"urn:ietf:params:xml:ns:common-policy\"\n            xmlns:lc=\"urn:ietf:params:xml:ns:load-control\"\n            version=\"0\" state=\"full\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "<rule id=\"f3g44k1\">\n    <conditions>\n        <lc:call-identity>\n            <lc:sip>\n                <lc:to>\n                    <one id=\"sip:alice@hotline.example.com\"/>\n                    <one id=\"tel:+1-212-555-1234\"/>\n                </lc:to>\n            </lc:sip>\n        </lc:call-identity>\n        <method>INVITE</method>\n        <validity>\n            <from>2008-05-31T12:00:00-05:00</from>\n            <until>2008-05-31T15:00:00-05:00</until>\n        </validity>\n    </conditions>\n    <actions>\n        <lc:accept alt-action=\"reject\">\n            <lc:rate>100</lc:rate>\n        </lc:accept>\n    </actions>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "    </rule>\n</ruleset>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The second example optimizes the usage of server resources during the three-day period following a hurricane. Incoming calls to the domain \"sandy.example.com\" or to call destinations with prefix \"+1-212\" will be limited to a rate of 100 requests per second, except for those calls originating from a particular rescue team domain \"rescue.example.com\". Outgoing calls from the hurricane domain or calls within the local domain are never limited. All calls that are throttled due to the rate limit will be forwarded to an answering machine with updated hurricane rescue information.",
      "ja": "2番目の例は、ハリケーン後の3日間のサーバーリソースの使用を最適化します。ドメイン「sandy.example.com」またはプレフィックス「+ 1-212」の宛​​先への着信呼び出しは、特定のレスキューチームドメイン「rescue」から発信された呼び出しを除き、1秒あたり100リクエストのレートに制限されます。 example.com」。ハリケーンドメインからの発信コールまたはローカルドメイン内のコールが制限されることはありません。レート制限が原因で抑制されたすべての通話は、ハリケーンレスキュー情報が更新された留守番電話に転送されます。"
    },
    {
      "indent": 3,
      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ruleset xmlns=\"urn:ietf:params:xml:ns:common-policy\"\n    xmlns:lc=\"urn:ietf:params:xml:ns:load-control\"\n    version=\"1\" state=\"full\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "<rule id=\"f3g44k2\">\n    <conditions>\n        <lc:call-identity>\n            <lc:sip>\n                <lc:to>\n                    <many domain=\"sandy.example.com\"/>\n                    <many-tel prefix=\"+1-212\"/>\n                </lc:to>\n                <lc:from>\n                    <many>\n                        <except domain=\"sandy.example.com\"/>\n                        <except domain=\"rescue.example.com\"/>\n                    </many>\n                </lc:from>\n            </lc:sip>\n        </lc:call-identity>\n        <method>INVITE</method>\n        <validity>\n            <from>2012-10-25T09:00:00+01:00</from>\n            <until>2012-10-28T09:00:00+01:00</until>\n        </validity>\n    </conditions>\n    <actions>\n        <lc:accept alt-action=\"redirect\" alt-target=\n                \"sip:sandy@update.example.com\">\n            <lc:rate>100</lc:rate>\n        </lc:accept>\n    </actions>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "    </rule>\n</ruleset>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Sometimes it may occur that multiple rules in a ruleset define actions that match the same methods, call identity and validity. In those cases, the \"first-match-wins\" principle is used. For example, in the following ruleset, the first rule requires all calls from the \"example.com\" domain to be rejected. Even though the rule following that one specifies that calls from \"sip:alice@example.com\" be redirected to a specific target \"sip:eve@example.com\", the calls from \"sip:alice@example.com\" will still be rejected because they have already been matched by the earlier rule.",
      "ja": "ルールセットの複数のルールが同じメソッドに一致するアクションを定義し、IDと有効性を呼び出すことが発生する場合があります。そのような場合、「最初に一致したもの」の原則が使用されます。たとえば、次のルールセットの最初のルールでは、「example.com」ドメインからのすべての呼び出しを拒否する必要があります。次のルールでは、「sip：alice@example.com」からの呼び出しが特定のターゲット「sip：eve@example.com」にリダイレクトされることを指定していますが、「sip：alice@example.com」からの呼び出しは引き続き以前のルールで既に一致しているため、拒否されます。"
    },
    {
      "indent": 3,
      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ruleset xmlns=\"urn:ietf:params:xml:ns:common-policy\"\n    xmlns:lc=\"urn:ietf:params:xml:ns:load-control\"\n    version=\"1\" state=\"full\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "<rule id=\"f3g44k3\">\n    <conditions>\n        <lc:call-identity>\n            <lc:sip>\n                <lc:from>\n                    <many domain=\"example.com\"/>\n                </lc:from>\n            </lc:sip>\n        </lc:call-identity>\n        <method>INVITE</method>\n        <validity>\n            <from>2013-7-2T09:00:00+01:00</from>\n            <until>2013-7-3T09:00:00+01:00</until>\n        </validity>\n    </conditions>\n    <actions>\n        <lc:accept alt-action=\"reject\">\n            <lc:rate>0</lc:rate>\n        </lc:accept>\n    </actions>\n</rule>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "<rule id=\"f3g44k4\">\n    <conditions>\n        <lc:call-identity>\n            <lc:sip>\n                <lc:from>\n                    <one id=\"sip:alice@example.com\"/>\n                </lc:from>\n            </lc:sip>\n        </lc:call-identity>\n        <method>INVITE</method>\n        <validity>\n            <from>2013-7-2T09:00:00+01:00</from>\n            <until>2013-7-3T09:00:00+01:00</until>\n        </validity>\n    </conditions>\n    <actions>\n        <lc:accept alt-action=\"redirect\" alt-target=\n                \"sip:eve@example.com\">\n            <lc:rate>0</lc:rate>\n        </lc:accept>\n    </actions>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "    </rule>\n</ruleset>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "D.2. Message Flow Examples",
      "section_title": true,
      "ja": "D.2. メッセージフローの例"
    },
    {
      "indent": 3,
      "text": "This section presents an example message flow of using the load-control event package mechanism defined in this specification.",
      "ja": "このセクションでは、この仕様で定義されているロード制御イベントパッケージメカニズムを使用したメッセージフローの例を示します。"
    },
    {
      "indent": 6,
      "text": "atlanta             biloxi\n   | F1 SUBSCRIBE      |\n   |------------------>|\n   | F2 200 OK         |\n   |<------------------|\n   | F3 NOTIFY         |\n   |<------------------|\n   | F4 200 OK         |\n   |------------------>|",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "F1 SUBSCRIBE atlanta.example.com -> biloxi.example.com",
      "ja": "F1 SUBSCRIBE atlanta.example.com-> biloxi.example.com"
    },
    {
      "indent": 9,
      "text": "SUBSCRIBE sip:biloxi.example.com SIP/2.0\nVia: SIP/2.0/TCP atlanta.example.com;branch=z9hG4bKy7cjbu3\nFrom: sip:atlanta.example.com;tag=162ab5\nTo: sip:biloxi.example.com\nCall-ID: 2xTb9vxSit55XU7p8@atlanta.example.com\nCSeq: 2012 SUBSCRIBE\nContact: sip:atlanta.example.com\nEvent: load-control\nMax-Forwards: 70\nAccept: application/load-control+xml\nExpires: 3600\nContent-Length: 0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "F2 200 OK biloxi.example.com -> atlanta.example.com",
      "ja": "F2 200 OK biloxi.example.com-> atlanta.example.com"
    },
    {
      "indent": 9,
      "text": "SIP/2.0 200 OK\nVia: SIP/2.0/TCP biloxi.example.com;branch=z9hG4bKy7cjbu3\n  ;received=192.0.2.1\nTo: <sip:biloxi.example.com>;tag=331dc8\nFrom: <sip:atlanta.example.com>;tag=162ab5\nCall-ID: 2xTb9vxSit55XU7p8@atlanta.example.com\nCSeq: 2012 SUBSCRIBE\nExpires: 3600\nContact: sip:biloxi.example.com\nContent-Length: 0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "F3 NOTIFY biloxi.example.com -> atlanta.example.com",
      "ja": "F3 NOTIFY biloxi.example.com-> atlanta.example.com"
    },
    {
      "indent": 9,
      "text": "NOTIFY sip:atlanta.example.com SIP/2.0 Via: SIP/2.0/TCP biloxi.example.com;branch=z9hG4bKy71g2ks From: <sip:biloxi.example.com>;tag=331dc8 To: <sip:atlanta.example.com>;tag=162ab5 Call-ID: 2xTb9vxSit55XU7p8@atlanta.example.com Event: load-control Subscription-State: active;expires=3599 Max-Forwards: 70 CSeq: 1775 NOTIFY Contact: sip:biloxi.example.com Content-Type: application/load-control+xml Content-Length: ...",
      "ja": "NOTIFY sip：atlanta.example.com SIP / 2.0 Via：SIP / 2.0 / TCP biloxi.example.com; branch = z9hG4bKy71g2ks From：<sip：biloxi.example.com>; tag = 331dc8 To：<sip：atlanta.example .com>; tag = 162ab5 Call-ID：2xTb9vxSit55XU7p8@atlanta.example.com Event：load-control Subscription-State：active; expires = 3599 Max-Forwards：70 CSeq：1775 NOTIFY Contact：sip：biloxi.example.com Content-Type：application / load-control + xml Content-Length：..."
    },
    {
      "indent": 9,
      "text": "[Load-Control Document]",
      "ja": "[負荷制御ドキュメント]"
    },
    {
      "indent": 6,
      "text": "F4 200 OK atlanta.example.com -> biloxi.example.com",
      "ja": "F4 200 OK atlanta.example.com-> biloxi.example.com"
    },
    {
      "indent": 9,
      "text": "SIP/2.0 200 OK\nVia: SIP/2.0/TCP atlanta.example.com;branch=z9hG4bKy71g2ks\n  ;received=192.0.2.2\nFrom: <sip:biloxi.example.com>;tag=331dc8\nTo: <sip:atlanta.example.com>;tag=162ab5\nCall-ID: 2xTb9vxSit55XU7p8@atlanta.example.com\nCSeq: 1775 NOTIFY\nContent-Length: 0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix E. Related Work",
      "section_title": true,
      "ja": "付録E.関連作業"
    },
    {
      "indent": 0,
      "text": "E.1. Relationship to Load Filtering in PSTN",
      "section_title": true,
      "ja": "E.1. PSTNの負荷フィルタリングとの関係"
    },
    {
      "indent": 3,
      "text": "It is known that an existing PSTN network also uses a load-filtering mechanism to prevent overload and the filtering policy configuration is done manually except in specific cases when the Intelligent Network architecture is used [Q.1248.2][E.412]. This specification defines a load-filtering mechanism based on the SIP event notification framework that allows automated filtering policy distribution in suitable environments.",
      "ja": "既存のPSTNネットワークも負荷フィルタリングメカニズムを使用して過負荷を防止し、インテリジェントネットワークアーキテクチャが使用される特定の場合を除いて、フィルタリングポリシーの設定は手動で行われることが知られています[Q.1248.2] [E.412]。この仕様は、適切な環境での自動化されたフィルタリングポリシー配布を可能にするSIPイベント通知フレームワークに基づく負荷フィルタリングメカニズムを定義します。"
    },
    {
      "indent": 3,
      "text": "PSTN overload control uses messages that specify an outgoing control list, call gap duration, and control duration [Q.1248.2][E.412]. These items correspond roughly to the identity, action, and time fields of the SIP load-filtering policy defined in this specification. However, the load-filtering policy defined in this specification is much more generic and flexible as opposed to its PSTN counterpart.",
      "ja": "PSTN過負荷制御は、発信制御リスト、コールギャップ期間、および制御期間を指定するメッセージを使用します[Q.1248.2] [E.412]。これらの項目は、この仕様で定義されているSIPロードフィルタリングポリシーのID、アクション、および時間フィールドにほぼ対応しています。ただし、この仕様で定義されている負荷フィルタリングポリシーは、PSTNの対応するポリシーとは対照的に、はるかに汎用的で柔軟です。"
    },
    {
      "indent": 3,
      "text": "Firstly, PSTN load filtering only applies to telephone numbers. The identity element of SIP load-filtering policy allows both SIP URI and telephone numbers (through 'tel' URI) to be specified. These identities can be arbitrarily grouped by SIP domains or any number of leading prefixes of the telephone numbers.",
      "ja": "まず、PSTN負荷フィルタリングは電話番号にのみ適用されます。 SIPロードフィルタリングポリシーのID要素では、SIP URIと（「tel」URIを介した）電話番号の両方を指定できます。これらのIDは、SIPドメインまたは電話番号の先頭の任意の数のプレフィックスによって任意にグループ化できます。"
    },
    {
      "indent": 3,
      "text": "Secondly, the PSTN load-filtering action is usually limited to call gapping. The action field in SIP load-filtering policy allows more flexible possibilities such as rate throttle and others.",
      "ja": "次に、PSTNロードフィルタリングアクションは通常、コールギャッピングに制限されます。 SIPロードフィルタリングポリシーのアクションフィールドにより、レートスロットルなどのより柔軟な可能性が可能になります。"
    },
    {
      "indent": 3,
      "text": "Thirdly, the duration field in PSTN load filtering specifies a value in seconds for the load-filtering duration only, and the allowed values are mapped into a value set. The time field in SIP load-filtering policy may specify not only a duration, but also a future activation time that could be especially useful for automating load filtering for predictable overloads.",
      "ja": "3番目に、PSTN負荷フィルタリングの期間フィールドは、負荷フィルタリング期間のみの秒単位の値を指定し、許可された値は値セットにマップされます。 SIPロードフィルタリングポリシーの時間フィールドには、期間だけでなく、予測可能な過負荷のロードフィルタリングを自動化するのに特に役立つ将来のアクティブ化時間も指定できます。"
    },
    {
      "indent": 3,
      "text": "PSTN load filtering can be performed in both edge switches and transit switches; the SIP load filtering can also be applied in both edge proxy servers and core proxy servers, and even in capable user agents.",
      "ja": "PSTNロードフィルタリングは、エッジスイッチとトランジットスイッチの両方で実行できます。 SIP負荷フィルタリングは、エッジプロキシサーバーとコアプロキシサーバーの両方、および対応するユーザーエージェントにも適用できます。"
    },
    {
      "indent": 3,
      "text": "PSTN load filtering also has special accommodation for High Probability of Completion (HPC) calls, which would be similar to calls designated by the SIP Resource Priority Headers [RFC4412]. The SIP load-filtering mechanism also allows prioritizing the treatment of these calls by specifying favorable actions for them.",
      "ja": "PSTNロードフィルタリングには、SIPリソースプライオリティヘッダー[RFC4412]で指定されたコールと同様の、完了の可能性が高い（HPC）コール用の特別な調整機能もあります。 SIPロードフィルタリングメカニズムでは、適切なアクションを指定することにより、これらのコールの処理に優先順位を付けることもできます。"
    },
    {
      "indent": 3,
      "text": "PSTN load filtering also provides an administrative option for routing failed call attempts to either a reorder tone [E.300SerSup3] indicating overload conditions or a special recorded announcement. A similar capability can be provided in the SIP load-filtering mechanism by specifying appropriate \"alt-action\" attribute in the SIP load-filtering action field.",
      "ja": "PSTNロードフィルタリングは、過負荷状態を示すリオーダートーン[E.300SerSup3]または特別に記録されたアナウンスのいずれかに失敗したコール試行をルーティングするための管理オプションも提供します。同様の機能をSIPロードフィルタリングメカニズムで提供するには、SIPロードフィルタリングアクションフィールドに適切な「alt-action」属性を指定します。"
    },
    {
      "indent": 0,
      "text": "E.2. Relationship with Other IETF SIP Overload Control Efforts",
      "section_title": true,
      "ja": "E.2. 他のIETF SIPオーバーロード制御の取り組みとの関係"
    },
    {
      "indent": 3,
      "text": "The load-filtering policies in this specification consist of identity, action, and time. The identity can range from a single specific user to an arbitrary user aggregate, domains, or areas. The user can be identified by either the source or the destination. When the user is identified by the source and a favorable action is specified, the result is, to some extent, similar to identifying a priority user based on authorized Resource Priority Headers [RFC4412] in the requests. Specifying a source user identity with an unfavorable action would cause an effect to some extent similar to an inverse SIP resource priority mechanism.",
      "ja": "この仕様の負荷フィルタリングポリシーは、ID、アクション、および時間で構成されています。 IDは、単一の特定のユーザーから任意のユーザーの集合体、ドメイン、またはエリアまでさまざまです。ユーザーは、ソースまたは宛先のいずれかで識別できます。ユーザーがソースによって識別され、好ましいアクションが指定されている場合、結果は、要求内の承認されたリソース優先度ヘッダー[RFC4412]に基づいて優先ユーザーを識別することとある程度似ています。不適切なアクションでソースユーザーIDを指定すると、逆SIPリソースプライオリティメカニズムと同様の効果がある程度発生します。"
    },
    {
      "indent": 3,
      "text": "The load-filtering policy defined in this specification is generic and expected to be applicable not only to the load-filtering mechanism but also to the feedback overload control mechanism in [SIP-OVERLOAD]. In particular, both mechanisms could use specific or wildcard identities for load control and could share well-known load-control actions. The time duration field in the load-filtering policy could also be used in both mechanisms. As mentioned in Section 1, the load-filtering policy distribution mechanism and the feedback overload control mechanism address complementary areas in the overload control problem space. Load filtering is more proactive and focuses on distributing filtering policies towards the source of the traffic; the hop-by-hop feedback-based approach is reactive and reduces traffic already accepted by the network. Therefore, they could also make different use of the generic load-filtering policy components. For example, the load-filtering mechanism may use the time field in the filtering policy to specify not only a control duration but also a future activation time to accommodate a predicable overload such as the one caused by Mother's Day greetings or a viewer-voting program; the feedback-based control might not need to use the time field or might use the time field to specify an immediate load-control duration.",
      "ja": "この仕様で定義されている負荷フィルタリングポリシーは一般的であり、負荷フィルタリングメカニズムだけでなく、[SIP-OVERLOAD]のフィードバック過負荷制御メカニズムにも適用できると予想されます。特に、どちらのメカニズムでも、負荷制御に特定のIDまたはワイルドカードIDを使用でき、既知の負荷制御アクションを共有できます。ロードフィルタリングポリシーの期間フィールドも、両方のメカニズムで使用できます。セクション1で述べたように、負荷フィルタリングポリシー配布メカニズムとフィードバック過負荷制御メカニズムは、過負荷制御問題空間の補完的な領域に対処します。ロードフィルタリングはより積極的で、トラフィックのソースに向けてフィルタリングポリシーを配布することに重点を置いています。ホップバイホップのフィードバックベースのアプローチは事後対応型であり、ネットワークですでに受け入れられているトラフィックを削減します。したがって、一般的な負荷フィルタリングポリシーコンポーネントを別の方法で使用することもできます。たとえば、負荷フィルタリングメカニズムは、フィルタリングポリシーの時間フィールドを使用して、制御期間だけでなく、母の日の挨拶や視聴者投票プログラムによって引き起こされるものなどの予測可能な過負荷に対応する将来のアクティブ化時間も指定できます。 ;フィードバックベースの制御では、時間フィールドを使用する必要がない場合や、時間フィールドを使用して即時の負荷制御期間を指定する場合があります。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Charles Shen Columbia University Department of Computer Science 1214 Amsterdam Avenue, MC 0401 New York, NY 10027 USA",
      "ja": "チャールズシェンコロンビア大学コンピュータサイエンス学科1214アムステルダムアベニュー、MC 0401ニューヨーク、NY 10027アメリカ"
    },
    {
      "indent": 3,
      "text": "Phone: +1 212 854 3109\nEMail: charles@cs.columbia.edu",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Henning Schulzrinne Columbia University Department of Computer Science 1214 Amsterdam Avenue, MC 0401 New York, NY 10027 USA",
      "ja": "ヘニングシュルズリンネコロンビア大学コンピュータサイエンス学科1214アムステルダムアベニュー、MC 0401ニューヨーク、NY 10027アメリカ"
    },
    {
      "indent": 3,
      "text": "Phone: +1 212 939 7004\nEMail: schulzrinne@cs.columbia.edu",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Arata Koike NTT Network Technology Labs 3-9-11 Midori-cho Musashino-shi Tokyo 180-8585 Japan",
      "ja": "あらた こいけ んっｔ ねとぉｒｋ てｃｈのぉｇｙ ぁｂｓ ３ー９ー１１ みどりーちょ むさしのーし ときょ １８０ー８５８５ じゃぱん"
    },
    {
      "indent": 3,
      "text": "Phone: +81 422 59 6099\nEMail: koike.arata@lab.ntt.co.jp",
      "raw": true,
      "ja": ""
    }
  ]
}