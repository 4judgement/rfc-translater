{
  "title": {
    "text": "RFC 7547 - Management of Networks with Constrained Devices: Problem Statement and Requirements",
    "ja": "RFC 7547 - 制約のあるデバイスを使用したネットワークの管理：問題の説明と要件"
  },
  "number": 7547,
  "created_at": "2020-08-30 15:50:44.351206+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                     M. Ersue, Ed.\nRequest for Comments: 7547                                Nokia Networks\nCategory: Informational                                     D. Romascanu\nISSN: 2070-1721                                                    Avaya\n                                                        J. Schoenwaelder\n                                                Jacobs University Bremen\n                                                              U. Herberg\n                                                                May 2015",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Management of Networks with Constrained Devices: Problem Statement and Requirements",
      "ja": "制約のあるデバイスを使用したネットワークの管理：問題の説明と要件"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document provides a problem statement, deployment and management topology options, as well as requirements addressing the different use cases of the management of networks where constrained devices are involved.",
      "ja": "このドキュメントでは、問題の説明、展開と管理のトポロジオプション、および制約されたデバイスが関与するネットワーク管理のさまざまな使用例に対応する要件について説明します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントはInternet Standards Trackの仕様ではありません。情報提供を目的として公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。 IESGによって承認されたすべてのドキュメントが、あらゆるレベルのインターネット標準の候補になるわけではありません。 RFC 5741のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7547.",
      "ja": "このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、http：//www.rfc-editor.org/info/rfc7547で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2015 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（http://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Overview ...................................................3\n   1.2. Terminology ................................................4\n   1.3. Network Types and Characteristics in Focus .................5\n   1.4. Constrained Device Deployment Options ......................9\n   1.5. Management Topology Options ...............................10\n   1.6. Managing the Constrainedness of a Device or Network .......10\n   1.7. Configuration and Monitoring Functionality Levels .........13\n2. Problem Statement ..............................................14\n3. Requirements on the Management of Networks with\n   Constrained Devices ............................................16\n   3.1. Management Architecture/System ............................18\n   3.2. Management Protocols and Data Models ......................22\n   3.3. Configuration Management ..................................25\n   3.4. Monitoring Functionality ..................................27\n   3.5. Self-Management ...........................................32\n   3.6. Security and Access Control ...............................33\n   3.7. Energy Management .........................................35\n   3.8. Software Distribution .....................................37\n   3.9. Traffic Management ........................................37\n   3.10. Transport Layer ..........................................39\n   3.11. Implementation Requirements ..............................40\n4. Security Considerations ........................................41\n5. Informative References .........................................42\nAcknowledgments ...................................................44\nAuthors' Addresses ................................................44",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 0,
      "text": "1.1. Overview",
      "section_title": true,
      "ja": "1.1. 概観"
    },
    {
      "indent": 3,
      "text": "Constrained devices (also known as sensors, smart objects, or smart devices) with limited CPU, memory, and power resources can be connected to a network. It might be based on unreliable or lossy channels, it may use wireless technologies with limited bandwidth and a dynamic topology, or it may need the service of a gateway or proxy to connect to the Internet. In other scenarios, the constrained devices can be connected to a unconstrained network using off-the-shelf protocol stacks.",
      "ja": "CPU、メモリ、および電源リソースが制限された制約付きデバイス（センサー、スマートオブジェクト、スマートデバイスとも呼ばれます）をネットワークに接続できます。信頼性の低いチャネルや損失の多いチャネルに基づいている場合や、帯域幅が制限された動的なトポロジや動的なトポロジを使用している場合や、インターネットに接続するためにゲートウェイまたはプロキシのサービスが必要な場合があります。他のシナリオでは、制約のあるデバイスは、既製のプロトコルスタックを使用して制約のないネットワークに接続できます。"
    },
    {
      "indent": 3,
      "text": "Constrained devices might be in charge of gathering information in diverse settings including natural ecosystems, buildings, and factories and sending the information to one or more server stations. Constrained devices may also work under severe resource constraints such as limited battery and computing power, little memory and insufficient wireless bandwidth, and communication capabilities. A central entity, e.g., a base station or controlling server, might have more computational and communication resources and can act as a gateway between the constrained devices and the application logic in the core network.",
      "ja": "制約されたデバイスは、自然の生態系、建物、工場などのさまざまな設定で情報を収集し、その情報を1つ以上のサーバーステーションに送信する役割を果たします。制約のあるデバイスは、バッテリとコンピューティング能力の制限、メモリの不足、ワイヤレス帯域幅の不足、通信機能などの厳しいリソース制約の下でも機能する場合があります。基地局や制御サーバーなどの中央エンティティは、より多くの計算リソースと通信リソースを備えている可能性があり、制約されたデバイスとコアネットワーク内のアプリケーションロジック間のゲートウェイとして機能できます。"
    },
    {
      "indent": 3,
      "text": "Today, constrained devices of diverse size and with different resources and capabilities are being connected. Mobile personal gadgets, building-automation devices, cellular phones, machine-to-machine (M2M) devices, etc., benefit from interacting with other \"things\" in the near or somewhere in the Internet. With this the Internet of Things (IoT) becomes a reality, built up of uniquely identifiable objects (things). And over the next decade, this could grow to trillions of constrained devices and will greatly increase the Internet's size and scope.",
      "ja": "今日、さまざまなサイズの制約されたデバイスがさまざまなリソースと機能で接続されています。モバイルパーソナルガジェット、ビルディングオートメーションデバイス、携帯電話、M2M（M2M）デバイスなどは、インターネットの近くまたはどこかで他の「もの」とやり取りすることで恩恵を受けます。これにより、モノのインターネット（IoT）は、一意に識別可能なオブジェクト（モノ）で構築された現実になります。そして、今後10年間で、これは数兆の制約のあるデバイスに成長し、インターネットのサイズと範囲が大幅に拡大するでしょう。"
    },
    {
      "indent": 0,
      "text": " Network management is characterized by monitoring network status, detecting faults (and inferring their causes), setting network parameters, and carrying out actions to remove faults, maintain normal operation, and improve network efficiency and application performance. The traditional network monitoring application periodically collects information from a set of managed network elements, it processes the data, and it presents the results to the network management users. Constrained devices, however, often have limited power, have low transmission range, and might be unreliable. They might also need to work in hostile environments with advanced security requirements or need to be used in harsh environments for a long time without supervision. Due to such constraints, the management of a network with constrained devices faces a different type of challenges compared to the management of a traditional IP network.",
      "ja": "ネットワーク管理の特徴は、ネットワークステータスの監視、障害の検出（およびその原因の推定）、ネットワークパラメータの設定、および障害の削除、通常の運用の維持、ネットワーク効率とアプリケーションパフォーマンスの向上のためのアクションの実行です。従来のネットワーク監視アプリケーションは、一連の管理対象ネットワーク要素から定期的に情報を収集し、データを処理して、ネットワーク管理ユーザーに結果を提示します。ただし、制約のあるデバイスは、電力が限られていることが多く、伝送範囲が狭く、信頼性に欠ける場合があります。また、高度なセキュリティ要件が設定された厳しい環境で動作する必要がある場合や、監視なしで過酷な環境で長期間使用する必要がある場合もあります。このような制約があるため、デバイスが制約されたネットワークの管理は、従来のIPネットワークの管理とは異なるタイプの課題に直面します。"
    },
    {
      "indent": 3,
      "text": "The IETF has already done substantial standardization work to enable communication in IP networks and to manage such networks as well as the manifold types of nodes in these networks [RFC6632]. However, the IETF so far has not developed any specific technologies for the management of constrained devices and the networks comprised by constrained devices. IP-based sensors or constrained devices in such an environment (i.e., devices with very limited memory, CPU, and energy resources) nowadays use application-layer protocols in an ad hoc manner to do simple resource management and monitoring.",
      "ja": "IETFは、IPネットワークでの通信を可能にし、そのようなネットワークとこれらのネットワークのノードの多様なタイプを管理するために、かなりの標準化作業をすでに行っています[RFC6632]。ただし、これまでのところIETFは、制約付きデバイスと制約付きデバイスによって構成されるネットワークを管理するための特定のテクノロジーを開発していません。このような環境でのIPベースのセンサーまたは制約されたデバイス（つまり、メモリ、CPU、エネルギーリソースが非常に限られているデバイス）は、今日、アプリケーションレイヤープロトコルをアドホックな方法で使用して、単純なリソース管理とモニタリングを行っています。"
    },
    {
      "indent": 3,
      "text": "This document provides a problem statement and lists requirements for the different use cases of management of a network with constrained devices. Sections 1.3 and 1.5 describe different topology options for the networking and management of constrained devices. Section 2 provides a problem statement on the issue of the management of networked constrained devices. Section 3 lists requirements on the management of applications and networks with constrained devices. Note that the requirements listed in Section 3 have been separated from the context in which they may appear. Depending on the concrete circumstances, an implementer may decide to address a certain relevant subset of the requirements.",
      "ja": "このドキュメントでは、問題の説明を提供し、デバイスが制約されたネットワークの管理のさまざまなユースケースの要件を示します。セクション1.3と1.5では、制約付きデバイスのネットワークと管理のためのさまざまなトポロジオプションについて説明します。セクション2は、ネットワーク化された制約付きデバイスの管理の問題に関する問題の説明です。セクション3では、デバイスの制約があるアプリケーションとネットワークの管理に関する要件を示します。セクション3にリストされている要件は、それらが表示されるコンテキストから分離されていることに注意してください。具体的な状況に応じて、実装者は要件の特定の関連サブセットに対処することを決定する場合があります。"
    },
    {
      "indent": 3,
      "text": "The use cases in the context of networks with constrained devices can be found in [RFC7548]. This document provides a list of objectives for discussions and does not aim to be a strict requirements document for all use cases. In fact, there likely is not a single solution that works equally well for all the use cases.",
      "ja": "制約のあるデバイスを使用したネットワークのコンテキストでの使用例は、[RFC7548]にあります。このドキュメントは、ディスカッションの目的のリストを提供するものであり、すべてのユースケースの厳密な要件ドキュメントになることを目的としたものではありません。実際、すべてのユースケースで同じように機能する単一のソリューションはおそらくありません。"
    },
    {
      "indent": 0,
      "text": "1.2. Terminology",
      "section_title": true,
      "ja": "1.2. 用語"
    },
    {
      "indent": 3,
      "text": "Concerning constrained devices and networks, this document generally builds on the terminology defined in [RFC7228], where the terms \"constrained device\", \"constrained network\", and others are defined.",
      "ja": "制約されたデバイスとネットワークに関して、このドキュメントは一般に「制約されたデバイス」、「制約されたネットワーク」などの用語が定義されている[RFC7228]で定義された用語に基づいています。"
    },
    {
      "indent": 3,
      "text": "Additionally, the following terms are used throughout:",
      "ja": "さらに、次の用語が全体を通して使用されます。"
    },
    {
      "indent": 3,
      "text": "AMI: (Advanced Metering Infrastructure) A system including hardware, software, and networking technologies that measures, collects, and analyzes energy use and that communicates with a hierarchically deployed network of metering devices, either on request or on a schedule.",
      "ja": "AMI：（Advanced Metering Infrastructure）ハードウェア、ソフトウェア、およびネットワーク技術を含むシステムで、エネルギー使用量を測定、収集、分析し、要求に応じて、またはスケジュールに従って、階層的に配置された計測デバイスのネットワークと通信します。"
    },
    {
      "indent": 3,
      "text": "C0: Class 0 constrained device as defined in Section 3 of [RFC7228].",
      "ja": "C0：[RFC7228]のセクション3で定義されているクラス0制約​​デバイス。"
    },
    {
      "indent": 3,
      "text": "C1: Class 1 constrained device as defined in Section 3 of [RFC7228].",
      "ja": "C1：[RFC7228]のセクション3で定義されているクラス1制約デバイス。"
    },
    {
      "indent": 3,
      "text": "C2: Class 2 constrained device as defined in Section 3 of [RFC7228].",
      "ja": "C2：[RFC7228]のセクション3で定義されているクラス2制約付きデバイス。"
    },
    {
      "indent": 3,
      "text": "Network of Constrained Devices: A network to which constrained devices are connected that may or may not be a constrained network (see [RFC7228] for the definition of the term constrained network).",
      "ja": "制約付きデバイスのネットワーク：制約付きネットワークであるかどうかにかかわらず、制約付きデバイスが接続されているネットワーク（制約付きネットワークという用語の定義については、[RFC7228]を参照）。"
    },
    {
      "indent": 3,
      "text": "M2M: (Machine to Machine) The automatic data transfer between devices of different kinds. In M2M scenarios, a device (such as a sensor or meter) captures an event, which is relayed through a network (wireless, wired, or hybrid) to an application.",
      "ja": "M2M：（Machine to Machine）異なる種類のデバイス間の自動データ転送。 M2Mシナリオでは、デバイス（センサーやメーターなど）がイベントをキャプチャし、ネットワーク（ワイヤレス、有線、またはハイブリッド）を介してアプリケーションに中継されます。"
    },
    {
      "indent": 3,
      "text": "MANET: (Mobile Ad Hoc Network [RFC2501]) A self-configuring and infrastructureless network of mobile devices connected by wireless technologies.",
      "ja": "MANET：（モバイルアドホックネットワーク[RFC2501]）ワイヤレステクノロジーで接続されたモバイルデバイスの自己構成型インフラストラクチャレスネットワーク。"
    },
    {
      "indent": 3,
      "text": "Smart Grid: An electrical grid that uses communication technologies to gather and act on information in an automated fashion to improve the efficiency, reliability, and sustainability of the production and distribution of electricity.",
      "ja": "スマートグリッド：通信技術を使用して自動化された方法で情報を収集および処理し、電力の生産と配電の効率、信頼性、および持続可能性を向上させる電力網。"
    },
    {
      "indent": 3,
      "text": "Smart Meter: An electrical meter in the context of a smart grid.",
      "ja": "スマートメーター：スマートグリッドのコンテキストでの電気メーター。"
    },
    {
      "indent": 3,
      "text": "For a detailed discussion on the constrained networks as well as classes of constrained devices and their capabilities, please see [RFC7228].",
      "ja": "制約付きネットワーク、および制約付きデバイスのクラスとその機能の詳細については、[RFC7228]を参照してください。"
    },
    {
      "indent": 0,
      "text": "1.3. Network Types and Characteristics in Focus",
      "section_title": true,
      "ja": "1.3. 対象となるネットワークの種類と特性"
    },
    {
      "indent": 3,
      "text": "In this document, we differentiate the following types of networks concerning their transport and communication technologies:",
      "ja": "このドキュメントでは、トランスポートおよび通信技術に関して次のタイプのネットワークを区別します。"
    },
    {
      "indent": 3,
      "text": "(Note that a network in general can involve constrained and unconstrained devices.)",
      "ja": "（一般に、ネットワークには制約のあるデバイスと制約のないデバイスが含まれる可能性があることに注意してください。）"
    },
    {
      "indent": 3,
      "text": "1. Wireline unconstrained networks, e.g., an Ethernet LAN with constrained and unconstrained devices involved.",
      "ja": "1. 拘束されていないデバイスと拘束されていないデバイスが関係するイーサネットLANなどの、拘束されていない有線ネットワーク。"
    },
    {
      "indent": 0,
      "text": " 2. A combination of wireline and wireless networks, possibly with a multi-hop connectivity between constrained devices, utilizing dynamic routing in both the wireless and wireline portions of the network. Such networks usually support highly distributed applications with many nodes (e.g., environmental monitoring) and tend to deal with large-scale multipoint-to-point (MP2P) systems. Wireless Mesh Networks (WMNs), as a specific variant, use off-the-shelf radio technology such as Wi-Fi, WiMAX, and cellular 3G/4G. WMNs are reliable based on the redundancy they offer and have often a more planned deployment to provide dynamic and cost effective connectivity over a certain geographic area.",
      "ja": "2.有線ネットワークと無線ネットワークの組み合わせ。おそらくネットワークの無線部分と有線部分の両方で動的ルーティングを利用して、制約されたデバイス間のマルチホップ接続を使用します。このようなネットワークは通常、多くのノードを備えた高度に分散されたアプリケーション（環境監視など）をサポートし、大規模なマルチポイントツーポイント（MP2P）システムを扱う傾向があります。ワイヤレスメッシュネットワーク（WMN）は、特定のバリエーションとして、Wi-Fi、WiMAX、セルラー3G / 4Gなどの既製の無線技術を使用しています。 WMNは、それらが提供する冗長性に基づいて信頼性が高く、多くの場合、特定の地理的領域にわたって動的でコスト効果の高い接続を提供するために、より計画的な展開を行います。"
    },
    {
      "indent": 3,
      "text": "3. A combination of wireline and wireless networks with point-to-point (P2P) or point-to-multipoint (P2MP) communication generally with single-hop connectivity to constrained devices, utilizing static routing over the wireless network. Such networks support short-range, P2P, low-data-rate, source-to-sink types of applications, such as RFID systems, light switches, fire/smoke detectors, and home appliances. This type of network also supports confined short-range spaces such as a home, a factory, a building, or the human body. [IEEE802.15.1] (Bluetooth) and [IEEE802.15.4] are well-known examples of applicable standards for such networks. By using 6LoWPANs (IPv6 over Low-Power Wireless Personal Area Networks) [RFC4919] and RPL (Routing Protocol for Low-Power and Lossy Networks) [RFC6550] on top of IEEE 802.15.4, multi-hop connectivity and dynamic routing can be achieved. With RPL, the IETF has specified a proactive \"route-over\" architecture where routing and forwarding is implemented at the network layer. The protocol provides a mechanism whereby MP2P, P2MP, and P2P traffic are supported.",
      "ja": "3. 有線ネットワークとワイヤレスネットワークとポイントツーポイント（P2P）またはポイントツーマルチポイント（P2MP）通信の組み合わせで、通常、制約されたデバイスへのシングルホップ接続を使用し、ワイヤレスネットワーク経由の静的ルーティングを利用します。このようなネットワークは、RFIDシステム、ライトスイッチ、火災/煙探知器、家電製品など、短距離、P2P、低データレート、ソースからシンクへのアプリケーションタイプをサポートします。このタイプのネットワークは、家、工場、建物、人体などの限られた短距離スペースもサポートします。 [IEEE802.15.1]（Bluetooth）と[IEEE802.15.4]は、このようなネットワークに適用可能な標準のよく知られた例です。 IEEE 802.15.4の上に6LoWPAN（低電力ワイヤレスパーソナルエリアネットワーク上のIPv6）[RFC4919]およびRPL（低電力および損失の多いネットワーク用ルーティングプロトコル）[RFC6550]を使用することにより、マルチホップ接続と動的ルーティングを実現できます。達成しました。 RPLを使用して、IETFは、ルーティングと転送がネットワーク層で実装されるプロアクティブな「ルートオーバー」アーキテクチャを指定しています。このプロトコルは、MP2P、P2MP、およびP2Pトラフィックがサポートされるメカニズムを提供します。"
    },
    {
      "indent": 3,
      "text": "4. Self-configuring infrastructureless networks of mobile devices (e.g., MANET) are a particular type of network connected by wireless technologies. Infrastructureless networks are mostly based on P2P communications of devices moving independently in any direction and changing the links to other devices frequently. Such devices do act as a router to forward traffic unrelated to their own use.",
      "ja": "4. モバイルデバイスの自己構成インフラストラクチャレスネットワーク（MANETなど）は、ワイヤレステクノロジーによって接続される特定のタイプのネットワークです。インフラストラクチャレスネットワークは、ほとんどの場合、あらゆる方向に独立して移動し、他のデバイスへのリンクを頻繁に変更するデバイスのP2P通信に基づいています。このようなデバイスは、自分の使用に関係のないトラフィックを転送するルーターとして機能します。"
    },
    {
      "indent": 3,
      "text": "Wireline unconstrained networks with constrained and unconstrained devices are mainly used for specific applications like Building Automation or Infrastructure Monitoring. Wireline and wireless networks with multi-hop or P2MP connectivity are used, e.g., for environmental monitoring as well as transport and mobile applications.",
      "ja": "制約のあるデバイスと制約のないデバイスを含む有線の制約のないネットワークは、主にビルディングオートメーションやインフラストラクチャモニタリングなどの特定のアプリケーションに使用されます。マルチホップ接続またはP2MP接続を備えた有線および無線ネットワークは、たとえば、環境モニタリング、トランスポートおよびモバイルアプリケーションに使用されます。"
    },
    {
      "indent": 0,
      "text": " Furthermore, different network characteristics are determined by multiple dimensions: dynamicity of the topology, bandwidth, and loss rate. In the following, each dimension is explained, and networks in scope for this document are outlined: Network Topology:",
      "ja": "さらに、さまざまなネットワーク特性は、トポロジの動的性、帯域幅、および損失率などの複数の次元によって決定されます。以下では、各ディメンションについて説明し、このドキュメントの範囲内のネットワークの概要を示します。ネットワークトポロジ："
    },
    {
      "indent": 3,
      "text": "The topology of a network can be represented as a graph, with edges (i.e., links) and vertices (routers and hosts). Examples of different topologies include \"star\" topologies (with one central node and multiple nodes in one-hop distance), tree structures (with each node having exactly one parent), directed acyclic graphs (with each node having one or more parents), clustered topologies (where one or more \"cluster heads\" are responsible for a certain area of the network), mesh topologies (fully distributed), etc.",
      "ja": "ネットワークのトポロジーは、エッジ（つまり、リンク）と頂点（ルーターとホスト）を持つグラフとして表すことができます。さまざまなトポロジーの例には、「スター」トポロジー（1つの中央ノードと1ホップ距離に複数のノードがある）、ツリー構造（各ノードがちょうど1つの親を持つ）、有向非循環グラフ（各ノードが1つ以上の親を持つ）、クラスター化されたトポロジー（1つ以上の「クラスターヘッド」がネットワークの特定の領域を担当する）、メッシュトポロジー（完全に分散された）など。"
    },
    {
      "indent": 3,
      "text": "Management protocols may take advantage of specific network topologies, for example, by distributing large-scale management tasks amongst multiple distributed network management stations (e.g., in case of a mesh topology), or by using a hierarchical management approach (e.g., in case of a tree or clustered topology). These different management topology options are described in Section 1.6.",
      "ja": "管理プロトコルは、特定のネットワークトポロジを利用できます。たとえば、大規模な管理タスクを複数の分散ネットワーク管理ステーションに分散する（メッシュトポロジの場合など）か、階層管理アプローチを使用する（例：ツリーまたはクラスター化されたトポロジ）。これらの異なる管理トポロジオプションについては、セクション1.6で説明します。"
    },
    {
      "indent": 3,
      "text": "Note that in certain network deployments, such as community ad hoc networks (see the use case \"Community Network Applications\" in [RFC7548]), the topology is not preplanned; thus, it may be unknown for management purposes. In other use cases, such as industrial applications (see the use case \"Industrial Applications\" in [RFC7548]), the topology may be designed in advance and therefore taken advantage of when managing the network.",
      "ja": "コミュニティアドホックネットワーク（[RFC7548]の「コミュニティネットワークアプリケーション」の使用例を参照）などの特定のネットワーク配置では、トポロジは事前に計画されていないことに注意してください。したがって、管理目的では不明な場合があります。産業用アプリケーション（[RFC7548]の「産業用アプリケーション」のユースケースを参照）などの他のユースケースでは、トポロジを事前に設計して、ネットワークを管理する際に利用できます。"
    },
    {
      "indent": 3,
      "text": "Dynamicity of the network topology:",
      "ja": "ネットワークトポロジの動的性："
    },
    {
      "indent": 3,
      "text": "The dynamicity of the network topology determines the rate of change of the graph as a function of time. Such changes can occur due to different factors, such as mobility of nodes (e.g., in MANETs or cellular networks), duty cycles (for low-power devices enabling their network interface only periodically to transmit or receive packets), or unstable links (in particular wireless links with strongly fluctuating link quality).",
      "ja": "ネットワークトポロジの動的性により、グラフの変化率が時間の関数として決まります。このような変化は、ノードのモビリティ（MANETやセルラーネットワークなど）、デューティサイクル（ネットワークインターフェイスが定期的にのみパケットを送受信できるようにする低電力デバイスの場合）、不安定なリンク（リンク品質が大きく変動する特定のワイヤレスリンク）。"
    },
    {
      "indent": 3,
      "text": "Examples of different levels of dynamicity of the topology are Ethernets (with typically a very static topology) on the one side, and Low-power and Lossy Networks (LLNs) on the other side. LLNs nodes are often duty-cycled and operate on unreliable wireless links and are potentially mobile (e.g., for sensor networks).",
      "ja": "トポロジのさまざまなレベルの動的性の例には、一方の側のイーサネット（通常は非常に静的なトポロジ）と、もう一方の側の低電力および損失の多いネットワーク（LLN）があります。 LLNノードは、多くの場合、デューティサイクルされ、信頼性の低いワイヤレスリンク上で動作し、潜在的にモバイルです（センサーネットワークなど）。"
    },
    {
      "indent": 3,
      "text": "The more dynamic the topology is, the more have routing, transport and application-layer protocols to cope with interrupted connectivity and/or longer delays. For example, management protocols (with a given underlying transport protocol) that expect continuous session flows without changes of routes during a communication flow, may fail to operate.",
      "ja": "トポロジが動的であるほど、接続の中断や遅延の増加に対処するためのルーティング、トランスポート、およびアプリケーション層プロトコルが多くなります。たとえば、通信フロー中にルートを変更せずに継続的なセッションフローを期待する管理プロトコル（特定の基になるトランスポートプロトコルを使用）は、動作しない場合があります。"
    },
    {
      "indent": 3,
      "text": "Networks with a very low dynamicity (e.g., Ethernet) with no or infrequent topology changes (e.g., less than once every 30 minutes), are in the scope of this document if they are used with constrained devices (see, e.g., the use case \"Building Automation\" in [RFC7548]).",
      "ja": "トポロジーの変更がない（または30分に1回未満など）非常に低い動的性（イーサネットなど）のネットワークは、制約のあるデバイスで使用される場合（たとえば、使用例を参照）、このドキュメントの範囲に含まれます。 [RFC7548]の「ビルディングオートメーション」）。"
    },
    {
      "indent": 3,
      "text": "Traffic flows:",
      "ja": "トラフィックフロー："
    },
    {
      "indent": 3,
      "text": "The traffic flow in a network determines from which sources data traffic is sent to which destinations in the network. Several different traffic flows are defined in [RFC7102], including P2P, MP2P, and P2MP flows as:",
      "ja": "ネットワーク内のトラフィックフローは、データトラフィックがどの送信元からネットワーク内のどの宛先に送信されるかを決定します。 [RFC7102]では、P2P、MP2P、P2MPフローなど、いくつかの異なるトラフィックフローが次のように定義されています。"
    },
    {
      "indent": 3,
      "text": "o P2P: Point-to-point refers to traffic exchanged between two nodes (regardless of the number of hops between the two nodes).",
      "ja": "o P2P：ポイントツーポイントとは、2つのノード間で交換されるトラフィックを指します（2つのノード間のホップ数に関係なく）。"
    },
    {
      "indent": 3,
      "text": "o P2MP: Point-to-multipoint traffic refers to traffic between one node and a set of nodes. This is similar to the P2MP concept in Multicast or MPLS Traffic Engineering.",
      "ja": "o P2MP：ポイントツーマルチポイントトラフィックは、1つのノードとノードのセット間のトラフィックを指します。これは、マルチキャストまたはMPLSトラフィックエンジニアリングのP2MPコンセプトに似ています。"
    },
    {
      "indent": 3,
      "text": "o MP2P: Multipoint-to-point is used to describe a particular traffic pattern (e.g., MP2P flows collecting information from many nodes flowing inwards towards a collecting sink).",
      "ja": "o MP2P：マルチポイントツーポイントは、特定のトラフィックパターンを記述するために使用されます（たとえば、MP2Pフローは、多くのノードから情報を収集し、収集シンクに向かって流れます）。"
    },
    {
      "indent": 3,
      "text": "If one of these traffic patterns is predominant in a network, protocols (routing, transport, application) may be optimized for the specific traffic flow. For example, in a network with a tree topology and MP2P traffic, collection tree protocols are efficient to send data from the leaves of the tree to the root of the tree, via each node's parent.",
      "ja": "これらのトラフィックパターンのいずれかがネットワークで優勢である場合、プロトコル（ルーティング、トランスポート、アプリケーション）が特定のトラフィックフローに合わせて最適化されることがあります。たとえば、ツリートポロジとMP2Pトラフィックのあるネットワークでは、コレクションツリープロトコルは、各ノードの親を介してツリーのリーフからツリーのルートにデータを送信するのに効率的です。"
    },
    {
      "indent": 3,
      "text": "Bandwidth:",
      "ja": "帯域幅："
    },
    {
      "indent": 3,
      "text": "The bandwidth of the network is the amount of data that can be sent per unit of time between two communication endpoints. It is usually determined by the link with the minimum bandwidth on the path from the source to the destination of data packets. The bandwidth in networks can range from a few kilobytes per second (such as on some IEEE 802.15.4 link layers) to many gigabytes per second (e.g., on fiber optics).",
      "ja": "ネットワークの帯域幅は、2つの通信エンドポイント間で単位時間あたりに送信できるデータの量です。これは通常、データパケットの送信元から宛先へのパス上の最小帯域幅を持つリンクによって決定されます。ネットワークの帯域幅は、1秒あたり数キロバイト（一部のIEEE 802.15.4リンクレイヤーなど）から1秒あたり数ギガバイト（光ファイバーなど）までさまざまです。"
    },
    {
      "indent": 3,
      "text": "For management purposes, the management protocol typically requires the sending of information between the network management station and the clients, for monitoring or control purposes. If the available bandwidth is insufficient for the management protocol, packets will be buffered and eventually dropped; thus, management is not possible with such a protocol.",
      "ja": "管理の目的で、管理プロトコルは通常、監視または制御の目的で、ネットワーク管理ステーションとクライアントの間で情報を送信する必要があります。使用可能な帯域幅が管理プロトコルに対して不十分な場合、パケットはバッファリングされ、最終的にはドロップされます。したがって、このようなプロトコルでは管理は不可能です。"
    },
    {
      "indent": 3,
      "text": "Networks without bandwidth limitation (e.g., Ethernet) are in the scope of this document if they are used with constrained devices (see the use case \"Building Automation\" in [RFC7548]).",
      "ja": "帯域幅制限のないネットワーク（イーサネットなど）は、制約のあるデバイスで使用する場合、このドキュメントの範囲内にあります（[RFC7548]の「Building Automation」のユースケースを参照）。"
    },
    {
      "indent": 3,
      "text": "Loss rate:",
      "ja": "損失率："
    },
    {
      "indent": 3,
      "text": "The loss rate (or bit error rate) is the number of bit errors divided by the total number of bits transmitted. For wired networks, loss rates are typically extremely low, e.g., around 10^-12 or 10^-13 for the latest 10 Gbit Ethernet. For wireless networks, such as IEEE 802.15.4, the bit error rate can be as high as 10^-1 to 1 in case of interferences. Even when using a reliable transport protocol, management operations can fail if the loss rate is too high, unless they are specifically designed to cope with these situations.",
      "ja": "損失率（またはビット誤り率）は、ビット誤りの数を送信されたビットの総数で割ったものです。有線ネットワークの場合、損失率は通常非常に低く、たとえば、最新の10ギガビットイーサネットでは約10 ^ -12または10 ^ -13です。 IEEE 802.15.4などのワイヤレスネットワークの場合、干渉が発生した場合、ビットエラーレートは10 ^ -1〜1に達する可能性があります。信頼できる転送プロトコルを使用している場合でも、損失率が高すぎると、これらの状況に対処するように特別に設計されていない限り、管理操作が失敗する可能性があります。"
    },
    {
      "indent": 0,
      "text": "1.4. Constrained Device Deployment Options",
      "section_title": true,
      "ja": "1.4. 制約付きデバイスの展開オプション"
    },
    {
      "indent": 3,
      "text": "We differentiate the following deployment options for the constrained devices:",
      "ja": "制約されたデバイスの次の展開オプションを区別します。"
    },
    {
      "indent": 3,
      "text": "o A network of constrained devices that communicate with each other,",
      "ja": "o 相互に通信する制約されたデバイスのネットワーク、"
    },
    {
      "indent": 3,
      "text": "o Constrained devices that are connected directly to an IP network,",
      "ja": "o IPネットワークに直接接続されている制約付きデバイス、"
    },
    {
      "indent": 3,
      "text": "o A network of constrained devices that communicate with a gateway or proxy with more communication capabilities possibly acting as a representative of the device to entities in the unconstrained network,",
      "ja": "o 制約されていないネットワーク内のエンティティへのデバイスの代表として機能する可能性のある、より多くの通信機能を持つゲートウェイまたはプロキシと通信する制約されたデバイスのネットワーク、"
    },
    {
      "indent": 3,
      "text": "o Constrained devices that are connected to the Internet or an IP network via a gateway/proxy,",
      "ja": "o ゲートウェイ/プロキシを介してインターネットまたはIPネットワークに接続されている制約付きデバイス、"
    },
    {
      "indent": 3,
      "text": "o A hierarchy of constrained devices, e.g., a network of C0 devices connected to one or more C1 devices -- connected to one or more C2 devices -- connected to one or more gateways -- connected to some application servers or NMS, and",
      "ja": "o 制約されたデバイスの階層、たとえば、1つ以上のC1デバイスに接続されたC0デバイスのネットワーク-1つ以上のC2デバイスに接続された-1つ以上のゲートウェイに接続された-一部のアプリケーションサーバーまたはNMSに接続された、および"
    },
    {
      "indent": 3,
      "text": "o The possibility of device grouping (possibly in a dynamic manner) such as that the grouped devices can act as one logical device at the edge of the network and one device in this group can act as the managing entity.",
      "ja": "o グループ化されたデバイスがネットワークのエッジで1つの論理デバイスとして機能し、このグループ内の1つのデバイスが管理エンティティとして機能するなど、デバイスのグループ化の可能性（おそらく動的な方法で）。"
    },
    {
      "indent": 0,
      "text": "1.5. Management Topology Options",
      "section_title": true,
      "ja": "1.5. 管理トポロジオプション"
    },
    {
      "indent": 3,
      "text": "We differentiate the following options for the management of networks of constrained devices:",
      "ja": "制約のあるデバイスのネットワークの管理では、次のオプションを区別します。"
    },
    {
      "indent": 3,
      "text": "o A network of constrained devices managed by one central manager. A logically centralized management might be implemented in a hierarchical fashion for scalability and robustness reasons. The manager and the management application logic might have a gateway/ proxy in between or might be on different nodes in different networks, e.g., management application running on a cloud server.",
      "ja": "o 1つの中央マネージャーによって管理されている制約されたデバイスのネットワーク。論理的に一元化された管理は、スケーラビリティと堅牢性の理由から、階層的に実装される場合があります。マネージャーと管理アプリケーションロジックの間にゲートウェイ/プロキシが存在する場合や、クラウドサーバー上で実行されている管理アプリケーションなど、異なるネットワークの異なるノード上にある場合があります。"
    },
    {
      "indent": 3,
      "text": "o Distributed management, where a network of constrained devices is managed by more than one manager. Each manager controls a subnetwork and may communicate directly with other manager stations in a cooperative fashion. The distributed management may be weakly distributed, where functions are broken down and assigned to many managers dynamically, or strongly distributed, where almost all managed things have embedded management functionality and explicit management disappears, which usually comes with the price that the strongly distributed management logic now needs to be managed.",
      "ja": "o 分散管理。制約されたデバイスのネットワークが複数のマネージャーによって管理されます。各マネージャーはサブネットワークを制御し、他のマネージャーステーションと協調して直接通信できます。分散管理は、機能が細かく分割されて多くのマネージャーに動的に割り当てられる弱く分散されている場合と、ほとんどすべての管理対象に管理機能が組み込まれており、明示的な管理が行われない場合に強く分散される場合があります。今管理する必要があります。"
    },
    {
      "indent": 3,
      "text": "o Hierarchical management, where a hierarchy of networks with constrained devices are managed by the managers at their corresponding hierarchy level. That is, each manager is responsible for managing the nodes in its subnetwork. It passes information from its subnetwork to its higher-level manager and disseminates management functions received from the higher-level manager to its subnetwork. Hierarchical management is essentially a scalability mechanism, logically the decision-making may be still centralized.",
      "ja": "o 階層管理。制約されたデバイスを含むネットワークの階層は、対応する階層レベルでマネージャーによって管理されます。つまり、各マネージャーは、そのサブネットワーク内のノードを管理する責任があります。サブネットワークから上位マネージャーに情報を渡し、上位マネージャーから受け取った管理機能をサブネットワークに配布します。階層管理は本質的にスケーラビリティメカニズムであり、論理的には意思決定が依然として集中化される場合があります。"
    },
    {
      "indent": 0,
      "text": "1.6. Managing the Constrainedness of a Device or Network",
      "section_title": true,
      "ja": "1.6. デバイスまたはネットワークの制約の管理"
    },
    {
      "indent": 3,
      "text": "The capabilities of a constrained device or network and the constrainedness thereof influence and have an impact on the requirements for the management of such a network or devices.",
      "ja": "制約されたデバイスまたはネットワークの機能とその制約は、そのようなネットワークまたはデバイスの管理の要件に影響を与え、影響を与えます。"
    },
    {
      "indent": 3,
      "text": "Note that the list below gives examples and does not claim completeness.",
      "ja": "以下のリストは例を示すものであり、完全性を主張するものではないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "A constrained device:",
      "ja": "制約されたデバイス："
    },
    {
      "indent": 3,
      "text": "o might only support an unreliable (e.g., lossy) radio link, i.e., the client and server of a management protocol need to gracefully handle incomplete command exchanges or missing commands.",
      "ja": "o は信頼性の低い（損失の多い）無線リンクのみをサポートする可能性があります。つまり、管理プロトコルのクライアントとサーバーは、不完全なコマンド交換や欠落しているコマンドを適切に処理する必要があります。"
    },
    {
      "indent": 3,
      "text": "o might only be able to go online from time to time, where it is reachable, i.e., a command might be necessary to repeat after a longer timeout or the timeout value with which one endpoint waits on a response needs to be sufficiently high.",
      "ja": "o が到達可能である場合にのみ、オンラインにできる場合があります。つまり、より長いタイムアウトまたは1つのエンドポイントが応答を待機するタイムアウト値を十分に高くする必要がある場合、コマンドを繰り返す必要があります。"
    },
    {
      "indent": 3,
      "text": "o might only be able to support a limited operating time (e.g., based on the available battery) or may behave as 'sleepy endpoints', setting their network links to a disconnected state during long periods of time, i.e., the devices need to economize their energy usage with suitable mechanisms and the managing entity needs to monitor and control the energy status of the constrained devices it manages.",
      "ja": "o 限られた稼働時間しかサポートできない場合があります（たとえば、使用可能なバッテリーに基づく）、または「スリープ状態のエンドポイント」として動作し、ネットワークリンクを長期間切断された状態に設定する場合があります。つまり、デバイスは節約する必要があります適切なメカニズムを備えたエネルギー使用量と管理エンティティは、管理する制約されたデバイスのエネルギー状態を監視および制御する必要があります。"
    },
    {
      "indent": 3,
      "text": "o might only be able to support one simple communication protocol, i.e., the management protocol needs to be possible to downscale from constrained (C2) to very constrained (C0) devices with modular implementation and a very basic version with just a few simple commands.",
      "ja": "o は、1つの単純な通信プロトコルしかサポートできない可能性があります。つまり、管理プロトコルは、制約付き（C2）から非常に制約付き（C0）のデバイスに、モジュール式の実装といくつかの単純なコマンドだけを備えた非常に基本的なバージョンにダウンスケールできる必要があります。"
    },
    {
      "indent": 3,
      "text": "o might only be able to support a communication protocol, which is not IP based.",
      "ja": "o IPベースではない通信プロトコルのみをサポートできる場合があります。"
    },
    {
      "indent": 3,
      "text": "o might only be able to support limited or no user and/or transport security, i.e., the management system needs to support a less-costly and simple but sufficiently secure authentication mechanism.",
      "ja": "o ユーザーやトランスポートのセキュリティを限定的にサポートするか、まったくサポートしない可能性があります。つまり、管理システムは、低コストでシンプルだが十分に安全な認証メカニズムをサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "o might not be able to support compression and decompression of exchanged data based on limited CPU power, i.e., an intermediary entity which is capable of data compression should be able to communicate with both, devices that support data compression (e.g., C2) and devices that do not support data compression (e.g., C1 and C0).",
      "ja": "o 限られたCPUパワーに基づいて交換されたデータの圧縮と解凍をサポートできない場合があります。つまり、データ圧縮が可能な中間エンティティは、データ圧縮をサポートするデバイス（C2など）と、データ圧縮をサポートしません（C1やC0など）。"
    },
    {
      "indent": 3,
      "text": "o might only be able to support a simple encryption, i.e., it would be beneficial if the devices use cryptographic algorithms that are supported in hardware and the encryption used is efficient in terms of memory and CPU usage.",
      "ja": "o は、単純な暗号化しかサポートできない場合があります。つまり、デバイスがハードウェアでサポートされている暗号化アルゴリズムを使用し、使用される暗号化がメモリとCPUの使用に関して効率的である場合に有益です。"
    },
    {
      "indent": 3,
      "text": "o might only be able to communicate with one single managing entity and cannot support the parallel access of many managing entities.",
      "ja": "o は単一の管理エンティティとのみ通信でき、多くの管理エンティティの並列アクセスをサポートできない場合があります。"
    },
    {
      "indent": 3,
      "text": "o might depend on a self-configuration feature, i.e., the managing entity might not know all devices in a network and the device needs to be able to initiate connection setup for the device configuration.",
      "ja": "o は、自己構成機能に依存している可能性があります。つまり、管理エンティティはネットワーク内のすべてのデバイスを認識しておらず、デバイスはデバイス構成の接続セットアップを開始できる必要があります。"
    },
    {
      "indent": 3,
      "text": "o might depend on self- or neighbor-monitoring features, i.e., the managing entity might not be able to monitor all devices in a network continuously.",
      "ja": "o は、自己監視機能またはネイバー監視機能に依存している可能性があります。つまり、管理エンティティは、ネットワーク内のすべてのデバイスを継続的に監視できない場合があります。"
    },
    {
      "indent": 3,
      "text": "o might only be able to communicate with its neighbors, i.e., the device should be able to get its configuration from a neighbor.",
      "ja": "o ネイバーとのみ通信できる場合があります。つまり、デバイスはネイバーから設定を取得できる必要があります。"
    },
    {
      "indent": 3,
      "text": "o might only be able to support parsing of data models with limited size, i.e., the device data models need to be compact containing the most necessary data and if possible parsable as a stream.",
      "ja": "o は、限られたサイズのデータ​​モデルの解析のみをサポートできる場合があります。つまり、デバイスデータモデルは、最も必要なデータを含み、可能であればストリームとして解析可能なコンパクトである必要があります。"
    },
    {
      "indent": 3,
      "text": "o might only be able to support a limited or no-failure detection, i.e., the managing entity needs to handle the situation, where a failure does not get detected or gets detected late gracefully, e.g., with asking repeatedly.",
      "ja": "o は、限定された検出または障害のない検出のみをサポートできる場合があります。つまり、管理エンティティは、障害が検出されない、または繰り返し要求するなどして正常に遅れて検出される状況を処理する必要があります。"
    },
    {
      "indent": 3,
      "text": "o might only be able to support the reporting of just one or a limited set failure types.",
      "ja": "o 1つまたは限られたセットの障害タイプのみのレポートをサポートできる場合があります。"
    },
    {
      "indent": 3,
      "text": "o might only be able to support a limited set of notifications, possible only an \"I am alive.\" message.",
      "ja": "o 限られた通知セットしかサポートできない可能性があります。「私は生きている」だけが可能です。メッセージ。"
    },
    {
      "indent": 3,
      "text": "o might only be able to support a soft-reset from failure recovery.",
      "ja": "o 障害回復からのソフトリセットしかサポートできない場合があります。"
    },
    {
      "indent": 3,
      "text": "o might possibly generate a large amount of redundant reporting data, i.e., the intermediary management entity (see [RFC7252]) should be able to filter and aggregate redundant data.",
      "ja": "o 大量の冗長なレポートデータを生成する可能性があります。つまり、中間管理エンティティ（[RFC7252]を参照）は、冗長データをフィルタリングおよび集約できる必要があります。"
    },
    {
      "indent": 3,
      "text": "A network of constrained devices:",
      "ja": "制約のあるデバイスのネットワーク："
    },
    {
      "indent": 3,
      "text": "o might only support an unreliable (e.g., lossy) radio link, i.e., the client and server of a management protocol need to repeat commands as necessary or gracefully ignore incomplete commands.",
      "ja": "o は、信頼性の低い（損失の多い）無線リンクのみをサポートする可能性があります。つまり、管理プロトコルのクライアントとサーバーは、必要に応じてコマンドを繰り返すか、不完全なコマンドを適切に無視する必要があります。"
    },
    {
      "indent": 3,
      "text": "o might be necessary to manage based on multicast communication, i.e., the managing entity needs to be prepared to configure many devices at once based on the same data model.",
      "ja": "o マルチキャスト通信に基づいて管理する必要がある場合があります。つまり、管理エンティティは、同じデータモデルに基づいて一度に多くのデバイスを構成するように準備する必要があります。"
    },
    {
      "indent": 3,
      "text": "o might have a very large topology supporting 10,000 or more nodes for some applications and as such node naming is a specific issue for constrained networks.",
      "ja": "o 一部のアプリケーションでは10,000以上のノードをサポートする非常に大規模なトポロジが存在する可能性があり、そのようなノードの命名は制約付きネットワークの特定の問題です。"
    },
    {
      "indent": 3,
      "text": "o needs to support self-organization, i.e., given the large number of nodes and their potential placement in hostile locations and frequently changing topology, manual configuration of nodes is typically not feasible. As such, the network would benefit from the ability to reconfigure itself so that it can continue to operate properly and support reliable connectivity.",
      "ja": "o は自己組織化をサポートする必要があります。つまり、ノードの数が多く、それらが敵対的な場所に配置される可能性があり、トポロジが頻繁に変化する場合、ノードを手動で構成することは通常不可能です。そのため、ネットワークは、適切に動作し続け、信頼性の高い接続をサポートできるように、ネットワーク自体を再構成する機能の恩恵を受けます。"
    },
    {
      "indent": 3,
      "text": "o might need a management solution that is energy efficient, using as little wireless bandwidth as possible since communication is highly energy demanding.",
      "ja": "o 通信は非常にエネルギーを必要とするため、ワイヤレス帯域幅をできるだけ少なくして、エネルギー効率の高い管理ソリューションが必要になる場合があります。"
    },
    {
      "indent": 3,
      "text": "o needs to support localization schemes to determine the location of devices since the devices might be moving and location information is important for some applications.",
      "ja": "o デバイスは移動している可能性があり、一部のアプリケーションでは位置情報が重要であるため、はデバイスの位置を特定するためにローカリゼーションスキームをサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "o needs a management solution that is scalable as the network may consist of thousands of nodes and may need to be extended continuously.",
      "ja": "o ネットワークは数千のノードで構成され、継続的に拡張する必要がある場合があるため、スケーラブルな管理ソリューションが必要です。"
    },
    {
      "indent": 3,
      "text": "o needs to provide fault tolerance. Faults in network operation including hardware and software errors or failures detected by the transport protocol should be handled smoothly. In such a case, it should be possible to run the protocol at a reduced level but avoid failing completely. For example, self-monitoring mechanisms or graceful degradation of features can be used to provide fault tolerance.",
      "ja": "o フォールトトレランスを提供する必要があります。ハードウェアおよびソフトウェアのエラー、またはトランスポートプロトコルによって検出された障害を含むネットワーク操作の障害は、スムーズに処理する必要があります。そのような場合、プロトコルを低いレベルで実行することは可能ですが、完全に失敗することは避けます。たとえば、自己監視メカニズムや機能の正常な低下を使用して、フォールトトレランスを提供できます。"
    },
    {
      "indent": 3,
      "text": "o might require new management capabilities, for example, network coverage information and a constrained device power distribution map.",
      "ja": "o たとえば、ネットワークカバレッジ情報や制約されたデバイスの電力配分マップなど、新しい管理機能が必要になる場合があります。"
    },
    {
      "indent": 3,
      "text": "o might require a new management function for data management, since the type and amount of data collected in constrained networks is different from those of the traditional networks.",
      "ja": "o 制約付きネットワークで収集されるデータのタイプと量は従来のネットワークのものとは異なるため、ではデータ管理に新しい管理機能が必要になる場合があります。"
    },
    {
      "indent": 3,
      "text": "o might also need energy-efficient key management.",
      "ja": "o エネルギー効率の高い鍵管理も必要になる場合があります。"
    },
    {
      "indent": 0,
      "text": "1.7. Configuration and Monitoring Functionality Levels",
      "section_title": true,
      "ja": "1.7. 構成および監視機能レベル"
    },
    {
      "indent": 3,
      "text": "Devices often differ significantly on the level of configuration management support they provide. This document classifies the configuration management functionality as follows:",
      "ja": "多くの場合、デバイスは、提供する構成管理サポートのレベルが大幅に異なります。このドキュメントでは、構成管理機能を次のように分類しています。"
    },
    {
      "indent": 3,
      "text": "CL0: Devices are preconfigured and allow no runtime configuration changes. Configuration parameters are often hard coded and compiled directly into the firmware image.",
      "ja": "CL0：デバイスは事前構成されており、ランタイム構成の変更は許可されていません。多くの場合、構成パラメーターはハードコードされ、ファームウェアイメージに直接コンパイルされます。"
    },
    {
      "indent": 3,
      "text": "CL1: Devices have explicit configuration objects. However, changes require a restart of the device to take effect.",
      "ja": "CL1：デバイスには、明示的な構成オブジェクトがあります。ただし、変更を有効にするには、デバイスを再起動する必要があります。"
    },
    {
      "indent": 3,
      "text": "CL2: Devices allow management systems to replace the entire configuration (or predetermined subsets) in bulk. Configuration changes take effect by soft-restarts of the system (or subsystems).",
      "ja": "CL2：デバイスにより、管理システムは構成全体（または事前に設定されたサブセット）を一括で置き換えることができます。構成の変更は、システム（またはサブシステム）のソフト再起動によって有効になります。"
    },
    {
      "indent": 3,
      "text": "CL3: Devices allow management systems to modify configuration objects without bulk replacements and changes take effect immediately.",
      "ja": "CL3：デバイスを使用すると、管理システムは一括置換せずに構成オブジェクトを変更でき、変更はすぐに有効になります。"
    },
    {
      "indent": 3,
      "text": "CL4: Devices support multiple configuration datastores and they might distinguish between the currently running and the next startup configuration.",
      "ja": "CL4：デバイスは複数の構成データストアをサポートしており、現在実行中の構成と次の起動構成を区別する場合があります。"
    },
    {
      "indent": 3,
      "text": "CL5: Devices support configuration datastore locking and device-local configuration change transactions, i.e., either all configuration changes are applied or none of them are.",
      "ja": "CL5：デバイスは、構成データストアのロックとデバイスローカルの構成変更トランザクションをサポートしています。つまり、すべての構成変更が適用されるか、どれも適用されません。"
    },
    {
      "indent": 3,
      "text": "CL6: Devices support configuration change transactions across devices.",
      "ja": "CL6：デバイスは、デバイス間の構成変更トランザクションをサポートします。"
    },
    {
      "indent": 3,
      "text": "This document defines a classification of devices with regard to different levels of monitoring support. In general, a device may be in several of the levels listed below:",
      "ja": "このドキュメントでは、さまざまなレベルの監視サポートに関するデバイスの分類を定義します。一般に、デバイスは以下にリストされているいくつかのレベルにある可能性があります。"
    },
    {
      "indent": 3,
      "text": "ML0: Devices push predefined monitoring data.",
      "ja": "ML0：デバイスは事前定義されたモニタリングデータをプッシュします。"
    },
    {
      "indent": 3,
      "text": "ML1: Devices allow management systems to pull predefined monitoring data.",
      "ja": "ML1：デバイスにより、管理システムは事前定義されたモニタリングデータを取得できます。"
    },
    {
      "indent": 3,
      "text": "ML2: Devices allow management systems to pull user-defined filtered subsets of monitoring data.",
      "ja": "ML2：デバイスにより、管理システムはユーザー定義のフィルタリングされた監視データのサブセットを取得できます。"
    },
    {
      "indent": 3,
      "text": "ML3: Devices are able to locally process monitoring data in order to detect threshold crossings or to aggregate data.",
      "ja": "ML3：デバイスは、しきい値の超過を検出したり、データを集計したりするために、監視データをローカルで処理できます。"
    },
    {
      "indent": 3,
      "text": "At the time of this writing, constrained devices often implement a combination of one of CL0-CL2 with one of ML0-ML1.",
      "ja": "この記事の執筆時点では、制約付きデバイスは、CL0-CL2の1つとML0-ML1の1つの組み合わせを実装していることがよくあります。"
    },
    {
      "indent": 0,
      "text": "2. Problem Statement",
      "section_title": true,
      "ja": "2. 問題文"
    },
    {
      "indent": 0,
      "text": " The terminology for the \"Internet of Things\" is still nascent, and depending on the network type or layer in focus, diverse technologies and terms are in use. Common to all these considerations is the \"Things\" or \"Objects\" are supposed to have physical or virtual identities using interfaces to communicate. In this context, we need to differentiate between the constrained and smart devices identified by an IP address compared to virtual entities such as Smart Objects, which can be identified as a resource or a virtual object by using a unique identifier. Furthermore, the smart devices usually have limited memory and CPU power as well as aim to be self-configuring and easy to deploy.",
      "ja": "「モノのインターネット」の用語はまだ初期段階であり、対象となるネットワークのタイプやレイヤーによっては、さまざまなテクノロジーや用語が使用されています。これらすべての考慮事項に共通するのは、「モノ」または「オブジェクト」が、通信にインターフェースを使用して物理的または仮想的なIDを持っていることです。このコンテキストでは、IPアドレスによって識別される制約付きデバイスとスマートデバイスを、一意の識別子を使用してリソースまたは仮想オブジェクトとして識別できるスマートオブジェクトなどの仮想エンティティと比較して区別する必要があります。さらに、スマートデバイスは通常、メモリとCPUの能力が限られているだけでなく、自己構成が容易で展開も容易です。"
    },
    {
      "indent": 3,
      "text": "However, the constraints of the network nodes require a rethinking of the protocol characteristics concerning power consumption, performance, bandwidth consumption, memory, and CPU usage. As such, there is a demand for protocol simplification, energy-efficient communication, less CPU usage, and a smaller memory footprint.",
      "ja": "ただし、ネットワークノードの制約により、電力消費、パフォーマンス、帯域幅消費、メモリ、およびCPU使用率に関するプロトコル特性を再考する必要があります。そのため、プロトコルの簡素化、エネルギー効率の高い通信、CPU使用量の削減、メモリフットプリントの縮小が求められています。"
    },
    {
      "indent": 3,
      "text": "On the application layer, the IETF is already developing protocols like the Constrained Application Protocol (CoAP) [RFC7252] enabling the communication of constrained devices and networks, e.g., for smart energy applications or home automation environments. In fact, the deployment of such an environment involves many, in some scenarios up to million, constrained devices (e.g., smart meters), which produce a large amount of data. This data needs to be collected, filtered, and preprocessed for further use in diverse services.",
      "ja": "アプリケーション層では、IETFは制約付きアプリケーションプロトコル（CoAP）[RFC7252]などのプロトコルを既に開発しており、制約のあるデバイスやネットワーク（たとえば、スマートエネルギーアプリケーションやホームオートメーション環境）の通信を可能にします。実際、このような環境の展開には、大量のデータを生成する多くの、場合によっては100万までの制約されたデバイス（スマートメーターなど）が含まれます。このデータは、さまざまなサービスでさらに使用するために収集、フィルタリング、および前処理する必要があります。"
    },
    {
      "indent": 3,
      "text": "Considering the high number of nodes to deploy, one has to think about the manageability aspects of the smart devices and plan for easy deployment, configuration, and management of the networks of constrained devices as well as the devices themselves. Consequently, seamless monitoring and self-configuration of such network nodes becomes more and more imperative. Self-configuration and self-management are already a reality in the standards of some organizations such as 3GPP. To introduce self-configuration of smart devices successfully, a device-initiated connection establishment is often required.",
      "ja": "展開するノードの数が多いことを考慮して、スマートデバイスの管理性の側面を考慮し、制約されたデバイスのネットワークとデバイス自体の簡単な展開、構成、および管理を計画する必要があります。その結果、そのようなネットワークノードのシームレスな監視と自己設定はますます必須になります。自己構成と自己管理は、3GPPなどの一部の組織の標準ではすでに現実になっています。スマートデバイスの自己構成を正常に導入するには、デバイスが開始する接続の確立が必要になることがよくあります。"
    },
    {
      "indent": 3,
      "text": "A simple and efficient application-layer protocol, such as CoAP, is essential to address the issue of efficient object-to-object communication and information exchange. Such an information exchange should be done based on interoperable data models to enable the exchange and interpretation of diverse application- and management-related data.",
      "ja": "CoAPなどのシンプルで効率的なアプリケーション層プロトコルは、効率的なオブジェクト間通信と情報交換の問題に対処するために不可欠です。このような情報交換は、相互運用可能なデータモデルに基づいて行われ、アプリケーションや管理に関連するさまざまなデータの交換と解釈を可能にする必要があります。"
    },
    {
      "indent": 0,
      "text": " In an ideal world, we would have only one network management protocol for monitoring, configuration, and exchanging management data, independently of the type of the network (e.g., smart grid, wireless access, or core network). Furthermore, it would be desirable to derive the basic data models for constrained devices from the core models used today to enable reuse of functionality and end-to-end information exchange. However, the current management protocols seem to be too heavyweight compared to the capabilities the constrained devices have and are not applicable directly for use in a network of constrained devices. Furthermore, the data models addressing the requirements of such smart devices need yet to be designed.",
      "ja": "理想的な世界では、ネットワークのタイプ（スマートグリッド、ワイヤレスアクセス、コアネットワークなど）に関係なく、管理データを監視、構成、および交換するためのネットワーク管理プロトコルは1つだけです。さらに、機能の再利用とエンドツーエンドの情報交換を可能にするために、現在使用されているコアモデルから制約付きデバイスの基本データモデルを派生させることが望ましいでしょう。ただし、現在の管理プロトコルは、制約のあるデバイスが持つ機能に比べると重すぎるようであり、制約のあるデバイスのネットワークでの使用には直接適用できません。さらに、そのようなスマートデバイスの要件に対応するデータモデルは、まだ設計する必要があります。"
    },
    {
      "indent": 3,
      "text": "So far, the IETF has not developed any specific technologies for the management of constrained devices and the networks comprised by constrained devices. IP-based sensors or constrained devices in such an environment, i.e., today, devices with very limited memory and CPU resources use, e.g., application-layer protocols to do simple resource management and monitoring. This might be sufficient for some basic cases; however, there is a need to reconsider the network management mechanisms based on the new, changed, and reduced requirements coming from smart devices and the network of such constrained devices. Although it is questionable whether we can take the same comprehensive approach we use in an IP network and use it for the management of constrained devices. Hence, the management of a network with constrained devices is necessarily designed in a simplified and less complex manner.",
      "ja": "これまでのところ、IETFは、制約されたデバイスと制約されたデバイスによって構成されるネットワークを管理するための特定の技術を開発していません。そのような環境でのIPベースのセンサーまたは制約されたデバイス、つまり今日、メモリとCPUリソースが非常に制限されているデバイスは、たとえばアプリケーション層プロトコルを使用して、単純なリソース管理と監視を行います。これは、いくつかの基本的なケースでは十分かもしれません。ただし、スマートデバイスとそのような制約されたデバイスのネットワークからの新しい、変更された、および削減された要件に基づいて、ネットワーク管理メカニズムを再検討する必要があります。 IPネットワークで使用するのと同じ包括的なアプローチをとり、制約のあるデバイスの管理にそれを使用できるかどうかは疑問です。したがって、デバイスが制約されたネットワークの管理は、必然的に簡素化され、複雑さが軽減されます。"
    },
    {
      "indent": 3,
      "text": "As Section 1.6 highlights, there are diverse characteristics of constrained devices or networks, which stem from their constrainedness and therefore have an impact on the requirements for the management of such a network with constrained devices. The use cases discussed in [RFC7548] show that the requirements on constrained networks are manifold and need to be analyzed from different angles, e.g., concerning the design of the management architecture, the selection of the appropriate protocol features, as well as the specific issues that are new in the context of constrained devices. Examples of such issues are careful management of scarce energy resources, the necessity for self-organization and self-management of such devices but also the implementation considerations to enable the use of common communication technologies on a constrained hardware in an efficient manner. For an exhaustive list of issues and requirements that need to be addressed for the management of a network with constrained devices, please see Sections 1.6 and 3.",
      "ja": "セクション1.6でハイライトされているように、制約のあるデバイスまたはネットワークにはさまざまな特性があります。これらの制約は制約から生じるため、制約のあるデバイスを使用したこのようなネットワークの管理の要件に影響を与えます。 [RFC7548]で説明されているユースケースは、制約付きネットワークの要件が多種多様であり、管理アーキテクチャの設計、適切なプロトコル機能の選択、特定の問題など、さまざまな角度から分析する必要があることを示しています制約されたデバイスのコンテキストでは新しいものです。このような問題の例としては、希少なエネルギーリソースの注意深い管理、そのようなデバイスの自己組織化と自己管理の必要性、制約されたハードウェアでの一般的な通信技術を効率的に使用できるようにするための実装の考慮事項などがあります。制約のあるデバイスでネットワークを管理するために対処する必要がある問題と要件の完全なリストについては、セクション1.6および3を参照してください。"
    },
    {
      "indent": 0,
      "text": "3. Requirements on the Management of Networks with Constrained Devices",
      "section_title": true,
      "ja": "3. 制約のあるデバイスによるネットワーク管理の要件"
    },
    {
      "indent": 3,
      "text": "This section describes the requirements categorized by management areas listed in subsections.",
      "ja": "このセクションでは、サブセクションにリストされている管理領域ごとに分類された要件について説明します。"
    },
    {
      "indent": 0,
      "text": " Note that the requirements listed in this section have been separated from the context in which they may appear. In general, this document does not recommend the realization of any subset of the described requirements. As such, this document avoids selecting any of the requirements as mandatory to implement. A device might be able to provide only a particular selected set of requirements and might not be capable to provide all requirements in this document. On the other hand, a device vendor might select a specific relevant subset of the requirements to implement.",
      "ja": "このセクションにリストされている要件は、それらが表示される可能性があるコンテキストから分離されていることに注意してください。一般に、このドキュメントでは、説明されている要件のサブセットの実現を推奨していません。そのため、このドキュメントでは、実装するために必須として要件を選択することを避けています。デバイスは、特定の選択された要件セットのみを提供でき、このドキュメントのすべての要件を提供できない場合があります。一方、デバイスベンダーは、実装する要件の特定の関連サブセットを選択する場合があります。"
    },
    {
      "indent": 3,
      "text": "The following template is used for the definition of the requirements.",
      "ja": "要件の定義には、次のテンプレートが使用されます。"
    },
    {
      "indent": 3,
      "text": "Req-ID: An ID composed of two numbers: a section number indicating the topic area and a unique three-digit number per section.",
      "ja": "Req-ID：トピック領域を示すセクション番号とセクションごとに一意の3桁の番号の2つの番号で構成されるID。"
    },
    {
      "indent": 3,
      "text": "Title: The title of the requirement.",
      "ja": "タイトル：要件のタイトル。"
    },
    {
      "indent": 3,
      "text": "Description: The rationale and description of the requirement.",
      "ja": "説明：要件の根拠と説明。"
    },
    {
      "indent": 3,
      "text": "Source: The origin of the requirement and the matching use case or application. For the discussion of referred use cases for constrained management, please see [RFC7548].",
      "ja": "出典：要件の起点と一致するユースケースまたはアプリケーション。制約付き管理の参照ユースケースの説明については、[RFC7548]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement, Non-functional Requirement. A functional requirement is related to a function or component. As such, functional requirements may be technical details or specific functionality that define what a system is supposed to accomplish. Non-functional requirements (also known as design constraints or quality requirements) impose implementation-related considerations such as performance requirements, security, or reliability.",
      "ja": "要件タイプ：機能要件、非機能要件。機能要件は、機能またはコンポーネントに関連しています。したがって、機能要件は、システムが達成することになっているものを定義する技術的な詳細または特定の機能である場合があります。非機能要件（設計制約または品質要件とも呼ばれます）は、パフォーマンス要件、セキュリティ、信頼性などの実装関連の考慮事項を課します。"
    },
    {
      "indent": 3,
      "text": "Device type: The device types by which this requirement can be supported: C0, C1, and/or C2.",
      "ja": "デバイスタイプ：この要件をサポートできるデバイスタイプ：C0、C1、C2。"
    },
    {
      "indent": 3,
      "text": "Priority: The priority of the requirement showing its importance for a particular type of device: High, Medium, and Low. The priority of a requirement can be High, e.g., for a C2 device, but Low for a C1 or C0 device, as the realization of complex features in a C1 device is in many cases not possible.",
      "ja": "優先度：特定の種類のデバイス（高、中、低）の重要性を示す要件の優先度。要件の優先度は、C2デバイスなどでは高く、C1またはC0デバイスでは低くすることができます。これは、C1デバイスで複雑な機能を実現できないことが多いためです。"
    },
    {
      "indent": 0,
      "text": "3.1. Management Architecture/System",
      "section_title": true,
      "ja": "3.1. 管理アーキテクチャ/システム"
    },
    {
      "indent": 3,
      "text": "Req-ID: 1.001",
      "ja": "リクエストID：1.001"
    },
    {
      "indent": 3,
      "text": "Title: Support multiple device classes within a single network",
      "ja": "タイトル：1つのネットワーク内で複数のデバイスクラスをサポートする"
    },
    {
      "indent": 3,
      "text": "Description: Larger networks usually consist of devices belonging to different device classes (e.g., constrained mesh endpoints and less constrained routers) communicating with each other. Hence, the management architecture must be applicable to networks that have a mix of different device classes. See Section 3 of [RFC7228] for the definition of Constrained Device Classes.",
      "ja": "説明：大規模なネットワークは通常、互いに通信するさまざまなデバイスクラス（制約されたメッシュエンドポイントや制約の少ないルーターなど）に属するデバイスで構成されます。したがって、管理アーキテクチャは、異なるデバイスクラスが混在するネットワークに適用できる必要があります。制約付きデバイスクラスの定義については、[RFC7228]のセクション3をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Source: All use cases",
      "ja": "出典：すべてのユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C1 and/or C2",
      "ja": "デバイスタイプ：C1および/またはC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 1.002",
      "ja": "リクエストID：1.002"
    },
    {
      "indent": 3,
      "text": "Title: Management scalability",
      "ja": "タイトル：管理のスケーラビリティ"
    },
    {
      "indent": 3,
      "text": "Description: The management architecture must be able to scale with the number of devices involved and operate efficiently in any network size and topology. This implies that, e.g., the managing entity is able to handle large amounts of device monitoring data and the management protocol is not sensitive to the decrease of the time between two client requests. To achieve good scalability, caching techniques, in-network data aggregation techniques, and hierarchical management models may be used.",
      "ja": "説明：管理アーキテクチャは、関与するデバイスの数に合わせて拡張でき、あらゆるネットワークサイズとトポロジで効率的に動作できる必要があります。これは、たとえば、管理エンティティが大量のデバイス監視データを処理でき、管理プロトコルが2つのクライアント要求間の時間の減少に影響されないことを意味します。優れたスケーラビリティを実現するために、キャッシング手法、ネットワーク内データ集約手法、および階層管理モデルを使用できます。"
    },
    {
      "indent": 3,
      "text": "Source: General requirement for all use cases to enable large-scale networks",
      "ja": "出典：大規模ネットワークを実現するためのすべてのユースケースの一般要件"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": " Req-ID: 1.003 Title: Hierarchical management",
      "ja": "Req-ID：1.003 Title：階層管理"
    },
    {
      "indent": 3,
      "text": "Description: Provide a means of hierarchical management, i.e., provide intermediary management entities on different levels, which can take over the responsibility for the management of a subhierarchy of the network of constraint devices. The intermediary management entity can, e.g., support management data aggregation to handle, e.g., high-frequent monitoring data or provide a caching mechanism for the uplink and downlink communication. Hierarchical management contributes to management scalability.",
      "ja": "説明：階層管理の手段を提供します。つまり、さまざまなレベルの中間管理エンティティを提供します。これにより、制約デバイスのネットワークの下位階層の管理を引き継ぐことができます。中間管理エンティティは、例えば、管理データ集約をサポートして、例えば、高頻度の監視データを処理するか、またはアップリンクおよびダウンリンク通信のためのキャッシングメカニズムを提供することができる。階層管理は、管理のスケーラビリティに貢献します。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases where a large amount of devices are deployed with a hierarchical topology",
      "ja": "出典：階層型トポロジーで大量のデバイスが展開されているユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: Managing and intermediary entities",
      "ja": "デバイスの種類：管理および仲介エンティティ"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 1.004",
      "ja": "リクエストID：1.004"
    },
    {
      "indent": 3,
      "text": "Title: Minimize state maintained on constrained devices",
      "ja": "タイトル：制約されたデバイスで維持される状態を最小化"
    },
    {
      "indent": 3,
      "text": "Description: The amount of state that needs to be maintained on constrained devices should be minimized. This is important in order to save memory (especially relevant for C0 and C1 devices) and in order to allow devices to restart, for example, to apply configuration changes or to recover from extended periods of inactivity.",
      "ja": "説明：制約のあるデバイスで維持する必要がある状態の量を最小限に抑える必要があります。これは、メモリを節約する（特にC0およびC1デバイスに関連する）ため、およびデバイスを再起動できるようにするために重要です。たとえば、構成の変更を適用したり、長期間の非アクティブ状態から回復したりできます。"
    },
    {
      "indent": 3,
      "text": "Note: One way to achieve this is to adopt a RESTful architecture that minimizes the amount of state maintained by managed constrained devices and that makes resources of a device addressable via URIs.",
      "ja": "注：これを実現する1つの方法は、管理された制約付きデバイスによって維持される状態の量を最小限に抑え、デバイスのリソースをURI経由でアドレス可能にするRESTfulアーキテクチャを採用することです。"
    },
    {
      "indent": 3,
      "text": "Source: Basic requirement that concerns all use cases",
      "ja": "出典：すべてのユースケースに関連する基本要件"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 0,
      "text": "   ---\n   Req-ID:  1.005",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Title: Automatic resynchronization with eventual consistency",
      "ja": "タイトル：結果整合性を備えた自動再同期"
    },
    {
      "indent": 3,
      "text": "Description: To support large scale networks, where some constrained devices may be offline at any point in time, it is necessary to distribute configuration parameters in a way that allows temporary inconsistencies but eventually converges, after a sufficiently long period of time without further changes, towards global consistency.",
      "ja": "説明：大規模なネットワークをサポートするには、制約のある一部のデバイスがいつでもオフラインになる可能性があるため、一時的な不整合を許容しながら、さらに変更を加えずに十分な時間をかけて最終的に収束するように構成パラメーターを配布する必要があります。グローバルな一貫性に向けて。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases with large-scale networks with many devices",
      "ja": "出典：多くのデバイスを含む大規模ネットワークの使用例"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 1.006",
      "ja": "リクエストID：1.006"
    },
    {
      "indent": 3,
      "text": "Title: Support for lossy links and unreachable devices",
      "ja": "タイトル：非可逆リンクと到達不能なデバイスのサポート"
    },
    {
      "indent": 3,
      "text": "Description: Some constrained devices will only be able to support lossy and unreliable links characterized by a limited data rate, a high latency, and a high transmission error rate. Furthermore, constrained devices often duty cycle their radio or the whole device in order to save energy. Some classes of devices labeled as 'sleepy endpoints' set their network links to a disconnected state during long periods of time. In all cases, the management system must not assume that constrained devices are always reachable.",
      "ja": "説明：一部の制約付きデバイスは、データレートが制限され、レイテンシが高く、伝送エラーレートが高いという、損失の多い信頼できないリンクのみをサポートできます。さらに、制約のあるデバイスは、多くの場合、エネルギーを節約するために、無線またはデバイス全体をデューティサイクルします。 「スリーピーエンドポイント」とラベル付けされた一部のデバイスクラスは、長期間にわたってネットワークリンクを切断状態に設定します。すべての場合において、管理システムは、制約されたデバイスが常に到達可能であると想定してはなりません。"
    },
    {
      "indent": 3,
      "text": "Source: Basic requirement for networks of constrained devices with unreliable links and constrained devices that sleep to save energy",
      "ja": "出典：信頼性の低いリンクを備えた制約付きデバイスと、スリープしてエネルギーを節約する制約付きデバイスのネットワークの基本要件"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 0,
      "text": "   ---\n   Req-ID:  1.007",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Title: Network-wide configuration",
      "ja": "タイトル：ネットワーク全体の構成"
    },
    {
      "indent": 3,
      "text": "Description: Provide means by which the behavior of the network can be specified at a level of abstraction (network-wide configuration) higher than a set of configuration information specific to individual devices. It is useful to derive the device-specific configuration from the network-wide configuration. Such a repository can be used to configure predefined device or protocol parameters for the whole network. Furthermore, such a network-wide view can be used to monitor and manage a group of routers or a whole network. For example, monitoring the performance of a network requires information additional to what can be acquired from a single router using a management protocol.",
      "ja": "説明：個々のデバイスに固有の構成情報のセットよりも高い抽象化レベル（ネットワーク全体の構成）でネットワークの動作を指定できる手段を提供します。ネットワーク全体の構成からデバイス固有の構成を取得すると便利です。このようなリポジトリを使用して、ネットワーク全体の事前定義されたデバイスまたはプロトコルパラメータを設定できます。さらに、このようなネットワーク全体のビューを使用して、ルーターのグループまたはネットワーク全体を監視および管理できます。たとえば、ネットワークのパフォーマンスを監視するには、管理プロトコルを使用して単一のルーターから取得できる情報に追加の情報が必要です。"
    },
    {
      "indent": 3,
      "text": "Note: The identification of the relevant subset of the policies to be provisioned is according to the capabilities of each device and can be obtained from a preconfigured data-repository.",
      "ja": "注：プロビジョニングされるポリシーの関連サブセットの識別は、各デバイスの機能に従っており、事前構成されたデータリポジトリから取得できます。"
    },
    {
      "indent": 3,
      "text": "Source: In general, all use cases of network and device configuration based on a network view in a top-down manner",
      "ja": "出典：一般に、ネットワークとデバイス構成のすべてのユースケースは、トップダウン方式のネットワークビューに基づいています。"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 1.008",
      "ja": "リクエストID：1.008"
    },
    {
      "indent": 3,
      "text": "Title: Distributed management",
      "ja": "タイトル：分散管理"
    },
    {
      "indent": 3,
      "text": "Description: Provide a means of simple distributed management, where a network of constrained devices can be managed or monitored by more than one manager. Since the connectivity to a server cannot be guaranteed at all times, a distributed approach may provide higher reliability, at the cost of increased complexity. This requirement implies the handling of data consistency in case of concurrent read and write access to the device datastore. It might also happen that no management (configuration) server is accessible and the only reachable node is a peer device. In this case, the device should be able to obtain its configuration from peer devices.",
      "ja": "説明：制約のあるデバイスのネットワークを複数のマネージャーが管理または監視できる、シンプルな分散管理の手段を提供します。サーバーへの接続は常に保証できるわけではないため、分散型のアプローチでは、複雑さが増すという犠牲を払って、より高い信頼性が得られる場合があります。この要件は、デバイスデータストアへの同時読み取りおよび書き込みアクセスが発生した場合のデータ整合性の処理を意味します。また、管理（構成）サーバーにアクセスできず、到達可能な唯一のノードがピアデバイスである場合もあります。この場合、デバイスはピアデバイスから設定を取得できる必要があります。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases where the count of devices to manage is high",
      "ja": "出典：管理するデバイスの数が多いユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C1 and C2",
      "ja": "デバイスタイプ：C1およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 0,
      "text": "3.2. Management Protocols and Data Models",
      "section_title": true,
      "ja": "3.2. 管理プロトコルとデータモデル"
    },
    {
      "indent": 3,
      "text": "Req-ID: 2.001",
      "ja": "リクエストID：2.001"
    },
    {
      "indent": 3,
      "text": "Title: Modular implementation of management protocols",
      "ja": "タイトル：管理プロトコルのモジュール式実装"
    },
    {
      "indent": 3,
      "text": "Description: Management protocols should be specified to allow for modular implementations, i.e., it should be possible to implement only a basic set of protocol primitives on highly constrained devices, while devices with additional resources may provide more support for additional protocol primitives. See Section 1.7 for a discussion on the level of configuration management and monitoring support constrained devices may provide.",
      "ja": "説明：モジュール式の実装を可能にするために管理プロトコルを指定する必要があります。つまり、制約の厳しいデバイスにプロトコルプリミティブの基本セットのみを実装できるようにする必要があります。追加のリソースを持つデバイスは、追加のプロトコルプリミティブのサポートを提供できます。制約付きデバイスが提供する可能性のある構成管理および監視サポートのレベルについては、セクション1.7を参照してください。"
    },
    {
      "indent": 3,
      "text": "Source: Basic requirement interesting for all use cases",
      "ja": "出典：すべてのユースケースにとって興味深い基本要件"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 2.002",
      "ja": "リクエストID：2.002"
    },
    {
      "indent": 3,
      "text": "Title: Compact encoding of management data",
      "ja": "タイトル：管理データのコンパクトなエンコーディング"
    },
    {
      "indent": 3,
      "text": "Description: The encoding of management data should be compact and space efficient, enabling small message sizes.",
      "ja": "説明：管理データのエンコードはコンパクトでスペース効率がよく、小さいメッセージサイズを可能にする必要があります。"
    },
    {
      "indent": 3,
      "text": "Source: General requirement to save memory for the receiver buffer and on-air bandwidth",
      "ja": "出典：レシーバーバッファーとオンエア帯域幅のメモリを節約するための一般的な要件"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 2.003",
      "ja": "リクエストID：2.003"
    },
    {
      "indent": 3,
      "text": "Title: Compression of management data or complete messages",
      "ja": "タイトル：管理データまたは完全なメッセージの圧縮"
    },
    {
      "indent": 3,
      "text": "Description: Management data exchanges can be further optimized by applying data compression techniques or delta encoding techniques. Compression typically requires additional code size and some additional buffers and/or the maintenance of some additional state information. For C0 devices, compression may not be feasible.",
      "ja": "説明：管理データ交換は、データ圧縮技術またはデルタエンコーディング技術を適用することにより、さらに最適化できます。通常、圧縮には、追加のコードサイズといくつかの追加のバッファー、および/またはいくつかの追加の状態情報の維持が必要です。 C0デバイスの場合、圧縮は実行できない場合があります。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases where it is beneficial to reduce transmission time and bandwidth, e.g., mobile applications that require saving on-air bandwidth",
      "ja": "出典：伝送時間と帯域幅を削減することが有益である使用例（オンエア帯域幅の節約が必要なモバイルアプリケーションなど）"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C1 and C2",
      "ja": "デバイスタイプ：C1およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 2.004",
      "ja": "リクエストID：2.004"
    },
    {
      "indent": 3,
      "text": "Title: Mapping of management protocol interactions",
      "ja": "タイトル：管理プロトコルの相互作用のマッピング"
    },
    {
      "indent": 3,
      "text": "Description: It is desirable to have a lossless automated mapping between the management protocol used to manage constrained devices and the management protocols used to manage regular devices. In the ideal case, the same core management protocol can be used with certain restrictions taking into account the resource limitations of constrained devices. However, for very resource-constrained devices, this goal might not be achievable.",
      "ja": "説明：制約のあるデバイスを管理するために使用される管理プロトコルと、通常のデバイスを管理するために使用される管理プロトコルの間で、ロスレス自動マッピングを行うことが望ましいです。理想的なケースでは、制約のあるデバイスのリソース制限を考慮した一定の制限付きで、同じコア管理プロトコルを使用できます。ただし、リソースが非常に限られているデバイスでは、この目標を達成できない場合があります。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases where high-frequency interaction with the management system of a unconstrained network is required",
      "ja": "出典：制約のないネットワークの管理システムとの高頻度の相互作用が必要なユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C1 and C2",
      "ja": "デバイスタイプ：C1およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 0,
      "text": "   ---\n   Req-ID:  2.005",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Title: Consistency of data models with the underlying information model",
      "ja": "タイトル：データモデルと基盤となる情報モデルとの整合性"
    },
    {
      "indent": 3,
      "text": "Description: The data models used by the management protocol must be consistent with the information model used to define data models for unconstrained networks. This is essential to facilitate the integration of the management of constrained networks with the management of unconstrained networks. Using an underlying information model for future data model design enables further top-down model design and model reuse as well as data interoperability (i.e., exchange of management information between the constrained and unconstrained networks). This is a strong requirement, despite the fact that the underlying information models are often not explicitly documented in the IETF.",
      "ja": "説明：管理プロトコルで使用されるデータモデルは、制約のないネットワークのデータモデルを定義するために使用される情報モデルと一致している必要があります。これは、制約のあるネットワークの管理と制約のないネットワークの管理の統合を促進するために不可欠です。将来のデータモデル設計に基礎となる情報モデルを使用すると、さらにトップダウンのモデル設計とモデルの再利用、およびデータの相互運用性（つまり、制約付きネットワークと制約なしネットワーク間の管理情報の交換）が可能になります。根本的な情報モデルがIETFに明示的に文書化されていないことが多いという事実にもかかわらず、これは強力な要件です。"
    },
    {
      "indent": 3,
      "text": "Source: General requirement to support data interoperability, consistency, and model reuse",
      "ja": "出典：データの相互運用性、一貫性、モデルの再利用をサポートするための一般的な要件"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 2.006",
      "ja": "リクエストID：2.006"
    },
    {
      "indent": 3,
      "text": "Title: Lossless mapping of management data models",
      "ja": "タイトル：管理データモデルの可逆マッピング"
    },
    {
      "indent": 3,
      "text": "Description: It is desirable to have a lossless automated mapping between the management data models used to manage regular devices and the management data models used for managing constrained devices. In the ideal case, the same core data models can be used with certain restrictions taking into account the resource limitations of constrained devices. However, for very resource-constrained devices, this goal might not be achievable.",
      "ja": "説明：通常のデバイスを管理するために使用される管理データモデルと、制約されたデバイスを管理するために使用される管理データモデルとの間で、ロスレスの自動マッピングを行うことが望ましいです。理想的なケースでは、制約のあるデバイスのリソース制限を考慮して、特定の制限付きで同じコアデータモデルを使用できます。ただし、リソースが非常に限られているデバイスでは、この目標を達成できない場合があります。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases where consistent data exchange with the management system of a unconstrained network is required",
      "ja": "出典：制約のないネットワークの管理システムとの一貫したデータ交換が必要なユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C2",
      "ja": "デバイスタイプ：C2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 2.007",
      "ja": "リクエストID：2.007"
    },
    {
      "indent": 3,
      "text": "Title: Protocol extensibility",
      "ja": "タイトル：プロトコルの拡張性"
    },
    {
      "indent": 3,
      "text": "Description: Provide means of extensibility for the management protocol, i.e., by adding new protocol messages or mechanisms that can deal with changing requirements on a supported message and data types effectively, without causing interoperability problems or having to replace/update large amount of deployed devices.",
      "ja": "説明：管理プロトコルの拡張性の手段を提供します。つまり、相互運用性の問題を引き起こしたり、展開された大量のデバイスを交換/更新したりすることなく、サポートされるメッセージとデータ型の要件の変化に効果的に対処できる新しいプロトコルメッセージまたはメカニズムを追加します。 。"
    },
    {
      "indent": 3,
      "text": "Source: Basic requirement useful for all use cases",
      "ja": "出典：すべてのユースケースに役立つ基本要件"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 0,
      "text": "3.3. Configuration Management",
      "section_title": true,
      "ja": "3.3. 構成管理"
    },
    {
      "indent": 3,
      "text": "Req-ID: 3.001",
      "ja": "リクエストID：3.001"
    },
    {
      "indent": 3,
      "text": "Title: Self-configuration capability",
      "ja": "タイトル：自己構成機能"
    },
    {
      "indent": 3,
      "text": "Description: Automatic configuration and reconfiguration of devices without manual intervention. Compared to the traditional management of devices where the management application is the central entity configuring the devices, in the autoconfiguration scenario the device is the active part and initiates the configuration process. Self-configuration can be initiated during the initial configuration or for subsequent configurations, where the configuration data needs to be refreshed. Self-configuration should be also supported during the initialization phase or in the event of failures, where prior knowledge of the network topology is not available or the topology of the network is uncertain.",
      "ja": "説明：手動による介入なしのデバイスの自動構成および再構成。管理アプリケーションがデバイスを構成する中心的なエンティティである従来のデバイス管理と比較して、自動構成シナリオでは、デバイスがアクティブな部分であり、構成プロセスを開始します。自己構成は、初期構成中に、または構成データを更新する必要がある後続の構成に対して開始できます。自己構成は、初期化フェーズ中、またはネットワークトポロジーの事前の知識が利用できない、またはネットワークのトポロジーが不確かな障害が発生した場合にもサポートされます。"
    },
    {
      "indent": 3,
      "text": "Source: In general, all use cases requiring easy deployment and plug&play behavior as well as easy maintenance of many constrained devices",
      "ja": "出典：一般に、簡単な導入とプラグアンドプレイ動作、および制約された多くのデバイスの簡単なメンテナンスを必要とするすべてのユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High for device categories C0 and C1; Medium for C2",
      "ja": "優先度：デバイスカテゴリC0およびC1の場合は高。 C2のミディアム"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 3.002",
      "ja": "リクエストID：3.002"
    },
    {
      "indent": 3,
      "text": "Title: Capability discovery",
      "ja": "タイトル：能力発見"
    },
    {
      "indent": 3,
      "text": "Description: Enable the discovery of supported optional management capabilities of a device and their exposure via at least one protocol and/or data model.",
      "ja": "説明：デバイスのサポートされているオプションの管理機能の検出と、少なくとも1つのプロトコルまたはデータモデル、あるいはその両方を介したデバイスの公開を有効にします。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases where the device interaction with other devices or applications is a function of the level of support for its capabilities",
      "ja": "出典：他のデバイスまたはアプリケーションとのデバイスの相互作用が、その機能のサポートレベルの関数であるユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C1 and C2",
      "ja": "デバイスタイプ：C1およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 3.003",
      "ja": "リクエストID：3.003"
    },
    {
      "indent": 3,
      "text": "Title: Asynchronous transaction support",
      "ja": "タイトル：非同期トランザクションのサポート"
    },
    {
      "indent": 3,
      "text": "Description: Provide configuration management with asynchronous (event-driven) transaction support. Configuration operations must support a transactional model, with asynchronous indications that the transaction was completed.",
      "ja": "説明：構成管理に非同期（イベント駆動型）トランザクションサポートを提供します。構成操作は、トランザクションが完了したことを非同期的に示すトランザクションモデルをサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases that require transaction-oriented processing because of reliability or distributed architecture functional requirements",
      "ja": "出典：信頼性または分散アーキテクチャの機能要件のためにトランザクション指向の処理を必要とするユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C1 and C2",
      "ja": "デバイスタイプ：C1およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 0,
      "text": "   ---\n   Req-ID:  3.004",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Title: Network reconfiguration",
      "ja": "タイトル：ネットワークの再構成"
    },
    {
      "indent": 3,
      "text": "Description: Provide a means of iterative network reconfiguration in order to recover the network from node and communication failures. The network reconfiguration can be failure-driven and self-initiated (automatic reconfiguration). The network reconfiguration can be also performed on the whole hierarchical structure of a network (network topology).",
      "ja": "説明：ノードおよび通信障害からネットワークを回復するために、反復的なネットワーク再構成の手段を提供します。ネットワークの再構成は、障害主導型で、自動で開始できます（自動再構成）。ネットワークの再構成は、ネットワークの階層構造全体（ネットワークトポロジ）に対しても実行できます。"
    },
    {
      "indent": 3,
      "text": "Source: Practically all use cases, as network connectivity is a basic requirement",
      "ja": "出典：ネットワーク接続が基本的な要件であるため、実質的にすべてのユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 0,
      "text": "3.4. Monitoring Functionality",
      "section_title": true,
      "ja": "3.4. 監視機能"
    },
    {
      "indent": 3,
      "text": "Req-ID: 4.001",
      "ja": "リクエストID：4.001"
    },
    {
      "indent": 3,
      "text": "Title: Device status monitoring",
      "ja": "タイトル：デバイスステータスの監視"
    },
    {
      "indent": 3,
      "text": "Description: Provide a monitoring function to collect and expose information about device status and expose it via at least one management interface. The device monitoring might make use of the hierarchical management through the intermediary entities and the caching mechanism. The device monitoring might also make use of neighbor-monitoring (fault detection in the local network) to support fast fault detection and recovery, e.g., in a scenario where a managing entity is unreachable and a neighbor can take over the monitoring responsibility.",
      "ja": "説明：デバイスのステータスに関する情報を収集して公開し、少なくとも1つの管理インターフェイスを介して公開する監視機能を提供します。デバイスの監視では、中間エンティティとキャッシングメカニズムによる階層管理を利用できます。デバイスの監視では、ネイバーモニタリング（ローカルネットワークでの障害検出）を利用して、障害の迅速な検出と回復をサポートすることもできます（たとえば、管理エンティティに到達できず、ネイバーが監視の責任を引き継ぐことができる場合）。"
    },
    {
      "indent": 3,
      "text": "Source: All use cases",
      "ja": "出典：すべてのユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High; Medium for neighbor-monitoring",
      "ja": "優先度：高。ネイバーモニタリング用のメディア"
    },
    {
      "indent": 0,
      "text": "   ---\n   Req-ID:  4.002",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Title: Energy status monitoring",
      "ja": "タイトル：エネルギー状態監視"
    },
    {
      "indent": 3,
      "text": "Description: Provide a monitoring function to collect and expose information about device energy parameters and usage (e.g., battery level and average power consumption).",
      "ja": "説明：デバイスのエネルギーパラメーターと使用状況（バッテリーレベルや平均消費電力など）に関する情報を収集して公開するための監視機能を提供します。"
    },
    {
      "indent": 3,
      "text": "Source: Use case \"Energy Management\"",
      "ja": "出典：ユースケース「エネルギー管理」"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High for energy reporting devices; Low for others",
      "ja": "優先度：エネルギー報告デバイスの場合は高。他の人にとっては低い"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 4.003",
      "ja": "リクエストID：4.003"
    },
    {
      "indent": 3,
      "text": "Title: Monitoring of current and estimated device availability",
      "ja": "タイトル：現在および推定されるデバイスの可用性の監視"
    },
    {
      "indent": 3,
      "text": "Description: Provide a monitoring function to collect and expose information about current device availability (energy, memory, computing power, forwarding-plane utilization, queue buffers, etc.) and estimation of remaining available resources.",
      "ja": "説明：現在のデバイスの可用性（エネルギー、メモリ、計算能力、フォワーディングプレーンの使用率、キューバッファーなど）および残りの利用可能なリソースの推定に関する情報を収集して公開する監視機能を提供します。"
    },
    {
      "indent": 3,
      "text": "Source: All use cases. Note that monitoring energy resources (like battery status) may be required on all kinds of devices.",
      "ja": "出典：すべてのユースケース。すべての種類のデバイスで、エネルギーリソースの監視（バッテリーの状態など）が必要になる場合があることに注意してください。"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 0,
      "text": "   ---\n   Req-ID:  4.004",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Title: Network status monitoring",
      "ja": "タイトル：ネットワークステータスの監視"
    },
    {
      "indent": 3,
      "text": "Description: Provide a monitoring function to collect, analyze, and expose information related to the status of a network or network segments connected to the interface of the device.",
      "ja": "説明：デバイスのインターフェースに接続されているネットワークまたはネットワークセグメントのステータスに関連する情報を収集、分析、公開するための監視機能を提供します。"
    },
    {
      "indent": 3,
      "text": "Source: All use cases",
      "ja": "出典：すべてのユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C1 and C2",
      "ja": "デバイスタイプ：C1およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Low, based on the realization complexity",
      "ja": "優先度：低、実現の複雑さに基づく"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 4.005",
      "ja": "リクエストID：4.005"
    },
    {
      "indent": 3,
      "text": "Title: Self-monitoring",
      "ja": "タイトル：自己監視"
    },
    {
      "indent": 3,
      "text": "Description: Provide self-monitoring (local fault detection) feature for fast fault detection and recovery.",
      "ja": "説明：迅速な障害検出と回復のための自己監視（ローカル障害検出）機能を提供します。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases where the devices cannot be monitored centrally in an appropriate manner, e.g., self-healing is required",
      "ja": "出典：デバイスを適切な方法で一元的に監視できない、たとえば自己修復が必要なユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C1 and C2",
      "ja": "デバイスタイプ：C1およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High for C2; Medium for C1",
      "ja": "優先度：C2の場合は高。 C1のミディアム"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 4.006",
      "ja": "リクエストID：4.006"
    },
    {
      "indent": 3,
      "text": "Title: Performance monitoring",
      "ja": "タイトル：パフォーマンス監視"
    },
    {
      "indent": 3,
      "text": "Description: The device will provide a monitoring function to collect and expose information about the basic performance parameter of the device. The performance management functionality might make use of the hierarchical management through the intermediary devices.",
      "ja": "説明：デバイスは、デバイスの基本的なパフォーマンスパラメーターに関する情報を収集して公開する監視機能を提供します。パフォーマンス管理機能は、中間デバイスを介した階層管理を利用する場合があります。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases \"Building Automation\" and \"Transport Applications\"",
      "ja": "出典：ユースケース「ビルディングオートメーション」および「トランスポートアプリケーション」"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C1 and C2",
      "ja": "デバイスタイプ：C1およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Low",
      "ja": "優先度：低"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 4.007",
      "ja": "リクエストID：4.007"
    },
    {
      "indent": 3,
      "text": "Title: Fault detection monitoring",
      "ja": "タイトル：障害検出監視"
    },
    {
      "indent": 3,
      "text": "Description: The device will provide fault detection monitoring. The system collects information about network states in order to identify whether faults have occurred. In some cases, the detection of the faults might be based on the processing and analysis of the parameters retrieved from the network or other devices. In case of C0 devices, the monitoring might be limited to the check whether or not the device is alive.",
      "ja": "説明：デバイスは障害検出監視を提供します。システムは、ネットワーク状態に関する情報を収集して、障害が発生したかどうかを識別します。場合によっては、障害の検出は、ネットワークまたは他のデバイスから取得されたパラメーターの処理と分析に基づく場合があります。 C0デバイスの場合、監視はデバイスが生きているかどうかのチェックに限定される場合があります。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases \"Environmental Monitoring\", \"Building Automation\", \"Energy Management\", \"Infrastructure Monitoring\"",
      "ja": "出典：ユースケース「環境モニタリング」、「ビルディングオートメーション」、「エネルギー管理」、「インフラストラクチャモニタリング」"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1 and C2",
      "ja": "デバイスタイプ：C0、C1、C2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 4.008",
      "ja": "リクエストID：4.008"
    },
    {
      "indent": 3,
      "text": "Title: Passive and reactive monitoring",
      "ja": "タイトル：パッシブおよびリアクティブモニタリング"
    },
    {
      "indent": 3,
      "text": "Description: The device will provide passive and reactive monitoring capabilities. The system or manager collects information about device components and network states (passive monitoring) and may perform postmortem analysis of collected data. In case events of interest have occurred, the system or the manager can adaptively react (reactive monitoring), e.g., reconfigure the network. Typically, actions (reactions) will be executed or sent as commands by the management applications.",
      "ja": "説明：デバイスは、受動的および反応的な監視機能を提供します。システムまたはマネージャは、デバイスコンポーネントとネットワークの状態に関する情報を収集し（パッシブモニタリング）、収集したデータの事後分析を実行できます。関心のあるイベントが発生した場合、システムまたはマネージャーは、ネットワークを再構成するなど、適応的に対応することができます（対応監視）。通常、アクション（リアクション）は、管理アプリケーションによってコマンドとして実行または送信されます。"
    },
    {
      "indent": 3,
      "text": "Source: Diverse use cases relevant for device status and network state monitoring",
      "ja": "出典：デバイスのステータスとネットワーク状態の監視に関連するさまざまなユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C2",
      "ja": "デバイスタイプ：C2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 4.009",
      "ja": "リクエストID：4.009"
    },
    {
      "indent": 3,
      "text": "Title: Recovery",
      "ja": "タイトル：Recovery"
    },
    {
      "indent": 3,
      "text": "Description: Provide local, central and hierarchical recovery mechanisms (recovery is in some cases achieved by recovering the whole network of constrained devices).",
      "ja": "説明：ローカル、中央、および階層型の回復メカニズムを提供します（回復は、制約されたデバイスのネットワーク全体を回復することによって達成される場合があります）。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases \"Industrial Applications\", \"Home Automation\", and \"Building Automation\", as well as mobile applications that involve different forms of clustering or area managers",
      "ja": "出典：ユースケース「インダストリアルアプリケーション」、「ホームオートメーション」、「ビルディングオートメーション」、およびクラスタリングやエリアマネージャのさまざまな形式を含むモバイルアプリケーション"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C2",
      "ja": "デバイスタイプ：C2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 4.010",
      "ja": "リクエストID：4.010"
    },
    {
      "indent": 3,
      "text": "Title: Network topology discovery",
      "ja": "タイトル：ネットワークトポロジの検出"
    },
    {
      "indent": 3,
      "text": "Description: Provide a network topology discovery capability (e.g., use of topology extraction algorithms to retrieve the network state) and a monitoring function to collect and expose information about the network topology.",
      "ja": "説明：ネットワークトポロジー検出機能（トポロジー抽出アルゴリズムを使用してネットワーク状態を取得するなど）と、ネットワークトポロジーに関する情報を収集して公開する監視機能を提供します。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases \"Community Network Applications\" and mobile applications",
      "ja": "出典：ユースケース「コミュニティネットワークアプリケーション」およびモバイルアプリケーション"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C1 and C2",
      "ja": "デバイスタイプ：C1およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Low, based on the realization complexity",
      "ja": "優先度：低、実現の複雑さに基づく"
    },
    {
      "indent": 0,
      "text": "   ---\n   Req-ID:  4.011",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Title: Notifications",
      "ja": "タイトル：通知"
    },
    {
      "indent": 3,
      "text": "Description: The device will provide the capability of sending notifications on critical events and faults.",
      "ja": "説明：デバイスは、重要なイベントや障害に関する通知を送信する機能を提供します。"
    },
    {
      "indent": 3,
      "text": "Source: All use cases",
      "ja": "出典：すべてのユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium for C2; Low for C0 and C1",
      "ja": "優先度：C2の場合は中。 C0およびC1の場合は低い"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 4.012",
      "ja": "リクエストID：4.012"
    },
    {
      "indent": 3,
      "text": "Title: Logging",
      "ja": "タイトル：ロギング"
    },
    {
      "indent": 3,
      "text": "Description: The device will provide the capability of building, keeping, and allowing retrieval of logs of events (including but not limited to critical faults and alarms).",
      "ja": "説明：このデバイスは、イベントのログ（重大な障害やアラームを含むがこれに限定されません）の構築、維持、および取得を可能にする機能を提供します。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases \"Industrial Applications\", \"Building Automation\", and \"Infrastructure Monitoring\"",
      "ja": "出典：ユースケース「産業用アプリケーション」、「ビルディングオートメーション」、「インフラストラクチャモニタリング」"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C2",
      "ja": "デバイスタイプ：C2"
    },
    {
      "indent": 3,
      "text": "Priority: High for some medical or industrial applications; Medium otherwise",
      "ja": "優先度：一部の医療または産業用アプリケーションでは高。それ以外の場合は中"
    },
    {
      "indent": 0,
      "text": "3.5. Self-Management",
      "section_title": true,
      "ja": "3.5. 自己管理"
    },
    {
      "indent": 3,
      "text": "Req-ID: 5.001",
      "ja": "リクエストID：5.001"
    },
    {
      "indent": 3,
      "text": "Title: Self-management -- Self-healing",
      "ja": "タイトル：Self-management-Self-healing"
    },
    {
      "indent": 0,
      "text": " Description: Enable event-driven and/or periodic self-management functionality in a device. The device should be able to react in case of a failure, e.g., by initiating a fully or partly reset and initiate a self-configuration or management data update as necessary. A device might be further able to check for failures cyclically or on a schedule in order to trigger self-management as necessary. It is a matter of device design and subject for discussion how much self-management a C1 device can support.",
      "ja": "説明：デバイスでイベント駆動型または定期的な自己管理機能を有効にします。デバイスは、障害が発生した場合に、たとえば、完全にまたは部分的にリセットを開始し、必要に応じて自己構成または管理データの更新を開始することで対応できる必要があります。デバイスは、必要に応じて自己管理をトリガーするために、障害を周期的にまたはスケジュールに従ってさらにチェックできる場合があります。それはデバイスの設計の問題であり、C1デバイスがどれだけの自己管理をサポートできるかについての議論の主題です。"
    },
    {
      "indent": 6,
      "text": "Failure detection and self-management logic are assumed to be generally useful for the self-healing of a device.",
      "ja": "障害検出と自己管理ロジックは、デバイスの自己修復に一般的に役立つと想定されています。"
    },
    {
      "indent": 3,
      "text": "Source: The requirement generally relates to all use cases in this document.",
      "ja": "出典：要件は通常、このドキュメントのすべてのユースケースに関連しています。"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C1 and C2",
      "ja": "デバイスタイプ：C1およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High for C2; Medium for C1",
      "ja": "優先度：C2の場合は高。 C1のミディアム"
    },
    {
      "indent": 0,
      "text": "3.6. Security and Access Control",
      "section_title": true,
      "ja": "3.6. セキュリティとアクセス制御"
    },
    {
      "indent": 3,
      "text": "Req-ID: 6.001",
      "ja": "リクエストID：6.001"
    },
    {
      "indent": 3,
      "text": "Title: Authentication of management system and devices",
      "ja": "タイトル：管理システムとデバイスの認証"
    },
    {
      "indent": 3,
      "text": "Description: Systems having a management role must be properly authenticated to the device such that the device can exercise proper access control and in particular distinguish rightful management systems from rogue systems. On the other hand, managed devices must authenticate themselves to systems having a management role such that management systems can protect themselves from rogue devices. In certain application scenarios, it is possible that a large number of devices need to be (re-)started at about the same time. Protocols and authentication systems should be designed such that a large number of devices (re-)starting simultaneously does not negatively impact the device authentication process.",
      "ja": "説明：管理役割を持つシステムは、デバイスが適切なアクセス制御を実行できるように、また特に正当な管理システムと不正なシステムを区別できるように、デバイスに対して適切に認証される必要があります。一方、管理対象デバイスは、管理システムが不正なデバイスから自分自身を保護できるように、管理の役割を持つシステムに対して自身を認証する必要があります。特定のアプリケーションシナリオでは、多数のデバイスをほぼ同時に（再）起動する必要がある場合があります。プロトコルと認証システムは、同時に再起動する多数のデバイスがデバイス認証プロセスに悪影響を与えないように設計する必要があります。"
    },
    {
      "indent": 3,
      "text": "Source: Basic security requirement for all use cases",
      "ja": "出典：すべてのユースケースの基本的なセキュリティ要件"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High; Medium for the (re-)start of a large number of devices",
      "ja": "優先度：高。多数のデバイスの（再）起動用の媒体"
    },
    {
      "indent": 0,
      "text": "   ---\n   Req-ID:  6.002",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Title: Support suitable security bootstrapping mechanisms",
      "ja": "タイトル：適切なセキュリティブートストラップメカニズムをサポートする"
    },
    {
      "indent": 3,
      "text": "Description: Mechanisms should be supported that simplify the bootstrapping of device that is the discovery of newly deployed devices in order to provide them with appropriate access control permissions.",
      "ja": "説明：デバイスのブートストラップを簡素化するメカニズムをサポートする必要があります。これは、デバイスに適切なアクセス制御パーミッションを提供するために、新しくデプロイされたデバイスの検出です。"
    },
    {
      "indent": 3,
      "text": "Source: Basic security requirement for all use cases",
      "ja": "出典：すべてのユースケースの基本的なセキュリティ要件"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 6.003",
      "ja": "リクエストID：6.003"
    },
    {
      "indent": 3,
      "text": "Title: Access control on management system and devices",
      "ja": "タイトル：管理システムとデバイスのアクセス制御"
    },
    {
      "indent": 3,
      "text": "Description: Systems acting in a management role must provide an access control mechanism that allows the security administrator to restrict which devices can access the managing system (e.g., using an access control white list of known devices). On the other hand, managed constrained devices must provide an access control mechanism that allows the security administrator to restrict how systems in a management role can access the device (e.g., no-access, read-only access, and read-write access).",
      "ja": "説明：管理ロールで動作するシステムは、セキュリティ管理者が管理システムにアクセスできるデバイスを制限できるアクセス制御メカニズムを提供する必要があります（既知のデバイスのアクセス制御ホワイトリストを使用するなど）。一方、管理された制約付きデバイスは、セキュリティ管理者が管理役割のシステムがデバイスにアクセスする方法（例：アクセスなし、読み取り専用アクセス、読み取り/書き込みアクセス）を制限できるアクセス制御メカニズムを提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "Source: Basic security requirement for use cases where access control is essential",
      "ja": "Source: Basic security requirement for use cases where access control is essential"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 6.004",
      "ja": "リクエストID：6.004"
    },
    {
      "indent": 3,
      "text": "Title: Select cryptographic algorithms that are efficient in both code space and execution time",
      "ja": "タイトル：コード空間と実行時間の両方で効率的な暗号アルゴリズムを選択する"
    },
    {
      "indent": 3,
      "text": "Description: Cryptographic algorithms have a major impact in terms of both code size and overall execution time. Therefore, it is necessary to select mandatory to implement cryptographic algorithms that are reasonable to implement with the available code space and that have a small impact at runtime. Furthermore, some wireless technologies (e.g., IEEE 802.15.4) require the support of certain cryptographic algorithms. It might be useful to choose algorithms that are likely to be supported in wireless chipsets for certain wireless technologies.",
      "ja": "Description: Cryptographic algorithms have a major impact in terms of both code size and overall execution time. Therefore, it is necessary to select mandatory to implement cryptographic algorithms that are reasonable to implement with the available code space and that have a small impact at runtime. Furthermore, some wireless technologies (e.g., IEEE 802.15.4) require the support of certain cryptographic algorithms. It might be useful to choose algorithms that are likely to be supported in wireless chipsets for certain wireless technologies."
    },
    {
      "indent": 3,
      "text": "Source: Generic requirement to reduce the footprint and CPU usage of a constrained device",
      "ja": "Source: Generic requirement to reduce the footprint and CPU usage of a constrained device"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "Requirement Type: Non-functional Requirement"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High; Medium for hardware-supported algorithms",
      "ja": "優先度：高。ハードウェアでサポートされているアルゴリズムの場合は中"
    },
    {
      "indent": 0,
      "text": "3.7. Energy Management",
      "section_title": true,
      "ja": "3.7. エネルギー管理"
    },
    {
      "indent": 3,
      "text": "Req-ID: 7.001",
      "ja": "リクエストID：7.001"
    },
    {
      "indent": 3,
      "text": "Title: Management of energy resources",
      "ja": "タイトル：エネルギー資源の管理"
    },
    {
      "indent": 3,
      "text": "Description: Enable managing power resources in the network, e.g., reduce the sampling rate of nodes with critical battery and reduce node transmission power, put nodes to sleep, put single interfaces to sleep, reject a management job based on available energy or criteria predefined by the management application (such as importance levels forcing execution even if the energy level is low), etc. The device may further implement standard data models for energy management and expose it through a management protocol interface, e.g., EMAN MIB modules [RFC7460] and [RFC7461] as well as other EMAN extensions. It might be necessary to use a subset of EMAN MIBs for C1 and C2 devices.",
      "ja": "説明：ネットワーク内の電源リソースの管理を有効にします。たとえば、重要なバッテリーがあるノードのサンプリングレートを下げ、ノードの送信電力を減らし、ノードをスリープ状態にし、単一のインターフェースをスリープ状態にし、使用可能なエネルギーまたは事前定義された基準に基づいて管理ジョブを拒否します管理アプリケーション（エネルギーレベルが低い場合でも実行を強制する重要度レベルなど）など。デバイスはさらに、エネルギー管理の標準データモデルを実装し、管理プロトコルインターフェイス（EMAN MIBモジュール[RFC7460]など）を介してそれを公開します。 [RFC7461]およびその他のEMAN拡張。 C1およびC2デバイスのEMAN MIBのサブセットを使用する必要がある場合があります。"
    },
    {
      "indent": 3,
      "text": "Source: Use case \"Energy Management\"",
      "ja": "出典：ユースケース「エネルギー管理」"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "Requirement Type: Functional Requirement"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium for the use case \"Energy Management\"; Low otherwise",
      "ja": "優先度：ユースケース「エネルギー管理」の場合は中。そうでなければ低い"
    },
    {
      "indent": 0,
      "text": "   ---\n   Req-ID:  7.002",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Title: Support of energy-optimized communication protocols",
      "ja": "タイトル：エネルギー最適化通信プロトコルのサポート"
    },
    {
      "indent": 3,
      "text": "Description: Use an optimized communication protocol to minimize energy usage for the device (radio) receiver/transmitter, on-air bandwidth usage (i.e., maximize protocol efficiency), and the amount of data communication between nodes. Minimizing data communication implies data aggregation and filtering but also a compact format for the transferred data.",
      "ja": "説明：最適化された通信プロトコルを使用して、デバイス（無線）受信機/送信機のエネルギー使用量、オンエア帯域幅の使用量（つまり、プロトコル効率を最大化）、およびノー​​ド間のデータ通信量を最小化します。データ通信の最小化は、データの集約とフィルタリングを意味しますが、転送されるデータのコンパクトなフォーマットも意味します。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases \"Energy Management\" and mobile applications",
      "ja": "出典：ユースケース「エネルギー管理」およびモバイルアプリケーション"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C2",
      "ja": "デバイスタイプ：C2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 7.003",
      "ja": "Req-ID: 7.003"
    },
    {
      "indent": 3,
      "text": "Title: Support for Layer 2 (L2) energy-aware protocols",
      "ja": "タイトル：レイヤー2（L2）エネルギー対応プロトコルのサポート"
    },
    {
      "indent": 3,
      "text": "Description: The device will support L2 energy-management protocols (e.g., energy-efficient Ethernet [IEEE802.3az]) and be able to report on these.",
      "ja": "説明：デバイスは、L2エネルギー管理プロトコル（エネルギー効率の良いイーサネット[IEEE802.3az]など）をサポートし、これらについて報告することができます。"
    },
    {
      "indent": 3,
      "text": "Source: Use case \"Energy Management\"",
      "ja": "Source: Use case \"Energy Management\""
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "Device type: C0, C1, and C2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "Priority: Medium"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 7.004",
      "ja": "Req-ID: 7.004"
    },
    {
      "indent": 3,
      "text": "Title: Dying gasp",
      "ja": "タイトル：Dying gasp"
    },
    {
      "indent": 3,
      "text": "Description: When energy resources draw below the red-line level, the device will send a \"dying gasp\" notification and perform, if still possible, a graceful shutdown including conservation of critical device configuration and status information.",
      "ja": "説明：エネルギーリソースが赤線レベルを下回ると、デバイスは「瀕死のあえぎ」通知を送信し、可能であれば、重要なデバイス構成とステータス情報の保存を含む正常なシャットダウンを実行します。"
    },
    {
      "indent": 3,
      "text": "Source: Use case \"Energy Management\"",
      "ja": "出典：ユースケース「エネルギー管理」"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 0,
      "text": "3.8. Software Distribution",
      "section_title": true,
      "ja": "3.8. ソフトウェア配布"
    },
    {
      "indent": 3,
      "text": "Req-ID: 8.001",
      "ja": "リクエストID：8.001"
    },
    {
      "indent": 3,
      "text": "Title: Group-based provisioning",
      "ja": "タイトル：グループベースのプロビジョニング"
    },
    {
      "indent": 3,
      "text": "Description: Support group-based provisioning, i.e., firmware update and configuration management of a large set of constrained devices with eventual consistency and coordinated reload times. The device should accept group-based configuration management based on bulk commands, which aim similar configurations of a large set of constrained devices of the same type in a given group and which may share a common data model. Activation of configuration may be based on preloaded sets of default values.",
      "ja": "説明：グループベースのプロビジョニングをサポートします。つまり、ファームウェアの更新と、結果としての整合性と調整されたリロード時間を備えた、制約されたデバイスの大規模なセットの構成管理をサポートします。デバイスは、一括コマンドに基づくグループベースの構成管理を受け入れる必要があります。これは、特定のグループ内の同じタイプの制約されたデバイスの大規模なセットの同様の構成を目的とし、共通のデータモデルを共有する場合があります。構成のアクティブ化は、プリロードされたデフォルト値のセットに基づく場合があります。"
    },
    {
      "indent": 3,
      "text": "Source: All use cases",
      "ja": "出典：すべてのユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 0,
      "text": "3.9. Traffic Management",
      "section_title": true,
      "ja": "3.9. 交通管理"
    },
    {
      "indent": 3,
      "text": "Req-ID: 9.001",
      "ja": "リクエストID：9.001"
    },
    {
      "indent": 3,
      "text": "Title: Congestion avoidance",
      "ja": "タイトル：混雑回避"
    },
    {
      "indent": 3,
      "text": "Description: Support congestion control principles as defined in [RFC2914], e.g., the ability to avoid congestion by modifying the device's reporting rate for periodical data (which is usually redundant) based on the importance and reliability level of the management data. This functionality is usually controlled by the managing entity, where the managing entity marks the data as important or relevant for reliability. However, reducing a device's reporting rate can also be initiated by a device if it is able to detect congestion or has insufficient buffer memory.",
      "ja": "説明：[RFC2914]で定義されている輻輳制御の原則をサポートします。たとえば、管理データの重要性と信頼性レベルに基づいて、定期的なデータ（通常は冗長）のデバイスのレポートレートを変更して、輻輳を回避できます。この機能は通常、管理エンティティによって制御され、管理エンティティはデータを信頼性にとって重要または関連性があるとマークします。ただし、デバイスのレポートレートの低下は、デバイスが輻輳を検出できるか、バッファメモリが不足している場合にも開始できます。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases with high reporting rate and traffic, e.g., AMI or M2M",
      "ja": "出典：AMIやM2Mなど、報告率とトラフィックが高いユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C1 and C2",
      "ja": "デバイスタイプ：C1およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 9.002",
      "ja": "リクエストID：9.002"
    },
    {
      "indent": 3,
      "text": "Title: Reroute traffic",
      "ja": "Title: Reroute traffic"
    },
    {
      "indent": 3,
      "text": "Description: Provide the ability for network nodes to redirect traffic from overloaded intermediary nodes in a network to another path in order to prevent congestion on a central server and in the primary network.",
      "ja": "説明：中央サーバーとプライマリネットワークの輻輳を防止するために、ネットワークノードがネットワーク内の過負荷の中間ノードから別のパスにトラフィックをリダイレクトする機能を提供します。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases with high reporting rate and traffic, e.g., AMI or M2M",
      "ja": "出典：AMIやM2Mなど、報告率とトラフィックが高いユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: Intermediary entity in the network",
      "ja": "デバイスタイプ：ネットワーク内の中間エンティティ"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 9.003",
      "ja": "リクエストID：9.003"
    },
    {
      "indent": 3,
      "text": "Title: Traffic Shaping",
      "ja": "タイトル：トラフィックシェーピング"
    },
    {
      "indent": 3,
      "text": "Description: Provide the ability to apply traffic-shaping policies to incoming and outgoing links on an overloaded intermediary node (as necessary) in order to reduce the amount of traffic in the network.",
      "ja": "説明：ネットワーク内のトラフィック量を削減するために、（必要に応じて）過負荷の中間ノードの着信リンクと発信リンクにトラフィックシェーピングポリシーを適用する機能を提供します。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases with high reporting rate and traffic, e.g., AMI or M2M",
      "ja": "Source: Use cases with high reporting rate and traffic, e.g., AMI or M2M"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: Intermediary entity in the network",
      "ja": "デバイスタイプ：ネットワーク内の中間エンティティ"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 0,
      "text": "3.10. Transport Layer",
      "section_title": true,
      "ja": "3.10. Transport Layer"
    },
    {
      "indent": 3,
      "text": "Req-ID: 10.001",
      "ja": "Req-ID: 10.001"
    },
    {
      "indent": 3,
      "text": "Title: Scalable transport layer",
      "ja": "タイトル：スケーラブルなトランスポート層"
    },
    {
      "indent": 3,
      "text": "Description: Enable the use of a scalable transport layer, i.e., not sensitive to a high rate of incoming client requests, which is useful for applications requiring frequent access to device data.",
      "ja": "説明：スケーラブルなトランスポート層の使用を有効にします。つまり、受信クライアント要求の高率に影響されないため、デバイスデータへの頻繁なアクセスを必要とするアプリケーションに役立ちます。"
    },
    {
      "indent": 3,
      "text": "Source: Applications with frequent access to the device data",
      "ja": "出典：デバイスデータに頻繁にアクセスするアプリケーション"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1 and C2",
      "ja": "Device type: C0, C1 and C2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 10.002",
      "ja": "リクエストID：10.002"
    },
    {
      "indent": 3,
      "text": "Title: Reliable unicast transport of messages",
      "ja": "タイトル：メッセージの信頼できるユニキャストトランスポート"
    },
    {
      "indent": 3,
      "text": "Description: Diverse applications need a reliable transport of messages. The reliability might be achieved based on a transport protocol such as TCP or can be supported based on message repetition if an acknowledgment is missing.",
      "ja": "説明：多様なアプリケーションには、メッセージの信頼できるトランスポートが必要です。信頼性は、TCPなどのトランスポートプロトコルに基づいて達成されるか、確認応答がない場合にメッセージの繰り返しに基づいてサポートされます。"
    },
    {
      "indent": 3,
      "text": "Source: Generally, applications benefit from the reliability of the message transport",
      "ja": "出典：一般に、アプリケーションはメッセージ転送の信頼性から利益を得ます"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "Requirement Type: Functional Requirement"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 10.003",
      "ja": "リクエストID：10.003"
    },
    {
      "indent": 3,
      "text": "Title: Best-effort multicast",
      "ja": "Title: Best-effort multicast"
    },
    {
      "indent": 3,
      "text": "Description: Provide best-effort multicast of messages, which is generally useful when devices need to discover a service provided by a server or many devices need to be configured by a managing entity at once based on the same data model.",
      "ja": "説明：メッセージのベストエフォートマルチキャストを提供します。これは、デバイスがサーバーによって提供されるサービスを検出する必要がある場合、または多くのデバイスを同じデータモデルに基づいて管理エンティティによって一度に構成する必要がある場合に役立ちます。"
    },
    {
      "indent": 3,
      "text": "Source: Use cases where a device needs to discover services as well as use cases with high amount of devices to manage, which are hierarchically deployed, e.g., AMI or M2M",
      "ja": "出典：デバイスがサービスを検出する必要があるユースケースと、AMIやM2Mなどの階層的に展開された、管理するデバイスが大量にあるユースケース"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Functional Requirement",
      "ja": "要件タイプ：機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: Medium",
      "ja": "優先度：中"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 10.004",
      "ja": "リクエストID：10.004"
    },
    {
      "indent": 3,
      "text": "Title: Secure message transport",
      "ja": "タイトル：安全なメッセージ転送"
    },
    {
      "indent": 3,
      "text": "Description: Enable secure message transport providing authentication, data integrity, and confidentiality by using existing transport-layer technologies with a small footprint such as TLS/DTLS.",
      "ja": "説明：TLS / DTLSなどのフットプリントが小さい既存のトランスポート層テクノロジーを使用して、認証、データの整合性、および機密性を提供する安全なメッセージトランスポートを有効にします。"
    },
    {
      "indent": 3,
      "text": "Source: All use cases",
      "ja": "Source: All use cases"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirements",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C1 and C2",
      "ja": "デバイスタイプ：C1およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 0,
      "text": "3.11. Implementation Requirements",
      "section_title": true,
      "ja": "3.11. 実装要件"
    },
    {
      "indent": 3,
      "text": "Req-ID: 11.001",
      "ja": "リクエストID：11.001"
    },
    {
      "indent": 3,
      "text": "Title: Avoid complex application-layer transactions requiring large application-layer messages",
      "ja": "タイトル：大きなアプリケーション層メッセージを必要とする複雑なアプリケーション層トランザクションを回避する"
    },
    {
      "indent": 3,
      "text": "Description: Complex application-layer transactions tend to require large memory buffers that are typically not available on C0 or C1 devices and only by limiting functionality on C2 devices. Furthermore, the failure of a single large transaction requires repeating the whole transaction. On constrained devices, it is often more desirable to split a large transaction into a sequence of smaller transactions that require less resources and allow making progress using a sequence of smaller steps.",
      "ja": "Description: Complex application-layer transactions tend to require large memory buffers that are typically not available on C0 or C1 devices and only by limiting functionality on C2 devices. Furthermore, the failure of a single large transaction requires repeating the whole transaction. On constrained devices, it is often more desirable to split a large transaction into a sequence of smaller transactions that require less resources and allow making progress using a sequence of smaller steps."
    },
    {
      "indent": 3,
      "text": "Source: Basic requirement that concerns all use cases with memory constrained devices",
      "ja": "Source: Basic requirement that concerns all use cases with memory constrained devices"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "Requirement Type: Non-functional Requirement"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 3,
      "text": "---",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Req-ID: 11.002",
      "ja": "リクエストID：11.002"
    },
    {
      "indent": 3,
      "text": "Title: Avoid reassembly of messages at multiple layers in the protocol stack",
      "ja": "タイトル：プロトコルスタックの複数のレイヤーでメッセージの再構成を回避する"
    },
    {
      "indent": 3,
      "text": "Description: Reassembly of messages at multiple layers in the protocol stack requires buffers at multiple layers, which leads to inefficient use of memory resources. This can be avoided by making sure the application layer, the security layer, the transport layer, the IPv6 layer, and any adaptation layers are aware of the limitations of each other such that unnecessary fragmentation and reassembly can be avoided. In addition, message size constraints must be announced to protocol peers such that they can adapt and avoid sending messages that can't be processed due to resource constraints on the receiving device.",
      "ja": "説明：プロトコルスタックの複数のレイヤーでメッセージを再構成するには、複数のレイヤーでバッファーが必要です。これにより、メモリリソースが非効率的に使用されます。これは、アプリケーションレイヤー、セキュリティレイヤー、トランスポートレイヤー、IPv6レイヤー、およびアダプテーションレイヤーが相互の制限を認識していることを確認することで回避でき、不要な断片化と再構成を回避できます。さらに、受信デバイスのリソースの制約のために処理できないメッセージを適応させて送信を回避できるように、メッセージサイズの制約をプロトコルピアに通知する必要があります。"
    },
    {
      "indent": 3,
      "text": "Source: Basic requirement that concerns all use cases with memory constrained devices",
      "ja": "Source: Basic requirement that concerns all use cases with memory constrained devices"
    },
    {
      "indent": 3,
      "text": "Requirement Type: Non-functional Requirement",
      "ja": "要件タイプ：非機能要件"
    },
    {
      "indent": 3,
      "text": "Device type: C0, C1, and C2",
      "ja": "デバイスタイプ：C0、C1、およびC2"
    },
    {
      "indent": 3,
      "text": "Priority: High",
      "ja": "優先度：高"
    },
    {
      "indent": 0,
      "text": "4. Security Considerations",
      "section_title": true,
      "ja": "4. Security Considerations"
    },
    {
      "indent": 3,
      "text": "This document discusses the problem statement and requirements on networks of constrained devices. Section 1.6 mentions a number of limitations that could prevent the implementation of strong cryptographic algorithms. Requirements for security and access control are listed in Section 3.6.",
      "ja": "このドキュメントでは、制約のあるデバイスのネットワークに関する問題の説明と要件について説明します。セクション1.6では、強力な暗号化アルゴリズムの実装を妨げる可能性のあるいくつかの制限について言及しています。セキュリティとアクセス制御の要件は、セクション3.6にリストされています。"
    },
    {
      "indent": 0,
      "text": " Often, constrained devices might be deployed in unsafe environments where attackers can gain physical access to the devices. As a consequence, it is crucial that devices are robust and tamper resistant, have no backdoors, do not provide services that are not essential for the primary function, and properly protect any security credentials that may be stored on the device (e.g., by using hardware protection mechanisms). Furthermore, it is important that any credentials leaking from a single device do not simplify the attack on other (similar) devices. In particular, security credentials should never be shared.",
      "ja": " Often, constrained devices might be deployed in unsafe environments where attackers can gain physical access to the devices. As a consequence, it is crucial that devices are robust and tamper resistant, have no backdoors, do not provide services that are not essential for the primary function, and properly protect any security credentials that may be stored on the device (e.g., by using hardware protection mechanisms). Furthermore, it is important that any credentials leaking from a single device do not simplify the attack on other (similar) devices. In particular, security credentials should never be shared."
    },
    {
      "indent": 3,
      "text": "Since constrained devices often have limited computational resources, care should be taken in choosing efficient but cryptographically strong cryptographic algorithms. Designers of constrained devices that have a long expected lifetime need to ensure that cryptographic algorithms can be updated once devices have been deployed. The ability to perform secure firmware and software updates is an important management requirement.",
      "ja": "制約のあるデバイスの計算リソースは限られていることが多いため、効率的で暗号学的に強力な暗号アルゴリズムを選択する場合は注意が必要です。期待される寿命が長い制約付きデバイスの設計者は、デバイスが展開されたら暗号化アルゴリズムを更新できるようにする必要があります。安全なファームウェアとソフトウェアの更新を実行する機能は、重要な管理要件です。"
    },
    {
      "indent": 3,
      "text": "Constrained devices might also generate sensitive data or require the processing of sensitive data. Therefore, it is an important requirement to properly protect access to the data in order to protect the privacy of humans using Internet-enabled devices. For certain types of data, protection during the transmission over the network may not be sufficient, and methods should be investigated that provide protection of data while it is cached or stored (e.g., when using a store-and-forward transport mechanism).",
      "ja": "制約のあるデバイスは、機密データを生成したり、機密データの処理を必要とする場合もあります。したがって、インターネット対応デバイスを使用する人間のプライバシーを保護するために、データへのアクセスを適切に保護することは重要な要件です。特定の種類のデータについては、ネットワークを介した送信中の保護では不十分な場合があり、データがキャッシュまたは保存されている間（たとえば、ストアアンドフォワードトランスポートメカニズムを使用する場合）にデータを保護する方法を調査する必要があります。"
    },
    {
      "indent": 0,
      "text": "5. Informative References",
      "section_title": true,
      "ja": "5. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC2914] Floyd, S., \"Congestion Control Principles\", BCP 41, RFC 2914, DOI 10.17487/RFC2914, September 2000, <http://www.rfc-editor.org/info/rfc2914>.",
      "ja": "[RFC2914] Floyd、S。、「Congestion Control Principles」、BCP 41、RFC 2914、DOI 10.17487 / RFC2914、2000年9月、<http://www.rfc-editor.org/info/rfc2914>。"
    },
    {
      "indent": 3,
      "text": "[RFC2501] Corson, S. and J. Macker, \"Mobile Ad hoc Networking (MANET): Routing Protocol Performance Issues and Evaluation Considerations\", RFC 2501, DOI 10.17487/RFC2501, January 1999, <http://www.rfc-editor.org/info/rfc2501>.",
      "ja": "[RFC2501] Corson, S. and J. Macker, \"Mobile Ad hoc Networking (MANET): Routing Protocol Performance Issues and Evaluation Considerations\", RFC 2501, DOI 10.17487/RFC2501, January 1999, <http://www.rfc-editor.org/info/rfc2501>."
    },
    {
      "indent": 3,
      "text": "[RFC6632] Ersue, M., Ed. and B. Claise, \"An Overview of the IETF Network Management Standards\", RFC 6632, DOI 10.17487/RFC6632, June 2012, <http://www.rfc-editor.org/info/rfc6632>.",
      "ja": "[RFC6632] Ersue, M., Ed. and B. Claise, \"An Overview of the IETF Network Management Standards\", RFC 6632, DOI 10.17487/RFC6632, June 2012, <http://www.rfc-editor.org/info/rfc6632>."
    },
    {
      "indent": 3,
      "text": "[RFC7102] Vasseur, JP., \"Terms Used in Routing for Low-Power and Lossy Networks\", RFC 7102, DOI 10.17487/RFC7102, January 2014, <http://www.rfc-editor.org/info/rfc7102>.",
      "ja": "[RFC7102] Vasseur, JP., \"Terms Used in Routing for Low-Power and Lossy Networks\", RFC 7102, DOI 10.17487/RFC7102, January 2014, <http://www.rfc-editor.org/info/rfc7102>."
    },
    {
      "indent": 3,
      "text": "[RFC7228] Bormann, C., Ersue, M., and A. Keranen, \"Terminology for Constrained-Node Networks\", RFC 7228, DOI 10.17487/RFC7228, May 2014, <http://www.rfc-editor.org/info/rfc7228>.",
      "ja": "[RFC7228] Bormann、C.、Ersue、M.、and A. Keranen、 \"Terminology for Constrained-Node Networks\"、RFC 7228、DOI 10.17487 / RFC7228、May 2014、<http://www.rfc-editor.org / info / rfc7228>。"
    },
    {
      "indent": 3,
      "text": "[RFC7252] Shelby, Z., Hartke, K., and C. Bormann, \"The Constrained Application Protocol (CoAP)\", RFC 7252, DOI 10.17487/RFC7252, June 2014, <http://www.rfc-editor.org/info/rfc7252>.",
      "ja": "[RFC7252] Shelby、Z.、Hartke、K。、およびC. Bormann、「The Constrained Application Protocol（CoAP）」、RFC 7252、DOI 10.17487 / RFC7252、2014年6月、<http：//www.rfc-editor。 org / info / rfc7252>。"
    },
    {
      "indent": 3,
      "text": "[RFC4919] Kushalnagar, N., Montenegro, G., and C. Schumacher, \"IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs): Overview, Assumptions, Problem Statement, and Goals\", RFC 4919, DOI 10.17487/RFC4919, August 2007, <http://www.rfc-editor.org/info/rfc4919>.",
      "ja": "[RFC4919] Kushalnagar、N.、Montenegro、G。、およびC. Schumacher、「IPv6 over Low-Power Wireless Personal Area Networks（6LoWPANs）：Overview、Assumptions、Problem Statement、and Goals」、RFC 4919、DOI 10.17487 / RFC4919 、2007年8月、<http://www.rfc-editor.org/info/rfc4919>。"
    },
    {
      "indent": 3,
      "text": "[RFC6550] Winter, T., Ed., Thubert, P., Ed., Brandt, A., Hui, J., Kelsey, R., Levis, P., Pister, K., Struik, R., Vasseur, JP., and R. Alexander, \"RPL: IPv6 Routing Protocol for Low-Power and Lossy Networks\", RFC 6550, DOI 10.17487/RFC6550, March 2012, <http://www.rfc-editor.org/info/rfc6550>.",
      "ja": "[RFC6550]冬、T。、編、Thubert、P。、編、Brandt、A。、ホイ、J。、ケルシー、R。、リーバイス、P。、ピスター、K。、ストルーイク、R。、ヴァッサー、JP。、およびR.アレクサンダー、「RPL：低電力および損失の多いネットワーク用のIPv6ルーティングプロトコル」、RFC 6550、DOI 10.17487 / RFC6550、2012年3月、<http://www.rfc-editor.org/info/ rfc6550>。"
    },
    {
      "indent": 3,
      "text": "[RFC7460] Chandramouli, M., Claise, B., Schoening, B., Quittek, J., and T. Dietz, \"Monitoring and Control MIB for Power and Energy\", RFC 7460, DOI 10.17487/RFC7460, March 2015, <http://www.rfc-editor.org/info/rfc7460>.",
      "ja": "[RFC7460] Chandramouli、M.、Claise、B.、Schoening、B.、Quittek、J。、およびT. Dietz、「Monitoring and Control MIB for Power and Energy」、RFC 7460、DOI 10.17487 / RFC7460、2015年3月、 <http://www.rfc-editor.org/info/rfc7460>。"
    },
    {
      "indent": 3,
      "text": "[RFC7461] Parello, J., Claise, B., and M. Chandramouli, \"Energy Object Context MIB\", RFC 7461, DOI 10.17487/RFC7461, March 2015, <http://www.rfc-editor.org/info/rfc7461>.",
      "ja": "[RFC7461] Parello, J., Claise, B., and M. Chandramouli, \"Energy Object Context MIB\", RFC 7461, DOI 10.17487/RFC7461, March 2015, <http://www.rfc-editor.org/info/rfc7461>."
    },
    {
      "indent": 3,
      "text": "[RFC7548] Ersue, M., Ed., Romascanu, D., Schoenwaelder, J., and A. Sehgal, \"Management of Networks with Constrained Devices: Use Cases\", RFC 7548, DOI 10.17487/RFC7548, May 2015, <http://www.rfc-editor.org/info/rfc7548>.",
      "ja": "[RFC7548] Ersue、M.、Ed。、Romascanu、D.、Schoenwaelder、J。、およびA. Sehgal、「Managed of Networks with Constrained Devices：Use Cases」、RFC 7548、DOI 10.17487 / RFC7548、2015年5月、< http://www.rfc-editor.org/info/rfc7548>。"
    },
    {
      "indent": 3,
      "text": "[IEEE802.15.4] IEEE, \"Part 15.4: Low-Rate Wireless Personal Area Networks (LR-WPANs)\", IEEE Standard 802.15.4, September 2011, <https://standards.ieee.org/about/get/802/802.15.html>.",
      "ja": "[IEEE802.15.4] IEEE、「Part 15.4：Low-Rate Wireless Personal Area Networks（LR-WPANs）」、IEEE Standard 802.15.4、2011年9月、<https://standards.ieee.org/about/get/802 /802.15.html>。"
    },
    {
      "indent": 3,
      "text": "[IEEE802.15.1] IEEE, \"Part 15.1: Wireless medium access control (MAC) and physical layer (PHY) specifications for wireless personal area networks (WPANs)\", IEEE Standard 802.15.1, June 2005, <https://standards.ieee.org/about/get/802/802.15.html>.",
      "ja": "[IEEE802.15.1] IEEE、「パート15.1：ワイヤレスパーソナルエリアネットワーク（WPAN）のワイヤレスメディアアクセス制御（MAC）および物理層（PHY）仕様」、IEEE標準802.15.1、2005年6月、<https：// standards .ieee.org / about / get / 802 / 802.15.html>。"
    },
    {
      "indent": 3,
      "text": "[IEEE802.3az] IEEE, \"ETHERNET\", IEEE Standard 802.3az, 2012-2014, <https://standards.ieee.org/about/get/802/802.3.html>.",
      "ja": "[IEEE802.3az] IEEE、「ETHERNET」、IEEE標準802.3az、2012〜2014、<https://standards.ieee.org/about/get/802/802.3.html>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The following reviewed and provided valuable comments during the creation of this document:",
      "ja": "以下は、このドキュメントの作成中に重要なコメントを確認および提供しました。"
    },
    {
      "indent": 3,
      "text": "Dominique Barthel, Andy Bierman, Carsten Bormann, Zhen Cao, Benoit Claise, Hui Deng, Bert Greevenbosch, Joel M. Halpern, Ulrich Herberg, James Nguyen, Anuj Sehgal, Zach Shelby, Peter van der Stok, Thomas Watteyne, and Bert Wijnen.",
      "ja": "ドミニク・バーテル、アンディ・ビアマン、カルステン・ボルマン、ジェン・カオ、ブノワ・クレイズ、ホイ・デン、バート・グリーベンボッシュ、ジョエル・M・ハルパーン、ウルリッヒ・ヘルバーグ、ジェームズ・グエン、アヌジ・セーガル、ザック・シェルビー、ピーター・ファン・デル・ストック、トーマス・ワッティン、そしてバート・ウィイネン。"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank the reviewers and the participants on the Coman and OPSAWG mailing lists for their valuable contributions and comments.",
      "ja": "著者は、コマンとOPSAWGメーリングリストのレビュー担当者と参加者の貴重な貢献とコメントに感謝します。"
    },
    {
      "indent": 3,
      "text": "Juergen Schoenwaelder was partly funded by Flamingo, a Network of Excellence project (ICT-318488) supported by the European Commission under its Seventh Framework Programme.",
      "ja": "Juergen Schoenwaelder was partly funded by Flamingo, a Network of Excellence project (ICT-318488) supported by the European Commission under its Seventh Framework Programme."
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "Authors' Addresses"
    },
    {
      "indent": 3,
      "text": "Mehmet Ersue (editor) Nokia Networks",
      "ja": "Mehmet Ersue（編集者）Nokia Networks"
    },
    {
      "indent": 3,
      "text": "EMail: mehmet.ersue@nokia.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Dan Romascanu Avaya",
      "ja": "ダンローマスカヌアバイア"
    },
    {
      "indent": 3,
      "text": "EMail: dromasca@avaya.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Juergen Schoenwaelder Jacobs University Bremen",
      "ja": "ユルゲンシェーンヴェルダージェイコブス大学ブレーメン"
    },
    {
      "indent": 3,
      "text": "EMail: j.schoenwaelder@jacobs-university.de",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Ulrich Herberg",
      "ja": "ウルリッヒ・ヘルベルク"
    },
    {
      "indent": 3,
      "text": "EMail: ulrich@herberg.name",
      "raw": true,
      "ja": ""
    }
  ]
}