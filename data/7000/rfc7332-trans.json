{
  "title": {
    "text": "RFC 7332 - Loop Detection Mechanisms for Session Initiation Protocol (SIP) Back-to-Back User Agents (B2BUAs)",
    "ja": "RFC 7332 - セッション開始プロトコル（SIP）バックツーバックユーザーエージェント（B2BUA）のループ検出メカニズム"
  },
  "number": 7332,
  "created_at": "2020-09-02 18:43:18.089276+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         H. Kaplan\nRequest for Comments: 7332                                        Oracle\nCategory: Standards Track                                     V. Pascual\nISSN: 2070-1721                                                   Quobis\n                                                             August 2014",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "Loop Detection Mechanisms for Session Initiation Protocol (SIP) Back-to-Back User Agents (B2BUAs)",
      "ja": "セッション開始プロトコル（SIP）バックツーバックユーザーエージェント（B2BUA）のループ検出メカニズム"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "SIP Back-to-Back User Agents (B2BUAs) can cause unending SIP request routing loops because, as User Agent Clients, they can generate SIP requests with new Max-Forwards values. This document discusses the difficulties associated with loop detection for B2BUAs and the requirements for them to prevent infinite loops.",
      "ja": "SIPバックツーバックユーザーエージェント（B2BUA）は、ユーザーエージェントクライアントとして、新しいMax-Forwards値でSIPリクエストを生成できるため、SIPリクエストルーティングループが無限に続く可能性があります。このドキュメントでは、B2BUAのループ検出に関連する問題と、無限ループを防止するための要件について説明します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 5741のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7332.",
      "ja": "このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、http：//www.rfc-editor.org/info/rfc7332で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2014 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2014 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（http://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2\n2.  Conventions . . . . . . . . . . . . . . . . . . . . . . . . .   2\n3.  Background  . . . . . . . . . . . . . . . . . . . . . . . . .   3\n4.  B2BUA Loop-Detection Behavior . . . . . . . . . . . . . . . .   3\n5.  B2BUA Max-Forwards Behavior . . . . . . . . . . . . . . . . .   4\n6.  B2BUA Max-Breadth Behavior  . . . . . . . . . . . . . . . . .   4\n7.  Security Considerations . . . . . . . . . . . . . . . . . . .   4\n8.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .   5\n9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   5",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "SIP provides a means of preventing infinite request forwarding loops in [RFC3261], and a means of mitigating parallel forking amplification floods in [RFC5393]. Neither document normatively defines specific behavior for B2BUAs, however.",
      "ja": "SIPは、[RFC3261]の無限リクエスト転送ループを防止する手段と、[RFC5393]の並列分岐増幅フラッドを軽減する手段を提供します。ただし、どちらのドキュメントもB2BUAの特定の動作を規範的に定義していません。"
    },
    {
      "indent": 3,
      "text": "Unbounded SIP request loops have actually occurred in SIP deployments numerous times. The cause of loops is usually misconfiguration, but the reason they have been unbounded/unending is they crossed B2BUAs that reset the Max-Forwards value in the SIP requests they generated on their User Agent Client (UAC) side. Although such behavior is technically legal per [RFC3261] because a B2BUA is a UAC, the resulting unbounded loops have caused service outages and make troubleshooting difficult.",
      "ja": "無制限のSIPリクエストループは、実際にはSIP展開で何度も発生しています。ループの原因は通常、構成の誤りですが、それらが無制限/終了しない理由は、ユーザーエージェントクライアント（UAC）側で生成したSIPリクエストの最大転送値をリセットするB2BUAを超えたためです。 B2BUAはUACであるため、このような動作は技術的には[RFC3261]で合法ですが、結果として生じる無制限のループによりサービスが停止し、トラブルシューティングが困難になっています。"
    },
    {
      "indent": 3,
      "text": "Furthermore, [RFC5393] also provides a mechanism to mitigate the impact of parallel forking amplification issues, through the use of a \"Max-Breadth\" header field. If a B2BUA does not pass this header field on, parallel forking amplification is not mitigated with the [RFC5393] mechanism.",
      "ja": "さらに、[RFC5393]は、 \"Max-Breadth\"ヘッダーフィールドを使用して、並列分岐の増幅問題の影響を軽減するメカニズムも提供します。 B2BUAがこのヘッダーフィールドを渡さない場合、[RFC5393]メカニズムでは並列分岐増幅は軽減されません。"
    },
    {
      "indent": 3,
      "text": "This document defines normative requirements for Max-Forwards and Max-Breadth header field behaviors of B2BUAs, in order to mitigate the effect of loops and parallel forking amplification.",
      "ja": "このドキュメントでは、ループと並列分岐の増幅の影響を軽減するために、B2BUAのMax-ForwardsおよびMax-Breadthヘッダーフィールドの動作に関する規範的な要件を定義します。"
    },
    {
      "indent": 0,
      "text": "2. Conventions",
      "section_title": true,
      "ja": "2. 規約"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14, RFC 2119 [RFC2119].",
      "ja": "このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は、 BCP 14、RFC 2119 [RFC2119]で説明されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "B2BUA terminology and taxonomy used in this document is based on [RFC7092].",
      "ja": "このドキュメントで使用されているB2BUAの用語と分類法は、[RFC7092]に基づいています。"
    },
    {
      "indent": 0,
      "text": "3. Background",
      "section_title": true,
      "ja": "3. バックグラウンド"
    },
    {
      "indent": 3,
      "text": "Within the context of B2BUAs, the scope of the SIP protocol ends at the User Agent Server (UAS) side of the B2BUA, and a new one begins on the UAC side. A B2BUA is thus capable of choosing what it wishes to do on its UAC side independently of its UAS side, and still remains compliant with [RFC3261] and its extensions. For example, any B2BUA type defined in [RFC7092] other than Proxy-B2BUA may create the SIP request on its UAC side without copying any of the Via header field values received on its UAS side. Indeed there are valid reasons for it to do so; however, this prevents the Via-based loop-detection mechanism defined in [RFC3261] and updated by [RFC5393] from detecting SIP request loops any earlier than by reaching a Max-Forwards limit.",
      "ja": "B2BUAのコンテキスト内では、SIPプロトコルのスコープはB2BUAのユーザーエージェントサーバー（UAS）側で終わり、新しいものはUAC側で始まります。したがって、B2BUAは、UAS側とは無関係にUAC側で実行する処理を選択でき、[RFC3261]とその拡張機能に引き続き準拠しています。たとえば、Proxy-B2BUA以外の[RFC7092]で定義されているB2BUAタイプは、UAS側で受信したViaヘッダーフィールド値をコピーせずに、そのUAC側でSIP要求を作成できます。実際、そうすることには正当な理由があります。ただし、これにより、[RFC3261]で定義され[RFC5393]によって更新されたViaベースのループ検出メカニズムが、Max-Forwards制限に到達するよりも早くSIPリクエストループを検出できなくなります。"
    },
    {
      "indent": 3,
      "text": "Some attempts have been made by B2BUA vendors to detect request loops in other ways: by keeping track of the number of outstanding dialog-forming requests for a given caller/called URI pair; or by detecting when they receive and send their own media addressing information too many times in certain cases when they are a signaling/media-plane B2BUA; or by encoding a request instance identifier in some field they believe will pass through other nodes, and detecting when they see the same value too many times.",
      "ja": "B2BUAベンダーは、他の方法で要求ループを検出するためにいくつかの試みを行っています。特定の呼び出し元/呼び出されたURIペアの未解決のダイアログ形成要求の数を追跡することによって。または、それらがシグナリング/メディアプレーンB2BUAである特定の場合に、独自のメディアアドレッシング情報を何度も受信および送信したことを検出する。または、あるフィールドでリクエストインスタンス識別子をエンコードして、他のノードを通過すると信じ、同じ値を何度も見たときに検出します。"
    },
    {
      "indent": 3,
      "text": "All of these methods are brittle and prone to error, however. They are brittle because it is very hard to accurately define when a value has been seen \"too many times\". Requests can and do fork before and after B2BUAs process them, and requests legitimately spiral in some cases, leading to incorrect determination of loops. The mechanisms are prone to error because there can be other B2BUAs in the loop's path that interfere with the particular mechanism being used.",
      "ja": "ただし、これらの方法はすべて壊れやすく、エラーが発生しやすくなります。値が「あまりにも多く」表示された場合、正確に定義することが非常に難しいため、これらは脆弱です。リクエストはB2BUAがそれらを処理する前後に分岐でき、場合によってはリクエストが合法的にスパイラルになり、ループの誤った決定につながります。使用されている特定のメカニズムに干渉するループのパスに他のB2BUAが存在する可能性があるため、メカニズムはエラーを起こしやすいです。"
    },
    {
      "indent": 3,
      "text": "Ultimately, the last defense against loops becoming unbounded is to limit how many SIP hops any request can traverse, which is the purpose of the SIP Max-Forwards field value. If B2BUAs were to at least copy and decrement the Max-Forwards header field value from their UAS to the UAC side, loops would not continue indefinitely.",
      "ja": "最終的に、ループが無制限になることに対する最後の防御策は、要求が通過できるSIPホップの数を制限することです。これが、SIP Max-Forwardsフィールド値の目的です。 B2BUAがUASからUAC側にMax-Forwardsヘッダーフィールド値を少なくともコピーしてデクリメントする場合、ループは無期限に継続しません。"
    },
    {
      "indent": 0,
      "text": "4. B2BUA Loop-Detection Behavior",
      "section_title": true,
      "ja": "4. B2BUAループ検出動作"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that B2BUAs implement the loop-detection mechanism for the Via header field, as defined for a proxy in [RFC5393].",
      "ja": "[RFC5393]でプロキシに対して定義されているように、B2BUAがViaヘッダーフィールドのループ検出メカニズムを実装することをお勧めします。"
    },
    {
      "indent": 0,
      "text": "5. B2BUA Max-Forwards Behavior",
      "section_title": true,
      "ja": "5. B2BUA Max-Forwardsの動作"
    },
    {
      "indent": 3,
      "text": "This section applies for dialog-forming and out-of-dialog SIP requests. B2BUAs MAY perform the same actions for in-dialog requests, but doing so may cause issues with devices that set Max-Forwards values based upon the number of received Via or Record-Route headers.",
      "ja": "このセクションは、ダイアログ形成およびダイアログ外SIP要求に適用されます。 B2BUAは、ダイアログ内の要求に対して同じアクションを実行できますが、そうすると、受信したViaまたはRecord-Routeヘッダーの数に基づいてMax-Forwards値を設定するデバイスで問題が発生する可能性があります。"
    },
    {
      "indent": 3,
      "text": "All B2BUA types MUST copy the received Max-Forwards header field from the received SIP request on their UAS side, to any request(s) they generate on their UAC side, and decrement the value, as if they were a proxy following the requirements described in [RFC3261].",
      "ja": "すべてのB2BUAタイプは、受信したMax-Forwardsヘッダーフィールドを、UAS側で受信したSIPリクエストから、UAC側で生成したすべてのリクエストにコピーし、説明した要件に従うプロキシであるかのように値をデクリメントする必要があります[RFC3261]。"
    },
    {
      "indent": 3,
      "text": "Being a UAS, B2BUAs MUST also check the received Max-Forwards header field and reject or respond to the request if the value is zero, as defined in [RFC3261].",
      "ja": "U2であるため、B2BUAは、[RFC3261]で定義されているように、受信したMax-Forwardsヘッダーフィールドをチェックし、値がゼロの場合、要求を拒否または応答する必要があります。"
    },
    {
      "indent": 3,
      "text": "If the received request did not contain a Max-Forwards header field, one MUST be created in any request generated in the UAC side, as described for proxies in Section 16.6, Step 3 of [RFC3261]. As in that specification, the value of the new Max-Forwards header SHOULD be 70.",
      "ja": "受信したリクエストにMax-Forwardsヘッダーフィールドが含まれていない場合、[RFC3261]のセクション16.6、ステップ3のプロキシで説明されているように、UAC側で生成されたリクエストで1つ作成する必要があります。その仕様のように、新しいMax-Forwardsヘッダーの値は70である必要があります。"
    },
    {
      "indent": 0,
      "text": "6. B2BUA Max-Breadth Behavior",
      "section_title": true,
      "ja": "6. B2BUAの最大幅の動作"
    },
    {
      "indent": 3,
      "text": "All B2BUA types MUST copy the received Max-Breadth header field from the received SIP request on their UAS side, to any request(s) they generate on their UAC side, as if they were a proxy following the requirements described in [RFC5393].",
      "ja": "すべてのB2BUAタイプは、受信したMax-Breadthヘッダーフィールドを、UAS側で受信したSIPリクエストから、[RFC5393]で説明されている要件に従ったプロキシであるかのように、UAC側で生成したすべてのリクエストにコピーする必要があります。"
    },
    {
      "indent": 3,
      "text": "B2BUAs of all types MUST follow the requirements imposed on Proxies as described in Section 5.3.3 of [RFC5393], including generating the header field if none is received, limiting its maximum value, etc.",
      "ja": "すべてのタイプのB2BUAは、[RFC5393]のセクション5.3.3で説明されているように、プロキシに課せられた要件に従う必要があります。これには、何も受信されなかった場合のヘッダーフィールドの生成、最大値の制限などが含まれます。"
    },
    {
      "indent": 3,
      "text": "B2BUAs that generate parallel requests on their UAC side for a single incoming request on the UAS side MUST also follow the rules for Max-Breadth handling in [RFC5393] as if they were a parallel forking proxy.",
      "ja": "UAS側の単一の着信要求に対してUAC側で並列要求を生成するB2BUAも、[RFC5393]の最大幅処理の規則に従って、それらが並列分岐プロキシであるかのように処理する必要があります。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The security implications for parallel forking amplification are documented in Section 7 of [RFC5393]. This document does not introduce any additional issues beyond those discussed in [RFC5393].",
      "ja": "並列分岐増幅のセキュリティへの影響は、[RFC5393]のセクション7に記載されています。このドキュメントでは、[RFC5393]で説明されている問題以外の問題は紹介されていません。"
    },
    {
      "indent": 0,
      "text": " Some B2BUAs reset the Max-Forwards and Max-Breadth header field values in order to obfuscate the number of hops a request has already traversed, as a privacy or security concern. Such goals are at odds with the mechanisms in this document, and administrators can decide which they consider more important: obfuscation vs. loop detection. In order to comply with this RFC, manufacturers MUST comply with the normative rules defined herein by default, but MAY provide user-configurable overrides as they see fit.",
      "ja": "一部のB2BUAは、プライバシーまたはセキュリティ上の問題として、要求がすでに通過したホップ数を難読化するために、Max-ForwardsおよびMax-Breadthヘッダーフィールド値をリセットします。このような目標は、このドキュメントのメカニズムと矛盾しています。管理者は、どちらがより重要であるかを判断できます。つまり、難読化とループ検出です。このRFCに準拠するために、製造業者はここでデフォルトで定義されている規範的な規則に準拠する必要がありますが、適切と思われるユーザー設定可能なオーバーライドを提供できます（MAY）。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgments",
      "section_title": true,
      "ja": "8. 謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to Brett Tate (Broadsoft), Andrew Hutton (Unify), and Anton Roman (Quobis) for their review of the document.",
      "ja": "ドキュメントのレビューをしてくれたBrett Tate（Broadsoft）、Andrew Hutton（Unify）、Anton Roman（Quobis）に感謝します。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9. 参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3261] Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A., Peterson, J., Sparks, R., Handley, M., and E. Schooler, \"SIP: Session Initiation Protocol\", RFC 3261, June 2002.",
      "ja": "[RFC3261] Rosenberg、J.、Schulzrinne、H.、Camarillo、G.、Johnston、A.、Peterson、J.、Sparks、R.、Handley、M。、およびE. Schooler、「SIP：Session Initiation Protocol」 、RFC 3261、2002年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5393] Sparks, R., Lawrence, S., Hawrylyshen, A., and B. Campen, \"Addressing an Amplification Vulnerability in Session Initiation Protocol (SIP) Forking Proxies\", RFC 5393, December 2008.",
      "ja": "[RFC5393] Sparks、R.、Lawrence、S.、Hawrylyshen、A。、およびB. Campen、「Session Initiation Protocol（SIP）Forking Proxiesにおける増幅の脆弱性への対処」、RFC 5393、2008年12月。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC7092] Kaplan, H. and V. Pascual, \"A Taxonomy of Session Initiation Protocol (SIP) Back-to-Back User Agents\", RFC 7092, December 2013.",
      "ja": "[RFC7092] Kaplan、H。およびV. Pascual、「A Sessionology of Session Initiation Protocol（SIP）Back-to-Back User Agents」、RFC 7092、2013年12月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Hadriel Kaplan Oracle",
      "ja": "ハドリエルカプランオラクル"
    },
    {
      "indent": 3,
      "text": "EMail: hadrielk@yahoo.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Victor Pascual Quobis",
      "ja": "ビクターパスクアルクオビス"
    },
    {
      "indent": 3,
      "text": "EMail: victor.pascual@quobis.com",
      "raw": true,
      "ja": ""
    }
  ]
}