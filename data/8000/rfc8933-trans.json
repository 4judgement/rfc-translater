{
  "title": {
    "text": "RFC 8933 - Update to the Cryptographic Message Syntax (CMS) for Algorithm Identifier Protection",
    "ja": "RFC 8933 - アルゴリズム識別子保護のための暗号メッセージ構文（CMS）への更新"
  },
  "number": 8933,
  "created_at": "2021-04-11 12:59:08.978252+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        R. Housley\nRequest for Comments: 8933                                Vigil Security\nUpdates: 5652                                               October 2020\nCategory: Standards Track\nISSN: 2070-1721",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Update to the Cryptographic Message Syntax (CMS) for Algorithm Identifier Protection",
      "ja": "アルゴリズム識別子保護のための暗号メッセージ構文（CMS）への更新"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document updates the Cryptographic Message Syntax (CMS) specified in RFC 5652 to ensure that algorithm identifiers in signed-data and authenticated-data content types are adequately protected.",
      "ja": "この文書は、署名付きデータおよび認証データコンテンツタイプのアルゴリズム識別子が適切に保護されていることを確認するために、RFC 5652で指定された暗号化メッセージ構文（CMS）を更新します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはインターネット規格のトラック文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "この文書は、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表します。それは公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による出版の承認を受けました。インターネット規格に関する詳細情報は、RFC 7841のセクション2で利用できます。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8933.",
      "ja": "この文書の現在のステータス、任意のエラータ、およびフィードバックを提供する方法は、https://www.rfc-editor.org/info/rfc8933で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2020 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（C）2020 IETFの信頼と文書著者として識別された人。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "このドキュメントは、このドキュメントの発行日に有効なBCP 78およびIETFドキュメントに関連するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象となります。 これらのドキュメントは、このドキュメントに関するお客様の権利と制限について説明しているため、注意深く確認してください。 このドキュメントから抽出されたコードコンポーネントには、Trust LegalProvisionsのセクション4.eで説明されているSimplifiedBSD Licenseテキストが含まれている必要があり、Simplified BSDLicenseで説明されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n2.  Terminology\n3.  Required Use of the Same Hash Algorithm\n  3.1.  RFC 5652, Section 5.3\n  3.2.  RFC 5652, Section 5.4\n  3.3.  RFC 5652, Section 5.6\n  3.4.  Backward Compatibility Considerations\n  3.5.  Timestamp Compatibility Considerations\n4.  Recommended Inclusion of the CMSAlgorithmProtection Attribute\n  4.1.  RFC 5652, Section 14\n5.  IANA Considerations\n6.  Security Considerations\n7.  References\n  7.1.  Normative References\n  7.2.  Informative References\nAcknowledgements\nAuthor's Address",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document updates the Cryptographic Message Syntax (CMS) [RFC5652] to ensure that algorithm identifiers in signed-data and authenticated-data content types are adequately protected.",
      "ja": "このドキュメントは、符号付きデータと認証データコンテンツタイプのアルゴリズム識別子が適切に保護されていることを確認するために、暗号化メッセージ構文（CMS）[RFC5652]を更新します。"
    },
    {
      "indent": 3,
      "text": "The CMS signed-data content type [RFC5652], unlike X.509 certificates [RFC5280], can be vulnerable to algorithm substitution attacks. In an algorithm substitution attack, the attacker changes either the algorithm identifier or the parameters associated with the algorithm identifier to change the verification process used by the recipient. The X.509 certificate structure protects the algorithm identifier and the associated parameters by signing them.",
      "ja": "CMS署名データコンテンツタイプ[RFC5652]は、X.509証明書[RFC5280]とは異なり、アルゴリズム置換攻撃に対して脆弱になる可能性があります。アルゴリズム置換攻撃では、攻撃者はアルゴリズム識別子またはアルゴリズム識別子に関連するパラメータを変更して、受信者によって使用される検証プロセスを変更します。X.509証明書構造は、それらに署名してアルゴリズム識別子と関連パラメータを保護します。"
    },
    {
      "indent": 3,
      "text": "In an algorithm substitution attack, the attacker looks for a different algorithm that produces the same result as the algorithm used by the originator. As an example, if the signer of a message used SHA-256 [SHS] as the digest algorithm to hash the message content, then the attacker looks for a weaker hash algorithm that produces a result that is of the same length. The attacker's goal is to find a different message that results in the same hash value, which is called a cross-algorithm collision. Today, there are many hash functions that produce 256-bit results. One of them may be found to be weak in the future.",
      "ja": "アルゴリズム置換攻撃では、攻撃者は発信者によって使用されるアルゴリズムと同じ結果を生み出す別のアルゴリズムを探します。一例として、メッセージの署名者がメッセージの内容をハッシュするためのダイジェストアルゴリズムとして使用されたメッセージの署名者が、同じ長さの結果を生み出すより弱いハッシュアルゴリズムを探す。攻撃者の目標は、同じハッシュ値をもたらす別のメッセージを見つけることです。これは、クロスアルゴリズムの衝突と呼ばれます。今日、256ビットの結果を生み出すハッシュ関数がたくさんあります。そのうちの1つは将来弱いことがわかっているかもしれません。"
    },
    {
      "indent": 3,
      "text": "Further, when a digest algorithm produces a larger result than is needed by a digital signature algorithm, the digest value is reduced to the size needed by the signature algorithm. This can be done both by truncation and modulo operations, with the simplest being straightforward truncation. In this situation, the attacker needs to find a collision with the reduced digest value. As an example, if the message signer uses SHA-512 [SHS] as the digest algorithm and the Elliptic Curve Digital Signature Algorithm (ECDSA) with the P-256 curve [DSS] as the signature algorithm, then the attacker needs to find a collision with the first half of the digest.",
      "ja": "さらに、ダイジェストアルゴリズムがデジタル署名アルゴリズムによって必要とされるよりも大きい結果を生成するとき、ダイジェスト値は署名アルゴリズムによって必要とされるサイズに減少する。これは、最も簡単な切り捨てで、切り捨てとモジュロ操作によって行うことができます。この状況では、攻撃者はダイジェスト値の減少と衝突を見つける必要があります。一例として、メッセージ署名者がダイジェストアルゴリズムとしてSHA-512 [SHS]を使用し、P-256カーブDSSを署名アルゴリズムとしてP-256曲線DSSを使用している場合は、攻撃者が見つける必要があります。ダイジェストの前半と衝突する。"
    },
    {
      "indent": 3,
      "text": "Similar attacks can be mounted against parameterized algorithm identifiers. When randomized hash functions are employed, such as the example in [RFC6210], the algorithm identifier parameter includes a random value that can be manipulated by an attacker looking for collisions. Some other algorithm identifiers include complex parameter structures, and each value provides another opportunity for manipulation by an attacker.",
      "ja": "パラメータ化されたアルゴリズム識別子に対して同様の攻撃をマウントすることができます。[RFC6210]の例などのランダム化ハッシュ関数が採用されている場合、アルゴリズム識別子パラメータは、衝突を探して攻撃者によって操作することができるランダムな値を含む。他のいくつかのアルゴリズム識別子は複雑なパラメータ構造を含み、各値は攻撃者による操作のための別の機会を提供する。"
    },
    {
      "indent": 3,
      "text": "This document makes two updates to CMS to provide protection for the algorithm identifier. First, it mandates a convention followed by many implementations by requiring the originator to use the same hash algorithm to compute the digest of the message content and the digest of signed attributes. Second, it recommends that the originator include the CMSAlgorithmProtection attribute [RFC6211].",
      "ja": "このドキュメントは、アルゴリズム識別子の保護を提供するためにCMSに2つの更新を行います。第1に、それは創始者に同じハッシュアルゴリズムを使用してメッセージ内容のダイジェストと符号付き属性のダイジェストを計算することを要求することによって多くの実装を義務付ける。次に、発信者にCMSalgorithmProtection属性[RFC6211]が含まれることをお勧めします。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2. 用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Required Use of the Same Hash Algorithm",
      "section_title": true,
      "ja": "3. 同じハッシュアルゴリズムの必要な使用"
    },
    {
      "indent": 3,
      "text": "This section updates [RFC5652] to require the originator to use the same hash algorithm to compute the digest of the message content and the digest of signed attributes.",
      "ja": "このセクションでは、[RFC5652]を更新して、発信者に同じハッシュアルゴリズムを使用してメッセージコンテンツのダイジェストと符号付き属性のダイジェストを計算する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.1. RFC 5652, Section 5.3",
      "section_title": true,
      "ja": "3.1. RFC 5652、セクション5.3"
    },
    {
      "indent": 3,
      "text": "Change the paragraph describing the digestAlgorithm as follows:",
      "ja": "次のように、ダイジェストアルゴリズムを説明する段落を変更します。"
    },
    {
      "indent": 3,
      "text": "OLD:",
      "ja": "古い："
    },
    {
      "indent": 3,
      "text": "|  digestAlgorithm identifies the message digest algorithm, and any\n|  associated parameters, used by the signer.  The message digest is\n|  computed on either the content being signed or the content\n|  together with the signed attributes using the process described in\n|  Section 5.4.  The message digest algorithm SHOULD be among those\n|  listed in the digestAlgorithms field of the associated SignerData.\n|  Implementations MAY fail to validate signatures that use a digest\n|  algorithm that is not included in the SignedData digestAlgorithms\n|  set.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "NEW:",
      "ja": "新着："
    },
    {
      "indent": 3,
      "text": "|  digestAlgorithm identifies the message digest algorithm, and any\n|  associated parameters, used by the signer.  The message digest is\n|  computed on either the content being signed or the content\n|  together with the signedAttrs using the process described in\n|  Section 5.4.  The message digest algorithm SHOULD be among those\n|  listed in the digestAlgorithms field of the associated SignerData.\n|  If the signedAttrs field is present in the SignerInfo, then the\n|  same digest algorithm MUST be used to compute both the digest of\n|  the SignedData encapContentInfo eContent, which is carried in the\n|  message-digest attribute, and the digest of the DER-encoded\n|  signedAttrs, which is passed to the signature algorithm.\n|  Implementations MAY fail to validate signatures that use a digest\n|  algorithm that is not included in the SignedData digestAlgorithms\n|  set.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3.2. RFC 5652, Section 5.4",
      "section_title": true,
      "ja": "3.2. RFC 5652、セクション5.4"
    },
    {
      "indent": 3,
      "text": "Add the following paragraph as the second paragraph in Section 5.4.",
      "ja": "セクション5.4の2番目の段落として次の段落を追加します。"
    },
    {
      "indent": 3,
      "text": "ADD:",
      "ja": "追加："
    },
    {
      "indent": 3,
      "text": "|  When the signedAttrs field is present, the same digest algorithm\n|  MUST be used to compute the digest of the encapContentInfo\n|  eContent OCTET STRING, which is carried in the message-digest\n|  attribute and the digest of the collection of attributes that are\n|  signed.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3.3. RFC 5652, Section 5.6",
      "section_title": true,
      "ja": "3.3. RFC 5652、セクション5.6"
    },
    {
      "indent": 3,
      "text": "Change the paragraph discussing the signed attributes as follows:",
      "ja": "符号付き属性について説明する段落を次のように変更します。"
    },
    {
      "indent": 3,
      "text": "OLD:",
      "ja": "古い："
    },
    {
      "indent": 3,
      "text": "|  The recipient MUST NOT rely on any message digest values computed\n|  by the originator.  If the SignedData signerInfo includes\n|  signedAttributes, then the content message digest MUST be\n|  calculated as described in Section 5.4.  For the signature to be\n|  valid, the message digest value calculated by the recipient MUST\n|  be the same as the value of the messageDigest attribute included\n|  in the signedAttributes of the SignedData signerInfo.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "NEW:",
      "ja": "新着："
    },
    {
      "indent": 3,
      "text": "|  The recipient MUST NOT rely on any message digest values computed\n|  by the originator.  If the SignedData signerInfo includes the\n|  signedAttrs field, then the content message digest MUST be\n|  calculated as described in Section 5.4 using the same digest\n|  algorithm to compute the digest of the encapContentInfo eContent\n|  OCTET STRING and the message-digest attribute.  For the signature\n|  to be valid, the message digest value calculated by the recipient\n|  MUST be the same as the value of the messageDigest attribute\n|  included in the signedAttrs field of the SignedData signerInfo.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3.4. Backward Compatibility Considerations",
      "section_title": true,
      "ja": "3.4. 下位互換性の考慮事項"
    },
    {
      "indent": 3,
      "text": "The new requirement introduced above might lead to incompatibility with an implementation that allowed different digest algorithms to be used to compute the digest of the message content and the digest of signed attributes. The signatures produced by such an implementation when two different digest algorithms are used will be considered invalid by an implementation that follows this specification. However, most, if not all, implementations already require the originator to use the same digest algorithm for both operations.",
      "ja": "上記の新しい要件は、異なるダイジェストアルゴリズムを使用してメッセージ内容のダイジェストと符号付き属性のダイジェストを計算することを可能にする実装との不適合性をもたらすかもしれません。2つの異なるダイジェストアルゴリズムが使用されている場合にそのような実装によって生成された署名は、この仕様に続く実装によって無効と見なされます。ただし、ほとんどの場合、すべての場合、実装は既にオリジネーターに両方の操作に同じダイジェストアルゴリズムを使用する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.5. Timestamp Compatibility Considerations",
      "section_title": true,
      "ja": "3.5. タイムスタンプ互換性に関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The new requirement introduced above might lead to compatibility issues for timestamping systems when the originator does not wish to share the message content with the Time Stamping Authority (TSA) [RFC3161]. In this situation, the originator sends a TimeStampReq to the TSA that includes a MessageImprint, which consists of a digest algorithm identifier and a digest value. The TSA then uses the originator-provided digest in the MessageImprint.",
      "ja": "上記の新しい要件は、発信者がメッセージ内容をタイムスタンプ局（TSA）[RFC3161]と共有したくない場合、タイムスタンプシステムの互換性の問題につながる可能性があります。この状況では、発信者は、ダイジェストアルゴリズム識別子とダイジェスト値で構成されているMessageImprintを含むTIMESTAMPREQをTSAに送信します。その後、TSAはMessageImprintで発信者提供のダイジェストを使用します。"
    },
    {
      "indent": 3,
      "text": "When producing the TimeStampToken, the TSA MUST use the same digest algorithm to compute the digest of the encapContentInfo eContent, which is an OCTET STRING that contains the TSTInfo, and the message-digest attribute within the SignerInfo.",
      "ja": "TimesTampTokenを作成するとき、TSAは、encapcontentInfo Econtentのダイジェストを計算するために同じダイジェストアルゴリズムを使用する必要があります。これは、TSTINFOを含むオクテット文字列、およびsignerInfo内のメッセージダイジェスト属性です。"
    },
    {
      "indent": 3,
      "text": "To ensure that TimeStampToken values that were generated before this update remain valid, no requirement is placed on a TSA to ensure that the digest algorithm for the TimeStampToken matches the digest algorithm for the MessageImprint embedded within the TSTInfo.",
      "ja": "このアップデートが有効なままになる前に生成されたタイムスタートされた値が確実になるように、TIMESTAMPTOKEのダイジェストアルゴリズムがTSTINFO内に埋め込まれたMessageImprintのダイジェストアルゴリズムと一致するように、TSA上に必要ありません。"
    },
    {
      "indent": 0,
      "text": "4. Recommended Inclusion of the CMSAlgorithmProtection Attribute",
      "section_title": true,
      "ja": "4. CMSAlgorithm保護属性を除く推奨"
    },
    {
      "indent": 3,
      "text": "This section updates [RFC5652] to recommend that the originator include the CMSAlgorithmProtection attribute [RFC6211] whenever signed attributes or authenticated attributes are present.",
      "ja": "このセクションでは、署名された属性または認証済み属性が存在するときはいつでもCMSALGorithmProtection属性[RFC6211]を含むことを推奨する。"
    },
    {
      "indent": 0,
      "text": "4.1. RFC 5652, Section 14",
      "section_title": true,
      "ja": "4.1. RFC 5652、セクション14"
    },
    {
      "indent": 3,
      "text": "Add the following paragraph as the eighth paragraph in Section 14:",
      "ja": "次の段落を第8段落として第14項目に追加します。"
    },
    {
      "indent": 3,
      "text": "ADD:",
      "ja": "追加："
    },
    {
      "indent": 3,
      "text": "|  While there are no known algorithm substitution attacks today, the\n|  inclusion of the algorithm identifiers used by the originator as a\n|  signed attribute or an authenticated attribute makes such an\n|  attack significantly more difficult.  Therefore, the originator of\n|  a signed-data content type that includes signed attributes SHOULD\n|  include the CMSAlgorithmProtection attribute [RFC6211] as one of\n|  the signed attributes.  Likewise, the originator of an\n|  authenticated-data content type that includes authenticated\n|  attributes SHOULD include the CMSAlgorithmProtection attribute\n|  [RFC6211] as one of the authenticated attributes.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5. IANA Considerations",
      "section_title": true,
      "ja": "5. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no IANA actions.",
      "ja": "この文書にはIANAの行動がありません。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The security properties of the CMS [RFC5652] signed-data and authenticated-data content types are updated to offer protection for algorithm identifiers, which makes algorithm substitution attacks significantly more difficult.",
      "ja": "CMS [RFC5652]のセキュリティプロパティ署名付きデータと認証データコンテンツタイプは、アルゴリズム識別子の保護を提供するように更新され、アルゴリズムの置換攻撃を大幅に困難にします。"
    },
    {
      "indent": 3,
      "text": "For the signed-data content type, the improvements specified in this document force an attacker to mount a hash algorithm substitution attack on the overall signature, not just on the message digest of the encapContentInfo eContent.",
      "ja": "署名付きデータコンテンツタイプの場合、このドキュメントで指定された改善は、EncapContentInfo Econtentのメッセージダイジェストだけでなく、ハッシュアルゴリズム置換攻撃をハッシュアルゴリズム置換攻撃をマウントするように強制します。"
    },
    {
      "indent": 3,
      "text": "Some digital signature algorithms have prevented hash function substitutions by including a digest algorithm identifier as an input to the signature algorithm. As discussed in [HASHID], such a \"firewall\" may not be effective or even possible with newer signature algorithms. For example, RSASSA-PKCS1-v1_5 [RFC8017] protects the digest algorithm identifier, but RSASSA-PSS [RFC8017] does not. Therefore, it remains important that a signer have a way to signal to a recipient which digest algorithms are allowed to be used in conjunction with the verification of an overall signature. This signaling can be done as part of the specification of the signature algorithm in an X.509v3 certificate extension [RFC5280] or some other means. The Digital Signature Standard (DSS) [DSS] takes the first approach by requiring the use of an \"approved\" one-way hash algorithm.",
      "ja": "一部のデジタル署名アルゴリズムは、シグネチャアルゴリズムへの入力としてダイジェストアルゴリズム識別子を含めることによってハッシュ関数の置換を防止しています。[Hashid]で説明したように、そのような「ファイアウォール」は、新しい署名アルゴリズムを用いて効果的でも可能ではないかもしれない。たとえば、RSASSA-PKCS1~V1_5 [RFC8017]ダイジェストアルゴリズム識別子を保護しますが、RSASSA-PSS [RFC8017]はしません。したがって、署名者が、全体的な署名の検証と組み合わせてダイジェストアルゴリズムを使用することが許可される受信者に信号を送信する方法を有することは重要なままである。このシグナリングは、X.509V3証明書拡張[RFC5280]またはその他の手段でのシグネチャアルゴリズムの仕様の一部として行うことができます。デジタル署名標準（DSS）[DSS]は、「承認された」一方向ハッシュアルゴリズムの使用を要求することによって最初のアプローチを取ります。"
    },
    {
      "indent": 3,
      "text": "For the authenticated-data content type, the improvements specified in this document force an attacker to mount a MAC algorithm substitution attack, which is difficult because the attacker does not know the authentication key.",
      "ja": "認証されたデータコンテンツタイプの場合、このドキュメントで指定された改善は、攻撃者にMACアルゴリズム置換攻撃をマウントするように強制します。これは攻撃者が認証キーを知らないため困難です。"
    },
    {
      "indent": 3,
      "text": "The CMSAlgorithmProtection attribute [RFC6211] offers protection for the algorithm identifiers used in the signed-data and authenticated-data content types. However, no protection is provided for the algorithm identifiers in the enveloped-data, digested-data, or encrypted-data content types. Likewise, the CMSAlgorithmProtection attribute provides no protection for the algorithm identifiers used in the authenticated-enveloped-data content type defined in [RFC5083]. A mechanism for algorithm identifier protection for these content types is work for the future.",
      "ja": "CMSalgorithmProtection属性[RFC6211]は、署名付きデータおよび認証データコンテンツタイプで使用されるアルゴリズム識別子の保護を提供します。ただし、エンベロープデータ、消化データ、または暗号化データコンテンツタイプのアルゴリズム識別子には保護はありません。同様に、CMSalgorithmProtection属性は、[RFC5083]で定義されている認証済みエンベロープデータコンテンツタイプで使用されるアルゴリズム識別子を保護しません。これらのコンテンツタイプに対するアルゴリズム識別子保護のためのメカニズムは将来のために機能します。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7. 参考文献"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] BRADNER、S、「RFCSで使用するためのキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https：//www.rfc-editor.org/info/RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3161] Adams, C., Cain, P., Pinkas, D., and R. Zuccherato, \"Internet X.509 Public Key Infrastructure Time-Stamp Protocol (TSP)\", RFC 3161, DOI 10.17487/RFC3161, August 2001, <https://www.rfc-editor.org/info/rfc3161>.",
      "ja": "[RFC3161] ADAMS、C、Cain、P.、Pinkas、D.、およびR. Zuccherato、「インターネットX.509公開鍵インフラストラクチャタイムスタンププロトコル（TSP）」、RFC 3161、DOI 10.17487 / RFC3161、2001年8月<https://www.rfc-editor.org/info/rfc3161>。"
    },
    {
      "indent": 3,
      "text": "[RFC5652] Housley, R., \"Cryptographic Message Syntax (CMS)\", STD 70, RFC 5652, DOI 10.17487/RFC5652, September 2009, <https://www.rfc-editor.org/info/rfc5652>.",
      "ja": "[RFC5652] Housley、R.、 \"Cryptographic Message Syntax（CMS）\"、STD 70、RFC 5652、DOI 10.17487 / RFC5652、2009年9月、<https：//www.rfc-editor.org/info/rfc5652>。"
    },
    {
      "indent": 3,
      "text": "[RFC6211] Schaad, J., \"Cryptographic Message Syntax (CMS) Algorithm Identifier Protection Attribute\", RFC 6211, DOI 10.17487/RFC6211, April 2011, <https://www.rfc-editor.org/info/rfc6211>.",
      "ja": "[RFC6211] Schaad、J.、 \"Cryptographic Message Syntax（CMS）アルゴリズム識別子保護属性\"、RFC 6211、DOI 10.17487 / RFC6211、2011年4月、<https：//www.rfc-editor.org/info/rfc6211>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B、「RFC 2119キーワードの大文字の曖昧さ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https：//www.rfc-editor.org/info/RFC8174>。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[DSS] National Institute of Standards and Technology (NIST), \"Digital Signature Standard (DSS)\", FIPS 186-4, DOI 10.6028/NIST.FIPS.186-4, July 2013, <https://doi.org/10.6028/NIST.FIPS.186-4>.",
      "ja": "[DSS]国立標準技術総合研究所（NIST）、「デジタル署名標準（DSS）」、FIPS 186-4、DOI 10.6028 / NIST.FIPS.186-4、2013年7月、<https：//doi.org/10.6028 / NIST.FIPS.186-4>。"
    },
    {
      "indent": 3,
      "text": "[HASHID] Kaliski, B., \"On Hash Function Firewalls in Signature Schemes\", DOI 10.1007/3-540-45760-7_1, Lecture Notes in Computer Science, Volume 2271, February 2002, <https://doi.org/10.1007/3-540-45760-7_1>.",
      "ja": "[Hashid] Kaliski、B.、「署名スキームのハッシュ関数ファイアウォールのオン」、DOI 10.1007 / 3-540-45760-7_1、コンピュータサイエンス、第2271巻、2002年2月、<https://doi.org/10.1007 / 3-540-45760-7_1>。"
    },
    {
      "indent": 3,
      "text": "[RFC5083] Housley, R., \"Cryptographic Message Syntax (CMS) Authenticated-Enveloped-Data Content Type\", RFC 5083, DOI 10.17487/RFC5083, November 2007, <https://www.rfc-editor.org/info/rfc5083>.",
      "ja": "[RFC5083] Housley、R.、 \"Cryptographic Message Syntax（CMS）認証済み - データコンテンツの種類\"、RFC 5083、DOI 10.17487 / RFC5083、2007年11月、<https://www.rfc-editor.org/info/RFC5083>。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, DOI 10.17487/RFC5280, May 2008, <https://www.rfc-editor.org/info/rfc5280>.",
      "ja": "[RFC5280] Cooper、D.、Santesson、S.、Farrell、S.、Boeyen、S.、Housley、R.、およびW.Polk、 \"Internet X.509公開鍵インフラストラクチャ証明書および証明書失効リスト（CRL）プロファイル「、RFC 5280、DOI 10.17487 / RFC5280、2008年5月、<https://www.rfc-editor.org/info/rfc5280>。"
    },
    {
      "indent": 3,
      "text": "[RFC6210] Schaad, J., \"Experiment: Hash Functions with Parameters in the Cryptographic Message Syntax (CMS) and S/MIME\", RFC 6210, DOI 10.17487/RFC6210, April 2011, <https://www.rfc-editor.org/info/rfc6210>.",
      "ja": "[RFC6210] Schaad、J.、「実験：暗号メッセージ構文（CMS）とS / MIMEのパラメータを持つハッシュ関数」、RFC 6210、DOI 10.17487 / RFC6210、2011年4月、<https：//www.rfc-編集者.ORG / INFO / RFC6210>。"
    },
    {
      "indent": 3,
      "text": "[RFC8017] Moriarty, K., Ed., Kaliski, B., Jonsson, J., and A. Rusch, \"PKCS #1: RSA Cryptography Specifications Version 2.2\", RFC 8017, DOI 10.17487/RFC8017, November 2016, <https://www.rfc-editor.org/info/rfc8017>.",
      "ja": "[RFC8017] MoriArty、K。、ED。、Kaliski、B.、Jonsson、J.、A. RUSCH、「PKCS＃1：RSA暗号化仕様バージョン2.2」、RFC 8017、DOI 10.17487 / RFC8017、2016年11月、<https://www.rfc-editor.org/info/rfc8017>。"
    },
    {
      "indent": 3,
      "text": "[SHS] National Institute of Standards and Technology (NIST), \"Secure Hash Standard (SHS)\", FIPS 180-4, DOI 10.6028/NIST.FIPS.180-4, August 2015, <https://doi.org/10.6028/NIST.FIPS.180-4>.",
      "ja": "[SHS]国立標準技術研究所（NIST）、「セキュアハッシュスタンダード（SHS）」、FIPS 180-4、DOI 10.6028 / NIST.FIPS.180-4、2015年8月、<https：//doi.org/10.6028 / NIST.FIPS.180-4>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Many thanks to Jim Schaad and Peter Gutmann; without knowing it, they motivated me to write this document. Thanks to Roman Danyliw, Ben Kaduk, and Peter Yee for their careful review and editorial suggestions.",
      "ja": "Jim SchaadとPeter Gutmannに感謝します。それを知らずに、彼らは私にこの文書を書くように動機付けられました。Roman Danyliw、Ben Kaduk、そしてPeter Yeeのおかげで、慎重なレビューと編集上の提案のために。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者の住所"
    },
    {
      "indent": 3,
      "text": "Russ Housley Vigil Security, LLC 516 Dranesville Road Herndon, VA 20170 United States of America",
      "ja": "Russ Housley Vigil Security、LLC 516 Dranesville Road Herndon、VA 20170アメリカ合衆国"
    },
    {
      "indent": 3,
      "text": "Email: housley@vigilsec.com",
      "raw": true,
      "ja": ""
    }
  ]
}