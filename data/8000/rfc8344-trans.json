{
  "title": {
    "text": "RFC 8344 - A YANG Data Model for IP Management",
    "ja": "RFC 8344 - IP管理のためのYANGデータモデル"
  },
  "number": 8344,
  "created_at": "2020-08-23 16:31:19.479545+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                      M. Bjorklund\nRequest for Comments: 8344                                Tail-f Systems\nObsoletes: 7277                                               March 2018\nCategory: Standards Track\nISSN: 2070-1721",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 18,
      "text": "A YANG Data Model for IP Management",
      "ja": "IP管理のためのYANGデータモデル"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document defines a YANG data model for management of IP implementations. The data model includes configuration and system state.",
      "ja": "このドキュメントでは、IP実装を管理するためのYANGデータモデルを定義しています。データモデルには、構成とシステム状態が含まれます。"
    },
    {
      "indent": 3,
      "text": "The YANG data model in this document conforms to the Network Management Datastore Architecture defined in RFC 8342.",
      "ja": "このドキュメントのYANGデータモデルは、RFC 8342で定義されているネットワーク管理データストアアーキテクチャに準拠しています。"
    },
    {
      "indent": 3,
      "text": "This document obsoletes RFC 7277.",
      "ja": "このドキュメントはRFC 7277を廃止します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 7841のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8344.",
      "ja": "このドキュメントの現在のステータス、正誤表、およびフィードバックの提供方法に関する情報は、https：//www.rfc-editor.org/info/rfc8344で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2018 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n   1.1. Summary of Changes from RFC 7277 ...........................2\n   1.2. Terminology ................................................3\n   1.3. Tree Diagrams ..............................................3\n2. IP Data Model ...................................................4\n3. Relationship to the IP-MIB ......................................5\n4. IP Management YANG Module .......................................7\n5. IANA Considerations ............................................27\n6. Security Considerations ........................................27\n7. References .....................................................29\n   7.1. Normative References ......................................29\n   7.2. Informative References ....................................31\nAppendix A. Example: NETCONF <get-config> Reply ...................32\nAppendix B. Example: NETCONF <get-data> Reply .....................33\nAcknowledgments ...................................................34\nAuthor's Address ..................................................34",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document defines a YANG data model [RFC7950] for management of IP implementations.",
      "ja": "このドキュメントは、IP実装の管理のためのYANGデータモデル[RFC7950]を定義します。"
    },
    {
      "indent": 3,
      "text": "The data model covers configuration of per-interface IPv4 and IPv6 parameters as well as mappings of IP addresses to link-layer addresses. It also provides information about which IP addresses are operationally used and which link-layer mappings exist. Per-interface parameters are added through augmentation of the interface data model defined in [RFC8343].",
      "ja": "データモデルは、インターフェイスごとのIPv4およびIPv6パラメータの構成、およびIPアドレスのリンク層アドレスへのマッピングをカバーしています。また、運用に使用されているIPアドレス、および存在するリンク層マッピングに関する情報も提供します。インターフェースごとのパラメーターは、[RFC8343]で定義されているインターフェースデータモデルの拡張を通じて追加されます。"
    },
    {
      "indent": 3,
      "text": "This version of the IP data model supports the Network Management Datastore Architecture (NMDA) [RFC8342].",
      "ja": "このバージョンのIPデータモデルは、ネットワーク管理データストアアーキテクチャ（NMDA）[RFC8342]をサポートしています。"
    },
    {
      "indent": 0,
      "text": "1.1. Summary of Changes from RFC 7277",
      "section_title": true,
      "ja": "1.1. RFC 7277からの変更の概要"
    },
    {
      "indent": 3,
      "text": "The \"ipv4\" and \"ipv6\" subtrees with \"config false\" data nodes in the \"/interfaces-state/interface\" subtree are deprecated. All \"config false\" data nodes are now present in the \"ipv4\" and \"ipv6\" subtrees in the \"/interfaces/interface\" subtree.",
      "ja": "「/ interfaces-state / interface」サブツリーの「config false」データノードを持つ「ipv4」および「ipv6」サブツリーは非推奨になりました。すべての「config false」データノードは、「/ interfaces / interface」サブツリーの「ipv4」および「ipv6」サブツリーに存在します。"
    },
    {
      "indent": 3,
      "text": "Servers that do not implement NMDA or that wish to support clients that do not implement NMDA MAY implement the deprecated \"ipv4\" and \"ipv6\" subtrees in the \"/interfaces-state/interface\" subtree.",
      "ja": "NMDAを実装していないサーバー、またはNMDAを実装していないクライアントをサポートしたいサーバーは、「/ interfaces-state / interface」サブツリーに非推奨の「ipv4」および「ipv6」サブツリーを実装できます。"
    },
    {
      "indent": 0,
      "text": "1.2. Terminology",
      "section_title": true,
      "ja": "1.2. 用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "キーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「NOT RECOMMENDED」、「MAY」、「OPTIONALこのドキュメントの「」は、BCP 14 [RFC2119] [RFC8174]で説明されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "The following terms are defined in [RFC8342] and are not redefined here:",
      "ja": "以下の用語は[RFC8342]で定義されており、ここでは再定義されません。"
    },
    {
      "indent": 3,
      "text": "o client",
      "ja": "o クライアント"
    },
    {
      "indent": 3,
      "text": "o server",
      "ja": "o サーバ"
    },
    {
      "indent": 3,
      "text": "o configuration",
      "ja": "o 構成"
    },
    {
      "indent": 3,
      "text": "o system state",
      "ja": "o システム状態"
    },
    {
      "indent": 3,
      "text": "o intended configuration",
      "ja": "o 意図した構成"
    },
    {
      "indent": 3,
      "text": "o running configuration datastore",
      "ja": "o 実行構成データストア"
    },
    {
      "indent": 3,
      "text": "o operational state",
      "ja": "o 稼働状態"
    },
    {
      "indent": 3,
      "text": "o operational state datastore",
      "ja": "o 運用状態データストア"
    },
    {
      "indent": 3,
      "text": "The following terms are defined in [RFC7950] and are not redefined here:",
      "ja": "以下の用語は[RFC7950]で定義されており、ここでは再定義されません。"
    },
    {
      "indent": 3,
      "text": "o augment",
      "ja": "o 増強"
    },
    {
      "indent": 3,
      "text": "o data model",
      "ja": "o データ・モデル"
    },
    {
      "indent": 3,
      "text": "o data node",
      "ja": "o だた ので"
    },
    {
      "indent": 3,
      "text": "The terminology for describing YANG data models is found in [RFC7950].",
      "ja": "YANGデータモデルを記述するための用語は、[RFC7950]にあります。"
    },
    {
      "indent": 0,
      "text": "1.3. Tree Diagrams",
      "section_title": true,
      "ja": "1.3. ツリー図"
    },
    {
      "indent": 3,
      "text": "Tree diagrams used in this document follow the notation defined in [RFC8340].",
      "ja": "このドキュメントで使用されるツリー図は、[RFC8340]で定義された表記に従います。"
    },
    {
      "indent": 0,
      "text": "2. IP Data Model",
      "section_title": true,
      "ja": "2. IPデータモデル"
    },
    {
      "indent": 3,
      "text": "This document defines the YANG module \"ietf-ip\", which augments the \"interface\" lists defined in the \"ietf-interfaces\" module [RFC8343] with IP-specific data nodes.",
      "ja": "このドキュメントは、Yangモジュール「ietf-ip」を定義します。これは、「ietf-interfaces」モジュール[RFC8343]で定義された「インターフェース」リストにIP固有のデータノードを追加します。"
    },
    {
      "indent": 3,
      "text": "The data model has the following structure for IP data nodes per interface, excluding the deprecated data nodes:",
      "ja": "データモデルは、非推奨のデータノードを除いて、インターフェイスごとのIPデータノードについて次の構造を持っています。"
    },
    {
      "indent": 3,
      "text": "module: ietf-ip\n  augment /if:interfaces/if:interface:\n    +--rw ipv4!\n    |  +--rw enabled?      boolean\n    |  +--rw forwarding?   boolean\n    |  +--rw mtu?          uint16\n    |  +--rw address* [ip]\n    |  |  +--rw ip               inet:ipv4-address-no-zone\n    |  |  +--rw (subnet)\n    |  |  |  +--:(prefix-length)\n    |  |  |  |  +--rw prefix-length?   uint8\n    |  |  |  +--:(netmask)\n    |  |  |     +--rw netmask?         yang:dotted-quad\n    |  |  |             {ipv4-non-contiguous-netmasks}?\n    |  |  +--ro origin?          ip-address-origin\n    |  +--rw neighbor* [ip]\n    |     +--rw ip                    inet:ipv4-address-no-zone\n    |     +--rw link-layer-address    yang:phys-address\n    |     +--ro origin?               neighbor-origin\n    +--rw ipv6!\n       +--rw enabled?                     boolean\n       +--rw forwarding?                  boolean\n       +--rw mtu?                         uint32\n       +--rw address* [ip]\n       |  +--rw ip               inet:ipv6-address-no-zone\n       |  +--rw prefix-length    uint8\n       |  +--ro origin?          ip-address-origin\n       |  +--ro status?          enumeration\n       +--rw neighbor* [ip]\n       |  +--rw ip                    inet:ipv6-address-no-zone\n       |  +--rw link-layer-address    yang:phys-address\n       |  +--ro origin?               neighbor-origin\n       |  +--ro is-router?            empty\n       |  +--ro state?                enumeration\n       +--rw dup-addr-detect-transmits?   uint32",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "+--rw autoconf\n   +--rw create-global-addresses?        boolean\n   +--rw create-temporary-addresses?     boolean\n   |       {ipv6-privacy-autoconf}?\n   +--rw temporary-valid-lifetime?       uint32\n   |       {ipv6-privacy-autoconf}?\n   +--rw temporary-preferred-lifetime?   uint32\n           {ipv6-privacy-autoconf}?",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The data model defines two containers per interface -- \"ipv4\" and \"ipv6\", representing the IPv4 and IPv6 address families. In each container, there is a leaf \"enabled\" that controls whether or not the address family is enabled on that interface, and a leaf \"forwarding\" that controls whether or not IP packet forwarding for the address family is enabled on the interface. In each container, there is also a list of addresses and a list of mappings from IP addresses to link-layer addresses.",
      "ja": "データモデルは、インターフェイスごとに2つのコンテナーを定義します。「ipv4」と「ipv6」は、IPv4およびIPv6アドレスファミリーを表します。各コンテナには、そのインターフェイスでアドレスファミリを有効にするかどうかを制御する「有効」リーフと、そのインターフェイスでアドレスファミリのIPパケット転送を有効にするかどうかを制御する「転送」リーフがあります。各コンテナには、アドレスのリストと、IPアドレスからリンク層アドレスへのマッピングのリストもあります。"
    },
    {
      "indent": 0,
      "text": "3. Relationship to the IP-MIB",
      "section_title": true,
      "ja": "3. IP-MIBとの関係"
    },
    {
      "indent": 3,
      "text": "If the device implements the IP-MIB [RFC4293], each entry in the \"ipv4/address\" and \"ipv6/address\" lists is mapped to one ipAddressEntry, where the ipAddressIfIndex refers to the \"address\" entry's interface.",
      "ja": "デバイスがIP-MIB [RFC4293]を実装している場合、「ipv4 / address」および「ipv6 / address」リストの各エントリは1つのipAddressEntryにマッピングされます。ipAddressIfIndexは「address」エントリのインターフェースを指します。"
    },
    {
      "indent": 3,
      "text": "The IP-MIB defines objects to control IPv6 Router Advertisement messages. The corresponding YANG data nodes are defined in [RFC8022].",
      "ja": "IP-MIBは、IPv6ルーターアドバタイズメッセージを制御するオブジェクトを定義します。対応するYANGデータノードは[RFC8022]で定義されています。"
    },
    {
      "indent": 3,
      "text": "The entries in \"ipv4/neighbor\" and \"ipv6/neighbor\" are mapped to ipNetToPhysicalTable.",
      "ja": "「ipv4 / neighbor」と「ipv6 / neighbor」のエントリは、ipNetToPhysicalTableにマッピングされます。"
    },
    {
      "indent": 3,
      "text": "The following table lists the YANG data nodes with corresponding objects in the IP-MIB.",
      "ja": "次の表に、IP-MIB内の対応するオブジェクトを含むYANGデータノードを示します。"
    },
    {
      "indent": 3,
      "text": "+----------------------------------+--------------------------------+\n| YANG data node in                | IP-MIB object                  |\n| /if:interfaces/if:interface      |                                |\n+----------------------------------+--------------------------------+\n| ipv4                             | ipv4InterfaceEnableStatus      |\n| ipv4/enabled                     | ipv4InterfaceEnableStatus      |\n| ipv4/address                     | ipAddressEntry                 |\n| ipv4/address/ip                  | ipAddressAddrType              |\n|                                  | ipAddressAddr                  |\n| ipv4/neighbor                    | ipNetToPhysicalEntry           |\n| ipv4/neighbor/ip                 | ipNetToPhysicalNetAddressType  |\n|                                  | ipNetToPhysicalNetAddress      |\n| ipv4/neighbor/link-layer-address | ipNetToPhysicalPhysAddress     |\n| ipv4/neighbor/origin             | ipNetToPhysicalType            |\n| ipv6                             | ipv6InterfaceEnableStatus      |\n| ipv6/enabled                     | ipv6InterfaceEnableStatus      |\n| ipv6/forwarding                  | ipv6InterfaceForwarding        |\n| ipv6/address                     | ipAddressEntry                 |\n| ipv6/address/ip                  | ipAddressAddrType              |\n|                                  | ipAddressAddr                  |\n| ipv4/address/origin              | ipAddressOrigin                |\n| ipv6/address/status              | ipAddressStatus                |\n| ipv6/neighbor                    | ipNetToPhysicalEntry           |\n| ipv6/neighbor/ip                 | ipNetToPhysicalNetAddressType  |\n|                                  | ipNetToPhysicalNetAddress      |\n| ipv6/neighbor/link-layer-address | ipNetToPhysicalPhysAddress     |\n| ipv6/neighbor/origin             | ipNetToPhysicalType            |\n| ipv6/neighbor/state              | ipNetToPhysicalState           |\n+----------------------------------+--------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "YANG Interface Data Nodes and Related IP-MIB Objects",
      "ja": "YANGインターフェースデータノードと関連するIP-MIBオブジェクト"
    },
    {
      "indent": 0,
      "text": "4. IP Management YANG Module",
      "section_title": true,
      "ja": "4. IP管理YANGモジュール"
    },
    {
      "indent": 3,
      "text": "This module imports typedefs from [RFC6991] and [RFC8343], and it references [RFC791], [RFC826], [RFC4861], [RFC4862], [RFC4941], [RFC7217], and [RFC8200].",
      "ja": "このモジュールは、[RFC6991]および[RFC8343]からtypedefをインポートし、[RFC791]、[RFC826]、[RFC4861]、[RFC4862]、[RFC4941]、[RFC7217]、および[RFC8200]を参照します。"
    },
    {
      "indent": 3,
      "text": "<CODE BEGINS> file \"ietf-ip@2018-02-22.yang\"\nmodule ietf-ip {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-ip\";\n  prefix ip;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "import ietf-interfaces {\n  prefix if;\n}\nimport ietf-inet-types {\n  prefix inet;\n}\nimport ietf-yang-types {\n  prefix yang;\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "organization \"IETF NETMOD (Network Modeling) Working Group\";",
      "ja": "組織「IETF NETMOD（ネットワークモデリング）ワーキンググループ」;"
    },
    {
      "indent": 5,
      "text": "contact\n  \"WG Web:   <https://datatracker.ietf.org/wg/netmod/>\n   WG List:  <mailto:netmod@ietf.org>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": " Editor: Martin Bjorklund <mailto:mbj@tail-f.com>\"; description \"This module contains a collection of YANG definitions for managing IP implementations.",
      "ja": "編集者：Martin Bjorklund <mailto：mbj@tail-f.com> \";説明\"このモジュールには、IP実装を管理するためのYANG定義のコレクションが含まれています。"
    },
    {
      "indent": 8,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "ja": "Copyright（c）2018 IETF Trustおよびコードの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 8,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info).",
      "ja": "ソースおよびバイナリ形式での再配布および使用は、変更の有無にかかわらず、IETF文書に関連するIETFトラストの法的規定のセクション4.cに記載されているSimplified BSD Licenseに従い、それに含まれるライセンス条項に従って許可されます（ https://trustee.ietf.org/license-info）。"
    },
    {
      "indent": 8,
      "text": "This version of this YANG module is part of RFC 8344; see the RFC itself for full legal notices.\";",
      "ja": "このYANGモジュールのこのバージョンはRFC 8344の一部です。完全な法的通知については、RFC自体を参照してください。 \";"
    },
    {
      "indent": 5,
      "text": "revision 2018-02-22 {\n  description\n    \"Updated to support NMDA.\";\n  reference\n    \"RFC 8344: A YANG Data Model for IP Management\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "revision 2014-06-16 {\n  description\n    \"Initial revision.\";\n  reference\n    \"RFC 7277: A YANG Data Model for IP Management\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "/*\n * Features\n */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "feature ipv4-non-contiguous-netmasks {\n  description\n    \"Indicates support for configuring non-contiguous\n     subnet masks.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "feature ipv6-privacy-autoconf {\n  description\n    \"Indicates support for privacy extensions for stateless address\n     autoconfiguration in IPv6.\";\n  reference\n    \"RFC 4941: Privacy Extensions for Stateless Address\n               Autoconfiguration in IPv6\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "/*\n * Typedefs\n */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "     typedef ip-address-origin {\n       type enumeration {\n         enum other {\n           description\n             \"None of the following.\";\n         }\n         enum static {\n           description\n             \"Indicates that the address has been statically\n              configured -- for example, using the Network Configuration\n              Protocol (NETCONF) or a command line interface.\";\n         }\n         enum dhcp {\n           description\n             \"Indicates an address that has been assigned to this\n              system by a DHCP server.\";\n         }\n         enum link-layer {\n           description\n             \"Indicates an address created by IPv6 stateless\n              autoconfiguration that embeds a link-layer address in its\n              interface identifier.\";\n         }\n         enum random {\n           description\n             \"Indicates an address chosen by the system at\n              random, e.g., an IPv4 address within 169.254/16, a\n              temporary address as described in RFC 4941, or a\n              semantically opaque address as described in RFC 7217.\";\n           reference\n             \"RFC 4941: Privacy Extensions for Stateless Address\n                        Autoconfiguration in IPv6\n              RFC 7217: A Method for Generating Semantically Opaque\n                        Interface Identifiers with IPv6 Stateless\n                        Address Autoconfiguration (SLAAC)\";\n         }\n       }\n       description\n         \"The origin of an address.\";\n     }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "     typedef neighbor-origin {\n       type enumeration {\n         enum other {\n           description\n             \"None of the following.\";\n         }\n         enum static {\n           description\n             \"Indicates that the mapping has been statically\n              configured -- for example, using NETCONF or a command line\n              interface.\";\n         }\n         enum dynamic {\n           description\n             \"Indicates that the mapping has been dynamically resolved\n              using, for example, IPv4 ARP or the IPv6 Neighbor\n              Discovery protocol.\";\n         }\n       }\n       description\n         \"The origin of a neighbor entry.\";\n     }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "/*\n * Data nodes\n */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "augment \"/if:interfaces/if:interface\" { description \"IP parameters on interfaces.",
      "ja": "拡張 \"/ if：interfaces / if：interface\" {説明 \"インターフェースのIPパラメータ。"
    },
    {
      "indent": 10,
      "text": "If an interface is not capable of running IP, the server must not allow the client to configure these parameters.\";",
      "ja": "インターフェイスがIPを実行できない場合、サーバーはクライアントがこれらのパラメーターを構成することを許可してはなりません。 \";"
    },
    {
      "indent": 7,
      "text": "container ipv4 {\n  presence\n    \"Enables IPv4 unless the 'enabled' leaf\n     (which defaults to 'true') is set to 'false'\";\n  description\n    \"Parameters for the IPv4 address family.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "         leaf enabled {\n           type boolean;\n           default true;\n           description\n             \"Controls whether IPv4 is enabled or disabled on this\n              interface.  When IPv4 is enabled, this interface is\n              connected to an IPv4 stack, and the interface can send\n              and receive IPv4 packets.\";\n         }\n         leaf forwarding {\n           type boolean;\n           default false;\n           description\n             \"Controls IPv4 packet forwarding of datagrams received by,\n              but not addressed to, this interface.  IPv4 routers\n              forward datagrams.  IPv4 hosts do not (except those\n              source-routed via the host).\";\n         }\n         leaf mtu {\n           type uint16 {\n             range \"68..max\";\n           }\n           units \"octets\";\n           description\n             \"The size, in octets, of the largest IPv4 packet that the\n              interface will send and receive.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "The server may restrict the allowed values for this leaf, depending on the interface's type.",
      "ja": "サーバーは、インターフェースのタイプに応じて、このリーフに許可される値を制限する場合があります。"
    },
    {
      "indent": 9,
      "text": "     If this leaf is not configured, the operationally used MTU\n     depends on the interface's type.\";\n  reference\n    \"RFC 791: Internet Protocol\";\n}\nlist address {\n  key \"ip\";\n  description\n    \"The list of IPv4 addresses on the interface.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "           leaf ip {\n             type inet:ipv4-address-no-zone;\n             description\n               \"The IPv4 address on the interface.\";\n           }\n           choice subnet {\n             mandatory true;\n             description\n               \"The subnet can be specified as a prefix length or,\n                if the server supports non-contiguous netmasks, as\n                a netmask.\";\n             leaf prefix-length {\n               type uint8 {\n                 range \"0..32\";\n               }\n               description\n                 \"The length of the subnet prefix.\";\n             }\n             leaf netmask {\n               if-feature ipv4-non-contiguous-netmasks;\n               type yang:dotted-quad;\n               description\n                 \"The subnet specified as a netmask.\";\n             }\n           }\n           leaf origin {\n             type ip-address-origin;\n             config false;\n             description\n               \"The origin of this address.\";\n           }\n         }\n         list neighbor {\n           key \"ip\";\n           description\n             \"A list of mappings from IPv4 addresses to\n              link-layer addresses.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Entries in this list in the intended configuration are used as static entries in the ARP Cache.",
      "ja": "意図した構成のこのリストのエントリは、ARPキャッシュの静的エントリとして使用されます。"
    },
    {
      "indent": 11,
      "text": "   In the operational state, this list represents the ARP\n   Cache.\";\nreference\n  \"RFC 826: An Ethernet Address Resolution Protocol\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "           leaf ip {\n             type inet:ipv4-address-no-zone;\n             description\n               \"The IPv4 address of the neighbor node.\";\n           }\n           leaf link-layer-address {\n             type yang:phys-address;\n             mandatory true;\n             description\n               \"The link-layer address of the neighbor node.\";\n           }\n           leaf origin {\n             type neighbor-origin;\n             config false;\n             description\n               \"The origin of this neighbor entry.\";\n           }\n         }\n       }\n       container ipv6 {\n         presence\n           \"Enables IPv6 unless the 'enabled' leaf\n            (which defaults to 'true') is set to 'false'\";\n         description\n           \"Parameters for the IPv6 address family.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf enabled {\n  type boolean;\n  default true;\n  description\n    \"Controls whether IPv6 is enabled or disabled on this\n     interface.  When IPv6 is enabled, this interface is\n     connected to an IPv6 stack, and the interface can send\n     and receive IPv6 packets.\";\n}\nleaf forwarding {\n  type boolean;\n  default false;\n  description\n    \"Controls IPv6 packet forwarding of datagrams received by,\n     but not addressed to, this interface.  IPv6 routers\n     forward datagrams.  IPv6 hosts do not (except those\n     source-routed via the host).\";\n  reference\n    \"RFC 4861: Neighbor Discovery for IP version 6 (IPv6)\n               Section 6.2.1, IsRouter\";\n}\nleaf mtu {\n  type uint32 {\n    range \"1280..max\";\n  }\n  units \"octets\";\n  description\n    \"The size, in octets, of the largest IPv6 packet that the\n     interface will send and receive.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "The server may restrict the allowed values for this leaf, depending on the interface's type.",
      "ja": "サーバーは、インターフェースのタイプに応じて、このリーフに許可される値を制限する場合があります。"
    },
    {
      "indent": 0,
      "text": "              If this leaf is not configured, the operationally used MTU\n              depends on the interface's type.\";\n           reference\n             \"RFC 8200: Internet Protocol, Version 6 (IPv6)\n                        Specification\n                        Section 5\";\n         }\n         list address {\n           key \"ip\";\n           description\n             \"The list of IPv6 addresses on the interface.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "           leaf ip {\n             type inet:ipv6-address-no-zone;\n             description\n               \"The IPv6 address on the interface.\";\n           }\n           leaf prefix-length {\n             type uint8 {\n               range \"0..128\";\n             }\n             mandatory true;\n             description\n               \"The length of the subnet prefix.\";\n           }\n           leaf origin {\n             type ip-address-origin;\n             config false;\n             description\n               \"The origin of this address.\";\n           }\n           leaf status {\n             type enumeration {\n               enum preferred {\n                 description\n                   \"This is a valid address that can appear as the\n                    destination or source address of a packet.\";\n               }\n               enum deprecated {\n                 description\n                   \"This is a valid but deprecated address that should\n                    no longer be used as a source address in new\n                    communications, but packets addressed to such an\n                    address are processed as expected.\";\n               }\n               enum invalid {\n                 description\n                   \"This isn't a valid address, and it shouldn't appear\n                    as the destination or source address of a packet.\";\n               }\n               enum inaccessible {\n                 description\n                   \"The address is not accessible because the interface\n                    to which this address is assigned is not\n                    operational.\";\n               }\n               enum unknown {\n                 description\n                   \"The status cannot be determined for some reason.\";\n               }\n               enum tentative {\n                 description\n                   \"The uniqueness of the address on the link is being\n                    verified.  Addresses in this state should not be\n                    used for general communication and should only be\n                    used to determine the uniqueness of the address.\";\n               }\n               enum duplicate {\n                 description\n                   \"The address has been determined to be non-unique on\n                    the link and so must not be used.\";\n               }\n               enum optimistic {\n                 description\n                   \"The address is available for use, subject to\n                    restrictions, while its uniqueness on a link is\n                    being verified.\";\n               }\n             }\n             config false;\n             description\n               \"The status of an address.  Most of the states correspond\n                to states from the IPv6 Stateless Address\n                Autoconfiguration protocol.\";\n             reference\n               \"RFC 4293: Management Information Base for the\n                          Internet Protocol (IP)\n                          - IpAddressStatusTC\n                RFC 4862: IPv6 Stateless Address Autoconfiguration\";\n           }\n         }\n         list neighbor {\n           key \"ip\";\n           description\n             \"A list of mappings from IPv6 addresses to\n              link-layer addresses.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Entries in this list in the intended configuration are used as static entries in the Neighbor Cache.",
      "ja": "意図した構成のこのリストのエントリは、ネイバーキャッシュの静的エントリとして使用されます。"
    },
    {
      "indent": 11,
      "text": "   In the operational state, this list represents the\n   Neighbor Cache.\";\nreference\n  \"RFC 4861: Neighbor Discovery for IP version 6 (IPv6)\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "leaf ip {\n  type inet:ipv6-address-no-zone;\n  description\n    \"The IPv6 address of the neighbor node.\";\n}\nleaf link-layer-address {\n  type yang:phys-address;\n  mandatory true;\n  description\n    \"The link-layer address of the neighbor node.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "                In the operational state, if the neighbor's 'state' leaf\n                is 'incomplete', this leaf is not instantiated.\";\n           }\n           leaf origin {\n             type neighbor-origin;\n             config false;\n             description\n               \"The origin of this neighbor entry.\";\n           }\n           leaf is-router {\n             type empty;\n             config false;\n             description\n               \"Indicates that the neighbor node acts as a router.\";\n           }\n           leaf state {\n             type enumeration {\n               enum incomplete {\n                 description\n                   \"Address resolution is in progress, and the\n                    link-layer address of the neighbor has not yet been\n                    determined.\";\n               }\n               enum reachable {\n                 description\n                   \"Roughly speaking, the neighbor is known to have been\n                    reachable recently (within tens of seconds ago).\";\n               }\n               enum stale {\n                 description\n                   \"The neighbor is no longer known to be reachable, but\n                    until traffic is sent to the neighbor no attempt\n                    should be made to verify its reachability.\";\n               }\n               enum delay {\n                 description\n                   \"The neighbor is no longer known to be reachable, and\n                    traffic has recently been sent to the neighbor.\n                    Rather than probe the neighbor immediately, however,\n                    delay sending probes for a short while in order to\n                    give upper-layer protocols a chance to provide\n                    reachability confirmation.\";\n               }\n               enum probe {\n                 description\n                   \"The neighbor is no longer known to be reachable, and\n                    unicast Neighbor Solicitation probes are being sent\n                    to verify reachability.\";\n               }\n             }\n             config false;\n             description\n               \"The Neighbor Unreachability Detection state of this\n                entry.\";\n             reference\n               \"RFC 4861: Neighbor Discovery for IP version 6 (IPv6)\n                          Section 7.3.2\";\n           }\n         }\n         leaf dup-addr-detect-transmits {\n           type uint32;\n           default 1;\n           description\n             \"The number of consecutive Neighbor Solicitation messages\n              sent while performing Duplicate Address Detection on a\n              tentative address.  A value of zero indicates that\n              Duplicate Address Detection is not performed on\n              tentative addresses.  A value of one indicates a single\n              transmission with no follow-up retransmissions.\";\n           reference\n             \"RFC 4862: IPv6 Stateless Address Autoconfiguration\";\n         }\n         container autoconf {\n           description\n             \"Parameters to control the autoconfiguration of IPv6\n              addresses, as described in RFC 4862.\";\n           reference\n             \"RFC 4862: IPv6 Stateless Address Autoconfiguration\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "           leaf create-global-addresses {\n             type boolean;\n             default true;\n             description\n               \"If enabled, the host creates global addresses as\n                described in RFC 4862.\";\n             reference\n               \"RFC 4862: IPv6 Stateless Address Autoconfiguration\n                          Section 5.5\";\n           }\n           leaf create-temporary-addresses {\n             if-feature ipv6-privacy-autoconf;\n             type boolean;\n             default false;\n             description\n               \"If enabled, the host creates temporary addresses as\n                described in RFC 4941.\";\n             reference\n               \"RFC 4941: Privacy Extensions for Stateless Address\n                          Autoconfiguration in IPv6\";\n           }\n           leaf temporary-valid-lifetime {\n             if-feature ipv6-privacy-autoconf;\n             type uint32;\n             units \"seconds\";\n             default 604800;\n             description\n               \"The time period during which the temporary address\n                is valid.\";\n             reference\n               \"RFC 4941: Privacy Extensions for Stateless Address\n                          Autoconfiguration in IPv6\n                          - TEMP_VALID_LIFETIME\";\n           }\n           leaf temporary-preferred-lifetime {\n             if-feature ipv6-privacy-autoconf;\n             type uint32;\n             units \"seconds\";\n             default 86400;\n             description\n               \"The time period during which the temporary address is\n                preferred.\";\n             reference\n               \"RFC 4941: Privacy Extensions for Stateless Address\n                          Autoconfiguration in IPv6\n                          - TEMP_PREFERRED_LIFETIME\";\n           }\n         }\n       }\n     }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "/*\n * Legacy operational state data nodes\n */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "augment \"/if:interfaces-state/if:interface\" {\n  status deprecated;\n  description\n    \"Data nodes for the operational state of IP on interfaces.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "container ipv4 {\n  presence\n    \"Present if IPv4 is enabled on this interface\";\n  config false;\n  status deprecated;\n  description\n    \"Interface-specific parameters for the IPv4 address family.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf forwarding {\n  type boolean;\n  status deprecated;\n  description\n    \"Indicates whether IPv4 packet forwarding is enabled or\n     disabled on this interface.\";\n}\nleaf mtu {\n  type uint16 {\n    range \"68..max\";\n  }\n  units \"octets\";\n  status deprecated;\n  description\n    \"The size, in octets, of the largest IPv4 packet that the\n     interface will send and receive.\";\n  reference\n    \"RFC 791: Internet Protocol\";\n}\nlist address {\n  key \"ip\";\n  status deprecated;\n  description\n    \"The list of IPv4 addresses on the interface.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "           leaf ip {\n             type inet:ipv4-address-no-zone;\n             status deprecated;\n             description\n               \"The IPv4 address on the interface.\";\n           }\n           choice subnet {\n             status deprecated;\n             description\n               \"The subnet can be specified as a prefix length or,\n                if the server supports non-contiguous netmasks, as\n                a netmask.\";\n             leaf prefix-length {\n               type uint8 {\n                 range \"0..32\";\n               }\n               status deprecated;\n               description\n                 \"The length of the subnet prefix.\";\n             }\n             leaf netmask {\n               if-feature ipv4-non-contiguous-netmasks;\n               type yang:dotted-quad;\n               status deprecated;\n               description\n                 \"The subnet specified as a netmask.\";\n             }\n           }\n           leaf origin {\n             type ip-address-origin;\n             status deprecated;\n             description\n               \"The origin of this address.\";\n           }\n         }\n         list neighbor {\n           key \"ip\";\n           status deprecated;\n           description\n             \"A list of mappings from IPv4 addresses to\n              link-layer addresses.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "   This list represents the ARP Cache.\";\nreference\n  \"RFC 826: An Ethernet Address Resolution Protocol\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "           leaf ip {\n             type inet:ipv4-address-no-zone;\n             status deprecated;\n             description\n               \"The IPv4 address of the neighbor node.\";\n           }\n           leaf link-layer-address {\n             type yang:phys-address;\n             status deprecated;\n             description\n               \"The link-layer address of the neighbor node.\";\n           }\n           leaf origin {\n             type neighbor-origin;\n             status deprecated;\n             description\n               \"The origin of this neighbor entry.\";\n           }\n         }\n       }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "container ipv6 {\n  presence\n    \"Present if IPv6 is enabled on this interface\";\n  config false;\n  status deprecated;\n  description\n    \"Parameters for the IPv6 address family.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "         leaf forwarding {\n           type boolean;\n           default false;\n           status deprecated;\n           description\n             \"Indicates whether IPv6 packet forwarding is enabled or\n              disabled on this interface.\";\n           reference\n             \"RFC 4861: Neighbor Discovery for IP version 6 (IPv6)\n                        Section 6.2.1, IsRouter\";\n         }\n         leaf mtu {\n           type uint32 {\n             range \"1280..max\";\n           }\n           units \"octets\";\n           status deprecated;\n           description\n             \"The size, in octets, of the largest IPv6 packet that the\n              interface will send and receive.\";\n           reference\n             \"RFC 8200: Internet Protocol, Version 6 (IPv6)\n                        Specification\n                        Section 5\";\n         }\n         list address {\n           key \"ip\";\n           status deprecated;\n           description\n             \"The list of IPv6 addresses on the interface.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "           leaf ip {\n             type inet:ipv6-address-no-zone;\n             status deprecated;\n             description\n               \"The IPv6 address on the interface.\";\n           }\n           leaf prefix-length {\n             type uint8 {\n               range \"0..128\";\n             }\n             mandatory true;\n             status deprecated;\n             description\n               \"The length of the subnet prefix.\";\n           }\n           leaf origin {\n             type ip-address-origin;\n             status deprecated;\n             description\n               \"The origin of this address.\";\n           }\n           leaf status {\n             type enumeration {\n               enum preferred {\n                 description\n                   \"This is a valid address that can appear as the\n                    destination or source address of a packet.\";\n               }\n               enum deprecated {\n                 description\n                   \"This is a valid but deprecated address that should\n                    no longer be used as a source address in new\n                    communications, but packets addressed to such an\n                    address are processed as expected.\";\n               }\n               enum invalid {\n                 description\n                   \"This isn't a valid address, and it shouldn't appear\n                    as the destination or source address of a packet.\";\n               }\n               enum inaccessible {\n                 description\n                   \"The address is not accessible because the interface\n                    to which this address is assigned is not\n                    operational.\";\n               }\n               enum unknown {\n                 description\n                   \"The status cannot be determined for some reason.\";\n               }\n               enum tentative {\n                 description\n                   \"The uniqueness of the address on the link is being\n                    verified.  Addresses in this state should not be\n                    used for general communication and should only be\n                    used to determine the uniqueness of the address.\";\n               }\n               enum duplicate {\n                 description\n                   \"The address has been determined to be non-unique on\n                    the link and so must not be used.\";\n               }\n               enum optimistic {\n                 description\n                   \"The address is available for use, subject to\n                    restrictions, while its uniqueness on a link is\n                    being verified.\";\n               }\n             }\n             status deprecated;\n             description\n               \"The status of an address.  Most of the states correspond\n                to states from the IPv6 Stateless Address\n                Autoconfiguration protocol.\";\n             reference\n               \"RFC 4293: Management Information Base for the\n                          Internet Protocol (IP)\n                          - IpAddressStatusTC\n                RFC 4862: IPv6 Stateless Address Autoconfiguration\";\n           }\n         }\n         list neighbor {\n           key \"ip\";\n           status deprecated;\n           description\n             \"A list of mappings from IPv6 addresses to\n              link-layer addresses.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "   This list represents the Neighbor Cache.\";\nreference\n  \"RFC 4861: Neighbor Discovery for IP version 6 (IPv6)\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "           leaf ip {\n             type inet:ipv6-address-no-zone;\n             status deprecated;\n             description\n               \"The IPv6 address of the neighbor node.\";\n           }\n           leaf link-layer-address {\n             type yang:phys-address;\n             status deprecated;\n             description\n               \"The link-layer address of the neighbor node.\";\n           }\n           leaf origin {\n             type neighbor-origin;\n             status deprecated;\n             description\n               \"The origin of this neighbor entry.\";\n           }\n           leaf is-router {\n             type empty;\n             status deprecated;\n             description\n               \"Indicates that the neighbor node acts as a router.\";\n           }\n           leaf state {\n             type enumeration {\n               enum incomplete {\n                 description\n                   \"Address resolution is in progress, and the\n                    link-layer address of the neighbor has not yet been\n                    determined.\";\n               }\n               enum reachable {\n                 description\n                   \"Roughly speaking, the neighbor is known to have been\n                    reachable recently (within tens of seconds ago).\";\n               }\n               enum stale {\n                 description\n                   \"The neighbor is no longer known to be reachable, but\n                    until traffic is sent to the neighbor no attempt\n                    should be made to verify its reachability.\";\n               }\n               enum delay {\n                 description\n                   \"The neighbor is no longer known to be reachable, and\n                    traffic has recently been sent to the neighbor.\n                    Rather than probe the neighbor immediately, however,\n                    delay sending probes for a short while in order to\n                    give upper-layer protocols a chance to provide\n                    reachability confirmation.\";\n               }\n               enum probe {\n                 description\n                   \"The neighbor is no longer known to be reachable, and\n                    unicast Neighbor Solicitation probes are being sent\n                    to verify reachability.\";\n               }\n             }\n             status deprecated;\n             description\n               \"The Neighbor Unreachability Detection state of this\n                entry.\";\n             reference\n               \"RFC 4861: Neighbor Discovery for IP version 6 (IPv6)\n                          Section 7.3.2\";\n           }\n         }\n       }\n     }\n   }\n   <CODE ENDS>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5. IANA Considerations",
      "section_title": true,
      "ja": "5. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document registers a URI in the \"IETF XML Registry\" [RFC3688]. Following the format in RFC 3688, the following registration has been made.",
      "ja": "このドキュメントは、「IETF XMLレジストリ」[RFC3688]にURIを登録します。 RFC 3688のフォーマットに従って、次の登録が行われました。"
    },
    {
      "indent": 6,
      "text": "URI: urn:ietf:params:xml:ns:yang:ietf-ip Registrant Contact: The NETMOD WG of the IETF. XML: N/A; the requested URI is an XML namespace.",
      "ja": "URI：urn：ietf：params：xml：ns：yang：ietf-ip登録者の連絡先：IETFのNETMOD WG。 XML：なし。要求されたURIはXML名前空間です。"
    },
    {
      "indent": 3,
      "text": "This document registers a YANG module in the \"YANG Module Names\" registry [RFC6020].",
      "ja": "このドキュメントでは、「YANGモジュール名」レジストリ[RFC6020]にYANGモジュールを登録しています。"
    },
    {
      "indent": 6,
      "text": "Name:         ietf-ip\nNamespace:    urn:ietf:params:xml:ns:yang:ietf-ip\nPrefix:       ip\nReference:    RFC 8344",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The YANG module specified in this document defines a schema for data that is designed to be accessed via network management protocols such as NETCONF [RFC6241] or RESTCONF [RFC8040]. The lowest NETCONF layer is the secure transport layer, and the mandatory-to-implement secure transport is Secure Shell (SSH) [RFC6242]. The lowest RESTCONF layer is HTTPS, and the mandatory-to-implement secure transport is TLS [RFC5246].",
      "ja": "このドキュメントで指定されているYANGモジュールは、NETCONF [RFC6241]やRESTCONF [RFC8040]などのネットワーク管理プロトコルを介してアクセスするように設計されたデータのスキーマを定義します。最下位のNETCONFレイヤーはセキュアなトランスポートレイヤーであり、実装に必須のセキュアなトランスポートはセキュアシェル（SSH）です[RFC6242]。最も低いRESTCONF層はHTTPSであり、実装に必須のセキュアなトランスポートはTLS [RFC5246]です。"
    },
    {
      "indent": 3,
      "text": "The NETCONF access control model [RFC8341] provides the means to restrict access for particular NETCONF or RESTCONF users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.",
      "ja": "NETCONFアクセス制御モデル[RFC8341]は、特定のNETCONFまたはRESTCONFユーザーのアクセスを、利用可能なすべてのNETCONFまたはRESTCONFプロトコル操作およびコンテンツの事前構成されたサブセットに制限する手段を提供します。"
    },
    {
      "indent": 3,
      "text": "There are a number of data nodes defined in this YANG module that are writable/creatable/deletable (i.e., config true, which is the default). These data nodes may be considered sensitive or vulnerable in some network environments. Write operations (e.g., edit-config) to these data nodes without proper protection can have a negative effect on network operations. These are the subtrees and data nodes and their sensitivity/vulnerability:",
      "ja": "このYANGモジュールには、書き込み可能/作成可能/削除可能なデータノードが多数定義されています（つまり、config true、デフォルトです）。これらのデータノードは、一部のネットワーク環境では機密または脆弱であると見なされる場合があります。適切な保護なしにこれらのデータノードに書き込み操作（edit-configなど）を行うと、ネットワーク操作に悪影響を与える可能性があります。これらは、サブツリーとデータノード、およびそれらの機密性/脆弱性です。"
    },
    {
      "indent": 0,
      "text": " ipv4/enabled and ipv6/enabled: These leafs are used to enable or disable IPv4 and IPv6 on a specific interface. By enabling a protocol on an interface, an attacker might be able to create an unsecured path into a node (or through it if routing is also enabled). By disabling a protocol on an interface, an attacker might be able to force packets to be routed through some other interface or deny access to some or all of the network via that protocol.",
      "ja": "ipv4 / enabledおよびipv6 / enabled：これらのリーフは、特定のインターフェースでIPv4およびIPv6を有効または無効にするために使用されます。インターフェースでプロトコルを有効にすることにより、攻撃者はノードへの（またはルーティングも有効になっている場合はそれを介して）安全でないパスを作成できる可能性があります。攻撃者は、インターフェイス上のプロトコルを無効にすることにより、パケットを他のインターフェイス経由で強制的にルーティングしたり、そのプロトコルを介したネットワークの一部またはすべてへのアクセスを拒否したりすることができます。"
    },
    {
      "indent": 3,
      "text": "ipv4/address and ipv6/address: These lists specify the configured IP addresses on an interface. By modifying this information, an attacker can cause a node to either ignore messages destined to it or accept (at least at the IP layer) messages it would otherwise ignore. The use of filtering or security associations may reduce the potential damage in the latter case.",
      "ja": "ipv4 / addressおよびipv6 / address：これらのリストは、インターフェースに構成されたIPアドレスを指定します。この情報を変更することにより、攻撃者はノードに宛てられたメッセージを無視するか、そうでなければ無視するメッセージを（少なくともIP層で）受け入れることができます。フィルタリングまたはセキュリティアソシエーションを使用すると、後者の場合の潜在的な損傷を減らすことができます。"
    },
    {
      "indent": 3,
      "text": "ipv4/forwarding and ipv6/forwarding: These leafs allow a client to enable or disable the forwarding functions on the entity. By disabling the forwarding functions, an attacker would possibly be able to deny service to users. By enabling the forwarding functions, an attacker could open a conduit into an area. This might result in the area providing transit for packets it shouldn't, or it might allow the attacker access to the area, bypassing security safeguards.",
      "ja": "ipv4 / forwardingおよびipv6 / forwarding：これらのリーフにより、クライアントはエンティティの転送機能を有効または無効にできます。転送機能を無効にすることにより、攻撃者はユーザーへのサービスを拒否できる可能性があります。転送機能を有効にすることにより、攻撃者はエリアへのコンジットを開く可能性があります。これにより、エリアでパケットの通過が許可されない可能性があります。または、セキュリティ保護機能をバイパスして、エリアへの攻撃者のアクセスを許可する可能性があります。"
    },
    {
      "indent": 3,
      "text": "ipv6/autoconf: The leafs in this branch control the autoconfiguration of IPv6 addresses and, in particular, whether or not temporary addresses are used. By modifying the corresponding leafs, an attacker might impact the addresses used by a node and -- thus, indirectly -- the privacy of the users using the node.",
      "ja": "ipv6 / autoconf：このブランチのリーフは、IPv6アドレスの自動構成を制御し、特に一時アドレスが使用されるかどうかを制御します。攻撃者は、対応するリーフを変更することにより、ノードが使用するアドレスに影響を与える可能性があり、間接的に、ノードを使用するユーザーのプライバシーに影響を与える可能性があります。"
    },
    {
      "indent": 3,
      "text": "ipv4/mtu and ipv6/mtu: Setting these leafs to very small values can be used to slow down interfaces.",
      "ja": "ipv4 / mtuおよびipv6 / mtu：これらの葉を非常に小さな値に設定すると、インターフェースの速度を低下させることができます。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7. 参考文献"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC791] Postel, J., \"Internet Protocol\", STD 5, RFC 791, DOI 10.17487/RFC0791, September 1981, <https://www.rfc-editor.org/info/rfc791>.",
      "ja": "[RFC791] Postel、J。、「インターネットプロトコル」、STD 5、RFC 791、DOI 10.17487 / RFC0791、1981年9月、<https://www.rfc-editor.org/info/rfc791>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3688] Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688, DOI 10.17487/RFC3688, January 2004, <https://www.rfc-editor.org/info/rfc3688>.",
      "ja": "[RFC3688] Mealling、M。、「The IETF XML Registry」、BCP 81、RFC 3688、DOI 10.17487 / RFC3688、2004年1月、<https://www.rfc-editor.org/info/rfc3688>。"
    },
    {
      "indent": 3,
      "text": "[RFC4861] Narten, T., Nordmark, E., Simpson, W., and H. Soliman, \"Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861, DOI 10.17487/RFC4861, September 2007, <https://www.rfc-editor.org/info/rfc4861>.",
      "ja": "[RFC4861] Narten、T.、Nordmark、E.、Simpson、W。、およびH. Soliman、「Neighbor Discovery for IP version 6（IPv6）」、RFC 4861、DOI 10.17487 / RFC4861、2007年9月、<https：/ /www.rfc-editor.org/info/rfc4861>。"
    },
    {
      "indent": 3,
      "text": "[RFC4862] Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless Address Autoconfiguration\", RFC 4862, DOI 10.17487/RFC4862, September 2007, <https://www.rfc-editor.org/info/rfc4862>.",
      "ja": "[RFC4862] Thomson、S.、Narten、T。、およびT. Jinmei、「IPv6 Stateless Address Autoconfiguration」、RFC 4862、DOI 10.17487 / RFC4862、2007年9月、<https://www.rfc-editor.org/info / rfc4862>。"
    },
    {
      "indent": 3,
      "text": "[RFC4941] Narten, T., Draves, R., and S. Krishnan, \"Privacy Extensions for Stateless Address Autoconfiguration in IPv6\", RFC 4941, DOI 10.17487/RFC4941, September 2007, <https://www.rfc-editor.org/info/rfc4941>.",
      "ja": "[RFC4941] Narten、T.、Draves、R。、およびS. Krishnan、「IPv6のステートレスアドレス自動構成のプライバシー拡張」、RFC 4941、DOI 10.17487 / RFC4941、2007年9月、<https：//www.rfc-editor .org / info / rfc4941>。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, DOI 10.17487/RFC5246, August 2008, <https://www.rfc-editor.org/info/rfc5246>.",
      "ja": "[RFC5246] Dierks、T。およびE. Rescorla、「The Transport Layer Security（TLS）Protocol Version 1.2」、RFC 5246、DOI 10.17487 / RFC5246、2008年8月、<https://www.rfc-editor.org/info / rfc5246>。"
    },
    {
      "indent": 3,
      "text": "[RFC6020] Bjorklund, M., Ed., \"YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)\", RFC 6020, DOI 10.17487/RFC6020, October 2010, <https://www.rfc-editor.org/info/rfc6020>.",
      "ja": "[RFC6020] Bjorklund、M。、編、「YANG-ネットワーク構成プロトコル（NETCONF）のデータモデリング言語」、RFC 6020、DOI 10.17487 / RFC6020、2010年10月、<https：//www.rfc-editor。 org / info / rfc6020>。"
    },
    {
      "indent": 3,
      "text": "[RFC6241] Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed., and A. Bierman, Ed., \"Network Configuration Protocol (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011, <https://www.rfc-editor.org/info/rfc6241>.",
      "ja": "[RFC6241] Enns、R。、編、Bjorklund、M。、編、Schoenwaelder、J。、編、およびA. Bierman、編、「Network Configuration Protocol（NETCONF）」、RFC 6241、DOI 10.17487 / RFC6241、2011年6月、<https://www.rfc-editor.org/info/rfc6241>。"
    },
    {
      "indent": 3,
      "text": "[RFC6242] Wasserman, M., \"Using the NETCONF Protocol over Secure Shell (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011, <https://www.rfc-editor.org/info/rfc6242>.",
      "ja": "[RFC6242] Wasserman、M。、「Using the NETCONF Protocol over Secure Shell（SSH）」、RFC 6242、DOI 10.17487 / RFC6242、2011年6月、<https://www.rfc-editor.org/info/rfc6242>。"
    },
    {
      "indent": 3,
      "text": "[RFC6991] Schoenwaelder, J., Ed., \"Common YANG Data Types\", RFC 6991, DOI 10.17487/RFC6991, July 2013, <https://www.rfc-editor.org/info/rfc6991>.",
      "ja": "[RFC6991] Schoenwaelder、J。、編、「Common YANG Data Types」、RFC 6991、DOI 10.17487 / RFC6991、2013年7月、<https://www.rfc-editor.org/info/rfc6991>。"
    },
    {
      "indent": 3,
      "text": "[RFC7950] Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\", RFC 7950, DOI 10.17487/RFC7950, August 2016, <https://www.rfc-editor.org/info/rfc7950>.",
      "ja": "[RFC7950] Bjorklund、M。、編、「The YANG 1.1 Data Modeling Language」、RFC 7950、DOI 10.17487 / RFC7950、2016年8月、<https://www.rfc-editor.org/info/rfc7950>。"
    },
    {
      "indent": 3,
      "text": "[RFC8040] Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF Protocol\", RFC 8040, DOI 10.17487/RFC8040, January 2017, <https://www.rfc-editor.org/info/rfc8040>.",
      "ja": "[RFC8040] Bierman、A.、Bjorklund、M。、およびK. Watsen、「RESTCONFプロトコル」、RFC 8040、DOI 10.17487 / RFC8040、2017年1月、<https://www.rfc-editor.org/info/rfc8040 >。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B。、「RFC 2119キーワードの大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>。"
    },
    {
      "indent": 3,
      "text": "[RFC8200] Deering, S. and R. Hinden, \"Internet Protocol, Version 6 (IPv6) Specification\", STD 86, RFC 8200, DOI 10.17487/RFC8200, July 2017, <https://www.rfc-editor.org/info/rfc8200>.",
      "ja": "[RFC8200] Deering、S。およびR. Hinden、「インターネットプロトコル、バージョン6（IPv6）仕様」、STD 86、RFC 8200、DOI 10.17487 / RFC8200、2017年7月、<https://www.rfc-editor.org / info / rfc8200>。"
    },
    {
      "indent": 3,
      "text": "[RFC8341] Bierman, A. and M. Bjorklund, \"Network Configuration Access Control Model\", STD 91, RFC 8341, DOI 10.17487/RFC8341, March 2018, <https://www.rfc-editor.org/info/rfc8341>.",
      "ja": "[RFC8341] Bierman、A。およびM. Bjorklund、「Network Configuration Access Control Model」、STD 91、RFC 8341、DOI 10.17487 / RFC8341、2018年3月、<https://www.rfc-editor.org/info/rfc8341 >。"
    },
    {
      "indent": 3,
      "text": "[RFC8342] Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K., and R. Wilton, \"Network Management Datastore Architecture (NMDA)\", RFC 8342, DOI 10.17487/RFC8342, March 2018, <https://www.rfc-editor.org/info/rfc8342>.",
      "ja": "[RFC8342] Bjorklund、M.、Schoenwaelder、J.、Shafer、P.、Watsen、K。、およびR. Wilton、「Network Management Datastore Architecture（NMDA）」、RFC 8342、DOI 10.17487 / RFC8342、2018年3月、< https://www.rfc-editor.org/info/rfc8342>。"
    },
    {
      "indent": 3,
      "text": "[RFC8343] Bjorklund, M., \"A YANG Data Model for Interface Management\", RFC 8343, DOI 10.17487/RFC8343, March 2018, <https://www.rfc-editor.org/info/rfc8343>.",
      "ja": "[RFC8343] Bjorklund、M。、「A YANG Data Model for Interface Management」、RFC 8343、DOI 10.17487 / RFC8343、2018年3月、<https://www.rfc-editor.org/info/rfc8343>。"
    },
    {
      "indent": 3,
      "text": "[W3C.REC-xml-20081126] Bray, T., Paoli, J., Sperberg-McQueen, M., Maler, E., and F. Yergeau, \"Extensible Markup Language (XML) 1.0 (Fifth Edition)\", World Wide Web Consortium Recommendation REC-xml-20081126, November 2008, <https://www.w3.org/TR/2008/REC-xml-20081126>.",
      "ja": "[W3C.REC-xml-20081126]ブレイ、T。、パオリ、J.、Sperberg-McQueen、M。、マラー、E。、およびF.イェルガウ、「Extensible Markup Language（XML）1.0（Fifth Edition）」、 World Wide Web Consortium Recommendation REC-xml-20081126、2008年11月、<https://www.w3.org/TR/2008/REC-xml-20081126>。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC826] Plummer, D., \"An Ethernet Address Resolution Protocol: Or Converting Network Protocol Addresses to 48.bit Ethernet Address for Transmission on Ethernet Hardware\", STD 37, RFC 826, DOI 10.17487/RFC0826, November 1982, <https://www.rfc-editor.org/info/rfc826>.",
      "ja": "[RFC826] Plummer、D。、「イーサネットアドレス解決プロトコル：またはネットワークプロトコルアドレスをイーサネットハードウェアで伝送するために48ビットイーサネットアドレスに変換する」、STD 37、RFC 826、DOI 10.17487 / RFC0826、1982年11月、<https： //www.rfc-editor.org/info/rfc826>。"
    },
    {
      "indent": 3,
      "text": "[RFC4293] Routhier, S., Ed., \"Management Information Base for the Internet Protocol (IP)\", RFC 4293, DOI 10.17487/RFC4293, April 2006, <https://www.rfc-editor.org/info/rfc4293>.",
      "ja": "[RFC4293] Routhier、S。、編、「インターネットプロトコル（IP）の管理情報ベース」、RFC 4293、DOI 10.17487 / RFC4293、2006年4月、<https://www.rfc-editor.org/info/ rfc4293>。"
    },
    {
      "indent": 3,
      "text": "[RFC7217] Gont, F., \"A Method for Generating Semantically Opaque Interface Identifiers with IPv6 Stateless Address Autoconfiguration (SLAAC)\", RFC 7217, DOI 10.17487/RFC7217, April 2014, <https://www.rfc-editor.org/info/rfc7217>.",
      "ja": "[RFC7217] Gont、F。、「IPv6ステートレスアドレス自動構成（SLAAC）で意味的に不透明なインターフェース識別子を生成する方法」、RFC 7217、DOI 10.17487 / RFC7217、2014年4月、<https://www.rfc-editor.org / info / rfc7217>。"
    },
    {
      "indent": 3,
      "text": "[RFC8022] Lhotka, L. and A. Lindem, \"A YANG Data Model for Routing Management\", RFC 8022, DOI 10.17487/RFC8022, November 2016, <https://www.rfc-editor.org/info/rfc8022>.",
      "ja": "[RFC8022] Lhotka、L。およびA. Lindem、「ルーティング管理のためのYANGデータモデル」、RFC 8022、DOI 10.17487 / RFC8022、2016年11月、<https://www.rfc-editor.org/info/rfc8022> 。"
    },
    {
      "indent": 3,
      "text": "[RFC8340] Bjorklund, M. and L. Berger, Ed., \"YANG Tree Diagrams\", BCP 215, RFC 8340, DOI 10.17487/RFC8340, March 2018, <https://www.rfc-editor.org/info/rfc8340>.",
      "ja": "[RFC8340] Bjorklund、M。およびL. Berger、編、「YANG Tree Diagrams」、BCP 215、RFC 8340、DOI 10.17487 / RFC8340、2018年3月、<https://www.rfc-editor.org/info/ rfc8340>。"
    },
    {
      "indent": 0,
      "text": "Appendix A.  Example: NETCONF <get-config> Reply",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This section gives an example of a reply to the NETCONF <get-config> request for the running configuration datastore for a device that implements the data model defined in this document.",
      "ja": "このセクションでは、このドキュメントで定義されているデータモデルを実装するデバイスの実行コンフィギュレーションデータストアに対するNETCONF <get-config>要求への応答の例を示します。"
    },
    {
      "indent": 3,
      "text": "The XML [W3C.REC-xml-20081126] snippets that follow in this section and in Appendix B are provided as examples only.",
      "ja": "このセクションおよび付録Bに続くXML [W3C.REC-xml-20081126]スニペットは、例としてのみ提供されています。"
    },
    {
      "indent": 3,
      "text": "<rpc-reply\n    xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\n    message-id=\"101\">\n  <data>\n    <interfaces\n        xmlns=\"urn:ietf:params:xml:ns:yang:ietf-interfaces\"\n        xmlns:ianaift=\"urn:ietf:params:xml:ns:yang:iana-if-type\">\n      <interface>\n        <name>eth0</name>\n        <type>ianaift:ethernetCsmacd</type>\n        <ipv4 xmlns=\"urn:ietf:params:xml:ns:yang:ietf-ip\">\n          <address>\n            <ip>192.0.2.1</ip>\n            <prefix-length>24</prefix-length>\n          </address>\n        </ipv4>\n        <ipv6 xmlns=\"urn:ietf:params:xml:ns:yang:ietf-ip\">\n          <mtu>1280</mtu>\n          <address>\n            <ip>2001:db8::10</ip>\n            <prefix-length>32</prefix-length>\n          </address>\n          <dup-addr-detect-transmits>0</dup-addr-detect-transmits>\n        </ipv6>\n      </interface>\n    </interfaces>\n  </data>\n</rpc-reply>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix B.  Example: NETCONF <get-data> Reply",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This section gives an example of a reply to the NETCONF <get-data> request for the operational state datastore for a device that implements the data model defined in this document.",
      "ja": "このセクションでは、このドキュメントで定義されているデータモデルを実装するデバイスの動作状態データストアのNETCONF <get-data>要求に対する応答の例を示します。"
    },
    {
      "indent": 3,
      "text": "This example uses the \"origin\" annotation, which is defined in the module \"ietf-origin\" [RFC8342].",
      "ja": "この例では、モジュール「ietf-origin」[RFC8342]で定義されている「origin」アノテーションを使用しています。"
    },
    {
      "indent": 3,
      "text": "<rpc-reply\n    xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\n    message-id=\"101\">\n  <data xmlns=\"urn:ietf:params:xml:ns:yang:ietf-netconf-datastores\">\n    <interfaces\n        xmlns=\"urn:ietf:params:xml:ns:yang:ietf-interfaces\"\n        xmlns:ianaift=\"urn:ietf:params:xml:ns:yang:iana-if-type\"\n        xmlns:or=\"urn:ietf:params:xml:ns:yang:ietf-origin\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "<interface or:origin=\"or:intended\">\n  <name>eth0</name>\n  <type>ianaift:ethernetCsmacd</type>\n  <!-- other parameters from ietf-interfaces omitted -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "<ipv4 xmlns=\"urn:ietf:params:xml:ns:yang:ietf-ip\">\n  <enabled or:origin=\"or:default\">true</enabled>\n  <forwarding or:origin=\"or:default\">false</forwarding>\n  <mtu or:origin=\"or:system\">1500</mtu>\n  <address>\n    <ip>192.0.2.1</ip>\n    <prefix-length>24</prefix-length>\n    <origin>static</origin>\n  </address>\n  <neighbor or:origin=\"or:learned\">\n    <ip>192.0.2.2</ip>\n    <link-layer-address>\n      00:00:5E:00:53:AB\n    </link-layer-address>\n  </neighbor>\n</ipv4>\n<ipv6 xmlns=\"urn:ietf:params:xml:ns:yang:ietf-ip\">\n  <enabled or:origin=\"or:default\">true</enabled>\n  <forwarding or:origin=\"or:default\">false</forwarding>\n  <mtu>1280</mtu>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "          <address>\n            <ip>2001:db8::10</ip>\n            <prefix-length>32</prefix-length>\n            <origin>static</origin>\n            <status>preferred</status>\n          </address>\n          <address or:origin=\"or:learned\">\n            <ip>2001:db8::1:100</ip>\n            <prefix-length>32</prefix-length>\n            <origin>dhcp</origin>\n            <status>preferred</status>\n          </address>\n          <dup-addr-detect-transmits>0</dup-addr-detect-transmits>\n          <neighbor or:origin=\"or:learned\">\n            <ip>2001:db8::1</ip>\n            <link-layer-address>\n              00:00:5E:00:53:AB\n            </link-layer-address>\n            <origin>dynamic</origin>\n            <is-router/>\n            <state>reachable</state>\n          </neighbor>\n          <neighbor or:origin=\"or:learned\">\n            <ip>2001:db8::4</ip>\n            <origin>dynamic</origin>\n            <state>incomplete</state>\n          </neighbor>\n        </ipv6>\n      </interface>\n    </interfaces>\n  </data>\n</rpc-reply>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The author wishes to thank Jeffrey Lange, Ladislav Lhotka, Juergen Schoenwaelder, and Dave Thaler for their helpful comments.",
      "ja": "著者は、有益なコメントを提供してくれたJeffrey Lange、Ladislav Lhotka、Juergen Schoenwaelder、およびDave Thalerに感謝します。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Martin Bjorklund Tail-f Systems",
      "ja": "Martin Bjorklund Tail-fシステム"
    },
    {
      "indent": 3,
      "text": "Email: mbj@tail-f.com",
      "raw": true,
      "ja": ""
    }
  ]
}