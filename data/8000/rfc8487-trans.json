{
  "title": {
    "text": "RFC 8487 - Mtrace Version 2: Traceroute Facility for IP Multicast",
    "ja": "RFC 8487 - Mtraceバージョン2：IPマルチキャスト用のTraceroute機能"
  },
  "number": 8487,
  "created_at": "2020-08-23 10:02:42.838948+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         H. Asaeda\nRequest for Comments: 8487                                          NICT\nCategory: Standards Track                                       K. Meyer\nISSN: 2070-1721                                                 Dell EMC\n                                                             W. Lee, Ed.\n                                                            October 2018",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Mtrace Version 2: Traceroute Facility for IP Multicast",
      "ja": "Mtraceバージョン2：IPマルチキャスト用のTraceroute機能"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document describes the IP multicast traceroute facility, named Mtrace version 2 (Mtrace2). Unlike unicast traceroute, Mtrace2 requires special implementations on the part of routers. This specification describes the required functionality in multicast routers, as well as how an Mtrace2 client invokes a Query and receives a Reply.",
      "ja": "このドキュメントでは、Mtraceバージョン2（Mtrace2）という名前のIPマルチキャストtraceroute機能について説明します。ユニキャストtracerouteとは異なり、Mtrace2にはルーター側での特別な実装が必要です。この仕様では、マルチキャストルーターに必要な機能と、Mtrace2クライアントがクエリを呼び出して応答を受信する方法について説明します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 7841のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8487.",
      "ja": "このドキュメントの現在のステータス、正誤表、およびフィードバックの提供方法に関する情報は、https：//www.rfc-editor.org/info/rfc8487で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2018 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 3,
      "text": "This document may contain material from IETF Documents or IETF Contributions published or made publicly available before November 10, 2008. The person(s) controlling the copyright in some of this material may not have granted the IETF Trust the right to allow modifications of such material outside the IETF Standards Process. Without obtaining an adequate license from the person(s) controlling the copyright in such materials, this document may not be modified outside the IETF Standards Process, and derivative works of it may not be created outside the IETF Standards Process, except to format it for publication as an RFC or to translate it into languages other than English.",
      "ja": "このドキュメントには、2008年11月10日より前に公開または公開されたIETFドキュメントまたはIETFコントリビューションの素材が含まれている場合があります。この素材の一部で著作権を管理している人が、IETFトラストにそのような素材の変更を許可する権利を付与していない可能性がありますIETF標準プロセス外。このような資料の著作権を管理する人から適切なライセンスを取得せずに、このドキュメントをIETF標準プロセス外で変更したり、その派生物をIETF標準プロセス外で作成したりすることはできません。 RFCとして、またはそれを英語以外の言語に翻訳するための出版物。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   5\n2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   7\n  2.1.  Definitions . . . . . . . . . . . . . . . . . . . . . . .   7\n3.  Packet Formats  . . . . . . . . . . . . . . . . . . . . . . .   8\n  3.1.  Mtrace2 TLV Format  . . . . . . . . . . . . . . . . . . .   9\n  3.2.  Defined TLVs  . . . . . . . . . . . . . . . . . . . . . .  10\n    3.2.1.  Mtrace2 Query . . . . . . . . . . . . . . . . . . . .  10\n    3.2.2.  Mtrace2 Request . . . . . . . . . . . . . . . . . . .  12\n    3.2.3.  Mtrace2 Reply . . . . . . . . . . . . . . . . . . . .  12\n    3.2.4.  IPv4 Mtrace2 Standard Response Block  . . . . . . . .  13\n    3.2.5.  IPv6 Mtrace2 Standard Response Block  . . . . . . . .  18\n    3.2.6.  Mtrace2 Augmented Response Block  . . . . . . . . . .  20\n    3.2.7.  Mtrace2 Extended Query Block  . . . . . . . . . . . .  21\n4.  Router Behavior . . . . . . . . . . . . . . . . . . . . . . .  22\n  4.1.  Receiving an Mtrace2 Query  . . . . . . . . . . . . . . .  22\n    4.1.1.  Query Packet Verification . . . . . . . . . . . . . .  22\n    4.1.2.  Query Normal Processing . . . . . . . . . . . . . . .  23\n  4.2.  Receiving an Mtrace2 Request  . . . . . . . . . . . . . .  23\n    4.2.1.  Request Packet Verification . . . . . . . . . . . . .  24\n    4.2.2.  Request Normal Processing . . . . . . . . . . . . . .  24\n  4.3.  Forwarding Mtrace2 Request  . . . . . . . . . . . . . . .  26\n    4.3.1.  Destination Address . . . . . . . . . . . . . . . . .  26\n    4.3.2.  Source Address  . . . . . . . . . . . . . . . . . . .  26\n    4.3.3.  Appending Standard Response Block . . . . . . . . . .  26\n  4.4.  Sending Mtrace2 Reply . . . . . . . . . . . . . . . . . .  27\n    4.4.1.  Destination Address . . . . . . . . . . . . . . . . .  27\n    4.4.2.  Source Address  . . . . . . . . . . . . . . . . . . .  27\n    4.4.3.  Appending Standard Response Block . . . . . . . . . .  27\n  4.5.  Proxying Mtrace2 Query  . . . . . . . . . . . . . . . . .  28\n  4.6.  Hiding Information  . . . . . . . . . . . . . . . . . . .  28\n5.  Client Behavior . . . . . . . . . . . . . . . . . . . . . . .  29\n  5.1.  Sending Mtrace2 Query . . . . . . . . . . . . . . . . . .  29\n    5.1.1.  Destination Address . . . . . . . . . . . . . . . . .  29\n    5.1.2.  Source Address  . . . . . . . . . . . . . . . . . . .  29\n  5.2.  Determining the Path  . . . . . . . . . . . . . . . . . .  29\n  5.3.  Collecting Statistics . . . . . . . . . . . . . . . . . .  29\n  5.4.  Last-Hop Router (LHR) . . . . . . . . . . . . . . . . . .  30\n  5.5.  First-Hop Router (FHR)  . . . . . . . . . . . . . . . . .  30\n  5.6.  Broken Intermediate Router  . . . . . . . . . . . . . . .  30\n  5.7.  Non-supported Router  . . . . . . . . . . . . . . . . . .  30\n  5.8.  Mtrace2 Termination . . . . . . . . . . . . . . . . . . .  31\n    5.8.1.  Arriving at Source  . . . . . . . . . . . . . . . . .  31\n    5.8.2.  Fatal Error . . . . . . . . . . . . . . . . . . . . .  31\n    5.8.3.  No Upstream Router  . . . . . . . . . . . . . . . . .  31\n    5.8.4.  Reply Timeout . . . . . . . . . . . . . . . . . . . .  31\n  5.9.  Continuing after an Error . . . . . . . . . . . . . . . .  31",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "6.  Protocol-Specific Considerations  . . . . . . . . . . . . . .  32\n  6.1.  PIM-SM  . . . . . . . . . . . . . . . . . . . . . . . . .  32\n  6.2.  Bidirectional PIM . . . . . . . . . . . . . . . . . . . .  32\n  6.3.  PIM-DM  . . . . . . . . . . . . . . . . . . . . . . . . .  32\n  6.4.  IGMP/MLD Proxy  . . . . . . . . . . . . . . . . . . . . .  33\n7.  Problem Diagnosis . . . . . . . . . . . . . . . . . . . . . .  33\n  7.1.  Forwarding Inconsistencies  . . . . . . . . . . . . . . .  33\n  7.2.  TTL or Hop-Limit Problems . . . . . . . . . . . . . . . .  33\n  7.3.  Packet Loss . . . . . . . . . . . . . . . . . . . . . . .  33\n  7.4.  Link Utilization  . . . . . . . . . . . . . . . . . . . .  34\n  7.5.  Time Delay  . . . . . . . . . . . . . . . . . . . . . . .  34\n8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  34\n  8.1.  \"Mtrace2 Forwarding Codes\" Registry . . . . . . . . . . .  35\n  8.2.  \"Mtrace2 TLV Types\" Registry  . . . . . . . . . . . . . .  35\n  8.3.  UDP Destination Port  . . . . . . . . . . . . . . . . . .  35\n9.  Security Considerations . . . . . . . . . . . . . . . . . . .  35\n  9.1.  Addresses in Mtrace2 Header . . . . . . . . . . . . . . .  35\n  9.2.  Verification of Clients and Peers . . . . . . . . . . . .  35\n  9.3.  Topology Discovery  . . . . . . . . . . . . . . . . . . .  36\n  9.4.  Characteristics of Multicast Channel  . . . . . . . . . .  36\n  9.5.  Limiting Query/Request Rates  . . . . . . . . . . . . . .  37\n  9.6.  Limiting Reply Rates  . . . . . . . . . . . . . . . . . .  37\n  9.7.  Specific Security Concerns  . . . . . . . . . . . . . . .  37\n    9.7.1.  Request and Response Bombardment  . . . . . . . . . .  37\n    9.7.2.  Amplification Attack  . . . . . . . . . . . . . . . .  37\n    9.7.3.  Leaking of Confidential Topology Details  . . . . . .  38\n    9.7.4.  Delivery of False Information (Forged Reply Messages)  38\n10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  39\n  10.1.  Normative References . . . . . . . . . . . . . . . . . .  39\n  10.2.  Informative References . . . . . . . . . . . . . . . . .  40\nAcknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  41\nAuthors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  41",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Given a multicast distribution tree, tracing hop-by-hop downstream from a multicast source to a given multicast receiver is difficult because there is no efficient and deterministic way to determine the branch of the multicast routing tree on which that receiver lies. On the other hand, walking up the tree from a receiver to a source is easy, as most existing multicast routing protocols know the upstream router for each source. Tracing from a receiver to a source can involve only the routers on the direct path.",
      "ja": "マルチキャスト配信ツリーを想定すると、マルチキャストソースから特定のマルチキャストレシーバーへのホップバイホップダウンストリームのトレースは、そのレシーバーが存在するマルチキャストルーティングツリーのブランチを特定する効率的で確定的な方法がないため、困難です。一方、ほとんどの既存のマルチキャストルーティングプロトコルは各ソースのアップストリームルータを知っているため、レシーバからソースへツリーを上るのは簡単です。レシーバーからソースへのトレースには、直接パス上のルーターのみを含めることができます。"
    },
    {
      "indent": 3,
      "text": "This document specifies the multicast traceroute facility named Mtrace version 2 or Mtrace2, which allows the tracing of an IP multicast routing path. Mtrace2 is usually initiated from an Mtrace2 client by sending an Mtrace2 Query to a Last-Hop Router (LHR) or to a Rendezvous Point (RP). The RP is a special router where sources and receivers meet in Protocol Independent Multicast - Sparse Mode (PIM-SM) [5]. From the LHR/RP receiving the Query, the tracing is directed towards a specified source if a source address is specified and a source-specific state exists on the receiving router. If no source address is specified or if no source-specific state exists on a receiving LHR, the tracing is directed toward the RP for the specified group address. Moreover, Mtrace2 provides additional information such as the packet rates and losses, as well as other diagnostic information. Mtrace2 is primarily intended for the following purposes:",
      "ja": "このドキュメントでは、IPマルチキャストルーティングパスのトレースを可能にするMtraceバージョン2またはMtrace2という名前のマルチキャストtraceroute機能を指定します。 Mtrace2は通常、Mtrace2クエリをラストホップルーター（LHR）またはランデブーポイント（RP）に送信することにより、Mtrace2クライアントから開始されます。 RPは、ソースとレシーバがProtocol Independent Multicast-Sparse Mode（PIM-SM）[5]で出会う特別なルーターです。クエリを受信するLHR / RPから、送信元アドレスが指定されていて、受信元ルーターに送信元固有の状態が存在する場合、トレースは指定された送信元に向けられます。送信元アドレスが指定されていない場合、または受信側LHRに送信元固有の状態が存在しない場合、トレースは指定されたグループアドレスのRPに向けられます。さらに、Mtrace2は、パケットレートや損失、その他の診断情報などの追加情報を提供します。 Mtrace2は、主に次の目的で使用されます。"
    },
    {
      "indent": 3,
      "text": "o To trace the path that a packet would take from a source to a receiver.",
      "ja": "o パケットがソースからレシーバーに至るまでの経路を追跡する。"
    },
    {
      "indent": 3,
      "text": "o To isolate packet-loss problems (e.g., congestion).",
      "ja": "o パケット損失の問題（輻輳など）を分離するため。"
    },
    {
      "indent": 3,
      "text": "o To isolate configuration problems (e.g., Time to live (TTL) threshold).",
      "ja": "o 構成の問題（たとえば、存続可能時間（TTL）のしきい値）を特定するため。"
    },
    {
      "indent": 3,
      "text": "The following figure shows a typical case of how Mtrace2 is used. FHR represents the first-hop router, LHR represents the last-hop router, and the arrow lines represent the Mtrace2 messages that are sent from one node to another. The numbers before the Mtrace2 messages represent the sequence of the messages that would happen. The source, receiver, and Mtrace2 client are typically hosts.",
      "ja": "次の図は、Mtrace2の一般的な使用方法を示しています。 FHRは最初のホップのルーターを表し、LHRは最後のホップのルーターを表し、矢印線は、あるノードから別のノードに送信されるMtrace2メッセージを表します。 Mtrace2メッセージの前の数字は、発生するメッセージのシーケンスを表しています。ソース、レシーバー、およびMtrace2クライアントは通常ホストです。"
    },
    {
      "indent": 3,
      "text": "               2. Request                 2. Request\n                 +----+                    +----+\n                 |    |                    |    |\n                 v    |                    v    |\n+--------+    +-----+                        +-----+    +----------+\n| Source |----| FHR |----- The Internet -----| LHR |----| Receiver |\n+--------+    +-----+            |           +-----+    +----------+\n                  \\              |             ^\n                   \\             |            /\n                    \\            |           /\n                     \\           |          /\n             3. Reply \\          |         / 1. Query\n                       \\         |        /\n                        \\        |       /\n                         \\  +---------+ /\n                          v | Mtrace2 |/\n                            | Client  |\n                            +---------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "When an Mtrace2 client initiates a multicast trace, it sends an Mtrace2 Query packet to an LHR or RP for a multicast group and, optionally, a source address. The LHR/RP turns the Query packet into a Request. The Request message type enables each of the upstream routers processing the message to apply different packet and message validation rules than those required for the handling of a Query message. The LHR/RP then appends a Standard Response Block containing its interface addresses and packet statistics to the Request packet, then forwards the packet towards the source/RP. The Request packet is either unicasted to its upstream router towards the source/RP or multicasted to the group if the upstream router's IP address is not known. In a similar fashion, each router along the path to the source/RP appends a Standard Response Block to the end of the Request packet before forwarding it to its upstream router. When the FHR receives the Request packet, it appends its own Standard Response Block, turns the Request packet into a Reply, and unicasts the Reply back to the Mtrace2 client.",
      "ja": "Mtrace2クライアントがマルチキャストトレースを開始すると、Mtrace2クエリパケットをマルチキャストグループのLHRまたはRPに送信し、オプションで送信元アドレスも送信します。 LHR / RPはクエリパケットをリクエストに変換します。リクエストメッセージタイプを使用すると、メッセージを処理する各アップストリームルータが、クエリメッセージの処理に必要なものとは異なるパケットおよびメッセージ検証ルールを適用できます。次に、LHR / RPは、インターフェースアドレスとパケット統計を含む標準応答ブロックを要求パケットに追加し、パケットをソース/ RPに転送します。要求パケットは、送信元/ RPに向かう上流ルーターにユニキャストされるか、上流ルーターのIPアドレスが不明な場合はグループにマルチキャストされます。同様に、ソース/ RPへのパスに沿った各ルーターは、要求パケットの最後に標準応答ブロックを追加してから、上流ルーターに転送します。 FHRは要求パケットを受信すると、独自の標準応答ブロックを追加し、要求パケットを応答に変換して、応答をユニキャストしてMtrace2クライアントに返します。"
    },
    {
      "indent": 3,
      "text": "The Mtrace2 Reply may be returned before reaching the FHR under some circumstances. This can happen if a Request packet is received at an RP or gateway, or when any of several types of error or exception conditions occur that prevent the sending of a Request to the next upstream router.",
      "ja": "Mtrace2 Replyは、状況によってはFHRに到達する前に返される場合があります。これは、要求パケットがRPまたはゲートウェイで受信された場合、または次の上流ルーターへの要求の送信を妨げるいくつかのタイプのエラーまたは例外条件のいずれかが発生した場合に発生する可能性があります。"
    },
    {
      "indent": 3,
      "text": "The Mtrace2 client waits for the Mtrace2 Reply message and displays the results. When not receiving an Mtrace2 Reply message due to network congestion, a broken router (see Section 5.6), or a non-responding router (see Section 5.7), the Mtrace2 client may resend another Mtrace2 Query with a lower hop count (see Section 3.2.1) and",
      "ja": "Mtrace2クライアントは、Mtrace2応答メッセージを待ち、結果を表示します。ネットワークの輻輳、ルーターの破損（セクション5.6を参照）、または応答しないルーター（セクション5.7を参照）が原因でMtrace2応答メッセージを受信しない場合、Mtrace2クライアントはホップ数が少ない別のMtrace2クエリを再送信することがあります（セクション3.2を参照） .1）および"
    },
    {
      "indent": 3,
      "text": "repeat the process until it receives an Mtrace2 Reply message. The details are specific to the Mtrace2 client and outside the scope of this document.",
      "ja": "Mtrace2 Replyメッセージを受信するまで、このプロセスを繰り返します。詳細はMtrace2クライアントに固有であり、このドキュメントの範囲外です。"
    },
    {
      "indent": 3,
      "text": "Note that when a router's control plane and forwarding plane are out of sync, the Mtrace2 Requests might be forwarded based on the control states instead. In this case, the traced path might not represent the real path the data packets would follow.",
      "ja": "ルーターのコントロールプレーンと転送プレーンが同期していない場合、代わりにMtrace2要求が制御状態に基づいて転送される可能性があることに注意してください。この場合、トレースされたパスは、データパケットがたどる実際のパスを表していない可能性があります。"
    },
    {
      "indent": 3,
      "text": "Mtrace2 supports both IPv4 and IPv6. Unlike the previous version of Mtrace, which implements its query and response as Internet Group Management Protocol (IGMP) messages [10], all Mtrace2 messages are UDP based. Although the packet formats of IPv4 and IPv6 Mtrace2 are different because of the address families, the syntax between them is similar.",
      "ja": "Mtrace2はIPv4とIPv6の両方をサポートします。クエリと応答をインターネットグループ管理プロトコル（IGMP）メッセージとして実装する以前のバージョンのMtraceとは異なり[10]、すべてのMtrace2メッセージはUDPベースです。 IPv4とIPv6 Mtrace2のパケット形式はアドレスファミリのために異なりますが、それらの間の構文は似ています。"
    },
    {
      "indent": 3,
      "text": "This document describes the base specification of Mtrace2 that can serve as a basis for future proposals such as Mtrace2 for Automatic Multicast Tunneling (AMT) [16] and Mtrace2 for Multicast in MPLS/BGP IP VPNs (known as Multicast VPN (MVPN)) [15]. They are, therefore, out of the scope of this document.",
      "ja": "このドキュメントでは、自動トレーストンネリング（AMT）のMtrace2 [16]やMPLS / BGP IP VPN（マルチキャストVPN（MVPN）と呼ばれる）のマルチキャストのMtrace2など、将来の提案の基礎として機能するMtrace2の基本仕様について説明します。 15]。したがって、それらはこのドキュメントの範囲外です。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2. 用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [1] [7] when, and only when, they appear in all capitals, as shown here. The key words indicate requirement levels for compliant Mtrace2 implementations.",
      "ja": "キーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「NOT RECOMMENDED」、「MAY」、「OPTIONALこのドキュメントの「」は、BCP 14 [1] [7]に記載されているように解釈されます。キーワードは、準拠するMtrace2実装の要件レベルを示します。"
    },
    {
      "indent": 0,
      "text": "2.1. Definitions",
      "section_title": true,
      "ja": "2.1. 定義"
    },
    {
      "indent": 3,
      "text": "Since Mtrace2 Queries and Requests flow in the opposite direction to the data flow, we refer to \"upstream\" and \"downstream\" with respect to data, unless explicitly specified.",
      "ja": "Mtrace2クエリとリクエストはデータフローとは逆方向に流れるため、明示的に指定されていない限り、データに関して「上流」と「下流」を参照します。"
    },
    {
      "indent": 3,
      "text": "Incoming Interface: The interface on which data is expected to arrive from the specified source and group.",
      "ja": "受信インターフェース：指定されたソースおよびグループからデータが到着すると予想されるインターフェース。"
    },
    {
      "indent": 3,
      "text": "Outgoing Interface: This is one of the interfaces to which data from the source or RP is expected to be transmitted for the specified source and group. It is also the interface on which the Mtrace2 Request was received.",
      "ja": "発信インターフェイス：これは、ソースまたはRPからのデータが指定されたソースおよびグループに送信されることが予期されるインターフェイスの1つです。また、Mtrace2要求が受信されたインターフェースでもあります。"
    },
    {
      "indent": 3,
      "text": "Upstream router: The router, connecting to the Incoming Interface of the current router, which is responsible for forwarding data for the specified source and group to the current router.",
      "ja": "アップストリームルーター：現在のルーターの受信インターフェイスに接続するルーター。指定されたソースとグループのデータを現在のルーターに転送します。"
    },
    {
      "indent": 3,
      "text": "First-Hop Router (FHR): The router that is directly connected to the source the Mtrace2 Query specifies.",
      "ja": "ファーストホップルーター（FHR）：Mtrace2クエリが指定するソースに直接接続されているルーター。"
    },
    {
      "indent": 3,
      "text": "Last-Hop Router (LHR): A router that is directly connected to a receiver. It is also the router that receives the Mtrace2 Query from an Mtrace2 client.",
      "ja": "ラストホップルーター（LHR）：レシーバーに直接接続されているルーター。また、Mtrace2クライアントからMtrace2クエリを受信するルーターでもあります。"
    },
    {
      "indent": 3,
      "text": "Group state: The state a shared-tree protocol, such as Protocol Independent Multicast - Sparse Mode (PIM-SM) [5], uses to choose the upstream router towards the RP for the specified group. In this state, source-specific state is not available for the corresponding group address on the router.",
      "ja": "グループ状態：Protocol Independent Multicast-Sparse Mode（PIM-SM）[5]などの共有ツリープロトコルが、指定されたグループのRPへの上流ルーターを選択するために使用する状態。この状態では、ソース固有の状態は、ルーターの対応するグループアドレスでは使用できません。"
    },
    {
      "indent": 3,
      "text": "Source-specific state: The state that is used to choose the path towards the source for the specified source and group.",
      "ja": "ソース固有の状態：指定されたソースおよびグループのソースへのパスを選択するために使用される状態。"
    },
    {
      "indent": 3,
      "text": "ALL-[protocol]-ROUTERS group: Link-local multicast address for multicast routers to communicate with their adjacent routers that are running the same routing protocol. For instance, the IPv4 'ALL-PIM-ROUTERS' group is '224.0.0.13', and the IPv6 'ALL-PIM-ROUTERS' group is 'ff02::d' [5].",
      "ja": "ALL- [protocol] -ROUTERSグループ：マルチキャストルーターが同じルーティングプロトコルを実行している隣接ルーターと通信するためのリンクローカルマルチキャストアドレス。たとえば、IPv4の「ALL-PIM-ROUTERS」グループは「224.0.0.13」であり、IPv6の「ALL-PIM-ROUTERS」グループは「ff02 :: d」です[5]。"
    },
    {
      "indent": 0,
      "text": "3. Packet Formats",
      "section_title": true,
      "ja": "3. パケットフォーマット"
    },
    {
      "indent": 3,
      "text": "This section describes the details of the packet formats for Mtrace2 messages.",
      "ja": "このセクションでは、Mtrace2メッセージのパケット形式の詳細について説明します。"
    },
    {
      "indent": 3,
      "text": "All Mtrace2 messages are encoded in the Type/Length/Value (TLV) format (see Section 3.1). The first TLV of a message is a message header TLV specifying the type of message and additional context information required for processing of the message and for parsing of subsequent TLVs in the message. Subsequent TLVs in a message, referred to as Blocks, are appended after the header TLV to provide additional information associated with the message. If an implementation receives an unknown TLV Type for any TLV in a message, it SHOULD ignore and silently discard the entire packet. If the length of a TLV exceeds the available space in the containing packet, the implementation MUST ignore and silently discard the TLV and any remaining portion of the containing packet.",
      "ja": "すべてのMtrace2メッセージは、タイプ/長さ/値（TLV）形式でエンコードされます（セクション3.1を参照）。メッセージの最初のTLVは、メッセージのタイプを指定するメッセージヘッダーTLVと、メッセージの処理およびメッセージ内の後続のTLVの解析に必要な追加のコンテキスト情報です。ブロックと呼ばれるメッセージ内の後続のTLVは、ヘッダーTLVの後に追加され、メッセージに関連付けられた追加情報を提供します。実装がメッセージ内の任意のTLVの不明なTLVタイプを受信した場合、パケット全体を無視して静かに破棄する必要があります（SHOULD）。 TLVの長さが含まれているパケットで利用可能なスペースを超える場合、実装はTLVと含まれているパケットの残りの部分を無視し、黙って破棄しなければなりません（MUST）。"
    },
    {
      "indent": 3,
      "text": "All Mtrace2 messages are UDP packets. For IPv4, Mtrace2 Query/Request/Reply messages MUST NOT be fragmented. Therefore, Mtrace2 clients and LHRs/RPs MUST set the IP header do-not-fragment (DF) bit for all Mtrace2 messages. For IPv6, the packet size for the Mtrace2 messages MUST NOT exceed 1280 bytes, which is the smallest Maximum Transmission Unit (MTU) for an IPv6 interface [8]. The source port is uniquely selected by the local host operating system. The destination port is the IANA-reserved Mtrace2 port number (see Section 8). All Mtrace2 messages MUST have a valid UDP checksum.",
      "ja": "すべてのMtrace2メッセージはUDPパケットです。 IPv4の場合、Mtrace2クエリ/リクエスト/返信メッセージは断片化してはいけません。したがって、Mtrace2クライアントおよびLHR / RPは、すべてのMtrace2メッセージに対してIPヘッダーのフラグメントしない（DF）ビットを設定する必要があります。 IPv6の場合、Mtrace2メッセージのパケットサイズは、IPv6インターフェースの最小最大転送単位（MTU）である1280バイトを超えてはなりません[8]。送信元ポートは、ローカルホストオペレーティングシステムによって一意に選択されます。宛先ポートは、IANA予約のMtrace2ポート番号です（セクション8を参照）。すべてのMtrace2メッセージには、有効なUDPチェックサムが必要です。"
    },
    {
      "indent": 3,
      "text": "Additionally, Mtrace2 supports both IPv4 and IPv6, but not when mixed. For example, if an Mtrace2 Query or Request message arrives as an IPv4 packet, all addresses specified in the Mtrace2 messages MUST be IPv4 as well. The same rule applies to IPv6 Mtrace2 messages.",
      "ja": "さらに、Mtrace2はIPv4とIPv6の両方をサポートしますが、混合した場合はサポートしません。たとえば、Mtrace2クエリまたはリクエストメッセージがIPv4パケットとして到着した場合、Mtrace2メッセージで指定されたすべてのアドレスもIPv4でなければなりません。同じルールがIPv6 Mtrace2メッセージに適用されます。"
    },
    {
      "indent": 0,
      "text": "3.1. Mtrace2 TLV Format",
      "section_title": true,
      "ja": "3.1. Mtrace2 TLV形式"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |           Length              |   Value ....  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Type: 8 bits",
      "ja": "タイプ：8ビット"
    },
    {
      "indent": 6,
      "text": "Describes the format of the Value field. For all the available types, please see Section 3.2.",
      "ja": "値フィールドの形式について説明します。利用可能なすべてのタイプについては、セクション3.2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Length: 16 bits",
      "ja": "長さ：16ビット"
    },
    {
      "indent": 6,
      "text": "Length of Type, Length, and Value fields in octets. Minimum length required is 4 octets. The length MUST be a multiple of 4 octets. The maximum TLV length is not defined; however, the entire Mtrace2 packet length MUST NOT exceed the available MTU.",
      "ja": "オクテットのタイプ、長さ、および値フィールドの長さ。必要な最小長は4オクテットです。長さは4オクテットの倍数でなければなりません。 TLVの最大長は定義されていません。ただし、Mtrace2パケット全体の長さは、使用可能なMTUを超えてはなりません。"
    },
    {
      "indent": 3,
      "text": "Value: variable length",
      "ja": "値：可変長"
    },
    {
      "indent": 6,
      "text": "The format is based on the Type value. The length of the Value field is the Length field minus 3. All reserved fields in the Value field MUST be transmitted as zeros and ignored on receipt.",
      "ja": "形式はType値に基づいています。値フィールドの長さは、長さフィールドから3を引いた値です。値フィールドのすべての予約フィールドは、ゼロとして送信され、受信時に無視される必要があります。"
    },
    {
      "indent": 0,
      "text": "3.2. Defined TLVs",
      "section_title": true,
      "ja": "3.2. 定義されたTLV"
    },
    {
      "indent": 3,
      "text": "The following TLV Types are defined:",
      "ja": "次のTLVタイプが定義されています。"
    },
    {
      "indent": 9,
      "text": "Code         Type\n====         ================================\n0x00         Reserved\n0x01         Mtrace2 Query\n0x02         Mtrace2 Request\n0x03         Mtrace2 Reply\n0x04         Mtrace2 Standard Response Block\n0x05         Mtrace2 Augmented Response Block\n0x06         Mtrace2 Extended Query Block",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Each Mtrace2 message MUST begin with either a Query, a Request, or a Reply TLV. The first TLV determines the type of each Mtrace2 message. Following a Query TLV, there can be a sequence of optional Extended Query Blocks. In the case of a Request or a Reply TLV, it is then followed by a sequence of Standard Response Blocks, each from a multicast router on the path towards the source or the RP. In the case where more information is needed, a Standard Response Block can be followed by one or multiple Augmented Response Blocks.",
      "ja": "各Mtrace2メッセージは、クエリ、リクエスト、またはリプライTLVで始まる必要があります。最初のTLVは、各Mtrace2メッセージのタイプを決定します。クエリTLVに続いて、オプションの拡張クエリブロックのシーケンスがあります。要求または応答TLVの場合は、送信元またはRPへのパス上のマルチキャストルータからの一連の標準応答ブロックが続きます。さらに情報が必要な場合は、標準応答ブロックの後に1つまたは複数の拡張応答ブロックを続けることができます。"
    },
    {
      "indent": 3,
      "text": "We will describe each message type in detail in the next few sections.",
      "ja": "次のいくつかのセクションでは、各メッセージタイプについて詳しく説明します。"
    },
    {
      "indent": 0,
      "text": "3.2.1. Mtrace2 Query",
      "section_title": true,
      "ja": "3.2.1. Mtrace2クエリ"
    },
    {
      "indent": 3,
      "text": "An Mtrace2 Query is originated by an Mtrace2 client, which sends an Mtrace2 Query message to the LHR. The LHR modifies only the Type field of the Query TLV (to turn it into a \"Request\") before appending a Standard Response Block and forwarding it upstream. The LHR and intermediate routers handling the Mtrace2 message when tracing upstream MUST NOT modify any other fields within the Query/Request TLV. Additionally, intermediate routers handling the message after the LHR has converted the Query into a Request MUST NOT modify the Type field of the Request TLV. If the actual number of hops is not known, an Mtrace2 client could send an initial Query message with a large # Hops (e.g., 0xff), in order to try to trace the full path.",
      "ja": "Mtrace2クエリは、Mtrace2クエリメッセージをLHRに送信するMtrace2クライアントによって発信されます。 LHRは、標準応答ブロックを追加して上流に転送する前に、（それを「要求」に変えるために）クエリTLVのタイプフィールドのみを変更します。アップストリームをトレースするときにMtrace2メッセージを処理するLHRおよび中間ルーターは、クエリ/リクエストTLV内の他のフィールドを変更してはなりません。さらに、LHRがクエリを要求に変換した後にメッセージを処理する中間ルーターは、要求TLVのタイプフィールドを変更してはなりません（MUST NOT）。実際のホップ数がわからない場合、Mtrace2クライアントは、完全なパスのトレースを試みるために、大きな＃ホップ（0xffなど）を含む初期クエリメッセージを送信できます。"
    },
    {
      "indent": 3,
      "text": "An Mtrace2 Query message is shown as follows:",
      "ja": "Mtrace2クエリメッセージは次のように表示されます。"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |           Length              |    # Hops     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n|                      Multicast Address                        |\n|                                                               |\n+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n|                                                               |\n|                        Source Address                         |\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n|                    Mtrace2 Client Address                     |\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            Query ID           |         Client Port #         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Length: 16 bits The Length field MUST be either 20 (i.e., 8 + 3 * 4 (IPv4 addresses)) or 56 (i.e., 8 + 3 * 16 (IPv6 addresses)); if the length is 20, then IPv4 addresses MUST be assumed, and if the length is 56, then IPv6 addresses MUST be assumed.",
      "ja": "長さ：16ビット長さフィールドは、20（つまり、8 + 3 * 4（IPv4アドレス））または56（つまり、8 + 3 * 16（IPv6アドレス））でなければなりません。長さが20の場合、IPv4アドレスを想定する必要があり、長さが56の場合、IPv6アドレスを想定する必要があります。"
    },
    {
      "indent": 3,
      "text": "# Hops: 8 bits This field specifies the maximum number of hops that the Mtrace2 client wants to trace. If there are some error conditions in the middle of the path that prevent an Mtrace2 Reply from being received by the client, the client MAY issue another Mtrace2 Query with a lower number of hops until it receives a Reply.",
      "ja": "＃ホップ：8ビットこのフィールドは、Mtrace2クライアントがトレースするホップの最大数を指定します。パスの途中にMtrace2応答がクライアントに受信されないエラー条件がある場合、クライアントは、応答を受信するまで、ホップ数が少ない別のMtrace2クエリを発行できます（MAY）。"
    },
    {
      "indent": 3,
      "text": "Multicast Address: 32 bits or 128 bits This field specifies an IPv4 or IPv6 address, which can be either:",
      "ja": "マルチキャストアドレス：32ビットまたは128ビットこのフィールドは、IPv4またはIPv6アドレスを指定します。"
    },
    {
      "indent": 6,
      "text": "m-1: a multicast group address to be traced or",
      "ja": "m-1：トレースするマルチキャストグループアドレスまたは"
    },
    {
      "indent": 6,
      "text": "m-2: all ones in case of IPv4 or the unspecified address (::) in case of IPv6 if no group-specific information is desired.",
      "ja": "m-2：グループ固有の情報が必要ない場合は、IPv4の場合はすべて1、IPv6の場合は未指定アドレス（：:)。"
    },
    {
      "indent": 3,
      "text": "Source Address: 32 bits or 128 bits This field specifies an IPv4 or IPv6 address, which can be either:",
      "ja": "送信元アドレス：32ビットまたは128ビットこのフィールドは、IPv4またはIPv6アドレスを指定します。"
    },
    {
      "indent": 6,
      "text": "s-1: a unicast address of the source to be traced or",
      "ja": "s-1：トレースするソースのユニキャストアドレスまたは"
    },
    {
      "indent": 6,
      "text": "s-2: all ones in case of IPv4 or the unspecified address (::) in case of IPv6 if no source-specific information is desired. For example, the client is tracing a (*,g) group state.",
      "ja": "s-2：ソース固有の情報が必要ない場合は、IPv4の場合はすべて1、IPv6の場合は未指定アドレス（：:)。たとえば、クライアントは（*、g）グループ状態をトレースしています。"
    },
    {
      "indent": 6,
      "text": "Note that it is invalid to have a source-group combination of (s-2, m-2). If a router receives such combination in an Mtrace2 Query, it MUST silently discard the Query.",
      "ja": "（s-2、m-2）のソースグループの組み合わせは無効であることに注意してください。ルーターがMtrace2クエリでこのような組み合わせを受信した場合、そのクエリを黙っ​​て破棄する必要があります。"
    },
    {
      "indent": 3,
      "text": "Mtrace2 Client Address: 32 bits or 128 bits This field specifies the Mtrace2 client's IPv4 address or IPv6 global address. This address MUST be a valid unicast address; therefore, it MUST NOT be all ones or an unspecified address. The Mtrace2 Reply will be sent to this address.",
      "ja": "Mtrace2クライアントアドレス：32ビットまたは128ビットこのフィールドは、Mtrace2クライアントのIPv4アドレスまたはIPv6グローバルアドレスを指定します。このアドレスは有効なユニキャストアドレスでなければなりません。したがって、すべて1であったり、指定されていないアドレスであったりしてはなりません。 Mtrace2返信はこのアドレスに送信されます。"
    },
    {
      "indent": 3,
      "text": "Query ID: 16 bits This field is used as a unique identifier for this Mtrace2 Query so that duplicate or delayed Reply messages may be detected.",
      "ja": "クエリID：16ビットこのフィールドは、このMtrace2クエリの一意の識別子として使用され、重複または遅延した返信メッセージが検出される場合があります。"
    },
    {
      "indent": 3,
      "text": "Client Port #: 16 bits This field specifies the destination UDP port number for receiving the Mtrace2 Reply packet.",
      "ja": "クライアントポート番号：16ビットこのフィールドは、Mtrace2応答パケットを受信するための宛先UDPポート番号を指定します。"
    },
    {
      "indent": 0,
      "text": "3.2.2. Mtrace2 Request",
      "section_title": true,
      "ja": "3.2.2. mtrace2リクエスト"
    },
    {
      "indent": 3,
      "text": "The Mtrace2 Request TLV is exactly the same as an Mtrace2 Query except for identifying the Type field of 0x02.",
      "ja": "Mtrace2要求TLVは、0x02のTypeフィールドを識別することを除いて、Mtrace2クエリとまったく同じです。"
    },
    {
      "indent": 3,
      "text": "When an LHR receives an Mtrace2 Query message, it turns the Query into a Request by changing the Type field of the Query from 0x01 to 0x02. The LHR then appends an Mtrace2 Standard Response Block (see Section 3.2.4) of its own to the Request message before sending it upstream. The upstream routers do the same without changing the Type field until one of them is ready to send a Reply.",
      "ja": "LHRがMtrace2クエリメッセージを受信すると、クエリのタイプフィールドを0x01から0x02に変更することにより、クエリをリクエストに変換します。次に、LHRは、要求メッセージに独自のMtrace2標準応答ブロック（セクション3.2.4を参照）を追加してから、上流に送信します。上流のルーターは、いずれかが応答を送信する準備ができるまで、Typeフィールドを変更せずに同じことを行います。"
    },
    {
      "indent": 0,
      "text": "3.2.3. Mtrace2 Reply",
      "section_title": true,
      "ja": "3.2.3. Mtrace2返信"
    },
    {
      "indent": 3,
      "text": "The Mtrace2 Reply TLV is exactly the same as an Mtrace2 Query except for identifying the Type field of 0x03.",
      "ja": "Mtrace2 Reply TLVは、0x03のTypeフィールドを識別することを除いて、Mtrace2クエリとまったく同じです。"
    },
    {
      "indent": 0,
      "text": " When an FHR or an RP receives an Mtrace2 Request message that is destined to itself, it appends an Mtrace2 Standard Response Block (see Section 3.2.4) of its own to the Request message. Next, it turns the Request message into a Reply by changing the Type field of the Request from 0x02 to 0x03 and by changing the UDP destination port to the port number specified in the Client Port Number field in the Request. It then unicasts the Reply message to the Mtrace2 client specified in the Mtrace2 Client Address field.",
      "ja": "FHRまたはRPは、自分宛のMtrace2要求メッセージを受信すると、それ自体のMtrace2標準応答ブロック（セクション3.2.4を参照）を要求メッセージに追加します。次に、要求のタイプフィールドを0x02から0x03に変更し、UDP宛先ポートを要求のクライアントポート番号フィールドで指定されたポート番号に変更することにより、要求メッセージを返信に変換します。次に、Mtrace2クライアントアドレスフィールドで指定されたMtrace2クライアントに返信メッセージをユニキャストします。"
    },
    {
      "indent": 3,
      "text": "There are a number of cases in which an intermediate router might return a Reply before a Request reaches the FHR or the RP. See Sections 4.1.1, 4.2.2, 4.3.3, and 4.5 for more details.",
      "ja": "要求がFHRまたはRPに到達する前に、中間ルーターが応答を返す場合があります。詳細については、セクション4.1.1、4.2.2、4.3.3、および4.5を参照してください。"
    },
    {
      "indent": 0,
      "text": "3.2.4. IPv4 Mtrace2 Standard Response Block",
      "section_title": true,
      "ja": "3.2.4. IPv4 Mtrace2標準応答ブロック"
    },
    {
      "indent": 3,
      "text": "This section describes the message format of an IPv4 Mtrace2 Standard Response Block. The Type field is 0x04.",
      "ja": "このセクションでは、IPv4 Mtrace2標準応答ブロックのメッセージ形式について説明します。 Typeフィールドは0x04です。"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |           Length              |      MBZ      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      Query Arrival Time                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                  Incoming Interface Address                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                  Outgoing Interface Address                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                   Upstream Router Address                     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n.           Input packet count on Incoming Interface            .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n.           Output packet count on Outgoing Interface           .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n.      Total number of packets for this source-group pair       .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          Rtg Protocol         |    Multicast Rtg Protocol     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|    Fwd TTL    |      MBZ      |S|   Src Mask  |Forwarding Code|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "MBZ: 8 bits This field MUST be zeroed on transmission and ignored on reception.",
      "ja": "MBZ：8ビットこのフィールドは送信時にゼロに設定され、受信時には無視される必要があります。"
    },
    {
      "indent": 3,
      "text": "Query Arrival Time: 32 bits The Query Arrival Time is a 32-bit Network Time Protocol (NTP) timestamp specifying the arrival time of the Mtrace2 Query or Request packet at this router. The 32-bit form of an NTP timestamp consists of the middle 32 bits of the full 64-bit form; that is, the low 16 bits of the integer part and the high 16 bits of the fractional part.",
      "ja": "クエリ到着時間：32ビットクエリ到着時間は、このルーターでのMtrace2クエリまたはリクエストパケットの到着時間を指定する32ビットのネットワークタイムプロトコル（NTP）タイムスタンプです。 32ビット形式のNTPタイムスタンプは、完全な64ビット形式の中間の32ビットで構成されます。つまり、整数部の下位16ビットと小数部の上位16ビットです。"
    },
    {
      "indent": 6,
      "text": "The following formula converts from a timespec (fractional part in nanoseconds) to a 32-bit NTP timestamp:",
      "ja": "次の式は、timespec（ナノ秒の小数部）から32ビットのNTPタイムスタンプに変換します。"
    },
    {
      "indent": 9,
      "text": "query_arrival_time\n= ((tv.tv_sec + 32384) << 16) + ((tv.tv_nsec << 7) / 1953125)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "The constant 32384 is the number of seconds from Jan 1, 1900 to Jan 1, 1970 truncated to 16 bits. ((tv.tv_nsec << 7) / 1953125) is a reduction of ((tv.tv_nsec / 1000000000) << 16), where \"<<\" denotes a logical left shift.",
      "ja": "定数32384は、1900年1月1日から1970年1月1日までの秒数で、16ビットに切り捨てられます。 （（tv.tv_nsec << 7）/ 1953125）は、（（tv.tv_nsec / 1000000000）<< 16）の縮小です。ここで、「<<」は論理的な左シフトを示します。"
    },
    {
      "indent": 6,
      "text": "Note that synchronized clocks are required on the traced routers to estimate propagation and queuing delays between successive hops. Nevertheless, even without this synchronization, an application can still estimate an upper bound on cumulative one-way latency by measuring the time between sending a Query and receiving a Reply.",
      "ja": "連続するホップ間の伝播およびキューイング遅延を推定するには、トレースされたルータで同期クロックが必要であることに注意してください。それにもかかわらず、この同期がなくても、クエリを送信してから応答を受信するまでの時間を測定することで、アプリケーションは累積的な一方向レイテンシの上限を推定できます。"
    },
    {
      "indent": 6,
      "text": "Additionally, Query Arrival Time is useful for measuring the packet rate. For example, suppose that a client issues two Queries, and the corresponding Requests R1 and R2 arrive at router X at time T1 and T2, then the client would be able to compute the packet rate on router X by using the packet-count information stored in the R1 and R2 and using the time T1 and T2.",
      "ja": "さらに、クエリ到着時間は、パケットレートの測定に役立ちます。たとえば、クライアントが2つのクエリを発行し、対応する要求R1とR2が時間T1とT2にルーターXに到着すると、クライアントは、保存されているパケット数情報を使用してルーターXのパケットレートを計算できます。 R1とR2で、時間T1とT2を使用します。"
    },
    {
      "indent": 3,
      "text": "Incoming Interface Address: 32 bits This field specifies the address of the interface on which packets from the source or the RP are expected to arrive, or 0 if unknown or unnumbered.",
      "ja": "Incoming Interface Address：32ビットこのフィールドは、ソースまたはRPからのパケットが到着すると予想されるインターフェイスのアドレスを指定します。不明または番号付けされていない場合は0を指定します。"
    },
    {
      "indent": 3,
      "text": "Outgoing Interface Address: 32 bits This field specifies the address of the interface on which packets from the source or the RP are expected to transmit towards the receiver, or 0 if unknown or unnumbered. This is also the address of the interface on which the Mtrace2 Query or Request arrives.",
      "ja": "Outgoing Interface Address：32ビットこのフィールドは、ソースまたはRPからのパケットがレシーバーに向けて送信されると予想されるインターフェースのアドレスを指定します。不明または番号付けされていない場合は0を指定します。これは、Mtrace2クエリまたはリクエストが到着するインターフェイスのアドレスでもあります。"
    },
    {
      "indent": 3,
      "text": "Upstream Router Address: 32 bits This field specifies the address of the upstream router from which this router expects packets from this source. This MAY be a multicast group (e.g., ALL-[protocol]-ROUTERS group) if the upstream router is not known because of the workings of the multicast routing protocol. However, it MUST be 0 if the Incoming Interface address is unknown or unnumbered.",
      "ja": "アップストリームルーターアドレス：32ビットこのフィールドは、このルーターがこのソースからのパケットを予期しているアップストリームルーターのアドレスを指定します。マルチキャストルーティングプロトコルの動作のために上流ルーターが不明な場合、これはマルチキャストグループ（ALL- [protocol] -ROUTERSグループなど）になる場合があります。ただし、着信インターフェイスアドレスが不明または番号付けされていない場合は、0にする必要があります。"
    },
    {
      "indent": 3,
      "text": "Input packet count on Incoming Interface: 64 bits This field contains the number of multicast packets received for all groups and sources on the Incoming Interface, or all ones if no count can be reported. This counter may have the same value as ifHCInMulticastPkts from the Interfaces Group MIB (IF-MIB) [9] for this interface.",
      "ja": "着信インターフェイス上の入力パケット数：64ビットこのフィールドには、着信インターフェイス上のすべてのグループとソースについて受信したマルチキャストパケットの数、またはカウントを報告できない場合はすべて1が含まれます。このカウンタは、このインターフェイスのインターフェイスグループMIB（IF-MIB）[9]のifHCInMulticastPktsと同じ値を持つ場合があります。"
    },
    {
      "indent": 3,
      "text": "Output packet count on Outgoing Interface: 64 bits This field contains the number of multicast packets that have been transmitted or queued for transmission for all groups and sources on the Outgoing Interface, or all ones if no count can be reported. This counter may have the same value as ifHCOutMulticastPkts from the IF-MIB [9] for this interface.",
      "ja": "送信インターフェースの出力パケット数：64ビットこのフィールドには、送信インターフェースのすべてのグループとソース、またはレポートできない場合はすべて1の送信または送信キューに入れられたマルチキャストパケットの数が含まれます。このカウンタは、このインターフェイスのIF-MIB [9]からのifHCOutMulticastPktsと同じ値を持つ場合があります。"
    },
    {
      "indent": 3,
      "text": "Total number of packets for this source-group pair: 64 bits This field counts the number of packets from the specified source forwarded by the router to the specified group, or all ones if no count can be reported. If the S bit is set (see below), the count is for the source network, as specified by the Src Mask field (see below). If the S bit is set and the Src Mask field is 127, indicating no source-specific state, the count is for all sources sending to this group. This counter should have the same value as ipMcastRoutePkts from the IP Multicast MIB [14] for this forwarding entry.",
      "ja": "このソースとグループのペアのパケットの総数：64ビットこのフィールドは、指定されたソースからルーターによって指定されたグループに転送されたパケット数をカウントします。カウントできない場合はすべて1です。 Sビットが設定されている場合（下記を参照）、Src Maskフィールド（下記を参照）で指定されているように、カウントはソースネットワーク用です。 Sビットが設定されていて、Src Maskフィールドが127で、ソース固有の状態がないことを示す場合、カウントはこのグループに送信するすべてのソースに対するものです。このカウンタは、この転送エントリのIPマルチキャストMIB [14]からのipMcastRoutePktsと同じ値を持つ必要があります。"
    },
    {
      "indent": 3,
      "text": "Rtg Protocol: 16 bits This field describes the unicast routing protocol running between this router and the upstream router, and it is used to determine the Reverse Path Forwarding (RPF) interface for the specified source or RP. This value should have the same value as ipMcastRouteRtProtocol from the IP Multicast MIB [14] for this entry. If the router is not able to obtain this value, all 0's must be specified.",
      "ja": "Rtgプロトコル：16ビットこのフィールドは、このルーターと上流のルーター間で実行されるユニキャストルーティングプロトコルを説明し、指定されたソースまたはRPのリバースパス転送（RPF）インターフェイスを決定するために使用されます。この値は、このエントリのIPマルチキャストMIB [14]のipMcastRouteRtProtocolと同じ値である必要があります。ルーターがこの値を取得できない場合は、すべて0を指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "Multicast Rtg Protocol: 16 bits This field describes the multicast routing protocol in use between the router and the upstream router. This value should have the same value as ipMcastRouteProtocol from the IP Multicast MIB [14] for this entry. If the router cannot obtain this value, all 0's must be specified.",
      "ja": "マルチキャストRtgプロトコル：16ビットこのフィールドは、ルーターと上流のルーターの間で使用されているマルチキャストルーティングプロトコルについて説明します。この値は、このエントリのIPマルチキャストMIB [14]のipMcastRouteProtocolと同じ値である必要があります。ルータがこの値を取得できない場合は、すべて0を指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "Fwd TTL: 8 bits This field contains the configured multicast TTL threshold, if any, of the Outgoing Interface.",
      "ja": "Fwd TTL：8ビットこのフィールドには、発信インターフェースの構成済みのマルチキャストTTLしきい値（存在する場合）が含まれます。"
    },
    {
      "indent": 3,
      "text": "S: 1 bit If this bit is set, it indicates that the packet count for the source-group pair is for the source network, as determined by masking the source address with the Src Mask field.",
      "ja": "S：1ビットこのビットが設定されている場合、Src Maskフィールドで送信元アドレスをマスキングすることにより決定される、送信元グループペアのパケット数が送信元ネットワーク用であることを示します。"
    },
    {
      "indent": 3,
      "text": "Src Mask: 7 bits This field contains the number of 1's in the netmask the router has for the source (i.e., a value of 24 means the netmask is 0xffffff00). If the router is forwarding solely on group state, this field is set to 127 (0x7f).",
      "ja": "Src Mask：7 bitsこのフィールドには、ルーターがソースに対して持っているネットマスクの1の数が含まれます（つまり、値24はネットマスクが0xffffff00であることを意味します）。ルーターがグループ状態のみで転送している場合、このフィールドは127（0x7f）に設定されます。"
    },
    {
      "indent": 3,
      "text": "Forwarding Code: 8 bits This field contains a forwarding information/error code. Values with the high-order bit set (0x80-0xff) are intended for use with conditions that are transitory or automatically recovered. Other Forwarding Code values indicate a need to fix a problem in the Query or a need to redirect the Query. Sections 4.1 and 4.2 explain how and when the Forwarding Code is filled. Defined values are as follows:",
      "ja": "転送コード：8ビットこのフィールドには、転送情報/エラーコードが含まれます。上位ビットが設定された値（0x80-0xff）は、一時的な状態または自動的に回復する状態での使用を目的としています。他の転送コードの値は、クエリの問題を修正する必要があるか、クエリをリダイレクトする必要があることを示します。セクション4.1と4.2では、転送コードがいつどのように入力されるかについて説明します。定義されている値は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "Value  Name            Description\n-----  --------------  ----------------------------------------------\n0x00   NO_ERROR        No error.\n0x01   WRONG_IF        Mtrace2 Request arrived on an interface\n                       for which this router does not perform\n                       forwarding for the specified group to the\n                       source or RP.\n0x02   PRUNE_SENT      This router has sent a prune upstream that\n                       applies to the source and group in the\n                       Mtrace2 Request.\n0x03   PRUNE_RCVD      This router has stopped forwarding for this\n                       source and group in response to a Request\n                       from the downstream router.\n0x04   SCOPED          The group is subject to administrative\n                       scoping at this router.\n0x05   NO_ROUTE        This router has no route for the source or\n                       group and no way to determine a potential\n                       route.\n0x06   WRONG_LAST_HOP  This router is not the proper LHR.\n0x07   NOT_FORWARDING  This router is not forwarding this source and\n                       group out the Outgoing Interface for an\n                       unspecified reason.\n0x08   REACHED_RP      Reached the Rendezvous Point.\n0x09   RPF_IF          Mtrace2 Request arrived on the expected\n                       RPF interface for this source and group.\n0x0A   NO_MULTICAST    Mtrace2 Request arrived on an interface\n                       that is not enabled for multicast.\n0x0B   INFO_HIDDEN     One or more hops have been hidden from this\n                       trace.\n0x0C   REACHED_GW      Mtrace2 Request arrived on a gateway (e.g.,\n                       a NAT or firewall) that hides the\n                       information between this router and the\n                       Mtrace2 client.\n0x0D   UNKNOWN_QUERY   A non-transitive Extended Query Type was\n                       received by a router that does not support\n                       the type.\n0x80   FATAL_ERROR     A fatal error is one where the router may\n                       know the upstream router but cannot forward\n                       the message to it.\n0x81   NO_SPACE        There was not enough room to insert another\n                       Standard Response Block in the packet.\n0x83   ADMIN_PROHIB    Mtrace2 is administratively prohibited.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3.2.5. IPv6 Mtrace2 Standard Response Block",
      "section_title": true,
      "ja": "3.2.5. IPv6 Mtrace2標準応答ブロック"
    },
    {
      "indent": 3,
      "text": "This section describes the message format of an IPv6 Mtrace2 Standard Response Block. The Type field is also 0x04.",
      "ja": "このセクションでは、IPv6 Mtrace2標準応答ブロックのメッセージ形式について説明します。 Typeフィールドも0x04です。"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |           Length              |      MBZ      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      Query Arrival Time                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Incoming Interface ID                     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Outgoing Interface ID                     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n*                         Local Address                         *\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n*                         Remote Address                        *\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n.           Input packet count on Incoming Interface            .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n.           Output packet count on Outgoing Interface           .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n.      Total number of packets for this source-group pair       .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          Rtg Protocol         |    Multicast Rtg Protocol     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|              MBZ 2          |S|Src Prefix Len |Forwarding Code|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "MBZ: 8 bits This field MUST be zeroed on transmission and ignored on reception.",
      "ja": "MBZ：8ビットこのフィールドは送信時にゼロに設定され、受信時には無視される必要があります。"
    },
    {
      "indent": 3,
      "text": "Query Arrival Time: 32 bits Same definition as in IPv4.",
      "ja": "クエリ到着時間：32ビットIPv4と同じ定義。"
    },
    {
      "indent": 3,
      "text": "Incoming Interface ID: 32 bits This field specifies the interface ID on which packets from the source or RP are expected to arrive, or 0 if unknown. This ID should be the value taken from InterfaceIndex of the IF-MIB [9] for this interface.",
      "ja": "着信インターフェースID：32ビットこのフィールドは、ソースまたはRPからのパケットが到着すると予想されるインターフェースIDを指定します。不明の場合は0を指定します。このIDは、このインターフェイスのIF-MIB [9]のInterfaceIndexから取得した値である必要があります。"
    },
    {
      "indent": 3,
      "text": "Outgoing Interface ID: 32 bits This field specifies the interface ID to which packets from the source or RP are expected to transmit, or 0 if unknown. This ID should be the value taken from InterfaceIndex of the IF-MIB [9] for this interface.",
      "ja": "発信インターフェースID：32ビットこのフィールドは、ソースまたはRPからのパケットの送信先となるインターフェースIDを指定します。不明な場合は0を指定します。このIDは、このインターフェイスのIF-MIB [9]のInterfaceIndexから取得した値である必要があります。"
    },
    {
      "indent": 3,
      "text": "Local Address: 128 bits This field specifies a global IPv6 address that uniquely identifies the router. A unique local unicast address [12] SHOULD NOT be used unless the router is only assigned link-local and unique local addresses. If the router is only assigned link-local addresses, its link-local address can be specified in this field.",
      "ja": "ローカルアドレス：128ビットこのフィールドは、ルーターを一意に識別するグローバルIPv6アドレスを指定します。一意のローカルユニキャストアドレス[12]は、ルーターにリンクローカルアドレスと一意のローカルアドレスのみが割り当てられている場合を除き、使用しないでください。ルーターにリンクローカルアドレスのみが割り当てられている場合は、このフィールドにリンクローカルアドレスを指定できます。"
    },
    {
      "indent": 3,
      "text": "Remote Address: 128 bits This field specifies the address of the upstream router, which, in most cases, is a link-local unicast address for the upstream router.",
      "ja": "リモートアドレス：128ビットこのフィールドは、上流ルーターのアドレスを指定します。これは、ほとんどの場合、上流ルーターのリンクローカルユニキャストアドレスです。"
    },
    {
      "indent": 6,
      "text": "Although a link-local address does not have enough information to identify a node, it is possible to detect the upstream router with the assistance of the Incoming Interface ID and the current router address (i.e., Local Address).",
      "ja": "リンクローカルアドレスにはノードを特定するのに十分な情報がありませんが、受信インターフェイスIDと現在のルーターアドレス（つまり、ローカルアドレス）を使用して上流ルーターを検出することができます。"
    },
    {
      "indent": 6,
      "text": "Note that this may be a multicast group (e.g., ALL-[protocol]- ROUTERS group) if the upstream router is not known because of the workings of a multicast routing protocol. However, it should be the unspecified address (::) if the Incoming Interface address is unknown.",
      "ja": "マルチキャストルーティングプロトコルの動作のために上流ルーターが不明な場合、これはマルチキャストグループ（ALL- [プロトコル]-ROUTERSグループなど）である可能性があることに注意してください。ただし、着信インターフェイスアドレスが不明な場合は、未指定アドレス（：:)である必要があります。"
    },
    {
      "indent": 3,
      "text": "Input packet count on Incoming Interface: 64 bits Same definition as in IPv4.",
      "ja": "着信インターフェイスの入力パケット数：64ビットIPv4と同じ定義。"
    },
    {
      "indent": 3,
      "text": "Output packet count on Outgoing Interface: 64 bits Same definition as in IPv4.",
      "ja": "送信インターフェイスの出力パケット数：64ビットIPv4と同じ定義。"
    },
    {
      "indent": 0,
      "text": " Total number of packets for this source-group pair: 64 bits Same definition as in IPv4, except if the S bit is set (see below), the count is for the source network, as specified by the Src Prefix Len field. If the S bit is set and the Src Prefix Len field is 255, indicating no source-specific state, the count is for all sources sending to this group. This counter should have the same value as ipMcastRoutePkts from the IP Multicast MIB [14] for this forwarding entry.",
      "ja": "このソースとグループのペアのパケットの総数：64ビットSビットが設定されている場合（下記を参照）を除き、IPv4と同じ定義で、Src Prefix Lenフィールドで指定されているように、カウントはソースネットワークに対するものです。 Sビットが設定されていて、Src Prefix Lenフィールドが255で、ソース固有の状態がないことを示している場合、カウントはこのグループに送信するすべてのソースに対するものです。このカウンタは、この転送エントリのIPマルチキャストMIB [14]からのipMcastRoutePktsと同じ値を持つ必要があります。"
    },
    {
      "indent": 3,
      "text": "Rtg Protocol: 16 bits Same definition as in IPv4.",
      "ja": "Rtgプロトコル：16ビットIPv4と同じ定義。"
    },
    {
      "indent": 3,
      "text": "Multicast Rtg Protocol: 16 bits",
      "ja": "マルチキャストRtgプロトコル：16ビット"
    },
    {
      "indent": 6,
      "text": "Same definition as in IPv4.",
      "ja": "IPv4と同じ定義。"
    },
    {
      "indent": 3,
      "text": "MBZ 2: 15 bits This field MUST be zeroed on transmission and ignored on reception.",
      "ja": "MBZ 2：15ビットこのフィールドは送信時にゼロに設定され、受信時には無視される必要があります。"
    },
    {
      "indent": 3,
      "text": "S: 1 bit Same definition as in IPv4, except the Src Prefix Len field is used to mask the source address.",
      "ja": "S：1ビットSrc Prefix Lenフィールドを使用して送信元アドレスをマスクすることを除いて、IPv4と同じ定義。"
    },
    {
      "indent": 3,
      "text": "Src Prefix Len: 8 bits This field contains the prefix length this router has for the source. If the router is forwarding solely on group state, this field is set to 255 (0xff).",
      "ja": "Src Prefix Len：8ビットこのフィールドには、このルーターがソースに対して持っているプレフィックス長が含まれています。ルーターがグループ状態のみで転送している場合、このフィールドは255（0xff）に設定されます。"
    },
    {
      "indent": 3,
      "text": "Forwarding Code: 8 bits Same definition as in IPv4.",
      "ja": "転送コード：8ビットIPv4と同じ定義。"
    },
    {
      "indent": 0,
      "text": "3.2.6. Mtrace2 Augmented Response Block",
      "section_title": true,
      "ja": "3.2.6. Mtrace2拡張応答ブロック"
    },
    {
      "indent": 3,
      "text": "In addition to the Standard Response Block, a multicast router on the traced path can optionally add one or multiple Augmented Response Blocks before sending the Request to its upstream router.",
      "ja": "標準応答ブロックに加えて、トレースされたパス上のマルチキャストルーターは、要求を上流のルーターに送信する前に、オプションで1つまたは複数の拡張応答ブロックを追加できます。"
    },
    {
      "indent": 3,
      "text": "The Augmented Response Block is flexible for various purposes such as providing diagnosis information (see Section 7) and protocol verification. Its Type field is 0x05, and its format is as follows:",
      "ja": "Augmented Response Blockは、診断情報（セクション7を参照）やプロトコル検証の提供など、さまざまな目的に柔軟に対応できます。 Typeフィールドは0x05で、形式は次のとおりです。"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |           Length              |      MBZ      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|    Augmented Response Type    |           Value ....          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "MBZ: 8 bits This field MUST be zeroed on transmission and ignored on reception.",
      "ja": "MBZ：8ビットこのフィールドは送信時にゼロに設定され、受信時には無視される必要があります。"
    },
    {
      "indent": 3,
      "text": "Augmented Response Type: 16 bits This field specifies the type of various responses from a multicast router that might need to communicate back to the Mtrace2 client as well as the multicast routers on the traced path.",
      "ja": "Augmented Response Type：16ビットこのフィールドは、トレースされたパス上のMtrace2クライアントおよびマルチキャストルーターと通信する必要があるマルチキャストルーターからのさまざまな応答のタイプを指定します。"
    },
    {
      "indent": 6,
      "text": "The Augmented Response Type is defined as follows:",
      "ja": "拡張応答タイプは次のように定義されます。"
    },
    {
      "indent": 9,
      "text": "Code      Type\n======    ==============================================\n0x0001    # of the returned Standard Response Blocks",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "When the NO_SPACE error occurs on a router, the router should send the original Mtrace2 Request received from the downstream router as a Reply back to the Mtrace2 client and continue with a new Mtrace2 Request. In the new Request, the router adds a Standard Response Block followed by an Augmented Response Block with 0x01 as the Augmented Response Type, and the number of the returned Mtrace2 Standard Response Blocks as the Value.",
      "ja": "ルーターでNO_SPACEエラーが発生した場合、ルーターはダウンストリームルーターから受信した元のMtrace2要求を返信としてMtrace2クライアントに送信し、新しいMtrace2要求を続行する必要があります。新しいリクエストでは、ルーターは標準応答ブロックを追加し、その後に拡張応答タイプとして0x01を含む拡張応答ブロックを追加し、返されたMtrace2標準応答ブロックの数を値として追加します。"
    },
    {
      "indent": 6,
      "text": "Each upstream router recognizes the total number of hops the Request has traced so far by adding this number and the number of the Standard Response Block in the current Request message.",
      "ja": "各アップストリームルータは、この数と現在の要求メッセージ内の標準応答ブロックの数を追加することにより、要求がこれまでに追跡したホップの総数を認識します。"
    },
    {
      "indent": 6,
      "text": "This document only defines one Augmented Response Type in the Augmented Response Block. The description on how to provide diagnosis information using the Augmented Response Block is out of the scope of this document and will be addressed in separate documents.",
      "ja": "このドキュメントでは、拡張応答ブロックで拡張応答タイプを1つだけ定義しています。 Augmented Response Blockを使用して診断情報を提供する方法の説明は、このドキュメントの範囲外であり、別のドキュメントで扱います。"
    },
    {
      "indent": 3,
      "text": "Value: variable length The format is based on the Augmented Response Type value. The length of the Value field is Length field minus 6.",
      "ja": "値：可変長形式は、拡張応答タイプの値に基づいています。 「値」フィールドの長さは、「長さフィールド」から6を引いたものです。"
    },
    {
      "indent": 0,
      "text": "3.2.7. Mtrace2 Extended Query Block",
      "section_title": true,
      "ja": "3.2.7. Mtrace2拡張クエリブロック"
    },
    {
      "indent": 3,
      "text": "There may be a sequence of optional Extended Query Blocks that follow an Mtrace2 Query to further specify any information needed for the Query. For example, an Mtrace2 client might be interested in tracing the path the specified source and group would take based on a certain topology. In this case, the client can pass in the multi-topology ID as the value for an Extended Query Type (see below). The Extended Query Type is extensible, and the behavior of the new types will be addressed by separate documents.",
      "ja": "クエリに必要な情報をさらに指定するために、Mtrace2クエリに続くオプションの拡張クエリブロックのシーケンスがある場合があります。たとえば、Mtrace2クライアントは、特定のトポロジに基づいて、指定されたソースとグループがたどるパスをトレースすることに関心がある場合があります。この場合、クライアントは拡張トポロジタイプの値としてマルチトポロジIDを渡すことができます（以下を参照）。拡張クエリタイプは拡張可能であり、新しいタイプの動作は別のドキュメントで扱われます。"
    },
    {
      "indent": 3,
      "text": "The Mtrace2 Extended Query Block's Type field is 0x06 and is formatted as follows:",
      "ja": "Mtrace2拡張クエリブロックのTypeフィールドは0x06であり、次のようにフォーマットされます。"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |           Length              |      MBZ    |T|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|      Extended Query Type      |           Value ....          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "MBZ: 7 bits This field MUST be zeroed on transmission and ignored on reception.",
      "ja": "MBZ：7ビットこのフィールドは送信時にゼロに設定され、受信時には無視される必要があります。"
    },
    {
      "indent": 3,
      "text": "T-bit (Transitive Attribute): 1 bit If the TLV Type is unrecognized by the receiving router, then this TLV is either discarded or forwarded along with the Query, depending on the value of this bit. If this bit is set, then the router MUST forward this TLV. If this bit is clear, the router MUST send an Mtrace2 Reply with an UNKNOWN_QUERY error.",
      "ja": "Tビット（推移的属性）：1ビットTLVタイプが受信ルーターによって認識されない場合、このTLVは破棄されるか、このビットの値に応じてクエリと共に転送されます。このビットが設定されている場合、ルータはこのTLVを転送する必要があります。このビットがクリアされている場合、ルーターはUNKNOWN_QUERYエラーを含むMtrace2応答を送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "Extended Query Type: 16 bits This field specifies the type of the Extended Query Block.",
      "ja": "拡張クエリタイプ：16ビットこのフィールドは、拡張クエリブロックのタイプを指定します。"
    },
    {
      "indent": 3,
      "text": "Value: 16 bits This field specifies the value of this Extended Query.",
      "ja": "値：16ビットこのフィールドは、この拡張クエリの値を指定します。"
    },
    {
      "indent": 0,
      "text": "4. Router Behavior",
      "section_title": true,
      "ja": "4. ルーターの動作"
    },
    {
      "indent": 3,
      "text": "This section describes the router behavior in the context of Mtrace2 in detail.",
      "ja": "このセクションでは、Mtrace2のコンテキストでのルーターの動作について詳しく説明します。"
    },
    {
      "indent": 0,
      "text": "4.1. Receiving an Mtrace2 Query",
      "section_title": true,
      "ja": "4.1. Mtrace2クエリの受信"
    },
    {
      "indent": 3,
      "text": "An Mtrace2 Query message is an Mtrace2 message with no response blocks filled in and uses a TLV Type of 0x01.",
      "ja": "Mtrace2クエリメッセージは、応答ブロックが入力されていないMtrace2メッセージであり、TLVタイプ0x01を使用します。"
    },
    {
      "indent": 0,
      "text": "4.1.1. Query Packet Verification",
      "section_title": true,
      "ja": "4.1.1. クエリパケット検証"
    },
    {
      "indent": 3,
      "text": "Upon receiving an Mtrace2 Query message, a router MUST examine whether the Multicast Address and the Source Address are a valid combination as specified in Section 3.2.1, and whether the Mtrace2 Client Address is a valid IP unicast address. If either one is invalid, the Query MUST be silently ignored.",
      "ja": "Mtrace2クエリメッセージを受信すると、ルーターは、マルチキャストアドレスとソースアドレスがセクション3.2.1で指定された有効な組み合わせであるかどうか、およびMtrace2クライアントアドレスが有効なIPユニキャストアドレスであるかどうかを検査する必要があります。どちらかが無効な場合、クエリは黙って無視されなければなりません（MUST）。"
    },
    {
      "indent": 3,
      "text": "Mtrace2 supports a non-local client to the LHR/RP. A router MUST, however, support a mechanism to drop Queries from clients beyond a specified administrative boundary. The potential approaches are described in Section 9.2.",
      "ja": "Mtrace2は、LHR / RPへの非ローカルクライアントをサポートします。ただし、ルーターは、指定された管理境界を超えてクライアントからクエリを削除するメカニズムをサポートする必要があります。可能なアプローチについては、セクション9.2で説明します。"
    },
    {
      "indent": 3,
      "text": "In the case where a local LHR client is required, the router must then examine the Query to see if it is the proper LHR/RP for the destination address in the packet. It is the proper local LHR if it has a multicast-capable interface on the same subnet as the Mtrace2 Client Address and is the router that would forward traffic from the given (S,G) or (*,G) onto that subnet. It is the proper RP if the multicast group address specified in the Query is 0 and if the IP header destination address is a valid RP address on this router.",
      "ja": "ローカルLHRクライアントが必要な場合、ルーターはクエリを調べて、パケット内の宛先アドレスに適切なLHR / RPであるかどうかを確認する必要があります。 Mtrace2クライアントアドレスと同じサブネット上にマルチキャスト対応インターフェイスがあり、指定された（S、G）または（*、G）からそのサブネットにトラフィックを転送するルーターである場合、これは適切なローカルLHRです。クエリで指定されたマルチキャストグループアドレスが0で、IPヘッダーの宛先アドレスがこのルーターで有効なRPアドレスである場合、これは適切なRPです。"
    },
    {
      "indent": 3,
      "text": "If the router determines that it is not the proper LHR/RP, or it cannot make that determination, it does one of two things depending on whether the Query was received via multicast or unicast. If the Query was received via multicast, then it MUST be silently discarded. If it was received via unicast, the router turns the Query into a Reply message by changing the TLV Type to 0x03 and appending a Standard Response Block with a Forwarding Code of WRONG_LAST_HOP. The rest of the fields in the Standard Response Block MUST be zeroed. The router then sends the Reply message to the Mtrace2 Client Address on the Client Port # as specified in the Mtrace2 Query.",
      "ja": "ルーターが適切なLHR / RPではないと判断した場合、またはその判断ができない場合、ルーターは、クエリがマルチキャストとユニキャストのどちらを介して受信されたかに応じて、2つのことのいずれかを行います。クエリがマルチキャストを介して受信された場合、それは黙って破棄されなければならない（MUST）。ユニキャスト経由で受信された場合、ルーターはTLVタイプを0x03に変更し、WRONG_LAST_HOPの転送コードを含む標準応答ブロックを追加することにより、クエリを応答メッセージに変換します。標準応答ブロックの残りのフィールドはゼロにする必要があります。次に、ルータは、Mtrace2クエリで指定されたクライアントポート番号のMtrace2クライアントアドレスに応答メッセージを送信します。"
    },
    {
      "indent": 3,
      "text": "Duplicate Query messages as identified by the tuple (Mtrace2 Client Address, Query ID) SHOULD be ignored. This MAY be implemented using a cache of previously processed Queries keyed by the Mtrace2 Client Address and Query ID pair. The duration of the cached entries is implementation specific. Duplicate Request messages MUST NOT be ignored in this manner.",
      "ja": "タプル（Mtrace2クライアントアドレス、クエリID）で識別される重複クエリメッセージは無視する必要があります。これは、Mtrace2クライアントアドレスとクエリIDのペアによってキー設定された、以前に処理されたクエリのキャッシュを使用して実装される場合があります。キャッシュされたエントリの期間は実装固有です。この方法では、重複する要求メッセージを無視してはなりません。"
    },
    {
      "indent": 0,
      "text": "4.1.2. Query Normal Processing",
      "section_title": true,
      "ja": "4.1.2. クエリ通常処理"
    },
    {
      "indent": 3,
      "text": "When a router receives an Mtrace2 Query and it determines that it is the proper LHR/RP, it turns the Query to a Request by changing the TLV Type from 0x01 to 0x02, and it performs the steps listed in Section 4.2.",
      "ja": "ルータがMtrace2クエリを受信し、それが適切なLHR / RPであると判断すると、TLVタイプを0x01から0x02に変更してクエリを要求に変換し、セクション4.2にリストされている手順を実行します。"
    },
    {
      "indent": 0,
      "text": "4.2. Receiving an Mtrace2 Request",
      "section_title": true,
      "ja": "4.2. Mtrace2リクエストの受信"
    },
    {
      "indent": 3,
      "text": "An Mtrace2 Request is an Mtrace2 message that uses the TLV Type of 0x02. With the exception of the LHR, whose Request was just converted from a Query, each Request received by a router should have at least one Standard Response Block filled in.",
      "ja": "Mtrace2要求は、TLVタイプ0x02を使用するMtrace2メッセージです。リクエストがクエリから変換されたばかりのLHRを除いて、ルーターが受信した各リクエストには少なくとも1つの標準応答ブロックが入力されている必要があります。"
    },
    {
      "indent": 0,
      "text": "4.2.1. Request Packet Verification",
      "section_title": true,
      "ja": "4.2.1. パケット検証のリクエスト"
    },
    {
      "indent": 3,
      "text": "If the Mtrace2 Request does not come from an adjacent router, or if the Request is not addressed to this router, or if the Request is addressed to a multicast group that is not a link-scoped group (i.e., 224.0.0.0/24 for IPv4 and FFx2::/16 for IPv6 [2]), it MUST be silently ignored. The Generalized TTL Security Mechanism (GTSM) [13] SHOULD be used by the router to determine whether the router is adjacent or not. Source verification specified in Section 9.2 is also considered.",
      "ja": "Mtrace2要求が隣接ルーターから送信されていない場合、または要求がこのルーターにアドレス指定されていない場合、または要求がリンクスコープグループではないマルチキャストグループ（224.0.0.0/24 for IPv4およびFFx2 :: / 16 for IPv6 [2]）、黙って無視する必要があります。一般化されたTTLセキュリティメカニズム（GTSM）[13]は、ルーターが隣接しているかどうかを判断するために使用する必要があります（SHOULD）。セクション9.2で指定されたソース検証も考慮されます。"
    },
    {
      "indent": 3,
      "text": "If the sum of the number of the Standard Response Blocks in the received Mtrace2 Request and the value of the Augmented Response Type of 0x01, if any, is equal or more than the # Hops in the Mtrace2 Request, it MUST be silently ignored.",
      "ja": "受信したMtrace2要求の標準応答ブロックの数と拡張応答タイプ0x01の値（ある場合）の合計がMtrace2要求の＃ホップ以上である場合は、黙って無視する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.2.2. Request Normal Processing",
      "section_title": true,
      "ja": "4.2.2. 通常の処理を要求する"
    },
    {
      "indent": 3,
      "text": "When a router receives an Mtrace2 Request message, it performs the following steps. Note that it is possible to have multiple situations covered by the Forwarding Codes. The first one encountered is the one that is reported, i.e., all \"note Forwarding Code N\" should be interpreted as \"if Forwarding Code is not already set, set Forwarding Code to N\". Note that in the steps described below, the \"Outgoing Interface\" is the one on which the Mtrace2 Request message arrives.",
      "ja": "ルータがMtrace2要求メッセージを受信すると、次の手順を実行します。転送コードの対象となる複数の状況が存在する可能性があることに注意してください。最初に遭遇するのは報告されたものです。つまり、すべての「ノート転送コードN」は「転送コードがまだ設定されていない場合は、転送コードをNに設定する」と解釈する必要があります。以下で説明する手順では、「送信インターフェース」がMtrace2要求メッセージが到着するインターフェースであることに注意してください。"
    },
    {
      "indent": 3,
      "text": "1. Prepare a Standard Response Block to be appended to the packet, setting all fields to an initial default value of zero.",
      "ja": "1. パケットに追加する標準応答ブロックを準備し、すべてのフィールドを初期デフォルト値のゼロに設定します。"
    },
    {
      "indent": 3,
      "text": "2. If Mtrace2 is administratively prohibited, note the Forwarding Code of ADMIN_PROHIB and skip to step 4.",
      "ja": "2. Mtrace2が管理上禁止されている場合は、ADMIN_PROHIBの転送コードをメモして、ステップ4にスキップします。"
    },
    {
      "indent": 3,
      "text": "3. In the Standard Response Block, fill in the Query Arrival Time, Outgoing Interface Address (for IPv4) or Outgoing Interface ID (for IPv6), Output Packet Count, and Fwd TTL (for IPv4).",
      "ja": "3. 標準応答ブロックで、クエリ到着時間、送信インターフェイスアドレス（IPv4の場合）または送信インターフェイスID（IPv6の場合）、出力パケット数、およびFWD TTL（IPv4の場合）を入力します。"
    },
    {
      "indent": 3,
      "text": "4. Attempt to determine the forwarding information for the specified source and group, using the same mechanisms as would be used when a packet is received from the source destined for the group. A state need not be instantiated, it can be a \"phantom\" state created only for the purpose of the trace, such as \"dry-run\".",
      "ja": "4. グループを宛先とするソースからパケットを受信するときに使用されるのと同じメカニズムを使用して、指定されたソースとグループの転送情報を決定しようとします。状態をインスタンス化する必要はありません。「ドライラン」など、トレースの目的でのみ作成される「ファントム」状態にすることができます。"
    },
    {
      "indent": 0,
      "text": " If using a shared-tree protocol and there is no source-specific state, or if no source-specific information is desired (i.e., all ones for IPv4 or an unspecified address (::) for IPv6), group state should be used. If there is no group state or no group-specific information is desired, potential source state (i.e., the path that would be followed for a source-specific \"join\") should be used.",
      "ja": "共有ツリープロトコルを使用していて、ソース固有の状態がない場合、またはソース固有の情報が必要ない場合（つまり、IPv4の場合はすべて1、IPv6の場合は未指定アドレス（：:)）、グループ状態を使用する必要があります。グループ状態がない場合、またはグループ固有の情報が必要ない場合は、潜在的なソース状態（つまり、ソース固有の「結合」のためにたどるパス）を使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "5. If no forwarding information can be determined, the router notes a Forwarding Code of NO_ROUTE, sets the remaining fields that have not yet been filled in to zero, and then sends an Mtrace2 Reply back to the Mtrace2 client.",
      "ja": "5. 転送情報を特定できない場合、ルーターは転送コードNO_ROUTEを記録し、まだ入力されていない残りのフィールドをゼロに設定してから、Mtrace2応答をMtrace2クライアントに送信します。"
    },
    {
      "indent": 3,
      "text": "6. If a Forwarding Code of ADMIN_PROHIB has been set, skip to step 7. Otherwise, fill in the Incoming Interface Address (or Incoming Interface ID and Local Address for IPv6), Upstream Router Address (or Remote Address for IPv6), Input Packet Count, Total Number of Packets, Routing Protocol, S, and Src Mask (or Src Prefix Len for IPv6) using the forwarding information determined in step 4.",
      "ja": "6. 転送コードADMIN_PROHIBが設定されている場合は、手順7にスキップします。それ以外の場合は、着信インターフェイスアドレス（またはIPv6の着信インターフェイスIDとローカルアドレス）、アップストリームルーターアドレス（またはIPv6のリモートアドレス）、入力パケット数を入力します。手順4で決定された転送情報を使用したパケットの総数、ルーティングプロトコル、S、およびSrcマスク（またはIPv6の場合はSrcプレフィックスLen）。"
    },
    {
      "indent": 3,
      "text": "7. If the Outgoing Interface is not enabled for multicast, note Forwarding Code of NO_MULTICAST. If the Outgoing Interface is the interface from which the router would expect data to arrive from the source, note Forwarding Code RPF_IF. If the Outgoing Interface is not one to which the router would forward data from the source or RP to the group, a Forwarding Code of WRONG_IF is noted. In the above three cases, the router will return an Mtrace2 Reply and terminate the trace.",
      "ja": "7. 送信インターフェイスでマルチキャストが有効になっていない場合は、転送コードNO_MULTICASTに注意してください。 Outgoing Interfaceが、ルーターがソースからのデータの到着を期待するインターフェースである場合、Forwarding Code RPF_IFに注意してください。発信インターフェイスが、ルータがソースまたはRPからグループにデータを転送するインターフェイスではない場合、WRONG_IFの転送コードが示されます。上記の3つの場合、ルーターはMtrace2応答を返し、トレースを終了します。"
    },
    {
      "indent": 3,
      "text": "8. If the group is subject to administrative scoping on either the Outgoing or Incoming Interfaces, a Forwarding Code of SCOPED is noted.",
      "ja": "8. グループが送信インターフェイスまたは受信インターフェイスのいずれかで管理スコープの対象となる場合、転送コードSCOPEDが示されます。"
    },
    {
      "indent": 3,
      "text": "9. If this router is the RP for the group for a non-source-specific Query, note a Forwarding Code of REACHED_RP. The router will send an Mtrace2 Reply and terminate the trace.",
      "ja": "9. このルーターが送信元固有でないクエリのグループのRPである場合は、転送コードREACHED_RPに注意してください。ルータはMtrace2応答を送信し、トレースを終了します。"
    },
    {
      "indent": 3,
      "text": "10. If this router is directly connected to the specified source or source network on the Incoming Interface, it sets the Upstream Router Address (for IPv4) or the Remote Address (for IPv6) of the response block to zero. The router will send an Mtrace2 Reply and terminate the trace.",
      "ja": "10. このルーターが受信インターフェイス上の指定された送信元または送信元ネットワークに直接接続されている場合、応答ブロックのアップストリームルーターアドレス（IPv4の場合）またはリモートアドレス（IPv6の場合）をゼロに設定します。ルータはMtrace2応答を送信し、トレースを終了します。"
    },
    {
      "indent": 3,
      "text": "11. If this router has sent a prune upstream that applies to the source and group in the Mtrace2 Request, it notes a Forwarding Code of PRUNE_SENT. If the router has stopped forwarding downstream in response to a prune sent by the downstream router, it notes a Forwarding Code of PRUNE_RCVD. If the router should normally forward traffic downstream for this source and group but is not, it notes a Forwarding Code of NOT_FORWARDING.",
      "ja": "11. このルーターがMtrace2リクエストのソースとグループに適用されるプルーンアップストリームを送信した場合、PRUNE_SENTの転送コードが記録されます。ルーターは、ダウンストリームルーターから送信されたプルーンに応答してダウンストリームの転送を停止した場合、PRUNE_RCVDの転送コードを記録します。ルーターが通常、このソースとグループのダウンストリームトラフィックを転送する必要があるが転送しない場合、転送コードNOT_FORWARDINGが記録されます。"
    },
    {
      "indent": 3,
      "text": "12. If this router is a gateway (e.g., a NAT or firewall) that hides the information between this router and the Mtrace2 client, it notes a Forwarding Code of REACHED_GW. The router continues the processing as described in Section 4.5.",
      "ja": "12. このルーターがこのルーターとMtrace2クライアント間の情報を隠すゲートウェイ（NATやファイアウォールなど）である場合、REACHED_GWの転送コードが記録されます。ルータは、セクション4.5で説明されているように処理を続行します。"
    },
    {
      "indent": 3,
      "text": "13. If the total number of the Standard Response Blocks, including the newly prepared one, and the value of the Augmented Response Type of 0x01, if any, is less than the # Hops in the Request, the packet is then forwarded to the upstream router as described in Section 4.3; otherwise, the packet is sent as an Mtrace2 Reply to the Mtrace2 client as described in Section 4.4.",
      "ja": "13. 新たに準備されたものを含む標準応答ブロックの総数、および0x01の拡張応答タイプの値（ある場合）が要求の＃ホップよりも小さい場合、パケットは次のように上流のルーターに転送されます。セクション4.3で説明。それ以外の場合、セクション4.4で説明されているように、パケットはMtrace2応答としてMtrace2クライアントに送信されます。"
    },
    {
      "indent": 0,
      "text": "4.3. Forwarding Mtrace2 Request",
      "section_title": true,
      "ja": "4.3. Mtrace2リクエストの転送"
    },
    {
      "indent": 3,
      "text": "This section describes how an Mtrace2 Request should be forwarded.",
      "ja": "このセクションでは、Mtrace2要求を転送する方法について説明します。"
    },
    {
      "indent": 0,
      "text": "4.3.1. Destination Address",
      "section_title": true,
      "ja": "4.3.1. 宛先アドレス"
    },
    {
      "indent": 3,
      "text": "If the upstream router for the Mtrace2 Request is known for this Request, the Mtrace2 Request is sent to that router. If the Incoming Interface is known but the upstream router is not, the Mtrace2 Request is sent to an appropriate multicast address on the Incoming Interface. The multicast address SHOULD depend on the multicast routing protocol in use, such as ALL-[protocol]-ROUTERS group. It MUST be a link-scoped group (i.e., 224.0.0.0/24 for IPv4 and FF02::/16 for IPv6) and MUST NOT be the all-systems multicast group (224.0.0.1) for IPv4 and All Nodes Address (FF02::1) for IPv6. It MAY also be the all-routers multicast group (224.0.0.2) for IPv4 or All Routers Address (FF02::2) for IPv6 if the routing protocol in use does not define a more appropriate multicast address.",
      "ja": "Mtrace2要求の上流ルーターがこの要求で認識されている場合、Mtrace2要求がそのルーターに送信されます。着信インターフェイスは既知であるが、上流ルーターが不明の場合、Mtrace2要求は着信インターフェイス上の適切なマルチキャストアドレスに送信されます。マルチキャストアドレスは、ALL- [protocol] -ROUTERSグループなど、使用中のマルチキャストルーティングプロトコルに依存する必要があります（SHOULD）。リンクスコープのグループ（IPv4の場合は224.0.0.0/24、IPv6の場合はFF02 :: / 16）である必要があり、IPv4およびすべてのノードアドレス（FF02の場合）は全システムマルチキャストグループ（224.0.0.1）であってはなりません:: 1）IPv6の場合。また、使用中のルーティングプロトコルがより適切なマルチキャストアドレスを定義していない場合は、IPv4の全ルーターマルチキャストグループ（224.0.0.2）またはIPv6の全ルーターアドレス（FF02 :: 2）にすることもできます。"
    },
    {
      "indent": 0,
      "text": "4.3.2. Source Address",
      "section_title": true,
      "ja": "4.3.2. 送信元アドレス"
    },
    {
      "indent": 3,
      "text": "An Mtrace2 Request should be sent with the address of the Incoming Interface. However, if the Incoming Interface is unnumbered, the router can use one of its numbered interface addresses as the source address.",
      "ja": "Mtrace2要求は、着信インターフェイスのアドレスとともに送信する必要があります。ただし、着信インターフェイスに番号が付いていない場合、ルータは番号付きインターフェイスアドレスの1つを送信元アドレスとして使用できます。"
    },
    {
      "indent": 0,
      "text": "4.3.3. Appending Standard Response Block",
      "section_title": true,
      "ja": "4.3.3. 標準応答ブロックの追加"
    },
    {
      "indent": 3,
      "text": "An Mtrace2 Request MUST be sent upstream towards the source or the RP after appending a Standard Response Block to the end of the received Mtrace2 Request. The Standard Response Block includes the multicast states and statistics information of the router described in Section 3.2.4.",
      "ja": "受信したMtrace2要求の最後に標準応答ブロックを追加した後、Mtrace2要求をソースまたはRPに向けてアップストリームに送信する必要があります。標準応答ブロックには、セクション3.2.4で説明されているルーターのマルチキャスト状態と統計情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "If appending the Standard Response Block would make the Mtrace2 Request packet longer than the MTU of the Incoming Interface, or, in the case of IPv6, longer than 1280 bytes, the router MUST change the Forwarding Code in the last Standard Response Block of the received Mtrace2 Request into NO_SPACE. The router then turns the Request into a Reply and sends the Reply as described in Section 4.4.",
      "ja": "標準応答ブロックを追加すると、Mtrace2要求パケットが着信インターフェイスのMTUよりも長くなるか、IPv6の場合は1280バイトよりも長い場合、ルーターは受信した最後の標準応答ブロックの転送コードを変更する必要があります。 NO_SPACEへのMtrace2リクエスト。次にルーターは、リクエストを返信に変えて、セクション4.4で説明されているように返信を送信します。"
    },
    {
      "indent": 3,
      "text": "The router will continue with a new Request by copying the old Request, excluding all the response blocks, followed by the previously prepared Standard Response Block and an Augmented Response Block with 0x01 as the Augmented Response Type, and the number of the returned Standard Response Blocks as the Value.",
      "ja": "ルーターは、すべての応答ブロックを除く古い要求をコピーして新しい要求を続行します。その後、以前に準備された標準応答ブロックと、拡張応答タイプが0x01の拡張応答ブロック、および返された標準応答ブロックの数が続きます。値として。"
    },
    {
      "indent": 0,
      "text": "4.4. Sending Mtrace2 Reply",
      "section_title": true,
      "ja": "4.4. Mtrace2応答の送信"
    },
    {
      "indent": 3,
      "text": "An Mtrace2 Reply MUST be returned to the client by a router if any of the following conditions occur:",
      "ja": "次の条件のいずれかが発生した場合、ルータからMtrace2応答をクライアントに返さなければなりません（MUST2）。"
    },
    {
      "indent": 3,
      "text": "1. The total number of the traced routers are equal to the # Hops in the Request (including the one just added) plus the number of the returned blocks, if any.",
      "ja": "1. トレースされたルーターの総数は、リクエストの＃ホップ（追加されたものを含む）に、返されたブロックがある場合はその数を足したものに等しくなります。"
    },
    {
      "indent": 3,
      "text": "2. Appending the Standard Response Block would make the Mtrace2 Request packet longer than the MTU of the Incoming Interface. (In case of IPv6, not more than 1280 bytes; see Section 4.3.3 for additional details on the handling of this case.)",
      "ja": "2. 標準応答ブロックを追加すると、Mtrace2要求パケットが着信インターフェイスのMTUよりも長くなります。 （IPv6の場合、1280バイト以下。このケースの処理の詳細については、セクション4.3.3を参照してください。）"
    },
    {
      "indent": 3,
      "text": "3. The Request has reached the RP for a non-source-specific Query or has reached the first-hop router for a source-specific Query (see Section 4.2.2, items 9 and 10, for additional details).",
      "ja": "3. リクエストがソース固有でないクエリのRPに到達したか、ソース固有のクエリのファーストホップルータに到達しました（詳細については、セクション4.2.2、アイテム9および10を参照してください）。"
    },
    {
      "indent": 0,
      "text": "4.4.1. Destination Address",
      "section_title": true,
      "ja": "4.4.1. 宛先アドレス"
    },
    {
      "indent": 3,
      "text": "An Mtrace2 Reply MUST be sent to the address specified in the Mtrace2 Client Address field in the Mtrace2 Request.",
      "ja": "Mtrace2応答は、Mtrace2要求のMtrace2クライアントアドレスフィールドで指定されたアドレスに送信する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.4.2. Source Address",
      "section_title": true,
      "ja": "4.4.2. 送信元アドレス"
    },
    {
      "indent": 3,
      "text": "An Mtrace2 Reply SHOULD be sent with the address of the router's Outgoing Interface. However, if the Outgoing Interface address is unnumbered, the router can use one of its numbered interface addresses as the source address.",
      "ja": "Mtrace2応答は、ルーターの送信インターフェイスのアドレスとともに送信する必要があります（SHOULD）。ただし、発信インターフェイスアドレスが番号付けされていない場合、ルータは番号付けされたインターフェイスアドレスの1つを送信元アドレスとして使用できます。"
    },
    {
      "indent": 0,
      "text": "4.4.3. Appending Standard Response Block",
      "section_title": true,
      "ja": "4.4.3. 標準応答ブロックの追加"
    },
    {
      "indent": 3,
      "text": "An Mtrace2 Reply MUST be sent with the prepared Standard Response Block appended at the end of the received Mtrace2 Request except in the case of NO_SPACE Forwarding Code.",
      "ja": "NO_SPACE転送コードの場合を除いて、受信したMtrace2要求の最後に、準備された標準応答ブロックを付加してMtrace2応答を送信する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.5. Proxying Mtrace2 Query",
      "section_title": true,
      "ja": "4.5. Mtrace2クエリのプロキシ"
    },
    {
      "indent": 3,
      "text": "When a gateway (e.g., a NAT or firewall), which needs to block unicast packets to the Mtrace2 client, or hide information between the gateway and the Mtrace2 client, receives an Mtrace2 Query from an adjacent host or Mtrace2 Request from an adjacent router, it appends a Standard Response Block with REACHED_GW as the Forwarding Code. It turns the Query or Request into a Reply and sends the Reply back to the client.",
      "ja": "Mtrace2クライアントへのユニキャストパケットをブロックする、またはゲートウェイとMtrace2クライアント間の情報を非表示にする必要があるゲートウェイ（NATやファイアウォールなど）が、隣接ホストからのMtrace2クエリまたは隣接ルーターからのMtrace2要求を受信すると、転送コードとしてREACHED_GWを使用して標準応答ブロックを追加します。クエリまたはリクエストを返信に変え、返信をクライアントに送り返します。"
    },
    {
      "indent": 3,
      "text": "At the same time, the gateway originates a new Mtrace2 Query message by copying the original Mtrace2 header (the Query or Request without any of the response blocks) and making the following changes:",
      "ja": "同時に、ゲートウェイは、元のMtrace2ヘッダー（応答ブロックのないQueryまたはRequest）をコピーして次の変更を行うことにより、新しいMtrace2 Queryメッセージを発信します。"
    },
    {
      "indent": 3,
      "text": "o setting the RPF interface's address as the Mtrace2 Client Address;",
      "ja": "o RPFインターフェイスのアドレスをMtrace2クライアントアドレスとして設定します。"
    },
    {
      "indent": 3,
      "text": "o using its own port number as the Client Port #; and,",
      "ja": "o 独自のポート番号をクライアントポート番号として使用します。そして、"
    },
    {
      "indent": 3,
      "text": "o decreasing # Hops by ((number of the Standard Response Blocks that were just returned in a Reply) - 1). The \"- 1\" in this expression accounts for the additional Standard Response Block appended by the gateway router.",
      "ja": "o ＃ホップを（（応答で返された標準応答ブロックの数）-1）だけ減らします。この式の「-1」は、ゲートウェイルーターによって追加された追加の標準応答ブロックを表します。"
    },
    {
      "indent": 3,
      "text": "The new Mtrace2 Query message is then sent to the upstream router or to an appropriate multicast address on the RPF interface.",
      "ja": "次に、新しいMtrace2クエリメッセージが上流のルーターまたはRPFインターフェイスの適切なマルチキャストアドレスに送信されます。"
    },
    {
      "indent": 3,
      "text": "When the gateway receives an Mtrace2 Reply whose Query ID matches the one in the original Mtrace2 header, it MUST relay the Mtrace2 Reply back to the Mtrace2 client by replacing the Reply's header with the original Mtrace2 header. If the gateway does not receive the corresponding Mtrace2 Reply within the [Mtrace Reply Timeout] period (see Section 5.8.4), then it silently discards the original Mtrace2 Query or Request message and terminates the trace.",
      "ja": "ゲートウェイが、元のMtrace2ヘッダーのクエリIDと一致するクエリIDを持つMtrace2返信を受信した場合、返信のヘッダーを元のMtrace2ヘッダーに置き換えることにより、Mtrace2返信をMtrace2クライアントに中継する必要があります。ゲートウェイが[Mtrace Reply Timeout]期間（セクション5.8.4を参照）内に対応するMtrace2 Replyを受信しない場合、元のMtrace2クエリまたはリクエストメッセージを静かに破棄し、トレースを終了します。"
    },
    {
      "indent": 0,
      "text": "4.6. Hiding Information",
      "section_title": true,
      "ja": "4.6. 情報を隠す"
    },
    {
      "indent": 3,
      "text": "Information about a domain's topology and connectivity may be hidden from Mtrace2 Requests. The Forwarding Code of INFO_HIDDEN may be used to note that. For example, the Incoming Interface address and packet count on the ingress router of a domain, and the Outgoing Interface address and packet count on the egress router of the domain, can be specified as all ones. Additionally, the source-group packet count (see Sections 3.2.4 and 3.2.5) within the domain may be all ones if it is hidden.",
      "ja": "ドメインのトポロジーと接続性に関する情報は、Mtrace2要求から隠される場合があります。 INFO_HIDDENの転送コードを使用して、これに注意することができます。たとえば、ドメインの入力ルーターの受信インターフェイスアドレスとパケット数、およびドメインの出力ルーターの送信インターフェイスアドレスとパケット数は、すべて1として指定できます。さらに、ドメイン内の送信元グループパケット数（セクション3.2.4および3.2.5を参照）が非表示の場合、すべて1になることがあります。"
    },
    {
      "indent": 0,
      "text": "5. Client Behavior",
      "section_title": true,
      "ja": "5. クライアントの動作"
    },
    {
      "indent": 3,
      "text": "This section describes the behavior of an Mtrace2 client in detail.",
      "ja": "このセクションでは、Mtrace2クライアントの動作について詳しく説明します。"
    },
    {
      "indent": 0,
      "text": "5.1. Sending Mtrace2 Query",
      "section_title": true,
      "ja": "5.1. Mtrace2クエリの送信"
    },
    {
      "indent": 3,
      "text": "An Mtrace2 client initiates an Mtrace2 Query by sending the Query to the LHR of interest.",
      "ja": "Mtrace2クライアントは、対象のLHRにクエリを送信することにより、Mtrace2クエリを開始します。"
    },
    {
      "indent": 0,
      "text": "5.1.1. Destination Address",
      "section_title": true,
      "ja": "5.1.1. 宛先アドレス"
    },
    {
      "indent": 3,
      "text": "If an Mtrace2 client knows the proper LHR, it unicasts an Mtrace2 Query packet to that router; otherwise, it MAY send the Mtrace2 Query packet to the all-routers multicast group (224.0.0.2) for IPv4 or All Routers Address (FF02::2) for IPv6. This will ensure that the packet is received by the LHR on the subnet.",
      "ja": "Mtrace2クライアントが適切なLHRを知っている場合、Mtrace2クエリパケットをそのルーターにユニキャストします。それ以外の場合は、Mtrace2クエリパケットをIPv4の全ルーターマルチキャストグループ（224.0.0.2）またはIPv6の全ルーターアドレス（FF02 :: 2）に送信する場合があります。これにより、パケットがサブネット上のLHRによって確実に受信されます。"
    },
    {
      "indent": 3,
      "text": "See also Section 5.4 on determining the LHR.",
      "ja": "LHRの決定については、セクション5.4も参照してください。"
    },
    {
      "indent": 0,
      "text": "5.1.2. Source Address",
      "section_title": true,
      "ja": "5.1.2. 送信元アドレス"
    },
    {
      "indent": 3,
      "text": "An Mtrace2 Query MUST be sent with the client's interface address, which is the Mtrace2 Client Address.",
      "ja": "Mtrace2クエリは、Mtrace2クライアントアドレスであるクライアントのインターフェイスアドレスを使用して送信する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.2. Determining the Path",
      "section_title": true,
      "ja": "5.2. パスの決定"
    },
    {
      "indent": 3,
      "text": "An Mtrace2 client could send an initial Query message with a large # Hops, in order to try to trace the full path. If this attempt fails, one strategy is to perform a linear search (as the traditional unicast traceroute program does); set the # Hops field to 1 and try to get a Reply, then 2, and so on. If no Reply is received at a certain hop, this hop is identified as the probable cause of forwarding failures on the path. Nevertheless, the sender may attempt to continue tracing past the non-responding hop by further increasing the hop count in the hope that further hops may respond. Each of these attempts MUST NOT be initiated before the previous attempt has terminated either because of successful reception of a Reply or because the [Mtrace Reply Timeout] timeout has occurred.",
      "ja": "Mtrace2クライアントは、フルパスを追跡するために、大きな＃ホップを含む最初のクエリメッセージを送信できます。この試みが失敗した場合の1つの戦略は、（従来のユニキャストtracerouteプログラムと同様に）線形検索を実行することです。 ＃Hopsフィールドを1に設定し、返信を取得してから2を取得します。特定のホップで応答が受信されない場合、このホップは、パス上の転送エラーの推定原因として識別されます。それにもかかわらず、送信者は、さらにホップが応答することを期待してホップカウントをさらに増やすことにより、応答しないホップを超えて追跡を継続しようとする場合があります。応答の受信が成功したため、または[Mtrace Reply Timeout]タイムアウトが発生したため、前の試行が終了する前に、これらの試行を開始してはなりません（MUST NOT）。"
    },
    {
      "indent": 3,
      "text": "See also Section 5.6 on receiving the results of a trace.",
      "ja": "トレース結果の受信については、5.6項も参照してください。"
    },
    {
      "indent": 0,
      "text": "5.3. Collecting Statistics",
      "section_title": true,
      "ja": "5.3. 統計の収集"
    },
    {
      "indent": 3,
      "text": "After a client has determined that it has traced the whole path or as much as it can expect to (see Section 5.8), it might collect statistics by waiting a short time and performing a second trace. If the path is the same in the two traces, statistics can be displayed as described in Sections 7.3 and 7.4.",
      "ja": "クライアントがパス全体または予想できる範囲までトレースしたと判断した後（セクション5.8を参照）、短時間待機して2番目のトレースを実行することにより、統計を収集する場合があります。 2つのトレースでパスが同じ場合、セクション7.3および7.4で説明されているように統計を表示できます。"
    },
    {
      "indent": 0,
      "text": "5.4. Last-Hop Router (LHR)",
      "section_title": true,
      "ja": "5.4. ラストホップルーター（LHR）"
    },
    {
      "indent": 3,
      "text": "The Mtrace2 client may not know which is the last-hop router, or that router may be behind a firewall that blocks unicast packets but passes multicast packets. In these cases, the Mtrace2 Request should be multicasted to the all-routers multicast group (224.0.0.2) for IPv4 or All Routers Address (FF02::2) for IPv6. All routers except the correct last-hop router SHOULD ignore any Mtrace2 Request received via multicast.",
      "ja": "Mtrace2クライアントは、どちらが最後のホップのルーターであるかを認識していないか、そのルーターがユニキャストパケットをブロックするがマルチキャストパケットを通過させるファイアウォールの背後にある可能性があります。これらの場合、Mtrace2要求は、IPv4の場合はすべてのルーターのマルチキャストグループ（224.0.0.2）に、IPv6の場合はすべてのルーターアドレス（FF02 :: 2）にマルチキャストする必要があります。正しいラストホップルータを除くすべてのルータは、マルチキャストを介して受信されたMtrace2要求を無視する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.5. First-Hop Router (FHR)",
      "section_title": true,
      "ja": "5.5. ファーストホップルーター（FHR）"
    },
    {
      "indent": 3,
      "text": "The IANA assigned 224.0.1.32 as the default multicast group for old IPv4 mtrace (v1) responses, in order to support mtrace clients that are not unicast reachable from the first-hop router. Mtrace2, however, does not require any IPv4/IPv6 multicast addresses for the Mtrace2 Replies. Every Mtrace2 Reply is sent to the unicast address specified in the Mtrace2 Client Address field of the Mtrace2 Reply.",
      "ja": "IANAは、最初のホップのルーターからユニキャストで到達できないmtraceクライアントをサポートするために、古いIPv4 mtrace（v1）応答のデフォルトマルチキャストグループとして224.0.1.32を割り当てました。ただし、Mtrace2は、Mtrace2応答にIPv4 / IPv6マルチキャストアドレスを必要としません。すべてのMtrace2応答は、Mtrace2応答のMtrace2クライアントアドレスフィールドで指定されたユニキャストアドレスに送信されます。"
    },
    {
      "indent": 0,
      "text": "5.6. Broken Intermediate Router",
      "section_title": true,
      "ja": "5.6. 壊れた中間ルーター"
    },
    {
      "indent": 3,
      "text": "A broken intermediate router might simply not understand Mtrace2 packets and drop them. The Mtrace2 client will get no Reply at all as a result. It should then perform a hop-by-hop search by setting the # Hops field until it gets an Mtrace2 Reply. The client may use linear or binary search; however, the latter is likely to be slower because a failure requires waiting for the [Mtrace Reply Timeout] period.",
      "ja": "壊れた中間ルーターは、単にMtrace2パケットを理解せず、それらをドロップする可能性があります。結果として、Mtrace2クライアントは応答をまったく受け取りません。次に、Mtrace2応答を取得するまで＃Hopsフィールドを設定して、ホップバイホップ検索を実行する必要があります。クライアントは線形またはバイナリ検索を使用できます。ただし、障害は[Mtrace応答タイムアウト]期間待機する必要があるため、後者の方が遅くなる可能性があります。"
    },
    {
      "indent": 0,
      "text": "5.7. Non-supported Router",
      "section_title": true,
      "ja": "5.7. サポートされていないルーター"
    },
    {
      "indent": 3,
      "text": "When a non-supported router receives an Mtrace2 Query or Request message whose destination address is a multicast address, the router will silently discard the message.",
      "ja": "サポートされていないルーターが、宛先アドレスがマルチキャストアドレスであるMtrace2クエリまたはリクエストメッセージを受信すると、ルーターはメッセージを通知せずに破棄します。"
    },
    {
      "indent": 3,
      "text": "When the router receives an Mtrace2 Query that is destined to itself, the router returns an Internet Control Message Protocol (ICMP) port unreachable to the Mtrace2 client. On the other hand, when the router receives an Mtrace2 Request that is destined to itself, the router returns an ICMP port unreachable to its adjacent router from which the Request receives. Therefore, the Mtrace2 client needs to terminate the trace when the [Mtrace Reply Timeout] timeout has occurred, and it may then issue another Query with a lower number of # Hops.",
      "ja": "ルーターが自分宛てのMtrace2クエリを受信すると、ルーターはMtrace2クライアントに到達できないインターネット制御メッセージプロトコル（ICMP）ポートを返します。一方、ルータが自分宛てのMtrace2要求を受信すると、ルータは、要求の受信元である隣接ルータに到達できないICMPポートを返します。したがって、Mtrace2クライアントは、[Mtrace Reply Timeout]タイムアウトが発生したときにトレースを終了する必要があり、＃ホップの数が少ない別のクエリを発行する場合があります。"
    },
    {
      "indent": 0,
      "text": "5.8. Mtrace2 Termination",
      "section_title": true,
      "ja": "5.8. Mtrace2終了"
    },
    {
      "indent": 3,
      "text": "When performing an expanding hop-by-hop trace, it is necessary to determine when to stop expanding.",
      "ja": "拡張ホップバイホップトレースを実行する場合、拡張を停止するタイミングを決定する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.8.1. Arriving at Source",
      "section_title": true,
      "ja": "5.8.1. ソースに到着"
    },
    {
      "indent": 3,
      "text": "A trace can be determined to have arrived at the source if the Incoming Interface of the last router in the trace is non-zero, but the upstream router is zero.",
      "ja": "トレースの最後のルーターの受信インターフェイスがゼロ以外で、上流のルーターがゼロの場合、トレースはソースに到着したと判断できます。"
    },
    {
      "indent": 0,
      "text": "5.8.2. Fatal Error",
      "section_title": true,
      "ja": "5.8.2. 致命的な誤り"
    },
    {
      "indent": 3,
      "text": "A trace has encountered a fatal error if the last Forwarding Error in the trace has the 0x80 bit set.",
      "ja": "トレースの最後の転送エラーに0x80ビットが設定されている場合、トレースで致命的なエラーが発生しました。"
    },
    {
      "indent": 0,
      "text": "5.8.3. No Upstream Router",
      "section_title": true,
      "ja": "5.8.3. アップストリームルーターなし"
    },
    {
      "indent": 3,
      "text": "A trace cannot continue if the last upstream router in the trace is set to 0.",
      "ja": "トレースの最後の上流ルーターが0に設定されている場合、トレースは続行できません。"
    },
    {
      "indent": 0,
      "text": "5.8.4. Reply Timeout",
      "section_title": true,
      "ja": "5.8.4. 返信タイムアウト"
    },
    {
      "indent": 3,
      "text": "This document defines the [Mtrace Reply Timeout] value, which is used to time out an Mtrace2 Reply as seen in Sections 4.5, 5.2, and 5.7. The default [Mtrace Reply Timeout] value is 10 (seconds) and can be manually changed on the Mtrace2 client and routers.",
      "ja": "このドキュメントでは、[Mtrace Reply Timeout]値を定義します。この値は、セクション4.5、5.2、および5.7にあるように、Mtrace2 Replyをタイムアウトにするために使用されます。デフォルトの[Mtrace Reply Timeout]の値は10（秒）で、Mtrace2クライアントとルーターで手動で変更できます。"
    },
    {
      "indent": 0,
      "text": "5.9. Continuing after an Error",
      "section_title": true,
      "ja": "5.9. エラー後の続行"
    },
    {
      "indent": 3,
      "text": "When the NO_SPACE error occurs, as described in Section 4.2, a router will send back an Mtrace2 Reply to the Mtrace2 client and continue with a new Request (see Section 4.3.3). In this case, the Mtrace2 client may receive multiple Mtrace2 Replies from different routers along the path. When this happens, the client MUST treat them as a single Mtrace2 Reply message by collating the Augmented Response Blocks of subsequent Replies sharing the same Query ID, sequencing each cluster of Augmented Response Blocks based on the order in which they are received.",
      "ja": "セクション4.2で説明されているように、NO_SPACEエラーが発生すると、ルーターはMtrace2応答をMtrace2クライアントに送り返し、新しいリクエストを続行します（セクション4.3.3を参照）。この場合、Mtrace2クライアントは、パスに沿って異なるルーターから複数のMtrace2応答を受信することがあります。これが発生した場合、クライアントは、同じクエリIDを共有する後続の返信の拡張応答ブロックを照合し、受信した順序に基づいて拡張応答ブロックの各クラスターを順序付けすることにより、それらを単一のMtrace2応答メッセージとして扱う必要があります。"
    },
    {
      "indent": 3,
      "text": "If a trace times out, it is very likely that a router in the middle of the path does not support Mtrace2. That router's address will be in the Upstream Router field of the last Standard Response Block in the last received Reply. A client may be able to determine a list of neighbors of the non-responding router (e.g., by using the Simple Network Management Protocol (SNMP) [12] [14]). The neighbors obtained in this way could then be probed (via the multicast MIB [14]) to determine which one is the upstream neighbor (i.e., an RPF",
      "ja": "トレースがタイムアウトした場合は、パスの途中にあるルーターがMtrace2をサポートしていない可能性があります。そのルーターのアドレスは、最後に受信した応答の最後の標準応答ブロックの上流ルーターフィールドにあります。クライアントは、（たとえば、簡易ネットワーク管理プロトコル（SNMP）[12] [14]を使用して）非応答ルーターのネイバーのリストを決定できる場合があります。この方法で取得されたネイバーは、（マルチキャストMIB [14]を介して）プローブされ、アップストリームネイバー（つまり、RPF）"
    },
    {
      "indent": 3,
      "text": "neighbor) of the non-responding router. This algorithm can identify the upstream neighbor because, even though there may be multiple neighbors, the non-responding router should only have sent a \"join\" to the one neighbor corresponding to its selected RPF path. Because of this, only the RPF neighbor should contain the non-responding router as a multicast next hop in its MIB output list for the affected multicast route.",
      "ja": "応答しないルータのネイバー）。複数のネイバーが存在する場合でも、応答しないルータは選択したRPFパスに対応する1つのネイバーに「join」を送信するだけなので、このアルゴリズムはアップストリームネイバーを識別できます。このため、RPFネイバーのみが、影響を受けるマルチキャストルートのMIB出力リストに、マルチキャストネクストホップとして非応答ルータを含める必要があります。"
    },
    {
      "indent": 0,
      "text": "6. Protocol-Specific Considerations",
      "section_title": true,
      "ja": "6. プロトコル固有の考慮事項"
    },
    {
      "indent": 3,
      "text": "This section describes the Mtrace2 behavior with the presence of different multicast protocols.",
      "ja": "このセクションでは、さまざまなマルチキャストプロトコルが存在する場合のMtrace2の動作について説明します。"
    },
    {
      "indent": 0,
      "text": "6.1. PIM-SM",
      "section_title": true,
      "ja": "6.1. PIT-CM"
    },
    {
      "indent": 3,
      "text": "When an Mtrace2 reaches a PIM-SM RP, and the RP does not forward the trace on, it means that the RP has not performed a source-specific join, so there is no more state to trace. However, the path that traffic would use if the RP did perform a source-specific join can be traced by setting the trace destination to the RP, the trace source to the traffic source, and the trace group to 0. This Mtrace2 Query may be unicasted to the RP, and the RP takes the same actions as an LHR.",
      "ja": "Mtrace2がPIM-SM RPに到達し、RPがトレースを転送しない場合は、RPがソース固有の結合を実行していないため、トレースする状態がないことを意味します。ただし、RPがソース固有の結合を実行した場合にトラフィックが使用するパスは、トレースの宛先をRPに、トレースソースをトラフィックソースに、トレースグループを0に設定することでトレースできます。このMtrace2クエリは、 RPにユニキャストされ、RPはLHRと同じアクションを実行します。"
    },
    {
      "indent": 0,
      "text": "6.2. Bidirectional PIM",
      "section_title": true,
      "ja": "6.2. 双方向PIM"
    },
    {
      "indent": 3,
      "text": "Bidirectional PIM [4] is a variant of PIM-SM that builds bidirectional shared trees that connect multicast sources and receivers. Along the bidirectional shared trees, multicast data is natively forwarded from the sources to the Rendezvous Point Link (RPL), and from which, to receivers without requiring source-specific state. In contrast to PIM-SM, Bidirectional PIM always has the state to trace.",
      "ja": "双方向PIM [4]は、マルチキャストソースとレシーバを接続する双方向共有ツリーを構築するPIM-SMのバリアントです。双方向の共有ツリーに沿って、マルチキャストデータはソースからRendezvous Point Link（RPL）にネイティブに転送され、そこからソース固有の状態を必要とせずにレシーバーに転送されます。 PIM-SMとは対照的に、双方向PIMには常にトレースする状態があります。"
    },
    {
      "indent": 3,
      "text": "A Designated Forwarder (DF) for a given Rendezvous Point Address (RPA) is in charge of forwarding downstream traffic onto its link and forwarding upstream traffic from its link towards the RPL that the RPA belongs to. Hence, Mtrace2 Reply reports DF addresses or RPA along the path.",
      "ja": "特定のランデブーポイントアドレス（RPA）の指定フォワーダー（DF）は、ダウンリンクトラフィックをそのリンクに転送し、アップストリームトラフィックをそのリンクからRPAが属するRPLに転送することを担当します。したがって、Mtrace2 Replyは、パスに沿ってDFアドレスまたはRPAを報告します。"
    },
    {
      "indent": 0,
      "text": "6.3. PIM-DM",
      "section_title": true,
      "ja": "6.3. PIM-DM"
    },
    {
      "indent": 0,
      "text": " Routers running PIM - Dense Mode (PIM-DM) [11] do not know the path packets would take unless traffic is flowing. Without some extra protocol mechanism, this means that in an environment with multiple possible paths with branch points on shared media, Mtrace2 can only trace existing paths, not potential paths. When there are multiple possible paths but the branch points are not on shared media, the upstream router is known, but the LHR may not know that it is the appropriate last hop.",
      "ja": "PIM-高密度モード（PIM-DM）[11]を実行しているルーターは、トラフィックが流れていなければ、パケットがたどる経路を知りません。余分なプロトコルメカニズムがない場合、これは、共有メディア上の分岐点を持つ複数の可能なパスがある環境では、Mtrace2は既存のパスのみをトレースでき、潜在的なパスはトレースできないことを意味します。複数の可能なパスがあるが、分岐点が共有メディア上にない場合、上流のルーターは既知ですが、LHRはそれが適切な最終ホップであることを認識していない場合があります。"
    },
    {
      "indent": 3,
      "text": "When traffic is flowing, PIM-DM routers know whether or not they are the LHR for the link (because they won or lost an Assert battle) and know who the upstream router is (because it won an Assert battle). Therefore, Mtrace2 is always able to follow the proper path when traffic is flowing.",
      "ja": "トラフィックが流れているとき、PIM-DMルーターは、それらがリンクのLHRであるかどうか（アサートの戦いで勝ったか負けたため）と上流のルーターがだれであるか（アサートの戦いで勝ったため）を認識します。したがって、Mtrace2は常に、トラフィックが流れているときに適切なパスをたどることができます。"
    },
    {
      "indent": 0,
      "text": "6.4. IGMP/MLD Proxy",
      "section_title": true,
      "ja": "6.4. IGMP / MLDプロキシ"
    },
    {
      "indent": 3,
      "text": "When an IGMP or Multicast Listener Discovery (MLD) Proxy [3] receives an Mtrace2 Query packet on an Incoming Interface, it notes a WRONG_IF in the Forwarding Code of the last Standard Response Block (see Section 3.2.4) and sends the Mtrace2 Reply back to the Mtrace2 client. On the other hand, when an Mtrace2 Query packet reaches an Outgoing Interface of the IGMP/MLD proxy, it is forwarded onto its Incoming Interface towards the upstream router.",
      "ja": "IGMPまたはマルチキャストリスナーディスカバリ（MLD）プロキシ[3]が受信インターフェイスでMtrace2クエリパケットを受信すると、最後の標準応答ブロック（セクション3.2.4を参照）の転送コードにWRONG_IFを記録し、Mtrace2応答を送信します。 Mtrace2クライアントに戻ります。一方、Mtrace2クエリパケットがIGMP / MLDプロキシの送信インターフェイスに到達すると、アップストリームルータに向かう受信インターフェイスに転送されます。"
    },
    {
      "indent": 0,
      "text": "7. Problem Diagnosis",
      "section_title": true,
      "ja": "7. 問題の診断"
    },
    {
      "indent": 3,
      "text": "This section describes different scenarios in which Mtrace2 can be used to diagnose the multicast problems.",
      "ja": "このセクションでは、Mtrace2を使用してマルチキャストの問題を診断できるさまざまなシナリオについて説明します。"
    },
    {
      "indent": 0,
      "text": "7.1. Forwarding Inconsistencies",
      "section_title": true,
      "ja": "7.1. 不整合の転送"
    },
    {
      "indent": 3,
      "text": "The Forwarding Error code can tell if a group is unexpectedly pruned or administratively scoped.",
      "ja": "転送エラーコードは、グループが予期せずに整理されているか、管理上スコープが設定されているかどうかを通知します。"
    },
    {
      "indent": 0,
      "text": "7.2. TTL or Hop-Limit Problems",
      "section_title": true,
      "ja": "7.2. TTLまたはホップ制限の問題"
    },
    {
      "indent": 3,
      "text": "By taking the maximum of hops from the source and forwarding the TTL threshold over all hops, it is possible to discover the TTL or hop limit required for the source to reach the destination.",
      "ja": "ソースから最大のホップを取得し、すべてのホップでTTLしきい値を転送することにより、ソースが宛先に到達するために必要なTTLまたはホップ制限を検出できます。"
    },
    {
      "indent": 0,
      "text": "7.3. Packet Loss",
      "section_title": true,
      "ja": "7.3. パケットロス"
    },
    {
      "indent": 0,
      "text": " By taking multiple traces, it is possible to find packet-loss information by tracking the difference between the output packet count for the specified source-group address pair at a given upstream router and the input packet count on the next-hop downstream router. On a point-to-point link, any steadily increasing difference in these counts implies packet loss. Although the packet counts will differ due to Mtrace2 Request propagation delay, the difference should remain essentially constant (except for jitter caused by differences in propagation time among the trace iterations). However, this difference will display a steady increase if packet loss is occurring. On a shared link, the count of input packets can be larger than the number of output packets at the previous hop, due to other routers or hosts on the link injecting packets. This appears as \"negative loss\", which may mask real packet loss.",
      "ja": "複数のトレースを取得することにより、特定のアップストリームルータの指定されたソースグループアドレスペアの出力パケット数とネクストホップダウンストリームルータの入力パケット数の差を追跡することにより、パケット損失情報を見つけることができます。ポイントツーポイントリンクでは、これらのカウントの着実に増加する差異は、パケット損失を意味します。パケット数はMtrace2要求の伝播遅延のために異なりますが、その違いは本質的に一定である必要があります（トレースの反復間の伝播時間の違いによって引き起こされるジッターを除く）。ただし、パケット損失が発生している場合、この差は着実に増加します。共有リンクでは、リンク上の他のルーターまたはホストがパケットを注入しているため、入力パケットの数は、前のホップでの出力パケットの数よりも大きくなる可能性があります。これは「負の損失」として表示され、実際のパケット損失を隠す場合があります。"
    },
    {
      "indent": 3,
      "text": "In addition to the counts of input and output packets for all multicast traffic on the interfaces, the Standard Response Block includes a count of the packets forwarded by a node for the specified source-group pair. Taking the difference in this count between two traces and then comparing those differences between two hops gives a measure of packet loss just for traffic from the specified source to the specified receiver via the specified group. This measure is not affected by shared links.",
      "ja": "インターフェイス上のすべてのマルチキャストトラフィックの入力パケットと出力パケットのカウントに加えて、標準応答ブロックには、指定されたソースグループペアのノードによって転送されたパケットのカウントが含まれます。 2つのトレース間のこのカウントの違いを取り、2つのホップ間の違いを比較すると、指定されたソースから指定されたグループを経由して指定されたレシーバーへのトラフィックのみのパケット損失の測定値が得られます。この対策は共有リンクの影響を受けません。"
    },
    {
      "indent": 3,
      "text": "On a point-to-point link that is a multicast tunnel, packet loss is usually due to congestion in unicast routers along the path of that tunnel. On native multicast links, loss is more likely in the output queue of one hop, perhaps due to priority dropping, or in the input queue at the next hop. The counters in the Standard Response Block do not allow these cases to be distinguished. Differences in packet counts between the Incoming and Outgoing Interfaces on one node cannot generally be used to measure queue overflow in the node.",
      "ja": "マルチキャストトンネルであるポイントツーポイントリンクでは、パケット損失は通常、そのトンネルのパスに沿ったユニキャストルーターの輻輳が原因です。ネイティブマルチキャストリンクでは、おそらく優先順位のドロップが原因で、1ホップの出力キュー、または次のホップの入力キューで損失が発生する可能性が高くなります。標準応答ブロックのカウンターでは、これらのケースを区別できません。 1つのノードの受信インターフェイスと送信インターフェイス間のパケット数の違いは、通常、ノードのキューオーバーフローの測定には使用できません。"
    },
    {
      "indent": 0,
      "text": "7.4. Link Utilization",
      "section_title": true,
      "ja": "7.4. リンク使用率"
    },
    {
      "indent": 3,
      "text": "Again, with two traces, you can divide the difference in the input or output packet counts at some hop by the difference in timestamps from the same hop to obtain the packet rate over the link. If the average packet size is known, then the link utilization can also be estimated to see whether packet loss may be due to the rate limit or the physical capacity on a particular link being exceeded.",
      "ja": "ここでも、2つのトレースを使用して、あるホップでの入力または出力パケットカウントの差を同じホップからのタイムスタンプの差で除算して、リンク上のパケットレートを取得できます。平均パケットサイズがわかっている場合は、リンク使用率を推定して、パケット損失の原因がレート制限にあるのか、特定のリンクの物理容量を超えているのかを確認できます。"
    },
    {
      "indent": 0,
      "text": "7.5. Time Delay",
      "section_title": true,
      "ja": "7.5. 時間遅延"
    },
    {
      "indent": 3,
      "text": "If the routers have synchronized clocks, it is possible to estimate propagation and queuing delay from the differences between the timestamps at successive hops. However, this delay includes control processing overhead, so is not necessarily indicative of the delay that data traffic would experience.",
      "ja": "ルータのクロックが同期している場合は、連続するホップでのタイムスタンプ間の差から伝播とキューイングの遅延を推定できます。ただし、この遅延には制御処理のオーバーヘッドが含まれるため、データトラフィックで発生する遅延を必ずしも示しているわけではありません。"
    },
    {
      "indent": 0,
      "text": "8. IANA Considerations",
      "section_title": true,
      "ja": "8. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The following registries have been created and are maintained under the \"Specification Required\" registry policy as specified in [6].",
      "ja": "次のレジストリが作成され、[6]で指定されている「Specification Required」レジストリポリシーの下で維持されます。"
    },
    {
      "indent": 0,
      "text": "8.1. \"Mtrace2 Forwarding Codes\" Registry",
      "section_title": true,
      "ja": "8.1. 「Mtrace2 Forwarding Codes」レジストリ"
    },
    {
      "indent": 3,
      "text": "This registry holds integers in the range 0-255. Assignment of a Forwarding Code requires specification of a value and a name for the Forwarding Code. Initial values for the Forwarding Codes are given in the table at the end of Section 3.2.4. Additional values (specific to IPv6) may also be specified at the end of Section 3.2.5. Any additions to this registry are required to fully describe the conditions under which the new Forwarding Code is used.",
      "ja": "このレジストリは、0〜255の範囲の整数を保持します。転送コードを割り当てるには、転送コードの値と名前を指定する必要があります。転送コードの初期値は、セクション3.2.4の最後の表に記載されています。追加の値（IPv6に固有）は、セクション3.2.5の最後に指定することもできます。このレジストリへの追加は、新しい転送コードが使用される条件を完全に説明するために必要です。"
    },
    {
      "indent": 0,
      "text": "8.2. \"Mtrace2 TLV Types\" Registry",
      "section_title": true,
      "ja": "8.2. 「Mtrace2 TLVタイプ」レジストリ"
    },
    {
      "indent": 3,
      "text": "Assignment of a TLV Type requires specification of an integer value \"Code\" in the range 0-255 and a name (\"Type\"). Initial values for the TLV Types are given in the table at the beginning of Section 3.2.",
      "ja": "TLVタイプの割り当てには、0〜255の範囲の整数値「コード」と名前（「タイプ」）の指定が必要です。 TLVタイプの初期値は、セクション3.2の冒頭の表に記載されています。"
    },
    {
      "indent": 0,
      "text": "8.3. UDP Destination Port",
      "section_title": true,
      "ja": "8.3. UDP宛先ポート"
    },
    {
      "indent": 3,
      "text": "IANA has assigned UDP user port 33435 (mtrace) for use by this protocol as the Mtrace2 UDP destination port.",
      "ja": "IANAは、このプロトコルで使用するUDPユーザーポート33435（mtrace）をMtrace2 UDP宛先ポートとして割り当てています。"
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "ja": "9. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This section addresses some of the security considerations related to Mtrace2.",
      "ja": "このセクションでは、Mtrace2に関連するセキュリティの考慮事項のいくつかを扱います。"
    },
    {
      "indent": 0,
      "text": "9.1. Addresses in Mtrace2 Header",
      "section_title": true,
      "ja": "9.1. Mtrace2ヘッダーのアドレス"
    },
    {
      "indent": 3,
      "text": "An Mtrace2 header includes three addresses: a source address, a multicast address, and an Mtrace2 Client Address. These addresses MUST be congruent with the definition defined in Section 3.2.1, and forwarding Mtrace2 messages that have invalid addresses MUST be prohibited. For instance, if the Mtrace2 Client Address specified in an Mtrace2 header is a multicast address, then a router that receives the Mtrace2 message MUST silently discard it.",
      "ja": "Mtrace2ヘッダーには、送信元アドレス、マルチキャストアドレス、およびMtrace2クライアントアドレスの3つのアドレスが含まれます。これらのアドレスは、セクション3.2.1で定義された定義と一致している必要があり、無効なアドレスを持つMtrace2メッセージの転送は禁止されている必要があります。たとえば、Mtrace2ヘッダーで指定されたMtrace2クライアントアドレスがマルチキャストアドレスである場合、Mtrace2メッセージを受信するルーターはそれを黙って破棄する必要があります。"
    },
    {
      "indent": 0,
      "text": "9.2. Verification of Clients and Peers",
      "section_title": true,
      "ja": "9.2. クライアントとピアの検証"
    },
    {
      "indent": 3,
      "text": "A router providing Mtrace2 functionality MUST support a source-verification mechanism to drop Queries from clients and Requests from peer router or client addresses that are unauthorized or that are beyond a specified administrative boundary. This verification could, for example, be specified via a list of allowed/disallowed clients and peer addresses or subnets for a given Mtrace2 message type sent to the Mtrace2 protocol port. If a Query or Request is received from an unauthorized address or one beyond the specified administrative boundary, the Query/Request MUST NOT be processed. The router MAY, however, perform rate-limited logging of such events.",
      "ja": "Mtrace2機能を提供するルーターは、ソース検証メカニズムをサポートして、クライアントからのクエリと、承認されていないか、指定された管理境界を超えているピアルーターまたはクライアントアドレスからの要求をドロップする必要があります。この検証は、たとえば、Mtrace2プロトコルポートに送信された特定のMtrace2メッセージタイプの許可/禁止クライアントとピアアドレスまたはサブネットのリストを介して指定できます。許可されていないアドレスまたは指定された管理境界を超えたアドレスからクエリまたはリクエストを受信した場合、クエリ/リクエストを処理してはならない（MUST NOT）。しかしながら、ルータはそのようなイベントのレート制限されたロギングを実行するかもしれません。"
    },
    {
      "indent": 3,
      "text": "The required use of source verification on the participating routers minimizes the possible methods for introduction of spoofed Query/ Request packets that would otherwise enable DoS amplification attacks targeting an authorized \"query\" host. The source verification mechanisms provide this protection by allowing Query messages from an authorized host address to be received only by the router(s) connected to that host and only on the interface to which that host is attached. For protection against spoofed Request messages, the source-verification mechanisms allow Request messages only from a directly connected routing peer and allow these messages to be received only on the interface to which that peer is attached.",
      "ja": "参加しているルーターでソース検証を使用する必要があるため、許可された「クエリ」ホストをターゲットとするDoS増幅攻撃を可能にする、スプーフィングされたクエリ/リクエストパケットの導入の可能な方法が最小限に抑えられます。送信元検証メカニズムは、承認されたホストアドレスからのクエリメッセージが、そのホストに接続されているルーターと、そのホストが接続されているインターフェイスでのみ受信されるようにすることで、この保護を提供します。スプーフィングされた要求メッセージに対する保護のために、ソース検証メカニズムは、直接接続されたルーティングピアからの要求メッセージのみを許可し、これらのメッセージがそのピアが接続されているインターフェイスでのみ受信されることを許可します。"
    },
    {
      "indent": 3,
      "text": "Note that the following vulnerabilities cannot be covered by the source verification methods described here. These methods can, nevertheless, prevent attacks launched from outside the boundaries of a given network as well as from any hosts within the network that are not on the same LAN as an intended authorized query client.",
      "ja": "以下の脆弱性は、ここで説明するソース検証方法ではカバーできないことに注意してください。それにもかかわらず、これらの方法は、特定のネットワークの境界の外から、および意図された承認済みクエリクライアントと同じLAN上にないネットワーク内のホストからの攻撃を防ぐことができます。"
    },
    {
      "indent": 3,
      "text": "o A server/router \"B\" other than the server/router \"A\" that actually \"owns\" a given IP address could, if it is connected to the same LAN, send an Mtrace2 Query or Request with the source address set to the address for server/router \"A\". This is not a significant threat, however, if only trusted servers and routers are connected to that LAN.",
      "ja": "o 特定のIPアドレスを実際に「所有」しているサーバー/ルーター「A」以外のサーバー/ルーター「B」は、同じLANに接続されている場合、アドレスに設定されたソースアドレスでMtrace2クエリまたはリクエストを送信できます。サーバー/ルーター「A」用。ただし、信頼されたサーバーとルーターのみがそのLANに接続されている場合、これは重大な脅威ではありません。"
    },
    {
      "indent": 3,
      "text": "o A malicious application running on a trusted server or router could send packets that might cause an amplification problem. It is beyond the scope of this document to protect against a DoS attack launched from the same host that is the target of the attack or from another \"on path\" host, but this is not a likely threat scenario. In addition, routers on the path MAY rate-limit the packets as specified in Sections 9.5 and 9.6.",
      "ja": "o 信頼されたサーバーまたはルーターで実行されている悪意のあるアプリケーションが、増幅の問題を引き起こす可能性のあるパケットを送信する可能性があります。攻撃のターゲットである同じホストまたは別の「パス上の」ホストから起動されたDoS攻撃から保護することは、このドキュメントの範囲外ですが、これはありそうな脅威のシナリオではありません。さらに、パス上のルーターは、セクション9.5および9.6で指定されているように、パケットをレート制限する場合があります。"
    },
    {
      "indent": 0,
      "text": "9.3. Topology Discovery",
      "section_title": true,
      "ja": "9.3. トポロジーの発見"
    },
    {
      "indent": 3,
      "text": "Mtrace2 can be used to discover any actively used topology. If your network topology is a secret, Mtrace2 may be restricted at the border of your domain, using the ADMIN_PROHIB Forwarding Code.",
      "ja": "Mtrace2を使用すると、アクティブに使用されているトポロジを検出できます。ネットワークトポロジが秘密である場合、ADMIN_PROHIB転送コードを使用して、ドメインの境界でMtrace2が制限される場合があります。"
    },
    {
      "indent": 0,
      "text": "9.4. Characteristics of Multicast Channel",
      "section_title": true,
      "ja": "9.4. マルチキャストチャネルの特性"
    },
    {
      "indent": 3,
      "text": "Mtrace2 can be used to discover what sources are sending to what groups and at what rates. If this information is a secret, Mtrace2 may be restricted at the border of your domain, using the ADMIN_PROHIB Forwarding Code.",
      "ja": "Mtrace2を使用すると、どのソースがどのグループにどのレートで送信されているかを検出できます。この情報が秘密である場合、ADMIN_PROHIB転送コードを使用して、ドメインの境界でMtrace2が制限されている可能性があります。"
    },
    {
      "indent": 0,
      "text": "9.5. Limiting Query/Request Rates",
      "section_title": true,
      "ja": "9.5. クエリ/リクエストレートの制限"
    },
    {
      "indent": 3,
      "text": "A router may limit Mtrace2 Queries and Requests by ignoring some of the consecutive messages. The router MAY randomly ignore the received messages to minimize the processing overhead, i.e., to keep fairness in processing Queries or prevent traffic amplification. The rate limit is left to the router's implementation.",
      "ja": "ルーターは、連続するメッセージの一部を無視することにより、Mtrace2クエリとリクエストを制限する場合があります。ルーターは、受信したメッセージをランダムに無視して、処理のオーバーヘッドを最小限に抑える、つまり、クエリの処理の公平性を維持するか、トラフィックの増幅を防ぐことができます。レート制限はルーターの実装に任されています。"
    },
    {
      "indent": 0,
      "text": "9.6. Limiting Reply Rates",
      "section_title": true,
      "ja": "9.6. 返信率の制限"
    },
    {
      "indent": 3,
      "text": "The proxying and NO_SPACE behaviors may result in one Query returning multiple Reply messages. In order to prevent abuse, the routers in the traced path MAY need to rate-limit the Replies. The rate-limit function is left to the router's implementation.",
      "ja": "プロキシとNO_SPACEの動作により、1つのクエリが複数の返信メッセージを返すことがあります。不正使用を防ぐために、トレースされたパスのルーターは、返信をレート制限する必要があります。レート制限機能はルータの実装に任されています。"
    },
    {
      "indent": 0,
      "text": "9.7. Specific Security Concerns",
      "section_title": true,
      "ja": "9.7. 特定のセキュリティ上の懸念"
    },
    {
      "indent": 0,
      "text": "9.7.1. Request and Response Bombardment",
      "section_title": true,
      "ja": "9.7.1. リクエストとレスポンスのボンバードメント"
    },
    {
      "indent": 3,
      "text": "A malicious sender could generate invalid and undesirable Mtrace2 traffic to hosts and/or routers on a network by eliciting responses to spoofed or multicast client addresses. This could be done via forged or multicast client/source addresses in Mtrace2 Query or Request messages. The recommended protections against this type of attack are described in Sections 9.1, 9.2, 9.5, and 9.6.",
      "ja": "悪意のある送信者は、スプーフィングされたクライアントアドレスまたはマルチキャストクライアントアドレスへの応答を引き出すことにより、ネットワーク上のホストやルーターへの無効で望ましくないMtrace2トラフィックを生成する可能性があります。これは、Mtrace2クエリまたはリクエストメッセージの偽造またはマルチキャストクライアント/ソースアドレスを介して実行できます。このタイプの攻撃に対する推奨される保護については、セクション9.1、9.2、9.5、および9.6で説明されています。"
    },
    {
      "indent": 0,
      "text": "9.7.2. Amplification Attack",
      "section_title": true,
      "ja": "9.7.2. 増幅攻撃"
    },
    {
      "indent": 3,
      "text": "Because an Mtrace2 Query results in Mtrace2 Request and Mtrace2 Reply messages that are larger than the original message, the potential exists for an amplification attack from a malicious sender. This threat is minimized by restricting the set of addresses from which Mtrace2 messages can be received on a given router as specified in Section 9.2.",
      "ja": "Mtrace2クエリの結果、Mtrace2要求メッセージとMtrace2応答メッセージが元のメッセージよりも大きくなるため、悪意のある送信者からの増幅攻撃の可能性があります。この脅威は、セクション9.2で指定されているように、特定のルーターでMtrace2メッセージを受信できるアドレスのセットを制限することで最小限に抑えられます。"
    },
    {
      "indent": 3,
      "text": "In addition, for a router running a PIM protocol (PIM-SM, PIM-DM, PIM - Source-Specific Multicast (PIM-SSM), or Bidirectional PIM), the router SHOULD drop any Mtrace2 Request or Reply message that is received from an IP address that does not correspond to an authenticated PIM neighbor on the interface from which the packet is received. The intent of this text is to prevent non-router endpoints from injecting Request messages. Implementations of non-PIM protocols SHOULD employ some other mechanism to prevent this attack.",
      "ja": "さらに、PIMプロトコル（PIM-SM、PIM-DM、PIM-Source-Specific Multicast（PIM-SSM）、または双方向PIM）を実行しているルーターの場合、ルーターは、から受信したMtrace2要求または応答メッセージをすべてドロップする必要があります（SHOULD）。パケットの受信元であるインターフェース上の認証済みPIMネイバーに対応しないIPアドレス。このテキストの目的は、ルーター以外のエンドポイントが要求メッセージを挿入しないようにすることです。非PIMプロトコルの実装では、この攻撃を防ぐために他のメカニズムを採用する必要があります（SHOULD）。"
    },
    {
      "indent": 0,
      "text": "9.7.3. Leaking of Confidential Topology Details",
      "section_title": true,
      "ja": "9.7.3. 機密トポロジの詳細の漏洩"
    },
    {
      "indent": 3,
      "text": "Mtrace2 Queries are a potential mechanism for obtaining confidential topology information for a targeted network. Sections 9.2 and 9.4 describe required and optional methods for ensuring that information delivered with Mtrace2 messages is not disseminated to unauthorized hosts.",
      "ja": "Mtrace2クエリは、ターゲットネットワークの機密トポロジ情報を取得するための潜在的なメカニズムです。セクション9.2および9.4では、Mtrace2メッセージで配信される情報が不正なホストに配布されないようにするための必須およびオプションの方法について説明します。"
    },
    {
      "indent": 0,
      "text": "9.7.4. Delivery of False Information (Forged Reply Messages)",
      "section_title": true,
      "ja": "9.7.4. 虚偽の情報の配信（偽造返信メッセージ）"
    },
    {
      "indent": 3,
      "text": "Forged Reply messages could potentially provide a host with invalid or incorrect topology information. They could also provide invalid or incorrect information regarding multicast traffic statistics, multicast stream propagation delay between hops, multicast and unicast protocols in use between hops and other information used for analyzing multicast traffic patterns, and troubleshooting multicast traffic problems. This threat is mitigated by the following factors:",
      "ja": "偽造された応答メッセージは、ホストに無効または誤ったトポロジー情報を提供する可能性があります。また、マルチキャストトラフィック統計、ホップ間のマルチキャストストリーム伝播遅延、ホップ間で使用されているマルチキャストおよびユニキャストプロトコル、およびマルチキャストトラフィックパターンの分析、およびマルチキャストトラフィックの問題のトラブルシューティングに使用されるその他の情報に関する無効または不正確な情報を提供する可能性もあります。この脅威は、次の要因によって軽減されます。"
    },
    {
      "indent": 3,
      "text": "o The required source verification of permissible source addresses specified in Section 9.2 eliminates the origination of forged Replies from addresses that have not been authorized to send Mtrace2 messages to routers on a given network. This mechanism can block forged Reply messages sent from any \"off path\" source.",
      "ja": "o セクション9.2で指定されている、許可される送信元アドレスの必要な送信元検証により、特定のネットワーク上のルーターにMtrace2メッセージを送信することを許可されていないアドレスからの偽の返信の発信が排除されます。このメカニズムは、「オフパス」ソースから送信された偽の返信メッセージをブロックできます。"
    },
    {
      "indent": 3,
      "text": "o To forge a Reply, the sender would need to somehow know (or guess) the associated 2-byte Query ID for an extant Query and the dynamically allocated source port number. Because \"off path\" sources can be blocked by a source verification mechanism, the scope of this threat is limited to \"on path\" attackers.",
      "ja": "o 返信を偽造するには、送信者は、現存するクエリに関連付けられた2バイトのクエリIDと動的に割り当てられた送信元ポート番号を何らかの方法で（または推測して）知る必要があります。 「パス外」のソースはソース検証メカニズムによってブロックされる可能性があるため、この脅威の範囲は「パス上」の攻撃者に限定されます。"
    },
    {
      "indent": 3,
      "text": "o The required use of source verification (Section 9.2) and recommended use of PIM neighbor authentication (Section 9.7.2) for messages that are only valid when sent by a multicast routing peer (Request and Reply messages) eliminate the possibility of reception of a forged Reply from an authorized host address that does not belong to a multicast peer router.",
      "ja": "o マルチキャストルーティングピアから送信された場合にのみ有効なメッセージ（要求メッセージと応答メッセージ）のソース検証（セクション9.2）とPIMネイバー認証の推奨使用（セクション9.7.2）は、偽造の受信の可能性を排除します。マルチキャストピアルーターに属していない承認済みホストアドレスからの返信。"
    },
    {
      "indent": 0,
      "text": " o The use of encryption between the source of a Query and the endpoint of the trace would provide a method to protect the values of the Query ID and the dynamically allocated client (source) port (see Section 3.2.1). These are the values needed to create a forged Reply message that would pass validity checks at the querying client. This type of cryptographic protection is not practical, however, because the primary reason for executing an Mtrace2 is that the destination endpoint (and path to that endpoint) are not known by the querying client. While it is not practical to provide cryptographic protection between a client and the Mtrace2 endpoints (destinations), it may be possible to prevent forged responses from \"off path\" nodes attached to any Mtrace2 transit LAN by devising a scheme to encrypt the critical portions of an Mtrace2 message between each valid sender/receiver pair at each hop to be used for multicast/Mtrace2 transit. The use of encryption protection between nodes is, however, out of the scope of this document.",
      "ja": "oクエリのソースとトレースのエンドポイント間で暗号化を使用すると、クエリIDの値と動的に割り当てられたクライアント（ソース）ポートを保護する方法が提供されます（セクション3.2.1を参照）。これらは、クエリを実行するクライアントで有効性チェックに合格する偽の返信メッセージを作成するために必要な値です。ただし、Mtrace2を実行する主な理由は、クエリを実行するクライアントが宛先エンドポイント（およびそのエンドポイントへのパス）を認識していないためです。クライアントとMtrace2エンドポイント（宛先）の間に暗号化保護を提供することは現実的ではありませんが、Mtrace2トランジットLANに接続された「オフパス」ノードからの偽造応答を、スキームの重要な部分を暗号化するスキームを考案することで防ぐことができる場合がありますマルチキャスト/ Mtrace2トランジットに使用される、各ホップの有効な送信者/受信者ペア間のMtrace2メッセージ。ただし、ノード間の暗号化保護の使用は、このドキュメントの範囲外です。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10. 参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[1] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[1] Bradner、S。、「RFCで使用して要件レベルを示すためのキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[2] Hinden, R. and S. Deering, \"IP Version 6 Addressing Architecture\", RFC 4291, DOI 10.17487/RFC4291, February 2006, <https://www.rfc-editor.org/info/rfc4291>.",
      "ja": "[2] Hinden、R. and S. Deering、 \"IP Version 6 Addressing Architecture\"、RFC 4291、DOI 10.17487 / RFC4291、February 2006、<https://www.rfc-editor.org/info/rfc4291>"
    },
    {
      "indent": 3,
      "text": "[3] Fenner, B., He, H., Haberman, B., and H. Sandick, \"Internet Group Management Protocol (IGMP) / Multicast Listener Discovery (MLD)-Based Multicast Forwarding (\"IGMP/MLD Proxying\")\", RFC 4605, DOI 10.17487/RFC4605, August 2006, <https://www.rfc-editor.org/info/rfc4605>.",
      "ja": "[3] Fenner、B.、He、H.、Haberman、B。、およびH. Sandick、「Internet Group Management Protocol（IGMP）/ Multicast Listener Discovery（MLD）-Based Multicast Forwarding（ \"IGMP / MLD Proxying\"）」、RFC 4605、DOI 10.17487 / RFC4605、2006年8月、<https://www.rfc-editor.org/info/rfc4605>。"
    },
    {
      "indent": 3,
      "text": "[4] Handley, M., Kouvelas, I., Speakman, T., and L. Vicisano, \"Bidirectional Protocol Independent Multicast (BIDIR- PIM)\", RFC 5015, DOI 10.17487/RFC5015, October 2007, <https://www.rfc-editor.org/info/rfc5015>.",
      "ja": "[4] Handley、M.、Kouvelas、I.、Speakman、T。、およびL. Vicisano、「Bidirectional Protocol Independent Multicast（BIDIR- PIM）」、RFC 5015、DOI 10.17487 / RFC5015、2007年10月、<https：// www。 rfc-editor.org/info/rfc5015>。"
    },
    {
      "indent": 3,
      "text": "[5] Fenner, B., Handley, M., Holbrook, H., Kouvelas, I., Parekh, R., Zhang, Z., and L. Zheng, \"Protocol Independent Multicast - Sparse Mode (PIM-SM): Protocol Specification (Revised)\", STD 83, RFC 7761, DOI 10.17487/RFC7761, March 2016, <https://www.rfc-editor.org/info/rfc7761>.",
      "ja": "[5] Fenner、B.、Handley、M.、Holbrook、H.、Kouvelas、I.、Parekh、R.、Zhang、Z。、およびL. Zheng、「Protocol Independent Multicast-Sparse Mode（PIM-SM）：Protocol Specification （改訂）」、STD 83、RFC 7761、DOI 10.17487 / RFC7761、2016年3月、<https://www.rfc-editor.org/info/rfc7761>。"
    },
    {
      "indent": 3,
      "text": "[6] Cotton, M., Leiba, B., and T. Narten, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 8126, DOI 10.17487/RFC8126, June 2017, <https://www.rfc-editor.org/info/rfc8126>.",
      "ja": "[6] Cotton、M.、Leiba、B。、およびT. Narten、「RFCでIANAの考慮事項セクションを作成するためのガイドライン」、BCP 26、RFC 8126、DOI 10.17487 / RFC8126、2017年6月、<https：//www.rfc- editor.org/info/rfc8126>。"
    },
    {
      "indent": 3,
      "text": "[7] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[7] Leiba、B。、「RFC 2119キーワードの大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/rfc8174>。"
    },
    {
      "indent": 3,
      "text": "[8] Deering, S. and R. Hinden, \"Internet Protocol, Version 6 (IPv6) Specification\", STD 86, RFC 8200, DOI 10.17487/RFC8200, July 2017, <https://www.rfc-editor.org/info/rfc8200>.",
      "ja": "[8] Deering、S。およびR. Hinden、「インターネットプロトコル、バージョン6（IPv6）仕様」、STD 86、RFC 8200、DOI 10.17487 / RFC8200、2017年7月、<https://www.rfc-editor.org/info/ rfc8200>。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[9] McCloghrie, K. and F. Kastenholz, \"The Interfaces Group MIB\", RFC 2863, DOI 10.17487/RFC2863, June 2000, <https://www.rfc-editor.org/info/rfc2863>.",
      "ja": "[9] McCloghrie、K。およびF. Kastenholz、「The Interfaces Group MIB」、RFC 2863、DOI 10.17487 / RFC2863、2000年6月、<https://www.rfc-editor.org/info/rfc2863>。"
    },
    {
      "indent": 3,
      "text": "[10] Cain, B., Deering, S., Kouvelas, I., Fenner, B., and A. Thyagarajan, \"Internet Group Management Protocol, Version 3\", RFC 3376, DOI 10.17487/RFC3376, October 2002, <https://www.rfc-editor.org/info/rfc3376>.",
      "ja": "[10] Cain、B.、Deering、S.、Kouvelas、I.、Fenner、B。、およびA. Thyagarajan、「インターネットグループ管理プロトコル、バージョン3」、RFC 3376、DOI 10.17487 / RFC3376、2002年10月、<https：/ /www.rfc-editor.org/info/rfc3376>。"
    },
    {
      "indent": 3,
      "text": "[11] Adams, A., Nicholas, J., and W. Siadak, \"Protocol Independent Multicast - Dense Mode (PIM-DM): Protocol Specification (Revised)\", RFC 3973, DOI 10.17487/RFC3973, January 2005, <https://www.rfc-editor.org/info/rfc3973>.",
      "ja": "[11] Adams、A.、Nicholas、J。、およびW. Siadak、「Protocol Independent Multicast-Dense Mode（PIM-DM）：Protocol Specification（Revised）」、RFC 3973、DOI 10.17487 / RFC3973、2005年1月、<https：/ /www.rfc-editor.org/info/rfc3973>。"
    },
    {
      "indent": 3,
      "text": "[12] Draves, R. and D. Thaler, \"Default Router Preferences and More-Specific Routes\", RFC 4191, DOI 10.17487/RFC4191, November 2005, <https://www.rfc-editor.org/info/rfc4191>.",
      "ja": "[12] Draves、R。およびD. Thaler、「Default Router Preferences and More-Specific Routes」、RFC 4191、DOI 10.17487 / RFC4191、2005年11月、<https://www.rfc-editor.org/info/rfc4191>。"
    },
    {
      "indent": 3,
      "text": "[13] Gill, V., Heasley, J., Meyer, D., Savola, P., Ed., and C. Pignataro, \"The Generalized TTL Security Mechanism (GTSM)\", RFC 5082, DOI 10.17487/RFC5082, October 2007, <https://www.rfc-editor.org/info/rfc5082>.",
      "ja": "[13] Gill、V.、Heasley、J.、Meyer、D.、Savola、P.、Ed。、およびC. Pignataro、「一般化されたTTLセキュリティメカニズム（GTSM）」、RFC 5082、DOI 10.17487 / RFC5082、2007年10月、 <https://www.rfc-editor.org/info/rfc5082>。"
    },
    {
      "indent": 3,
      "text": "[14] McWalter, D., Thaler, D., and A. Kessler, \"IP Multicast MIB\", RFC 5132, DOI 10.17487/RFC5132, December 2007, <https://www.rfc-editor.org/info/rfc5132>.",
      "ja": "[14] McWalter、D.、Thaler、D。、およびA. Kessler、「IPマルチキャストMIB」、RFC 5132、DOI 10.17487 / RFC5132、2007年12月、<https://www.rfc-editor.org/info/rfc5132>。"
    },
    {
      "indent": 3,
      "text": "[15] Rosen, E., Ed. and R. Aggarwal, Ed., \"Multicast in MPLS/ BGP IP VPNs\", RFC 6513, DOI 10.17487/RFC6513, February 2012, <https://www.rfc-editor.org/info/rfc6513>.",
      "ja": "[15] ローゼン、E、エド。およびR. Aggarwal編、「MPLS / BGP IP VPNでのマルチキャスト」、RFC 6513、DOI 10.17487 / RFC6513、2012年2月、<https://www.rfc-editor.org/info/rfc6513>。"
    },
    {
      "indent": 3,
      "text": "[16] Bumgardner, G., \"Automatic Multicast Tunneling\", RFC 7450, DOI 10.17487/RFC7450, February 2015, <https://www.rfc-editor.org/info/rfc7450>.",
      "ja": "[16] Bumgardner、G。、「Automatic Multicast Tunneling」、RFC 7450、DOI 10.17487 / RFC7450、2015年2月、<https://www.rfc-editor.org/info/rfc7450>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "This specification started largely as a transcription of Van Jacobson's slides from the 30th IETF meeting and the implementation in mrouted 3.3 by Ajit Thyagarajan. Van's original slides credit Steve Casner, Steve Deering, Dino Farinacci, and Deb Agrawal. The original multicast traceroute client, mtrace (version 1), has been implemented by Ajit Thyagarajan, Steve Casner, and Bill Fenner. The idea of the S bit to allow statistics for a source subnet is due to Tom Pusateri.",
      "ja": "この仕様は主に、第30回IETF会議からのヴァンジェイコブソンのスライドの書き起こしと、Ajit Thyagarajanによるmrouted 3.3での実装から始まりました。ヴァンのオリジナルスライドは、スティーブキャスナー、スティーブディアリング、ディノファリナッチ、デブアグラワルのクレジットです。オリジナルのマルチキャストtracerouteクライアントであるmtrace（バージョン1）は、Ajit Thyagarajan、Steve Casner、およびBill Fennerによって実装されました。送信元サブネットの統計を可能にするSビットのアイデアは、Tom Pusateriによるものです。"
    },
    {
      "indent": 3,
      "text": "For the Mtrace version 2 specification, the authors would like to give special thanks to Tatsuya Jinmei, Bill Fenner, and Steve Casner. Also, extensive comments were received from David L. Black, Ronald Bonica, Yiqun Cai, Liu Hui, Bharat Joshi, Robert Kebler, John Kristoff, Mankamana Mishra, Heidi Ou, Eric Rescorla, Pekka Savola, Shinsuke Suzuki, Dave Thaler, Achmad Husni Thamrin, Stig Venaas, Cao Wei, and the MBONED Working Group members.",
      "ja": "Mtraceバージョン2仕様について、著者は、Jinmei Tatsuya、Bill Fenner、およびSteve Casnerに特に感謝したいと思います。また、David L. Black、Ronald Bonica、Yiqun Cai、Liu Hui、Bharat Joshi、Robert Kebler、John Kristoff、Mankamana Mishra、Heidi Ou、Eric Rescorla、Pekka Savola、Suzuki Shinsuke、Dave Thaler、Achmad Husniからも幅広いコメントが寄せられましたThamrin、Stig Venaas、Cao Wei、およびMBONEDワーキンググループのメンバー。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Hitoshi Asaeda National Institute of Information and Communications Technology 4-2-1 Nukui-Kitamachi Koganei, Tokyo 184-8795 Japan",
      "ja": "ひとし あさえだ なちおなｌ いんｓちつて おｆ いんふぉｒまちおん あんｄ こっむにかちおんｓ てｃｈのぉｇｙ ４ー２ー１ ぬくいーきたまち こがねい、 ときょ １８４ー８７９５ じゃぱん"
    },
    {
      "indent": 3,
      "text": "Email: asaeda@nict.go.jp",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Kerry Meyer Dell EMC 176 South Street Hopkinton, MA 01748 United States",
      "ja": "Kerry Meyer Dell EMC 176 South Streetホプキントン、MA 01748アメリカ合衆国"
    },
    {
      "indent": 3,
      "text": "Email: kerry.meyer@me.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "WeeSan Lee (editor)",
      "ja": "WeeSan Lee（編集者）"
    },
    {
      "indent": 3,
      "text": "Email: weesan@weesan.com",
      "raw": true,
      "ja": ""
    }
  ]
}