{
  "title": {
    "text": "RFC 8662 - Entropy Label for Source Packet Routing in Networking (SPRING) Tunnels",
    "ja": "RFC 8662 - ネットワーキング（SPRING）トンネルでのソースパケットルーティングのエントロピーラベル"
  },
  "number": 8662,
  "created_at": "2020-08-17 19:45:54.234702+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                           S. Kini\nRequest for Comments: 8662\nCategory: Standards Track                                    K. Kompella\nISSN: 2070-1721                                                  Juniper\n                                                            S. Sivabalan\n                                                                   Cisco\n                                                            S. Litkowski\n                                                                  Orange\n                                                               R. Shakir\n                                                                  Google\n                                                             J. Tantsura\n                                                            Apstra, Inc.\n                                                           December 2019",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "Entropy Label for Source Packet Routing in Networking (SPRING) Tunnels",
      "ja": "ネットワーキング（SPRING）トンネルでのソースパケットルーティングのエントロピーラベル"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "Segment Routing (SR) leverages the source-routing paradigm. A node steers a packet through an ordered list of instructions, called segments. Segment Routing can be applied to the Multiprotocol Label Switching (MPLS) data plane. Entropy labels (ELs) are used in MPLS to improve load-balancing. This document examines and describes how ELs are to be applied to Segment Routing MPLS.",
      "ja": "セグメントルーティング（SR）は、ソースルーティングパラダイムを活用します。ノードは、セグメントと呼ばれる命令の順序付けられたリストを通じてパケットを操作します。セグメントルーティングは、マルチプロトコルラベルスイッチング（MPLS）データプレーンに適用できます。エントロピーラベル（EL）は、負荷分散を改善するためにMPLSで使用されます。このドキュメントでは、ELをセグメントルーティングMPLSに適用する方法について説明します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 7841のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8662.",
      "ja": "このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、https：//www.rfc-editor.org/info/rfc8662で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2019 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2019 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n  1.1.  Requirements Language\n2.  Abbreviations and Terminology\n3.  Use Case Requiring Multipath Load-Balancing\n4.  Entropy Readable Label Depth\n5.  Maximum SID Depth\n6.  LSP Stitching Using the Binding SID\n7.  Insertion of Entropy Labels for SPRING Path\n  7.1.  Overview\n    7.1.1.  Example 1: The Ingress Node Has a Sufficient MSD\n    7.1.2.  Example 2: The Ingress Node Does Not Have a Sufficient\n            MSD\n  7.2.  Considerations for the Placement of Entropy Labels\n    7.2.1.  ERLD Value\n    7.2.2.  Segment Type\n    7.2.3.  Maximizing Number of LSRs That Will Load-Balance\n    7.2.4.  Preference for a Part of the Path\n    7.2.5.  Combining Criteria\n8.  A Simple Example Algorithm\n9.  Deployment Considerations\n10. Options Considered\n  10.1.  Single EL at the Bottom of the Stack\n  10.2.  An EL per Segment in the Stack\n  10.3.  A Reusable EL for a Stack of Tunnels\n  10.4.  EL at Top of Stack\n  10.5.  ELs at Readable Label Stack Depths\n11. IANA Considerations\n12. Security Considerations\n13. References\n  13.1.  Normative References\n  13.2.  Informative References\nAcknowledgements\nContributors\nAuthors' Addresses",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Segment Routing [RFC8402] is based on source-routed tunnels to steer a packet along a particular path. This path is encoded as an ordered list of segments. When applied to the MPLS data plane [RFC8660], each segment is an LSP (Label Switched Path) with an associated MPLS label value. Hence, label stacking is used to represent the ordered list of segments, and the label stack associated with an SR tunnel can be seen as nested LSPs (LSP hierarchy) in the MPLS architecture.",
      "ja": "セグメントルーティング[RFC8402]は、ソースルートトンネルに基づいて、特定のパスに沿ってパケットを誘導します。このパスは、セグメントの順序付きリストとしてエンコードされます。 MPLSデータプレーン[RFC8660]に適用すると、各セグメントは、関連するMPLSラベル値を持つLSP（Label Switched Path）になります。したがって、ラベルスタッキングは、セグメントの順序付けられたリストを表すために使用され、SRトンネルに関連付けられたラベルスタックは、MPLSアーキテクチャでネストされたLSP（LSP階層）と見なすことができます。"
    },
    {
      "indent": 3,
      "text": "Using label stacking to encode the list of segments has implications on the label stack depth.",
      "ja": "ラベルスタックを使用してセグメントのリストをエンコードすると、ラベルスタックの深さに影響します。"
    },
    {
      "indent": 3,
      "text": "Traffic load-balancing over ECMP (Equal-Cost Multipath) or LAGs (Link Aggregation Groups) is usually based on a hashing function. The local node that performs the load-balancing is required to read some header fields in the incoming packets and then compute a hash based on those fields. The result of the hash is finally mapped to a list of outgoing next hops. The hashing technique is required to perform a per-flow load-balancing and thus, prevents packet misordering. For IP traffic, the usual fields that are hashed are the source address, the destination address, the protocol type, and, if provided by the upper layer, the source port and destination port.",
      "ja": "ECMP（等コストマルチパス）またはLAG（リンク集約グループ）を介したトラフィックの負荷分散は、通常、ハッシュ関数に基づいています。ロードバランシングを実行するローカルノードは、着信パケットの一部のヘッダーフィールドを読み取り、それらのフィールドに基づいてハッシュを計算する必要があります。ハッシュの結果は、最終的に発信ネクストホップのリストにマッピングされます。ハッシュ手法は、フローごとのロードバランシングを実行するために必要であり、したがって、パケットの順序の乱れを防ぎます。 IPトラフィックの場合、ハッシュされる通常のフィールドは、送信元アドレス、宛先アドレス、プロトコルタイプ、および上位層によって提供される場合は、送信元ポートと宛先ポートです。"
    },
    {
      "indent": 3,
      "text": "The MPLS architecture brings some challenges when an LSR (Label Switching Router) tries to look up at header fields. An LSR needs be able to look up at header fields that are beyond the MPLS label stack while the MPLS header does not provide any information about the upper-layer protocol. An LSR must perform a deeper inspection compared to an ingress router, which could be challenging for some hardware. Entropy labels (ELs) [RFC6790] are used in the MPLS data plane to provide entropy for load-balancing. The idea behind the entropy label is that the ingress router computes a hash based on several fields from a given packet and places the result in an additional label named \"entropy label\". Then, this entropy label can be used as part of the hash keys used by an LSR. Using the entropy label as part of the hash keys reduces the need for deep packet inspection in the LSR while keeping a good level of entropy in the load-balancing. When the entropy label is used, the keys used in the hashing functions are still a local configuration matter, and an LSR may use solely the entropy label or a combination of multiple fields from the incoming packet.",
      "ja": "LSR（ラベルスイッチングルーター）がヘッダーフィールドを検索しようとすると、MPLSアーキテクチャーはいくつかの課題をもたらします。 LSRはMPLSラベルスタックを超えるヘッダーフィールドを検索できる必要がありますが、MPLSヘッダーは上位層プロトコルに関する情報を提供しません。 LSRは、入力ルーターと比較してより詳細な検査を実行する必要があり、ハードウェアによっては困難な場合があります。エントロピーラベル（EL）[RFC6790]は、負荷分散のためのエントロピーを提供するためにMPLSデータプレーンで使用されます。エントロピーラベルの背後にある考え方は、入力ルーターが特定のパケットのいくつかのフィールドに基づいてハッシュを計算し、その結果を「エントロピーラベル」という名前の追加のラベルに配置することです。次に、このエントロピーラベルは、LSRで使用されるハッシュキーの一部として使用できます。ハッシュキーの一部としてエントロピーラベルを使用すると、ロードバランシングでエントロピーを適切なレベルに保ちながら、LSRでの詳細なパケット検査の必要性が減少します。エントロピーラベルが使用される場合、ハッシュ関数で使用されるキーはローカル構成の問題であり、LSRはエントロピーラベルのみ、または着信パケットからの複数のフィールドの組み合わせを使用できます。"
    },
    {
      "indent": 3,
      "text": "When using LSP hierarchies, there are implications on how [RFC6790] should be applied. The current document addresses the case where a hierarchy is created at a single LSR as required by Segment Routing.",
      "ja": "LSP階層を使用する場合、[RFC6790]の適用方法に影響があります。現在のドキュメントは、セグメントルーティングで必要とされるように、階層が単一のLSRで作成されるケースを扱っています。"
    },
    {
      "indent": 3,
      "text": "A use case requiring load-balancing with SR is given in Section 3. A recommended solution is described in Section 7 keeping in consideration the limitations of implementations when applying [RFC6790] to deeper label stacks. Options that were considered to arrive at the recommended solution are documented for historical purposes in Section 10.",
      "ja": "SRとのロードバランシングを必要とするユースケースは、セクション3に記載されています。[RFC6790]をより深いラベルスタックに適用するときの実装の制限を考慮しながら、推奨されるソリューションをセクション7で説明します。推奨されるソリューションに到達すると見なされたオプションは、歴史的な目的でセクション10に記載されています。"
    },
    {
      "indent": 0,
      "text": "1.1. Requirements Language",
      "section_title": true,
      "ja": "1.1. 要件言語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "キーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「NOT RECOMMENDED」、「MAY」、「OPTIONALこのドキュメントの「」は、BCP 14 [RFC2119] [RFC8174]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. Abbreviations and Terminology",
      "section_title": true,
      "ja": "2. 略語と用語"
    },
    {
      "indent": 3,
      "text": "Adj-SID Adjacency Segment Identifier",
      "ja": "Adj-SID隣接セグメント識別子"
    },
    {
      "indent": 3,
      "text": "ECMP Equal-Cost Multipath",
      "ja": "ECMP等コストマルチパス"
    },
    {
      "indent": 3,
      "text": "EL Entropy Label",
      "ja": "ELエントロピーラベル"
    },
    {
      "indent": 3,
      "text": "ELI Entropy Label Indicator",
      "ja": "ELIエントロピーラベルインジケーター"
    },
    {
      "indent": 3,
      "text": "ELC Entropy Label Capability",
      "ja": "ELCエントロピーラベル機能"
    },
    {
      "indent": 3,
      "text": "ERLD Entropy Readable Label Depth",
      "ja": "ERLDエントロピー読み取り可能なラベルの深さ"
    },
    {
      "indent": 3,
      "text": "FEC Forwarding Equivalence Class",
      "ja": "FEC転送同等クラス"
    },
    {
      "indent": 3,
      "text": "LAG Link Aggregation Group",
      "ja": "LAGリンク集約グループ"
    },
    {
      "indent": 3,
      "text": "LSP Label Switched Path",
      "ja": "LSPラベルスイッチドパス"
    },
    {
      "indent": 3,
      "text": "LSR Label Switching Router",
      "ja": "LSRラベルスイッチングルータ"
    },
    {
      "indent": 3,
      "text": "MPLS Multiprotocol Label Switching",
      "ja": "MPLSマルチプロトコルラベルスイッチング"
    },
    {
      "indent": 3,
      "text": "MSD Maximum SID Depth",
      "ja": "MSD最大SID深度"
    },
    {
      "indent": 3,
      "text": "Node SID Node Segment Identifier",
      "ja": "ノードSIDノードセグメント識別子"
    },
    {
      "indent": 3,
      "text": "OAM Operations, Administration, and Maintenance",
      "ja": "OAMの運用、管理、保守"
    },
    {
      "indent": 3,
      "text": "RLD Readable Label Depth",
      "ja": "RLD読み取り可能なラベルの深さ"
    },
    {
      "indent": 3,
      "text": "SID Segment Identifier",
      "ja": "SIDセグメント識別子"
    },
    {
      "indent": 3,
      "text": "SPT Shortest Path Tree",
      "ja": "SPT最短パスツリー"
    },
    {
      "indent": 3,
      "text": "SR Segment Routing",
      "ja": "SRセグメントルーティング"
    },
    {
      "indent": 3,
      "text": "SRGB Segment Routing Global Block",
      "ja": "SRGBセグメントルーティンググローバルブロック"
    },
    {
      "indent": 3,
      "text": "VPN Virtual Private Network",
      "ja": "VPN仮想プライベートネットワーク"
    },
    {
      "indent": 0,
      "text": "3. Use Case Requiring Multipath Load-Balancing",
      "section_title": true,
      "ja": "3. マルチパスロードバランシングを必要とするユースケース"
    },
    {
      "indent": 3,
      "text": "Traffic engineering is one of the applications of MPLS and is also a requirement for Segment Routing [RFC7855]. Consider the topology shown in Figure 1. The LSR S requires data to be sent to LSR D along a traffic-engineered path that goes over the link L1. Good load-balancing is also required across equal-cost paths (including parallel links). To steer traffic along a path that crosses link L1, the label stack that LSR S creates consists of a label to the Node SID of LSR P3 stacked over the label for the Adj-SID (Adjacency Segment Identifier) of link L1 and that in turn is stacked over the label to the Node SID of LSR D. For simplicity, lets assume that all LSRs use the same label space for Segment Routing (as a reminder, it is called the SRGB, Segment Routing Global Block). Let L_N-Px denote the label to be used to reach the Node SID of LSR Px. Let L_A-Ln denote the label used for the Adj-SID for link Ln. In our example, the LSR S must use the label stack <L_N-P3, L_A-L1, L_N-D>. However, to achieve good load-balancing over the equal-cost paths P2-P4-D, P2-P5-D, and the parallel links L3 and L4, a mechanism such as entropy labels [RFC6790] should be adapted for Segment Routing. Indeed, the Source Packet Routing in Networking (SPRING) architecture with the MPLS data plane [RFC8660] uses nested MPLS LSPs composing the source-routed label stack.",
      "ja": "トラフィックエンジニアリングはMPLSのアプリケーションの1つであり、セグメントルーティング[RFC7855]の要件でもあります。図1に示すトポロジを考えてみます。LSRSでは、リンクL1を経由するトラフィックエンジニアリングされたパスに沿ってデータをLSR Dに送信する必要があります。等価コストパス（並列リンクを含む）全体で適切な負荷分散も必要です。リンクL1を横切るパスに沿ってトラフィックを誘導するために、LSR Sが作成するラベルスタックは、LSR P3のノードSIDへのラベルで構成され、リンクL1のAdj-SID（隣接セグメント識別子）のラベルの上にスタックされ、さ​​らには、LSR DのノードSIDまでのラベルの上にスタックされます。簡単にするために、すべてのLSRがセグメントルーティングに同じラベルスペースを使用すると想定します（リマインダーとして、SRGB、セグメントルーティンググローバルブロックと呼ばれます）。 L_N-Pxに、LSR PxのノードSIDに到達するために使用されるラベルを示します。 L_A-LnがリンクLnのAdj-SIDに使用されるラベルを示すとしましょう。この例では、LSR Sはラベルスタック<L_N-P3、L_A-L1、L_N-D>を使用する必要があります。ただし、等コストパスP2-P4-D、P2-P5-D、およびパラレルリンクL3およびL4で良好なロードバランシングを実現するには、エントロピーラベル[RFC6790]などのメカニズムをセグメントルーティングに適合させる必要があります。実際、MPLSデータプレーンを備えたネットワーキングのソースパケットルーティング（SPRING）アーキテクチャ[RFC8660]は、ソースルートラベルスタックを構成するネストされたMPLS LSPを使用します。"
    },
    {
      "indent": 3,
      "text": "                      +------+\n                      |      |\n              +-------|  P3  |-----+\n              | +-----|      |---+ |\n            L3| |L4   +------+ L1| |L2     +----+\n              | |                | |    +--| P4 |--+\n+-----+     +-----+            +-----+  |  +----+  |  +-----+\n|  S  |-----| P1  |------------| P2  |--+          +--|  D  |\n|     |     |     |            |     |--+          +--|     |\n+-----+     +-----+            +-----+  |  +----+  |  +-----+\n                                        +--| P5 |--+\n                                           +----+\n    Key:\n        S = Source LSR\n        D = Destination LSR\n        P1, P2, P3, P4, P5 = Transit LSRs\n        L1, L2, L3, L4 = Links",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 1: Traffic-Engineering Use Case",
      "ja": "図1：トラフィックエンジニアリングの使用例"
    },
    {
      "indent": 3,
      "text": "An MPLS node may have limitations in the number of labels it can push. It may also have a limitation in the number of labels it can inspect when looking for hash keys during load-balancing. While the entropy label is normally inserted at the bottom of the transport tunnel, this may prevent an LSR from taking into account the EL in its load-balancing function if the EL is too deep in the stack. In a Segment Routing environment, it is important to define the considerations that need to be taken into account when inserting an EL. Multiple ways to apply entropy labels were considered and are documented in Section 10 along with their trade-offs. A recommended solution is described in Section 7.",
      "ja": "MPLSノードは、プッシュできるラベルの数に制限がある場合があります。また、ロードバランシング中にハッシュキーを探すときに検査できるラベルの数にも制限がある場合があります。エントロピーラベルは通常トランスポートトンネルの下部に挿入されますが、これにより、ELがスタックの深すぎる場合、LSRがロードバランシング機能でELを考慮できなくなる可能性があります。セグメントルーティング環境では、ELを挿入するときに考慮する必要がある考慮事項を定義することが重要です。エントロピーラベルを適用する複数の方法が検討され、セクション10でそれらのトレードオフとともに文書化されています。推奨される解決策については、セクション7で説明します。"
    },
    {
      "indent": 0,
      "text": "4. Entropy Readable Label Depth",
      "section_title": true,
      "ja": "4. エントロピー読み取り可能なラベルの深さ"
    },
    {
      "indent": 3,
      "text": "The Entropy Readable Label Depth (ERLD) is defined as the number of labels a router can both:",
      "ja": "エントロピー読み取り可能ラベル深度（ERLD）は、ルーターが両方で使用できるラベルの数として定義されます。"
    },
    {
      "indent": 3,
      "text": "a. Read in an MPLS packet received on its incoming interface(s) (starting from the top of the stack).",
      "ja": "a. 着信インターフェイスで受信したMPLSパケットを読み込みます（スタックの先頭から開始）。"
    },
    {
      "indent": 3,
      "text": "b. Use in its load-balancing function.",
      "ja": "b. 負荷分散機能で使用します。"
    },
    {
      "indent": 3,
      "text": "The ERLD means that the router will perform load-balancing using the EL if the EL is placed within the first ERLD labels.",
      "ja": "ERLDは、ELが最初のERLDラベル内に配置されている場合、ルータがELを使用してロードバランシングを実行することを意味します。"
    },
    {
      "indent": 3,
      "text": "A router capable of reading N labels but not using an EL located within those N labels MUST consider its ERLD to be 0.",
      "ja": "N個のラベルを読み取ることができるが、それらのN個のラベル内にあるELを使用しないルーターは、そのERLDを0と見なす必要があります。"
    },
    {
      "indent": 3,
      "text": "In a distributed switching architecture, each line card may have a different capability in terms of ERLD. For simplicity, an implementation MAY use the minimum ERLD of all line cards as the ERLD value for the system.",
      "ja": "分散型スイッチングアーキテクチャでは、各ラインカードにERLDに関して異なる機能がある場合があります。簡単にするために、実装は、システムのERLD値としてすべてのラインカードの最小ERLDを使用する場合があります。"
    },
    {
      "indent": 3,
      "text": "There may also be a case where a router has a fast switching path (handled by an Application-Specific Integrated Circuit, or ASIC, or network processor) and a slow switching path (handled by a CPU) with a different ERLD for each switching path. Again, for simplicity's sake, an implementation MAY use the minimum ERLD as the ERLD value for the system.",
      "ja": "また、ルーターの高速スイッチングパス（アプリケーション固有の集積回路、またはASIC、またはネットワークプロセッサによって処理される）と低速スイッチングパス（CPUによって処理される）があり、スイッチングパスごとに異なるERLDが設定されている場合もあります。 。繰り返しになりますが、簡単にするために、実装ではシステムのERLD値として最小のERLDを使用できます（MAY）。"
    },
    {
      "indent": 3,
      "text": "The drawback of using a single ERLD for a system lower than the capability of one or more specific components is that it may increase the number of ELI/ELs inserted. This leads to an increase of the label stack size and may have an impact on the capability of the ingress node to push this label stack.",
      "ja": "1つ以上の特定のコンポーネントの機能よりも低いシステムに単一のERLDを使用することの欠点は、挿入されるELI / ELの数が増える可能性があることです。これはラベルスタックサイズの増加につながり、このラベルスタックをプッシュする入力ノードの機能に影響を与える可能性があります。"
    },
    {
      "indent": 3,
      "text": "Examples:",
      "ja": "例："
    },
    {
      "indent": 3,
      "text": "                                                    | Payload  |\n                                                    +----------+\n                                       | Payload  | |    EL    | P7\n                                       +----------+ +----------+\n                          | Payload  | |    EL    | |    ELI   |\n                          +----------+ +----------+ +----------+\n             | Payload  | |   EL     | |    ELI   | | Label 50 |\n             +----------+ +----------+ +----------+ +----------+\n|  Payload | |     EL   | |   ELI    | | Label 40 | | Label 40 |\n+----------+ +----------+ +----------+ +----------+ +----------+\n|     EL   | |    ELI   | | Label 30 | | Label 30 | | Label 30 |\n+----------+ +----------+ +----------+ +----------+ +----------+\n|    ELI   | | Label 20 | | Label 20 | | Label 20 | | Label 20 |\n+----------+ +----------+ +----------+ +----------+ +----------+\n| Label 16 | | Label 16 | | Label 16 | | Label 16 | | Label 16 | P1\n+----------+ +----------+ +----------+ +----------+ +----------+\n  Packet 1     Packet 2     Packet 3     Packet 4     Packet 5",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 21,
      "text": "Figure 2: Label Stacks with ELI/EL",
      "ja": "図2：ELI / ELを使用したスタックのラベル付け"
    },
    {
      "indent": 3,
      "text": "In Figure 2, we consider the displayed packets received on a router interface. We consider also a single ERLD value for the router.",
      "ja": "図2では、ルーターインターフェイスで受信した表示パケットを考慮しています。ルータの単一のERLD値も考慮します。"
    },
    {
      "indent": 3,
      "text": "* If the router has an ERLD of 3, it will be able to load-balance Packet 1 displayed in Figure 2 using the EL as part of the load-balancing keys. The ERLD value of 3 means that the router can read and take into account the entropy label for load-balancing if it is placed between position 1 (top of the MPLS label stack) and position 3.",
      "ja": "* ルータのERLDが3の場合、ELをロードバランシングキーの一部として使用して、図2に表示されているパケット1をロードバランシングできます。 ERLD値3は、ルーターがポジション1（MPLSラベルスタックの最上部）とポジション3の間に配置されている場合、ロードバランシング用のエントロピーラベルを読み取って考慮できることを意味します。"
    },
    {
      "indent": 3,
      "text": "* If the router has an ERLD of 5, it will be able to load-balance Packets 1 to 3 in Figure 2 using the EL as part of the load-balancing keys. Packets 4 and 5 have the EL placed at a position greater than 5, so the router is not able to read it and use it as part of the load-balancing keys.",
      "ja": "* ルータのERLDが5の場合、図2のパケット1〜3をロードバランシングキーの一部としてELを使用してロードバランシングできます。パケット4と5では、ELが5より大きい位置に配置されているため、ルーターはそれを読み取って負荷分散キーの一部として使用することができません。"
    },
    {
      "indent": 3,
      "text": "* If the router has an ERLD of 10, it will be able to load-balance all the packets displayed in Figure 2 using the EL as part of the load-balancing keys.",
      "ja": "* ルータのERLDが10である場合、ELをロードバランシングキーの一部として使用して、図2に表示されているすべてのパケットをロードバランシングできます。"
    },
    {
      "indent": 3,
      "text": "To allow an efficient load-balancing based on entropy labels, a router running SPRING SHOULD advertise its ERLD (or ERLDs), so all the other SPRING routers in the network are aware of its capability. How this advertisement is done is outside the scope of this document (see Section 7.2.1 for potential approaches).",
      "ja": "エントロピーラベルに基づく効率的なロードバランシングを可能にするために、SPRINGを実行しているルーターはそのERLD（またはERLD）をアドバタイズする必要があるため、ネットワーク内の他のすべてのSPRINGルーターはその機能を認識しています。この広告がどのように行われるかは、このドキュメントの範囲外です（可能なアプローチについては、セクション7.2.1を参照してください）。"
    },
    {
      "indent": 3,
      "text": "To advertise an ERLD value, a SPRING router:",
      "ja": "ERLD値をアドバタイズするには、SPRINGルーター："
    },
    {
      "indent": 3,
      "text": "* MUST be entropy label capable and, as a consequence, MUST apply the data-plane procedures defined in [RFC6790].",
      "ja": "* エントロピーラベル対応でなければならず、その結果、[RFC6790]で定義されているデータプレーン手順を適用する必要があります。"
    },
    {
      "indent": 3,
      "text": "* MUST be able to read an ELI/EL, which is located within its ERLD value.",
      "ja": "* ERLD値内にあるELI / ELを読み取れる必要があります。"
    },
    {
      "indent": 3,
      "text": "* MUST take into account an EL within the first ERLD labels in its load-balancing function.",
      "ja": "* ロードバランシング機能の最初のERLDラベル内のELを考慮する必要があります。"
    },
    {
      "indent": 0,
      "text": "5. Maximum SID Depth",
      "section_title": true,
      "ja": "5. 最大SID深度"
    },
    {
      "indent": 3,
      "text": "The Maximum SID Depth defines the maximum number of labels that a particular node can impose on a packet. This can include any kind of labels (service, entropy, transport, etc.). In an MPLS network, the MSD is a limit of the head-end of an SR tunnel or a Binding SID anchor node that performs imposition of additional labels on an existing label stack.",
      "ja": "Maximum SID Depthは、特定のノードがパケットに適用できるラベルの最大数を定義します。これには、あらゆる種類のラベル（サービス、エントロピー、トランスポートなど）を含めることができます。 MPLSネットワークでは、MSDはSRトンネルのヘッ​​ドエンドの制限、または既存のラベルスタックに追加のラベルのインポジションを実行するバインディングSIDアンカーノードです。"
    },
    {
      "indent": 3,
      "text": "Depending on the number of MPLS operations (POP, SWAP, etc.) to be performed before the PUSH, the MSD can vary due to hardware or software limitations. As for the ERLD, different MSD limits can exist within a single node based on the line-card types used in a distributed switching system. Thus, the MSD is a per link and/or per-node property.",
      "ja": "PUSHの前に実行されるMPLS操作（POP、SWAPなど）の数に応じて、MSDはハードウェアまたはソフトウェアの制限により異なる場合があります。 ERLDに関しては、分散スイッチングシステムで使用されるラインカードタイプに基づいて、単一のノード内に異なるMSD制限が存在する可能性があります。したがって、MSDはリンクごとおよび/またはノードごとのプロパティです。"
    },
    {
      "indent": 3,
      "text": "An external controller can be used to program a label stack on a particular node. This node SHOULD advertise its MSD to the controller in order to let the controller know the maximum label stack depth of the path computed that is supported on the head-end. How this advertisement is done is outside the scope of this document. ([RFC8476], [RFC8491], and [MSD-BGP] provide examples of advertisement of the MSD.) As the controller does not have the knowledge of the entire label stack to be pushed by the node, in addition to the MSD value, the node SHOULD advertise the type of the MSD. For instance, the MSD value can represent the limit for pushing transport labels only while in reality the node can push an additional service label. As another example, the MSD value can represent the full limit of the node including all label types (transport, service, entropy, etc.). This gives the ability for the controller to program a label stack while leaving room for the local node to add more labels (e.g., service, entropy, etc.) without reaching the hardware/software limit. If the node does not provide the meaning of the MSD value, the controller could program an LSP using a number of labels equal to the full limit of the node. When receiving this label stack from the controller, the ingress node may not be able to add any service (L2VPN, L3VPN, EVPN, etc.) label on top of this label stack. The consequence could be for the ingress node to drop service packets that should have been forwarded over the LSP.",
      "ja": "外部コントローラーを使用して、特定のノードのラベルスタックをプログラムできます。このノードは、ヘッドエンドでサポートされている計算されたパスの最大ラベルスタック深度をコントローラーに通知するために、そのMSDをコントローラーにアドバタイズする必要があります（SHOULD）。この広告がどのように行われるかは、このドキュメントの範囲外です。 （[RFC8476]、[RFC8491]、および[MSD-BGP]は、MSDのアドバタイズの例を提供します。）コントローラは、MSD値に加えて、ノードによってプッシュされるラベルスタック全体を認識していないため、ノードはMSDのタイプを通知する必要があります。たとえば、MSD値は、実際にはノードが追加のサービスラベルをプッシュできるのに対して、トランスポートラベルをプッシュするための制限を表すことができます。別の例として、MSD値は、すべてのラベルタイプ（トランスポート、サービス、エントロピーなど）を含むノードの完全な制限を表すことができます。これにより、ローカルノードがハードウェア/ソフトウェアの制限に達することなくラベル（サービス、エントロピーなど）を追加する余地を残しながら、コントローラーがラベルスタックをプログラムできるようになります。ノードがMSD値の意味を提供しない場合、コントローラーはノードの完全な制限に等しいラベルの数を使用してLSPをプログラムできます。このラベルスタックをコントローラーから受信すると、入力ノードはこのラベルスタックの上にサービス（L2VPN、L3VPN、EVPNなど）ラベルを追加できない場合があります。その結果、入力ノードがLSPを介して転送されるべきサービスパケットをドロップする可能性があります。"
    },
    {
      "indent": 3,
      "text": "              P7 ---- P8 ---- P9\n            /                   \\\n    PE1 --- P1 --- P2 --- P3 --- P4 --- P5 --- P6 --- PE2\n                                        |  \\            |\n---->                                  P10  \\           |\nIP Pkt                                  |    \\          |\n                                       P11 --- P12 --- P13\n                                           100    10000",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "Figure 3: Topology Illustrating Label Stack Reduction",
      "ja": "図3：ラベルスタックの削減を示すトポロジ"
    },
    {
      "indent": 3,
      "text": "In Figure 3, an IP packet comes into the MPLS network at PE1. All metrics are considered equal to 1 except P12-P13, which is 10000, and P11-P12, which is 100. PE1 wants to steer the traffic using a SPRING path to PE2 along PE1 -> P1 -> P7 -> P8 -> P9 -> P4 -> P5 -> P10 -> P11 -> P12 -> P13 -> PE2. By using Adj-SIDs only, PE1 (acting as an ingress LSR, also known as an I-LSR) will be required to push 10 labels on the IP packet received and thus, requires an MSD of 10. If the IP packet should be carried over an MPLS service like a regular layer 3 VPN, an additional service label should be imposed requiring an MSD of 11 for PE1. In addition, if PE1 wants to insert an ELI/EL for load-balancing purposes, PE1 will need to push 13 labels on the IP packet requiring an MSD of 13.",
      "ja": "図3では、IPパケットがPE1のMPLSネットワークに入ります。 P12-P13（10000）とP11-P12（100）を除いて、すべてのメトリックは1と見なされます。PE1は、PE2-> P1-> P7-> P8->に沿って、PE2へのSPRINGパスを使用してトラフィックをステアリングします。 P9-> P4-> P5-> P10-> P11-> P12-> P13-> PE2。 Adj-SIDのみを使用することにより、PE1（入力LSRとして機能し、I-LSRとしても機能）は、受信したIPパケットに10のラベルをプッシュする必要があるため、MSDは10が必要です。通常のレイヤ3 VPNのようなMPLSサービスで実行される場合、PE1に11のMSDを要求する追加のサービスラベルを課す必要があります。さらに、PE1がロードバランシングの目的でELI / ELを挿入する場合、13のMSDを必要とするIPパケットに13のラベルをプッシュする必要があります。"
    },
    {
      "indent": 3,
      "text": "In the SPRING architecture, Node SIDs or Binding SIDs can be used to reduce the label stack size. As an example, to steer the traffic on the same path as before, PE1 could use the following label stack: <Node_P9, Node_P5, Binding_P5, Node_PE2>. In this example, we consider a combination of Node SIDs and a Binding SID advertised by P5 that will stitch the traffic along the path P10 -> P11 -> P12 -> P13. The instruction associated with the Binding SID at P5 is thus to swap Binding_P5 to Adj_P12-P13 and then push <Adj_P11-P12, Node_P11>. P5 acts as a stitching node that pushes additional labels on an existing label stack; P5's MSD needs also to be taken into account and may limit the number of labels that can be imposed.",
      "ja": "SPRINGアーキテクチャでは、ノードSIDまたはバインディングSIDを使用して、ラベルスタックサイズを縮小できます。例として、以前と同じパスでトラフィックを誘導するために、PE1は次のラベルスタックを使用できます：<Node_P9、Node_P5、Binding_P5、Node_PE2>。この例では、ノードSIDと、パスP10-> P11-> P12-> P13に沿ってトラフィックをステッチするP5によってアドバタイズされるバインディングSIDの組み合わせを検討します。したがって、P5のBinding SIDに関連付けられている命令は、Binding_P5をAdj_P12-P13にスワップしてから、<Adj_P11-P12、Node_P11>をプッシュすることです。 P5は、既存のラベルスタックに追加のラベルをプッシュするステッチノードとして機能します。 P5のMSDも考慮する必要があり、課すことができるラベルの数を制限する場合があります。"
    },
    {
      "indent": 0,
      "text": "6. LSP Stitching Using the Binding SID",
      "section_title": true,
      "ja": "6. バインディングSIDを使用したLSPスティッチング"
    },
    {
      "indent": 3,
      "text": "The Binding SID allows binding a segment identifier to an existing LSP. As examples, the Binding SID can represent an RSVP-TE tunnel, an LDP path (through the Mapping Server Advertisement), or a SPRING path. Each tail-end router of an MPLS LSP associated with a Binding SID has its own entropy label capability. The entropy label capability of the associated LSP is advertised in the control-plane protocol used to signal the LSP.",
      "ja": "Binding SIDを使用すると、セグメント識別子を既存のLSPにバインドできます。例として、バインディングSIDは、RSVP-TEトンネル、LDPパス（マッピングサーバーアドバタイズメント経由）、またはSPRINGパスを表すことができます。バインディングSIDに関連付けられたMPLS LSPの各テールエンドルーターには、独自のエントロピーラベル機能があります。関連するLSPのエントロピーラベル機能は、LSPのシグナリングに使用されるコントロールプレーンプロトコルでアドバタイズされます。"
    },
    {
      "indent": 3,
      "text": "In Figure 4, we consider that:",
      "ja": "図4では、次のことを考慮しています。"
    },
    {
      "indent": 3,
      "text": "* P6, PE2, P10, P11, P12, and P13 are pure LDP routers.",
      "ja": "* P6、PE2、P10、P11、P12、およびP13は、純粋なLDPルーターです。"
    },
    {
      "indent": 3,
      "text": "* PE1, P1, P2, P3, P4, P7, P8, and P9 are pure SPRING routers.",
      "ja": "* PE1、P1、P2、P3、P4、P7、P8、およびP9は純粋なSPRINGルーターです。"
    },
    {
      "indent": 3,
      "text": "* P5 is running SPRING and LDP.",
      "ja": "* P5はSPRINGおよびLDPを実行しています。"
    },
    {
      "indent": 3,
      "text": "* P5 acts as a Mapping Server and advertises Prefix-SIDs for the LDP FECs: an index value of 20 is used for PE2.",
      "ja": "* P5はマッピングサーバーとして機能し、LDP FECのプレフィックスSIDをアドバタイズします。20のインデックス値がPE2に使用されます。"
    },
    {
      "indent": 3,
      "text": "* All SPRING routers use an SRGB of [1000, 1999].",
      "ja": "* すべてのSPRINGルーターは[1000、1999]のSRGBを使用します。"
    },
    {
      "indent": 3,
      "text": "* P6 advertises label 20 for the PE2 FEC.",
      "ja": "* P6は、PE2 FECのラベル20をアドバタイズします。"
    },
    {
      "indent": 3,
      "text": "* Traffic from PE1 to PE2 uses the shortest path.",
      "ja": "* PE1からPE2へのトラフィックは最短パスを使用します。"
    },
    {
      "indent": 5,
      "text": "      PE1 ----- P1 -- P2 -- P3 -- P4 ---- P5 --- P6 --- PE2\n  -->    +----+                   +----+   +----+  +----+\nIP Pkt   | IP |                   | IP |   | IP |  | IP |\n         +----+                   +----+   +----+  +----+\n         |1020|                   |1020|   | 20 |\n         +----+                   +----+   +----+\n                                  SPRING    LDP",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "Figure 4: Example Illustrating Need for ELC Propagation",
      "ja": "図4：ELC伝播の必要性を示す例"
    },
    {
      "indent": 3,
      "text": "In terms of packet forwarding, by learning the Mapping Server Advertisement from P5, PE1 imposes a label 1020 to an IP packet destined to PE2. SPRING routers along the shortest path to PE2 will switch the traffic until it reaches P5. P5 will perform the LSP stitching by swapping the SPRING label 1020 to the LDP label 20 advertised by the next hop P6. P6 will finally forward the packet using the LDP label towards PE2.",
      "ja": "パケット転送に関しては、P5からマッピングサーバーアドバタイズメントを学習することにより、PE1はPE2宛てのIPパケットにラベル1020を適用します。 PE2への最短パスに沿ったSPRINGルーターは、P5に到達するまでトラフィックを切り替えます。 P5は、SPRINGラベル1020をネクストホップP6によってアドバタイズされたLDPラベル20にスワップすることにより、LSPスティッチングを実行します。 P6は最終的にLDPラベルを使用してパケットをPE2に転送します。"
    },
    {
      "indent": 3,
      "text": "PE1 cannot push an ELI/EL for the Binding SID without knowing that the tail end of the LSP associated with the binding (PE2) is entropy label capable.",
      "ja": "PE1は、バインディング（PE2）に関連付けられたLSPの末尾がエントロピーラベル対応であることを認識せずに、バインディングSIDのELI / ELをプッシュできません。"
    },
    {
      "indent": 3,
      "text": "To accommodate the mix of signaling protocols involved during the stitching, the entropy label capability SHOULD be propagated between the signaling domains. Each Binding SID SHOULD have its own entropy label capability that MUST be inherited from the entropy label capability of the associated LSP. If the router advertising the Binding SID does not know the ELC state of the target FEC, it MUST NOT set the ELC for the Binding SID. An ingress node MUST NOT push an ELI/EL associated with a Binding SID unless this Binding SID has the entropy label capability. How the entropy label capability is advertised for a Binding SID is outside the scope of this document (see Section 7.2.1 for potential approaches).",
      "ja": "スティッチング中に関与するシグナリングプロトコルの組み合わせに対応するには、エントロピーラベル機能をシグナリングドメイン間で伝播する必要があります（SHOULD）。各バインディングSIDには、関連するLSPのエントロピーラベル機能から継承する必要がある独自のエントロピーラベル機能が必要です（SHOULD）。バインディングSIDをアドバタイズするルーターがターゲットFECのELC状態を知らない場合、バインディングSIDのELCを設定してはなりません（MUST NOT）。入力ノードは、このバインディングSIDにエントロピーラベル機能がない限り、バインディングSIDに関連付けられたELI / ELをプッシュしてはなりません（MUST NOT）。エントロピーラベル機能がバインディングSIDに対してどのようにアドバタイズされるかは、このドキュメントの範囲外です（可能なアプローチについては、セクション7.2.1を参照してください）。"
    },
    {
      "indent": 3,
      "text": "In our example, if PE2 is LDP entropy label capable, it will add the entropy label capability in its LDP advertisement. When P5 receives the FEC/label binding for PE2, it learns about the ELC and can set the ELC in the Mapping Server Advertisement. Thus, PE1 learns about the ELC of PE2 and may push an ELI/EL associated with the Binding SID.",
      "ja": "この例では、PE2がLDPエントロピーラベル対応の場合、LDPアドバタイズメントにエントロピーラベル機能を追加します。 P5がPE2のFEC /ラベルバインディングを受信すると、ELCについて学習し、マッピングサーバーアドバタイズメントでELCを設定できます。したがって、PE1はPE2のELCについて学習し、バインディングSIDに関連付けられたELI / ELをプッシュできます。"
    },
    {
      "indent": 3,
      "text": "The proposed solution only works if the SPRING router advertising the Binding SID is also performing the data-plane LSP stitching. In our example, if the Mapping Server function is hosted on P8 instead of P5, P8 does not know about the ELC state of PE2's LDP FEC. As a consequence, it does not set the ELC for the associated Binding SID.",
      "ja": "提案されたソリューションは、Binding SIDをアドバタイズするSPRINGルーターがデータプレーンLSPスティッチングも実行している場合にのみ機能します。この例では、マッピングサーバー機能がP5ではなくP8でホストされている場合、P8はPE2のLDP FECのELC状態を認識しません。その結果、関連付けられたバインディングSIDのELCは設定されません。"
    },
    {
      "indent": 0,
      "text": "7. Insertion of Entropy Labels for SPRING Path",
      "section_title": true,
      "ja": "7. SPRINGパスのエントロピーラベルの挿入"
    },
    {
      "indent": 0,
      "text": "7.1. Overview",
      "section_title": true,
      "ja": "7.1. 概観"
    },
    {
      "indent": 3,
      "text": "The solution described in this section follows the data-plane processing defined in [RFC6790]. Within a SPRING path, a node may be ingress, egress, transit (regarding the entropy label processing described in [RFC6790]), or it can be any combination of those. For example:",
      "ja": "このセクションで説明するソリューションは、[RFC6790]で定義されているデータプレーン処理に従います。 SPRINGパス内では、ノードは（[RFC6790]で説明されているエントロピーラベル処理に関して）入力、出力、通過のいずれかであるか、またはそれらの任意の組み合わせにすることができます。例えば："
    },
    {
      "indent": 3,
      "text": "* The ingress node of a SPRING domain can be an ingress node from an entropy label perspective.",
      "ja": "* SPRINGドメインの入口ノードは、エントロピーラベルの観点からは入口ノードになることができます。"
    },
    {
      "indent": 3,
      "text": "* Any LSR terminating a segment of the SPRING path is an egress node (because it terminates the segment) but can also be a transit node if the SPRING path is not terminated because there is a subsequent SPRING MPLS label in the stack.",
      "ja": "* SPRINGパスのセグメントを終了するLSRは出力ノードです（セグメントを終了するため）。ただし、スタックに後続のSPRING MPLSラベルがあるためにSPRINGパスが終了しない場合は、トランジットノードにもなります。"
    },
    {
      "indent": 3,
      "text": "* Any LSR processing a Binding SID may be a transit node and an ingress node (because it may push additional labels when processing the Binding SID).",
      "ja": "* バインディングSIDを処理するすべてのLSRは、トランジットノードと入力ノードになる可能性があります（バインディングSIDを処理するときに追加のラベルをプッシュする可能性があるため）。"
    },
    {
      "indent": 3,
      "text": "As described earlier, an LSR may have a limitation (the ERLD) on the depth of the label stack that it can read and process in order to do multipath load-balancing based on entropy labels.",
      "ja": "前述のように、LSRは、エントロピーラベルに基づいてマルチパスロードバランシングを実行するために読み取りおよび処理できるラベルスタックの深さに制限（ERLD）がある場合があります。"
    },
    {
      "indent": 3,
      "text": "If an EL does not occur within the ERLD of an LSR in the label stack of an MPLS packet that it receives, then it would lead to poor load-balancing at that LSR. Hence, an ELI/EL pair must be within the ERLD of the LSR in order for the LSR to use the EL during load-balancing.",
      "ja": "ELが受信するMPLSパケットのラベルスタック内のLSRのERLD内でELが発生しない場合、そのLSRでのロードバランシングが不十分になります。したがって、ロードバランシング中にLSRがELを使用するためには、ELI / ELペアがLSRのERLD内にある必要があります。"
    },
    {
      "indent": 3,
      "text": "Adding a single ELI/EL pair for the entire SPRING path can also lead to poor load-balancing as well because the ELI/EL may not occur within the ERLD of some LSR on the path (if too deep) or may not be present in the stack when it reaches some LSRs (if it is too shallow).",
      "ja": "SPRINGパス全体に単一のELI / ELペアを追加すると、ELI / ELがパスの一部のLSRのERLD内で発生しない（深すぎる場合）か、または存在しない可能性があるため、ロードバランシングも不十分になる可能性があります。一部のLSRに達したときのスタック（浅すぎる場合）。"
    },
    {
      "indent": 3,
      "text": "In order for the EL to occur within the ERLD of LSRs along the path corresponding to a SPRING label stack, multiple <ELI, EL> pairs MAY be inserted in this label stack.",
      "ja": "ELがLPRのERLD内でSPRINGラベルスタックに対応するパスに沿って発生するためには、このラベルスタックに複数の<ELI、EL>ペアを挿入できます（MAY）。"
    },
    {
      "indent": 3,
      "text": "The insertion of an ELI/EL MUST occur only with a SPRING label advertised by an LSR that advertised an ERLD (the LSR is entropy label capable) or with a SPRING label associated with a Binding SID that has the ELC set.",
      "ja": "ELI / ELの挿入は、ERLDをアドバタイズしたLSR（LSRはエントロピーラベル対応）によってアドバタイズされたSPRINGラベル、またはELCセットを持つバインディングSIDに関連付けられたSPRINGラベルでのみ発生する必要があります。"
    },
    {
      "indent": 3,
      "text": "The ELs among multiple <ELI, EL> pairs inserted in the stack MAY be the same or different. The LSR that inserts <ELI, EL> pairs can have limitations on the number of such pairs that it can insert and also the depth at which it can insert them. If, due to limitations, the inserted ELs are at positions such that an LSR along the path receives an MPLS packet without an EL in the label stack within that LSR's ERLD, then the load-balancing performed by that LSR would be poor. An implementation MAY consider multiple criteria when inserting <ELI, EL> pairs.",
      "ja": "スタックに挿入された複数の<ELI、EL>ペア間のELは、同じでも異なっていてもかまいません。 <ELI、EL>ペアを挿入するLSRは、挿入できるペアの数と、ペアを挿入できる深さに制限がある場合があります。制限により、挿入されたELが、パスに沿ったLSRが、そのLSRのERLD内のラベルスタックでELなしでMPLSパケットを受信するような位置にある場合、そのLSRによって実行されるロードバランシングは不十分です。実装は、<ELI、EL>ペアを挿入するときに複数の基準を考慮することができます（MAY）。"
    },
    {
      "indent": 0,
      "text": "7.1.1. Example 1: The Ingress Node Has a Sufficient MSD",
      "section_title": true,
      "ja": "7.1.1. 例1：入力ノードに十分なMSDがある"
    },
    {
      "indent": 6,
      "text": "                  ECMP          LAG           LAG\nPE1 --- P1 --- P2 --- P3 --- P4 --- P5 --- P6 --- PE2",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 18,
      "text": "Figure 5: Accommodating MSD Limitations",
      "ja": "図5：MSDの制限への対応"
    },
    {
      "indent": 3,
      "text": "In Figure 5, PE1 wants to forward some MPLS VPN traffic over an explicit path to PE2 resulting in the following label stack to be pushed onto the received IP header: <Adj_P1P2, Adj_set_P2P3, Adj_P3P4, Adj_P4P5, Adj_P5P6, Adj_P6PE2, VPN_label>. PE1 is limited to push a maximum of 11 labels (MSD=11). P2, P3, and P6 have an ERLD of 3 while others have an ERLD of 10.",
      "ja": "図5では、PE1が明示的なパスを介して一部のMPLS VPNトラフィックをPE2に転送することを望んでおり、その結果、次のラベルスタックが受信IPヘッダーにプッシュされます。 PE1は、最大11のラベル（MSD = 11）をプッシュするように制限されています。 P2、P3、およびP6のERLDは3ですが、他のERLDは10です。"
    },
    {
      "indent": 3,
      "text": "PE1 can only add two ELI/EL pairs in the label stack due to its MSD limitation. It should insert them strategically to benefit load-balancing along the longest part of the path.",
      "ja": "PE1は、MSDの制限により、ラベルスタックに追加できるELI / ELペアは2つだけです。パスの最長部分に沿ったロードバランシングに役立つように、戦略的にそれらを挿入する必要があります。"
    },
    {
      "indent": 3,
      "text": "PE1 can take into account multiple parameters when inserting ELs; as examples:",
      "ja": "PEはELを挿入するときに複数のパラメーターを考慮することができます。例として："
    },
    {
      "indent": 3,
      "text": "* The ERLD value advertised by transit nodes.",
      "ja": "* トランジットノードによってアドバタイズされるERLD値。"
    },
    {
      "indent": 3,
      "text": "* The requirement of load-balancing for a particular label value.",
      "ja": "* 特定のラベル値のロードバランシングの要件。"
    },
    {
      "indent": 3,
      "text": "* Any service provider preference: favor beginning of the path or end of the path.",
      "ja": "* 任意のサービスプロバイダー設定：パスの先頭またはパスの末尾を優先します。"
    },
    {
      "indent": 3,
      "text": "In Figure 5, a good strategy may be to use the following stack <Adj_P1P2, Adj_set_P2P3, ELI1, EL1, Adj_P3P4, Adj_P4P5, Adj_P5P6, Adj_P6PE2, ELI2, EL2, VPN_label>. The original stack requests P2 to forward based on an L3 adjacency-set that will require load-balancing. Therefore, it is important to ensure that P2 can load-balance correctly. As P2 has a limited ERLD of 3, an ELI/EL must be inserted just after the label that P2 will use to forward. On the path to PE2, P3 has also a limited ERLD, but P3 will forward based on a regular adjacency segment that may not require load-balancing. Therefore, it does not seem important to ensure that P3 can do load-balancing despite its limited ERLD. The next nodes along the forwarding path have a high ERLD that does not cause any issue, except P6. Moreover, P6 is using some LAGs to PE2 and so is expected to load-balance. It becomes important to insert a new ELI/EL just after the P6 forwarding label.",
      "ja": "図5では、次のスタック<Adj_P1P2、Adj_set_P2P3、ELI1、EL1、Adj_P3P4、Adj_P4P5、Adj_P5P6、Adj_P6PE2、ELI2、EL2、VPN_label>を使用することをお勧めします。元のスタックは、ロードバランシングを必要とするL3隣接セットに基づいてP2に転送を要求します。したがって、P2が正しく負荷分散できるようにすることが重要です。 P2のERLDは3に制限されているため、P2が転送に使用するラベルの直後にELI / ELを挿入する必要があります。 PE2へのパスでは、P3のERLDも制限されていますが、P3は、ロードバランシングを必要としない通常の隣接セグメントに基づいて転送します。したがって、ERLDが制限されているにもかかわらず、P3がロードバランシングを実行できるようにすることは重要ではないようです。転送パスに沿った次のノードは、ERLDが高く、P6以外の問題は発生しません。さらに、P6はPE2にいくつかのLAGを使用しているため、負荷分散が期待されます。 P6転送ラベルの直後に新しいELI / ELを挿入することが重要になります。"
    },
    {
      "indent": 3,
      "text": "In the case above, the ingress node was able to support a sufficient MSD to ensure end-to-end load-balancing while taking into account the path attributes. However, there might be cases where the ingress node may not have the necessary label imposition capacity.",
      "ja": "上記の場合、入口ノードは、パス属性を考慮しながら、エンドツーエンドのロードバランシングを確保するために十分なMSDをサポートできました。ただし、入力ノードに必要なラベルインポジション容量がない場合があります。"
    },
    {
      "indent": 0,
      "text": "7.1.2. Example 2: The Ingress Node Does Not Have a Sufficient MSD",
      "section_title": true,
      "ja": "7.1.2. 例2：入力ノードに十分なMSDがない"
    },
    {
      "indent": 4,
      "text": "                  ECMP          LAG           ECMP         ECMP\nPE1 --- P1 --- P2 --- P3 --- P4 --- P5 --- P6 --- P7 --- P8 --- PE2",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 24,
      "text": "Figure 6: MSD Considerations",
      "ja": "図6：MSDに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "In Figure 6, PE1 wants to forward MPLS VPN traffic over an explicit path to PE2 resulting in the following label stack to be pushed onto the IP header: <Adj_P1P2, Adj_set_P2P3, Adj_P3P4, Adj_P4P5, Adj_P5P6, Adj_set_P6P7, Adj_P7P8; Adj_set_P8PE2, VPN_label>. PE1 is limited to push a maximum of 11 labels. P2, P3, and P6 have an ERLD of 3 while others have an ERLD of 15.",
      "ja": "図6では、PE1は明示的なパスを介してMPLS VPNトラフィックをPE2に転送することを望んでおり、その結果、次のラベルスタックがIPヘッダーにプッシュされます。 Adj_set_P8PE2、VPN_label>。 PE1は、最大11のラベルをプッシュするように制限されています。 P2、P3、およびP6のERLDは3ですが、他のERLDは15です。"
    },
    {
      "indent": 3,
      "text": "Using a similar strategy as the previous case may lead to a dilemma, as PE1 can only push a single ELI/EL while we may need a minimum of three to load-balance the end-to-end path. An optimized stack that would enable end-to-end load-balancing may be: <Adj_P1P2, Adj_set_P2P3, ELI1, EL1, Adj_P3P4, Adj_P4P5, Adj_P5P6, Adj_set_P6P7, ELI2, EL2, Adj_P7P8, Adj_set_P8PE2, ELI3, EL3, VPN_label>.",
      "ja": "前のケースと同様の戦略を使用すると、ジレンマにつながる可能性があります。これは、PE1が単一のELI / ELしかプッシュできない一方で、エンドツーエンドパスの負荷を分散するために最低3つが必要になる場合があるためです。エンドツーエンドのロードバランシングを有効にする最適化されたスタックは、次のとおりです。"
    },
    {
      "indent": 3,
      "text": "A decision needs to be taken to favor some part of the path for load-balancing considering that load-balancing may not work on the other parts. A service provider may decide to place the ELI/EL after the P6 forwarding label as it will allow P4 and P6 to load-balance. Placing the ELI/EL at the bottom of the stack is also a possibility enabling load-balancing for P4 and P8.",
      "ja": "ロードバランシングが他の部分で機能しない可能性があることを考慮して、ロードバランシングのパスの一部を優先する決定を行う必要があります。サービスプロバイダーは、P6転送ラベルの後にELI / ELを配置することを決定できます。これにより、P4とP6がロードバランスできるようになります。スタックの一番下にELI / ELを配置すると、P4とP8のロードバランシングが可能になります。"
    },
    {
      "indent": 0,
      "text": "7.2. Considerations for the Placement of Entropy Labels",
      "section_title": true,
      "ja": "7.2. エントロピーラベルの配置に関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The sample cases described in the previous section showed that ELI/EL placement when the maximum number of labels to be pushed is limited is not an easy decision, and multiple criteria may be taken into account.",
      "ja": "前のセクションで説明したサンプルケースは、プッシュされるラベルの最大数が制限されている場合のELI / ELの配置は簡単な決定ではなく、複数の基準が考慮される可能性があることを示しました。"
    },
    {
      "indent": 3,
      "text": "This section describes some considerations that an implementation MAY take into account when placing ELI/ELs. This list of criteria is not considered exhaustive and an implementation MAY take into account additional criteria or tiebreakers that are not documented here. As the insertion of ELI/ELs is performed by the ingress node, having ingress nodes that do not use the same criteria does not cause an interoperability issue. However, from a network design and operation perspective, it is better to have all ingress routers using the same criteria.",
      "ja": "このセクションでは、ELI / ELを配置するときに実装が考慮すべきいくつかの考慮事項について説明します。この基準のリストは完全なものとは見なされず、実装では、ここに記載されていない追加の基準またはタイブレーカーを考慮に入れる場合があります。 ELI / ELの挿入は入力ノードによって実行されるため、同じ基準を使用しない入力ノードがあっても、相互運用性の問題は発生しません。ただし、ネットワークの設計と運用の観点からは、すべての入力ルーターに同じ基準を使用することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "An implementation SHOULD try to maximize the possibility of load-balancing along the path by inserting an ELI/EL where multiple equal-cost paths are available and minimize the number of ELI/ELs that need to be inserted. In case of a trade-off, an implementation SHOULD provide flexibility to the operator to select the criteria to be considered when placing ELI/ELs or specify a subobjective for optimization.",
      "ja": "実装は、複数の等コストパスが利用可能なELI / ELを挿入することにより、パスに沿ったロードバランシングの可能性を最大化し、挿入する必要があるELI / ELの数を最小限に抑えるようにする必要があります。トレードオフの場合、実装は、ELI / ELを配置するときに考慮すべき基準を選択するか、最適化のサブオブジェクトを指定する柔軟性をオペレーターに提供する必要があります（SHOULD）。"
    },
    {
      "indent": 6,
      "text": "                      2      2\nPE1 -- P1 -- P2 --P3 --- P4 --- P5 -- ... -- P8 -- P9 -- PE2\n                  |             |\n                  P3'--- P4'--- P5'",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 26,
      "text": "Figure 7: MSD Trade-Offs",
      "ja": "図7：MSDのトレードオフ"
    },
    {
      "indent": 3,
      "text": "Figure 7 will be used as reference in the following subsections. All metrics are equal to 1 except P3-P4 and P4-P5, which have a metric 2. We consider the MSD of nodes to be the full limit of label imposition (including service labels, entropy labels, and transport labels).",
      "ja": "図7は、以下のサブセクションで参照として使用されます。メトリック2を持つP3-P4およびP4-P5を除いて、すべてのメトリックは1です。ノードのMSDは、ラベルインポジション（サービスラベル、エントロピーラベル、トランスポートラベルを含む）の完全な制限と見なされます。"
    },
    {
      "indent": 0,
      "text": "7.2.1. ERLD Value",
      "section_title": true,
      "ja": "7.2.1. ERLD値"
    },
    {
      "indent": 3,
      "text": "As mentioned in Section 7.1, the ERLD value is an important parameter to consider when inserting an ELI/EL. If an ELI/EL does not fall within the ERLD of a node on the path, the node will not be able to load-balance the traffic efficiently.",
      "ja": "セクション7.1で述べたように、ERLD値は、ELI / ELを挿入するときに考慮すべき重要なパラメーターです。 ELI / ELがパス上のノードのERLD内にない場合、ノードはトラフィックを効率的に負荷分散できません。"
    },
    {
      "indent": 3,
      "text": "The ERLD value can be advertised via protocols, and those extensions are described in separate documents (for instance, [ISIS-ELC] and [OSPF-ELC]).",
      "ja": "ERLD値はプロトコルを介してアドバタイズでき、それらの拡張は個別のドキュメントで説明されています（たとえば、[ISIS-ELC]と[OSPF-ELC]）。"
    },
    {
      "indent": 3,
      "text": "Let's consider a path from PE1 to PE2 using the following stack pushed by PE1: <Adj_P1P2, Node_P9, Adj_P9PE2, Service_label>.",
      "ja": "PE1によってプッシュされた次のスタックを使用して、PE1からPE2へのパスを考えてみましょう：<Adj_P1P2、Node_P9、Adj_P9PE2、Service_label>。"
    },
    {
      "indent": 3,
      "text": "Using the ERLD as an input parameter can help to minimize the number of required ELI/EL pairs to be inserted. An ERLD value must be retrieved for each SPRING label in the label stack.",
      "ja": "ERLDを入力パラメーターとして使用すると、挿入する必要のあるELI / ELペアの数を最小限に抑えることができます。 ERLD値は、ラベルスタック内のSPRINGラベルごとに取得する必要があります。"
    },
    {
      "indent": 3,
      "text": "For a label bound to an adjacency segment, the ERLD is the ERLD of the node that has advertised the adjacency segment. In the example above, the ERLD associated with Adj_P1P2 would be the ERLD of router P1, as P1 will perform the forwarding based on the Adj_P1P2 label.",
      "ja": "隣接セグメントにバインドされたラベルの場合、ERLDは隣接セグメントをアドバタイズしたノードのERLDです。上記の例では、P1はAdj_P1P2ラベルに基づいて転送を実行するため、Adj_P1P2に関連付けられたERLDはルーターP1のERLDになります。"
    },
    {
      "indent": 3,
      "text": "For a label bound to a node segment, multiple strategies MAY be implemented. An implementation MAY try to evaluate the minimum ERLD value along the node segment path. If an implementation cannot find the minimum ERLD along the path of the segment or does not support the computation of the minimum ERLD, it SHOULD instead use the ERLD of the tail-end node. Using the ERLD of the tail end of the node segment mimics the behavior of [RFC6790] where the ingress takes only care of the egress of the LSP. In the example above, if the implementation supports computation of minimum ERLD along the path, the ERLD associated with label Node_P9 would be the minimum ERLD between nodes {P2,P3,P4 ..., P8}. If the implementation does not support the computation of minimum ERLD, it will consider the ERLD of P9 (tail-end node of Node_P9 SID). While providing the more optimal ELI/EL placement, evaluating the minimum ERLD increases the complexity of ELI/EL insertion. As the path to the Node SID may change over time, a recomputation of the minimum ERLD is required for each topology change. This recomputation may require the positions of the ELI/ELs to change.",
      "ja": "ノードセグメントにバインドされたラベルの場合、複数の戦略が実装される場合があります。実装は、ノードセグメントパスに沿って最小ERLD値を評価しようとする場合があります。実装がセグメントのパスに沿って最小ERLDを見つけられない場合、または最小ERLDの計算をサポートしていない場合、代わりにテールエンドノードのERLDを使用する必要があります（SHOULD）。ノードセグメントのテールエンドのERLDを使用すると、入力がLSPの出力のみを処理する[RFC6790]の動作を模倣します。上記の例では、実装がパスに沿った最小ERLDの計算をサポートしている場合、ラベルNode_P9に関連付けられているERLDは、ノード間の最小ERLD {P2、P3、P4 ...、P8}になります。実装が最小ERLDの計算をサポートしていない場合は、P9のERLD（Node_P9 SIDのテールエンドノード）が考慮されます。より最適なELI / EL配置を提供しながら、最小ERLDを評価すると、ELI / EL挿入の複雑さが増します。ノードSIDへのパスは時間の経過とともに変化する可能性があるため、トポロジを変更するたびに最小ERLDの再計算が必要です。この再計算では、ELI / ELの位置を変更する必要がある場合があります。"
    },
    {
      "indent": 3,
      "text": "For a label bound to a Binding Segment, if the Binding Segment describes a path, an implementation MAY also try to evaluate the minimum ERLD along this path. If the implementation cannot find the minimum ERLD along the path of the segment or does not support this evaluation, it SHOULD instead use the ERLD of the node advertising the Binding SID. As for the node segment, evaluating the minimum ERLD adds complexity in the ELI/EL insertion process.",
      "ja": "バインディングセグメントにバインドされたラベルの場合、バインディングセグメントがパスを記述している場合、実装はこのパスに沿った最小ERLDの評価も試みます（MAY）。実装がセグメントのパスに沿って最小ERLDを見つけられない場合、またはこの評価をサポートしない場合は、代わりに、バインディングSIDをアドバタイズするノードのERLDを使用する必要があります。ノードセグメントについては、最小ERLDを評価すると、ELI / EL挿入プロセスが複雑になります。"
    },
    {
      "indent": 0,
      "text": "7.2.2. Segment Type",
      "section_title": true,
      "ja": "7.2.2. セグメントタイプ"
    },
    {
      "indent": 3,
      "text": "Depending on the type of segment a particular label is bound to, an implementation can deduce that this particular label will be subject to load-balancing on the path.",
      "ja": "特定のラベルがバインドされているセグメントのタイプに応じて、実装は、この特定のラベルがパスのロードバランシングの対象になると推定できます。"
    },
    {
      "indent": 0,
      "text": "7.2.2.1. Node SID",
      "section_title": true,
      "ja": "7.2.2.1. ノードSID"
    },
    {
      "indent": 3,
      "text": "An MPLS label bound to a Node SID represents a path that may cross multiple hops. Load-balancing may be needed on the node starting this path but also on any node along the path.",
      "ja": "ノードSIDにバインドされたMPLSラベルは、複数のホップを通過する可能性のあるパスを表します。このパスを開始するノードだけでなく、パス上の任意のノードでも負荷分散が必要になる場合があります。"
    },
    {
      "indent": 3,
      "text": "In Figure 7, let's consider a path from PE1 to PE2 using the following stack pushed by PE1: <Adj_P1P2, Node_P9, Adj_P9PE2, Service_label>.",
      "ja": "図7では、PE1によってプッシュされた次のスタックを使用して、PE1からPE2へのパスを考えてみましょう：<Adj_P1P2、Node_P9、Adj_P9PE2、Service_label>。"
    },
    {
      "indent": 3,
      "text": "If, for example, PE1 is limited to push 6 labels, it can add a single ELI/EL within the label stack. An operator may want to favor a placement that would allow load-balancing along the Node SID path. In Figure 7, P3, which is along the Node SID path, requires load-balancing between two equal-cost paths.",
      "ja": "たとえば、PE1が6つのラベルをプッシュするように制限されている場合、ラベルスタック内に1つのELI / ELを追加できます。オペレーターは、ノードSIDパスに沿ったロードバランシングを可能にする配置を優先したい場合があります。図7では、ノードSIDパスに沿ったP3は、2つの等コストパス間のロードバランシングを必要とします。"
    },
    {
      "indent": 3,
      "text": "An implementation MAY try to evaluate if load-balancing is really required within a node segment path. This could be done by running an additional SPT (Shortest Path Tree) computation and analyzing of the node segment path to prevent a node segment that does not really require load-balancing from being preferred when placing ELI/ELs. Such inspection may be time consuming for implementations and without a 100% guarantee, as a node segment path may use LAGs that are invisible to the IP topology. As a simpler approach, an implementation MAY consider that a label bound to a Node SID will be subject to load-balancing and require an ELI/EL.",
      "ja": "実装は、ノードセグメントパス内でロードバランシングが本当に必要かどうかを評価しようとします。これは、追加のSPT（最短パスツリー）計算を実行し、ノードセグメントパスを分析して、ELI / ELを配置するときにロードバランシングを実際に必要としないノードセグメントが優先されないようにすることで実行できます。ノードセグメントパスはIPトポロジからは見えないLAGを使用する場合があるため、このような検査は実装に時間がかかり、100％の保証がない場合があります。より簡単なアプローチとして、実装はノードSIDにバインドされたラベルがロードバランシングの対象となり、ELI / ELが必要になることを考慮してもよい（MAY）。"
    },
    {
      "indent": 0,
      "text": "7.2.2.2. Adjacency-Set SID",
      "section_title": true,
      "ja": "7.2.2.2. 隣接セットSID"
    },
    {
      "indent": 3,
      "text": "An adjacency-set is an Adj-SID that refers to a set of adjacencies. When an adjacency-set segment is used within a label stack, an implementation can deduce that load-balancing is expected at the node that advertised this adjacency segment. An implementation MAY favor the insertion of an ELI/EL after the Adj-SID representing an adjacency-set.",
      "ja": "隣接セットは、隣接のセットを参照するAdj-SIDです。隣接セットセグメントがラベルスタック内で使用されている場合、実装は、この隣接セグメントをアドバタイズしたノードでロードバランシングが予想されることを推定できます。実装は、隣接セットを表すAdj-SIDの後にELI / ELを挿入することを優先してもよい（MAY）。"
    },
    {
      "indent": 0,
      "text": "7.2.2.3. Adjacency SID Representing a Single IP Link",
      "section_title": true,
      "ja": "7.2.2.3. 単一のIPリンクを表す隣接SID"
    },
    {
      "indent": 3,
      "text": "When an adjacency segment representing a single IP link is used within a label stack, an implementation can deduce that load-balancing may not be expected at the node that advertised this adjacency segment.",
      "ja": "単一のIPリンクを表す隣接セグメントがラベルスタック内で使用されている場合、実装では、この隣接セグメントをアドバタイズしたノードでロードバランシングが予期されない可能性があると推定できます。"
    },
    {
      "indent": 3,
      "text": "An implementation MAY NOT place an ELI/EL after a regular Adj-SID in order to favor the insertion of ELI/ELs following other segments.",
      "ja": "実装は、他のセグメントに続くELI / ELの挿入を優先するために、通常のAdj-SIDの後にELI / ELを配置しないでください。"
    },
    {
      "indent": 3,
      "text": "Readers should note that an adjacency segment representing a single IP link may require load-balancing. This is the case when a LAG (L2 bundle) is implemented between two IP nodes and the L2 bundle SR extensions [RFC8668] are not implemented. In such a case, it could be useful to insert an ELI/EL in a readable position for the LSR advertising the label associated with the adjacency segment. To communicate the requirement for load-balancing for a particular Adjacency SID to ingress nodes, a user can enforce the use of the L2 bundle SR extensions defined in [RFC8668] or can declare the single adjacency as an adjacency-set.",
      "ja": "読者は、単一のIPリンクを表す隣接セグメントがロードバランシングを必要とする場合があることに注意する必要があります。これは、LAG（L2バンドル）が2つのIPノード間に実装され、L2バンドルSR拡張[RFC8668]が実装されていない場合です。このような場合、隣接セグメントに関連付けられたラベルをアドバタイズするLSRの読み取り可能な位置にELI / ELを挿入すると便利です。特定の隣接SIDのロードバランシングの要件を入力ノードに伝えるには、[RFC8668]で定義されているL2バンドルSR拡張の使用を強制するか、単一の隣接を隣接セットとして宣言できます。"
    },
    {
      "indent": 0,
      "text": "7.2.2.4. Adjacency SID Representing a Single Link within an L2 Bundle",
      "section_title": true,
      "ja": "7.2.2.4. L2バンドル内の単一のリンクを表す隣接SID"
    },
    {
      "indent": 3,
      "text": "When the L2 bundle SR extensions [RFC8668] are used, adjacency segments may be advertised for each member of the bundle. In this case, an implementation can deduce that load-balancing is not expected on the LSR advertising this segment and MAY NOT insert an ELI/EL after the corresponding label.",
      "ja": "L2バンドルSR拡張[RFC8668]を使用すると、隣接セグメントがバンドルの各メンバーに対してアドバタイズされる場合があります。この場合、実装は、このセグメントをアドバタイズするLSRでロードバランシングが予期されていないことを推定でき、対応するラベルの後にELI / ELを挿入してはなりません（MAY NOT）。"
    },
    {
      "indent": 0,
      "text": "7.2.2.5. Adjacency SID Representing an L2 Bundle",
      "section_title": true,
      "ja": "7.2.2.5. L2バンドルを表す隣接SID"
    },
    {
      "indent": 3,
      "text": "When the L2 bundle SR extensions [RFC8668] are used, an adjacency segment may be advertised to represent the bundle. In this case, an implementation can deduce that load-balancing is expected on the LSR advertising this segment and MAY insert an ELI/EL after the corresponding label.",
      "ja": "L2バンドルSR拡張[RFC8668]が使用される場合、隣接セグメントがバンドルを表すようにアドバタイズされることがあります。この場合、実装は、このセグメントをアドバタイズするLSRでロードバランシングが予想されると推定でき、対応するラベルの後にELI / ELを挿入できます（MAY）。"
    },
    {
      "indent": 0,
      "text": "7.2.3. Maximizing Number of LSRs That Will Load-Balance",
      "section_title": true,
      "ja": "7.2.3. ロードバランスするLSRの数を最大化する"
    },
    {
      "indent": 3,
      "text": "When placing ELI/ELs, an implementation MAY optimize the number of LSRs that both need to load-balance (i.e., have ECMPs) and that will be able to perform load-balancing (i.e., the EL is within their ERLD).",
      "ja": "ELI / ELを配置するとき、実装は、両方がロードバランシングする必要がある（つまり、ECMPを持っている）LSRの数を最適化でき（MELはロードバランシングを実行できます（つまり、ELはERLD内にあります））。"
    },
    {
      "indent": 3,
      "text": "Let's consider a path from PE1 to PE2 using the following stack pushed by PE1: <Adj_P1P2, Node_P9, Adj_P9PE2, Service_label>. All routers have an ERLD of 10 except P1 and P2, which have an ERLD of 4. PE1 is able to push 6 labels, so only a single ELI/EL can be added.",
      "ja": "PE1によってプッシュされた次のスタックを使用して、PE1からPE2へのパスを考えてみましょう：<Adj_P1P2、Node_P9、Adj_P9PE2、Service_label>。 ERLDが4のP1とP2を除いて、すべてのルーターのERLDは10です。PE1は6つのラベルをプッシュできるため、追加できるELI / ELは1つだけです。"
    },
    {
      "indent": 3,
      "text": "In the example above, adding an ELI/EL after Adj_P1P2 will only allow load-balancing at P1, while inserting it after Adj_PE2P9 will allow load-balancing at P2, P3 ... P9 and maximize the number of LSRs that can perform load-balancing.",
      "ja": "上記の例では、Adj_P1P2の後にELI / ELを追加すると、P1でのみロードバランシングが可能になりますが、Adj_PE2P9の後に挿入すると、P2、P3 ... P9でロードバランシングが可能になり、ロードを実行できるLSRの数を最大化できます。バランス。"
    },
    {
      "indent": 0,
      "text": "7.2.4. Preference for a Part of the Path",
      "section_title": true,
      "ja": "7.2.4. パスの一部の設定"
    },
    {
      "indent": 3,
      "text": "An implementation MAY allow the user to favor a part of the end-to-end path when the number of ELI/ELs that can be pushed is not enough to cover the entire path. As an example, a service provider may want to favor load-balancing at the beginning of the path or at the end of the path, so the implementation favors putting the ELI/ELs near the top or the bottom of the stack.",
      "ja": "実装により、プッシュできるELI / ELの数がパス全体をカバーするのに十分でない場合、ユーザーはエンドツーエンドパスの一部を優先できます。例として、サービスプロバイダーは、パスの最初または最後でロードバランシングを優先する場合があるため、実装では、ELI / ELをスタックの上部または下部に配置することを優先します。"
    },
    {
      "indent": 0,
      "text": "7.2.5. Combining Criteria",
      "section_title": true,
      "ja": "7.2.5. 結合基準"
    },
    {
      "indent": 3,
      "text": "An implementation MAY combine multiple criteria to determine the best ELI/ELs placement. However, combining too many criteria could lead to implementation complexity and high resource consumption. Each time the network topology changes, a new evaluation of the ELI/EL placement will be necessary for each impacted LSP.",
      "ja": "実装では、複数の基準を組み合わせて、ELI / ELの最適な配置を決定できます。ただし、あまりにも多くの基準を組み合わせると、実装が複雑になり、リソースが大量に消費される可能性があります。ネットワークトポロジが変更されるたびに、影響を受けるLSPごとにELI / EL配置の新しい評価が必要になります。"
    },
    {
      "indent": 0,
      "text": "8. A Simple Example Algorithm",
      "section_title": true,
      "ja": "8. 簡単なアルゴリズムの例"
    },
    {
      "indent": 3,
      "text": "A simple implementation might take into account the ERLD when placing ELI/EL while trying to minimize the number of ELI/ELs inserted and trying to maximize the number of LSRs that can load-balance.",
      "ja": "単純な実装では、ELI / ELを配置するときにERLDを考慮に入れて、挿入されるELI / ELの数を最小限に抑え、ロードバランスできるLSRの数を最大化しようとします。"
    },
    {
      "indent": 3,
      "text": "The example algorithm is based on the following considerations:",
      "ja": "アルゴリズムの例は、次の考慮事項に基づいています。"
    },
    {
      "indent": 3,
      "text": "* An LSR that can insert a limited number of <ELI, EL> pairs should insert such pairs deeper in the stack.",
      "ja": "* 限られた数の<ELI、EL>ペアを挿入できるLSRは、そのようなペアをスタックのより深いところに挿入する必要があります。"
    },
    {
      "indent": 3,
      "text": "* An LSR should try to insert <ELI, EL> pairs at positions to maximize the number of transit LSRs for which the EL occurs within the ERLD of those LSRs.",
      "ja": "* LSRは、ELがそれらのLSRのERLD内で発生する通過LSRの数を最大化する位置に<ELI、EL>ペアを挿入しようとする必要があります。"
    },
    {
      "indent": 3,
      "text": "* An LSR should try to insert the minimum number of such pairs while trying to satisfy the above criteria.",
      "ja": "* LSRは、上記の基準を満たそうとしながら、そのようなペアの最小数を挿入しようとする必要があります。"
    },
    {
      "indent": 3,
      "text": "The pseudocode of the example algorithm is shown below.",
      "ja": "アルゴリズム例の疑似コードを以下に示します。"
    },
    {
      "indent": 6,
      "text": "Initialize the current EL insertion point to the\n  bottom-most label in the stack that is EL-capable\nwhile (local-node can push more <ELI,EL> pairs OR\n          insertion point is not above label stack) {\n    insert an <ELI,EL> pair below current insertion point\n    move new insertion point up from current insertion point until\n        ((last inserted EL is below the ERLD) AND (ERLD > 2)\n                          AND\n         (new insertion point is EL-capable))\n    set current insertion point to new insertion point\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Figure 8: Example Algorithm to Insert <ELI, EL> Pairs in a Label Stack",
      "ja": "図8：ラベルスタックに<ELI、EL>ペアを挿入するアルゴリズムの例"
    },
    {
      "indent": 3,
      "text": "When this algorithm is applied to the example described in Section 3, it will result in ELs being inserted in two positions; one after the label L_N-D and another after L_N-P3. Thus, the resulting label stack would be <L_N-P3, ELI, EL, L_A-L1, L_N-D, ELI, EL>.",
      "ja": "このアルゴリズムをセクション3で説明する例に適用すると、ELが2つの位置に挿入されます。 1つはラベルL_N-Dの後、もう1つはL_N-P3の後。したがって、結果のラベルスタックは<L_N-P3、ELI、EL、L_A-L1、L_N-D、ELI、EL>になります。"
    },
    {
      "indent": 0,
      "text": "9. Deployment Considerations",
      "section_title": true,
      "ja": "9. 導入に関する考慮事項"
    },
    {
      "indent": 3,
      "text": "As long as LSR node data-plane capabilities are limited (number of labels that can be pushed or number of labels that can be inspected), hop-by-hop load-balancing of SPRING-encapsulated flows will require trade-offs.",
      "ja": "LSRノードのデータプレーン機能が制限されている限り（プッシュできるラベルの数または検査できるラベルの数）、SPRINGカプセル化フローのホップごとのロードバランシングにはトレードオフが必要です。"
    },
    {
      "indent": 3,
      "text": "The entropy label is still a good and usable solution as it allows load-balancing without having to perform deep packet inspection on each LSR: It does not seem reasonable to have an LSR inspecting UDP ports within a GRE tunnel carried over a 15-label SPRING tunnel.",
      "ja": "エントロピーラベルは、各LSRでディープパケットインスペクションを実行せずにロードバランシングを実行できるので、優れた使用可能なソリューションです。15ラベルSPRINGを介して伝送されるGREトンネル内のUDPポートをLSRで検査することは妥当ではないようです。トンネル。"
    },
    {
      "indent": 3,
      "text": "Due to the limited capacity of reading a deep stack of MPLS labels, multiple ELI/ELs may be required within the stack, which directly impacts the capacity of the head-end to push a deep stack: each ELI/ EL inserted requires two additional labels to be pushed.",
      "ja": "MPLSラベルのディープスタックを読み取る容量が限られているため、スタック内に複数のELI / ELが必要になる場合があります。これは、ディープスタックをプッシュするヘッドエンドの容量に直接影響します。挿入された各ELI / ELには2つの追加ラベルが必要です。押される。"
    },
    {
      "indent": 3,
      "text": "Placement strategies of ELI/ELs are required to find the best trade-off. Multiple criteria could be taken into account, and some level of customization (by the user) is required to accommodate different deployments. Since analyzing the path of each destination to determine the best ELI/EL placement may be time consuming for the control plane, we encourage implementations to find the best trade-off between simplicity, resource consumption, and load-balancing efficiency.",
      "ja": "最良のトレードオフを見つけるには、ELI / ELの配置戦略が必要です。複数の基準を考慮に入れることができ、さまざまな展開に対応するには、ある程度のカスタマイズ（ユーザーによる）が必要です。最適なELI / EL配置を決定するために各宛先のパスを分析することは、コントロールプレーンにとって時間がかかる可能性があるため、実装を簡素化、リソース消費、およびロードバランシング効率の間の最良のトレードオフを見つけることをお勧めします。"
    },
    {
      "indent": 3,
      "text": "In the future, hardware and software capacity may increase data-plane capabilities and may remove some of these limitations, increasing load-balancing capability using entropy labels.",
      "ja": "将来的には、ハードウェアとソフトウェアの容量により、データプレーン機能が向上し、これらの制限の一部が取り除かれ、エントロピーラベルを使用した負荷分散機能が向上する可能性があります。"
    },
    {
      "indent": 0,
      "text": "10. Options Considered",
      "section_title": true,
      "ja": "10. 考慮されるオプション"
    },
    {
      "indent": 3,
      "text": "Different options that were considered to arrive at the recommended solution are documented in this section.",
      "ja": "このセクションでは、推奨されるソリューションに到達すると見なされたさまざまなオプションについて説明します。"
    },
    {
      "indent": 3,
      "text": "These options are detailed here only for historical purposes.",
      "ja": "これらのオプションは、歴史的な目的でのみここで詳しく説明されています。"
    },
    {
      "indent": 0,
      "text": "10.1. Single EL at the Bottom of the Stack",
      "section_title": true,
      "ja": "10.1. スタックの最下部にある単一のEL"
    },
    {
      "indent": 3,
      "text": "In this option, a single EL is used for the entire label stack. The source LSR S encodes the entropy label at the bottom of the label stack. In the example described in Section 3, it will result in the label stack at LSR S to look like <L_N-P3, L_A-L1, L_N-D, ELI, EL> <remaining packet header>. Note that the notation in [RFC6790] is used to describe the label stack. An issue with this approach is that as the label stack grows due an increase in the number of SIDs, the EL goes correspondingly deeper in the label stack. Hence, transit LSRs have to access a larger number of bytes in the packet header when making forwarding decisions. In the example described in Section 3, if we consider that the LSR P1 has an ERLD of 3, P1 would load-balance traffic poorly on the parallel links L3 and L4 since the EL is below the ERLD of P1. A load-balanced network design using this approach must ensure that all intermediate LSRs have the capability to read the maximum label stack depth as required for the application that uses source-routed stacking.",
      "ja": "このオプションでは、ラベルスタック全体に単一のELが使用されます。ソースLSR Sは、ラベルスタックの下部にあるエントロピーラベルをエンコードします。セクション3で説明した例では、LSR Sのラベルスタックは<L_N-P3、L_A-L1、L_N-D、ELI、EL> <残りのパケットヘッダー>のようになります。 [RFC6790]の表記はラベルスタックの説明に使用されていることに注意してください。このアプローチの問題は、SIDの数の増加によりラベルスタックが大きくなると、それに応じてELがラベルスタックのより深いところに移動することです。したがって、中継LSRは、転送を決定するときに、パケットヘッダー内のより多くのバイトにアクセスする必要があります。セクション3で説明した例では、LSR P1のERLDが3であると考えると、ELがP1のERLDを下回っているので、P1は並列リンクL3とL4でトラフィックの負荷分散が不十分になります。このアプローチを使用する負荷分散ネットワーク設計では、すべての中間LSRが、ソースルートスタッキングを使用するアプリケーションに必要な最大ラベルスタック深度を読み取る機能を備えていることを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "This option was rejected since there exist a number of hardware implementations that have a low maximum readable label depth. Choosing this option can lead to a loss of load-balancing using EL in a significant part of the network when that is a critical requirement in a service-provider network.",
      "ja": "最大の読み取り可能なラベル深度が低いハードウェア実装が多数存在するため、このオプションは拒否されました。このオプションを選択すると、サービスプロバイダーネットワークの重要な要件である場合、ネットワークの重要な部分でELを使用したロードバランシングが失われる可能性があります。"
    },
    {
      "indent": 0,
      "text": "10.2. An EL per Segment in the Stack",
      "section_title": true,
      "ja": "10.2. スタック内のセグメントごとのEL"
    },
    {
      "indent": 3,
      "text": "In this option, each segment/label in the stack can be given its own EL. When load-balancing is required to direct traffic on a segment, the source LSR pushes an <ELI, EL> before pushing the label associated to this segment. In the example described in Section 3, the source label stack that is LSR S encoded would be <L_N-P3, ELI, EL, L_A-L1, L_N-D, ELI, EL>, where all the ELs can be the same. Accessing the EL at an intermediate LSR is independent of the depth of the label stack and hence, independent of the specific application that uses source-routed tunnels with label stacking. A drawback is that the depth of the label stack grows significantly, almost 3 times as the number of labels in the label stack. The network design should ensure that source LSRs have the capability to push such a deep label stack. Also, the bandwidth overhead and potential MTU issues of deep label stacks should be considered in the network design.",
      "ja": "このオプションでは、スタック内の各セグメント/ラベルに独自のELを割り当てることができます。トラフィックをセグメントに転送するためにロードバランシングが必要な場合、ソースLSRはこのセグメントに関連付けられたラベルをプッシュする前に<ELI、EL>をプッシュします。セクション3で説明する例では、LSR Sエンコードされたソースラベルスタックは<L_N-P3、ELI、EL、L_A-L1、L_N-D、ELI、EL>となり、すべてのELは同じにすることができます。中間LSRでのELへのアクセスは、ラベルスタックの深さとは無関係であり、したがって、ラベルスタッキングでソースルートトンネルを使用する特定のアプリケーションとは無関係です。欠点は、ラベルスタックの深さが大幅に増加し、ラベルスタック内のラベルの数のほぼ3倍になることです。ネットワーク設計では、ソースLSRがそのような深いラベルスタックをプッシュできるようにする必要があります。また、ネットワーク設計では、帯域幅オーバーヘッドとディープラベルスタックの潜在的なMTU問題を考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "This option was rejected due to the existence of hardware implementations that can push a limited number of labels on the label stack. Choosing this option would result in a hardware requirement to push two additional labels per tunnel label. Hence, it would restrict the number of tunnels that can be stacked in an LSP and hence, constrain the types of LSPs that can be created. This was considered unacceptable.",
      "ja": "ラベルスタックに限られた数のラベルをプッシュできるハードウェア実装が存在するため、このオプションは拒否されました。このオプションを選択すると、トンネルラベルごとに2つの追加ラベルをプッシュするハードウェア要件が発生します。したがって、LSPにスタックできるトンネルの数が制限されるため、作成できるLSPのタイプが制限されます。これは受け入れられないと考えられました。"
    },
    {
      "indent": 0,
      "text": "10.3. A Reusable EL for a Stack of Tunnels",
      "section_title": true,
      "ja": "10.3. トンネルのスタック用の再利用可能なEL"
    },
    {
      "indent": 3,
      "text": "In this option, an LSR that terminates a tunnel reuses the EL of the terminated tunnel for the next inner tunnel. It does this by storing the EL from the outer tunnel when that tunnel is terminated and reinserting it below the next inner tunnel label during the label-swap operation. The LSR that stacks tunnels should insert an EL below the outermost tunnel. It should not insert ELs for any inner tunnels. Also, the penultimate hop LSR of a segment must not pop the ELI and EL even though they are exposed as the top labels since the terminating LSR of that segment would reuse the EL for the next segment.",
      "ja": "このオプションでは、トンネルを終了するLSRは、終了したトンネルのELを次の内部トンネルに再利用します。これは、トンネルが終了したときに外部トンネルからのELを格納し、ラベルスワップ操作中に次の内部トンネルラベルの下にELを再挿入することによって行われます。トンネルをスタックするLSRは、最も外側のトンネルの下にELを挿入する必要があります。内部トンネルにはELを挿入しないでください。また、セグメントの最後から2番目のホップのLSRは、ELIとELをトップラベルとして公開しても、そのセグメントの終端LSRが次のセグメントにELを再利用するため、ELIとELをポップすることはできません。"
    },
    {
      "indent": 3,
      "text": "In Section 3, the source label stack that is LSR S encoded would be <L_N-P3, ELI, EL, L_A-L1, L_N-D>. At P1, the outgoing label stack would be <L_N-P3, ELI, EL, L_A-L1, L_N-D> after it has load-balanced to one of the links L3 or L4. At P3, the outgoing label stack would be <L_N-D, ELI, EL>. At P2, the outgoing label stack would be <L_N-D, ELI, EL> and it would load-balance to one of the next-hop LSRs P4 or P5. Accessing the EL at an intermediate LSR (e.g., P1) is independent of the depth of the label stack and hence, independent of the specific use case to which the label stack is applied.",
      "ja": "セクション3では、LSR Sでエンコードされたソースラベルスタックは<L_N-P3、ELI、EL、L_A-L1、L_N-D>です。 P1では、発信ラベルスタックは、リンクL3またはL4のいずれかに負荷分散された後、<L_N-P3、ELI、EL、L_A-L1、L_N-D>になります。 P3では、発信ラベルスタックは<L_N-D、ELI、EL>になります。 P2では、発信ラベルスタックは<L_N-D、ELI、EL>であり、ネクストホップLSR P4またはP5のいずれかに負荷分散します。中間LSR（P1など）でELにアクセスすることは、ラベルスタックの深さとは無関係であり、したがって、ラベルスタックが適用される特定の使用例とは無関係です。"
    },
    {
      "indent": 3,
      "text": "This option was rejected due to the significant change in label-swap operations that would be required for existing hardware.",
      "ja": "このオプションは、既存のハードウェアに必要なラベル交換操作の大幅な変更のために拒否されました。"
    },
    {
      "indent": 0,
      "text": "10.4. EL at Top of Stack",
      "section_title": true,
      "ja": "10.4. スタック上部のEL"
    },
    {
      "indent": 3,
      "text": "A slight variant of the reusable EL option is to keep the EL at the top of the stack rather than below the tunnel label. In this case, each LSR that is not terminating a segment should continue to keep the received EL at the top of the stack when forwarding the packet along the segment. An LSR that terminates a segment should use the EL from the terminated segment at the top of the stack when forwarding onto the next segment.",
      "ja": "再利用可能なELオプションのわずかな変形は、ELをトンネルラベルの下ではなくスタックの一番上に保つことです。この場合、セグメントを終了しない各LSRは、セグメントに沿ってパケットを転送するときに、受信したELをスタックの最上部に保持し続ける必要があります。セグメントを終了するLSRは、次のセグメントに転送するときに、スタックの最上部にある終了したセグメントのELを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "This option was rejected due to the significant change in label swap operations that would be required for existing hardware.",
      "ja": "このオプションは、既存のハードウェアに必要なラベルスワップ操作が大幅に変更されたため、拒否されました。"
    },
    {
      "indent": 0,
      "text": "10.5. ELs at Readable Label Stack Depths",
      "section_title": true,
      "ja": "10.5. 読み取り可能なラベルスタック深度でのEL"
    },
    {
      "indent": 3,
      "text": "In this option, the source LSR inserts ELs for tunnels in the label stack at depths such that each LSR along the path that must load-balance is able to access at least one EL. Note that the source LSR may have to insert multiple ELs in the label stack at different depths for this to work since intermediate LSRs may have differing capabilities in accessing the depth of a label stack. The label stack depth access value of intermediate LSRs must be known to create such a label stack. How this value is determined is outside the scope of this document. This value can be advertised using a protocol such as an IGP.",
      "ja": "このオプションでは、ソースLSRがトンネルのELをラベルスタックの深さに挿入し、ロードバランスを行う必要があるパスに沿った各LSRが少なくとも1つのELにアクセスできるようにします。中間LSRはラベルスタックの深さにアクセスする機能が異なる場合があるため、ソースLSRがこれを機能させるために、異なる深さで複数のELをラベルスタックに挿入する必要がある場合があることに注意してください。このようなラベルスタックを作成するには、中間LSRのラベルスタック深度アクセス値がわかっている必要があります。この値の決定方法は、このドキュメントの範囲外です。この値は、IGPなどのプロトコルを使用してアドバタイズできます。"
    },
    {
      "indent": 3,
      "text": "Applying this method to the example in Section 3, if LSR P1 needs to have the EL within a depth of 4, then the source label stack that is LSR S encoded would be <L_N-P3, ELI, EL, L_A-L1, L_N-D, ELI, EL>, where all the ELs would typically have the same value.",
      "ja": "この方法をセクション3の例に適用すると、LSR P1がELを深さ4以内に収める必要がある場合、LSR Sエンコードされたソースラベルスタックは<L_N-P3、ELI、EL、L_A-L1、L_Nになります。 -D、ELI、EL>。すべてのELは通常同じ値になります。"
    },
    {
      "indent": 3,
      "text": "In the case where the ERLD has different values along the path and the LSR that is inserting <ELI, EL> pairs has no limit on how many pairs it can insert, and it knows the appropriate positions in the stack where they should be inserted, this option is the same as the recommended solution in Section 7.",
      "ja": "ERLDがパスに沿って異なる値を持ち、<ELI、EL>ペアを挿入するLSRは、挿入できるペアの数に制限がなく、挿入する必要があるスタック内の適切な位置を知っている場合、このオプションは、セクション7の推奨ソリューションと同じです。"
    },
    {
      "indent": 3,
      "text": "Note that a refinement of this solution, which balances the number of pushed labels against the desired entropy, is the solution described in Section 7.",
      "ja": "プッシュされたラベルの数と目的のエントロピーのバランスをとるこのソリューションの改良は、セクション7で説明されているソリューションであることに注意してください。"
    },
    {
      "indent": 0,
      "text": "11. IANA Considerations",
      "section_title": true,
      "ja": "11. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no IANA actions.",
      "ja": "このドキュメントにはIANAアクションはありません。"
    },
    {
      "indent": 0,
      "text": "12. Security Considerations",
      "section_title": true,
      "ja": "12. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "Compared to [RFC6790], this document introduces the notion of ERLD and MSD, and may require an ingress node to push multiple ELIs/ELs. These changes do not introduce any new security considerations beyond those already listed in [RFC6790].",
      "ja": "[RFC6790]と比較して、このドキュメントはERLDおよびMSDの概念を紹介しており、複数のELI / ELをプッシュするために入口ノードが必要になる場合があります。これらの変更は、[RFC6790]に既にリストされているものを超える新しいセキュリティの考慮事項を導入しません。"
    },
    {
      "indent": 0,
      "text": "13. References",
      "section_title": true,
      "ja": "13. 参考文献"
    },
    {
      "indent": 0,
      "text": "13.1. Normative References",
      "section_title": true,
      "ja": "13.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC6790] Kompella, K., Drake, J., Amante, S., Henderickx, W., and L. Yong, \"The Use of Entropy Labels in MPLS Forwarding\", RFC 6790, DOI 10.17487/RFC6790, November 2012, <https://www.rfc-editor.org/info/rfc6790>.",
      "ja": "[RFC6790] Kompella、K.、Drake、J.、Amante、S.、Henderickx、W.、and L. Yong、 \"The Use of Entropy Labels in MPLS Forwarding\"、RFC 6790、DOI 10.17487 / RFC6790、November 2012、 <https://www.rfc-editor.org/info/rfc6790>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B。、「RFC 2119キーワードの大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>。"
    },
    {
      "indent": 3,
      "text": "[RFC8402] Filsfils, C., Ed., Previdi, S., Ed., Ginsberg, L., Decraene, B., Litkowski, S., and R. Shakir, \"Segment Routing Architecture\", RFC 8402, DOI 10.17487/RFC8402, July 2018, <https://www.rfc-editor.org/info/rfc8402>.",
      "ja": "[RFC8402] Filsfils、C。、編、Previdi、S。、編、Ginsberg、L.、Decraene、B.、Litkowski、S。、およびR. Shakir、「Segment Routing Architecture」、RFC 8402、DOI 10.17487 / RFC8402、2018年7月、<https://www.rfc-editor.org/info/rfc8402>。"
    },
    {
      "indent": 3,
      "text": "[RFC8660] Bashandy, A., Ed., Filsfils, C., Ed., Previdi, S., Litkowski, S., and R. Shakir, \"Segment Routing with the MPLS Data Plane\", RFC 8660, DOI 10.17487/RFC8660, December 2019, <https://www.rfc-editor.org/info/rfc8660>.",
      "ja": "[RFC8660] Bashandy、A。、編、Filsfils、C。、編、Previdi、S.、Litkowski、S。、およびR. Shakir、「MPLSデータプレーンを使用したセグメントルーティング」、RFC 8660、DOI 10.17487 / RFC8660、2019年12月、<https://www.rfc-editor.org/info/rfc8660>。"
    },
    {
      "indent": 0,
      "text": "13.2. Informative References",
      "section_title": true,
      "ja": "13.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[ISIS-ELC] Xu, X., Kini, S., Psenak, P., Filsfils, C., Litkowski, S., and M. Bocci, \"Signaling Entropy Label Capability and Entropy Readable Label Depth Using IS-IS\", Work in Progress, Internet-Draft, draft-ietf-isis-mpls-elc-10, 21 October 2019, <https://tools.ietf.org/html/draft-ietf-isis-mpls-elc-10>.",
      "ja": "[ISIS-ELC] Xu、X.、Kini、S.、Psenak、P.、Filsfils、C.、Litkowski、S。、およびM. Bocci、「IS-ISを使用したシグナリングエントロピーラベル機能とエントロピー読み取り可能なラベルの深さ」 、Work in Progress、Internet-Draft、draft-ietf-isis-mpls-elc-10、2019年10月21日、<https://tools.ietf.org/html/draft-ietf-isis-mpls-elc-10> 。"
    },
    {
      "indent": 3,
      "text": "[OSPF-ELC] Xu, X., Kini, S., Psenak, P., Filsfils, C., Litkowski, S., and M. Bocci, \"Signaling Entropy Label Capability and Entropy Readable Label-stack Depth Using OSPF\", Work in Progress, Internet-Draft, draft-ietf-ospf-mpls-elc-12, 25 October 2019, <https://tools.ietf.org/html/draft-ietf-ospf-mpls-elc-12>.",
      "ja": "[OSPF-ELC] Xu、X.、Kini、S.、Psenak、P.、Filsfils、C.、Litkowski、S。、およびM. Bocci、「OSPFを使用したシグナリングエントロピーラベル機能とエントロピー読み取り可能なラベルスタックの深さ」 、Work in Progress、Internet-Draft、draft-ietf-ospf-mpls-elc-12、2019年10月25日、<https://tools.ietf.org/html/draft-ietf-ospf-mpls-elc-12> 。"
    },
    {
      "indent": 3,
      "text": "[RFC8668] Ginsberg, L., Bashandy, A., Filsfils, C., Nanduri, M., and E. Aries, \"Advertising Layer 2 Bundle Member Link Attributes in IS-IS\", RFC 8668, DOI 10.17487/RFC8668, December 2019, <https://www.rfc-editor.org/info/rfc8668>.",
      "ja": "[RFC8668] Ginsberg、L.、Bashandy、A.、Filsfils、C.、Nanduri、M。、およびE. Aries、「IS-ISでのレイヤ2バンドルメンバーリンク属性のアドバタイズ」、RFC 8668、DOI 10.17487 / RFC8668、 2019年12月、<https://www.rfc-editor.org/info/rfc8668>。"
    },
    {
      "indent": 3,
      "text": "[RFC7855] Previdi, S., Ed., Filsfils, C., Ed., Decraene, B., Litkowski, S., Horneffer, M., and R. Shakir, \"Source Packet Routing in Networking (SPRING) Problem Statement and Requirements\", RFC 7855, DOI 10.17487/RFC7855, May 2016, <https://www.rfc-editor.org/info/rfc7855>.",
      "ja": "[RFC7855] Previdi、S.、Ed。、Filsfils、C.、Ed。、Decraene、B.、Litkowski、S.、Horneffer、M.、and R. Shakir、 \"Source Packet Routing in Networking（SPRING）Problem Statementおよび要件」、RFC 7855、DOI 10.17487 / RFC7855、2016年5月、<https://www.rfc-editor.org/info/rfc7855>。"
    },
    {
      "indent": 3,
      "text": "[RFC8476] Tantsura, J., Chunduri, U., Aldrin, S., and P. Psenak, \"Signaling Maximum SID Depth (MSD) Using OSPF\", RFC 8476, DOI 10.17487/RFC8476, December 2018, <https://www.rfc-editor.org/info/rfc8476>.",
      "ja": "[RFC8476] Tantsura、J.、Chunduri、U.、Aldrin、S。、およびP. Psenak、「OSPFを使用したシグナリングの最大SID深度（MSD）」、RFC 8476、DOI 10.17487 / RFC8476、2018年12月、<https：/ /www.rfc-editor.org/info/rfc8476>。"
    },
    {
      "indent": 3,
      "text": "[RFC8491] Tantsura, J., Chunduri, U., Aldrin, S., and L. Ginsberg, \"Signaling Maximum SID Depth (MSD) Using IS-IS\", RFC 8491, DOI 10.17487/RFC8491, November 2018, <https://www.rfc-editor.org/info/rfc8491>.",
      "ja": "[RFC8491] Tantsura、J.、Chunduri、U.、Aldrin、S。、およびL. Ginsberg、「IS-ISを使用したシグナリングの最大SID深度（MSD）」、RFC 8491、DOI 10.17487 / RFC8491、2018年11月、<https ：//www.rfc-editor.org/info/rfc8491>。"
    },
    {
      "indent": 3,
      "text": "[MSD-BGP] Tantsura, J., Chunduri, U., Talaulikar, K., Mirsky, G., and N. Triantafillis, \"Signaling MSD (Maximum SID Depth) using Border Gateway Protocol Link-State\", Work in Progress, Internet-Draft, draft-ietf-idr-bgp-ls-segment-routing-msd-09, 15 October 2019, <https://tools.ietf.org/html/draft-ietf-idr-bgp-ls-segment-routing-msd-09>.",
      "ja": "[MSD-BGP] Tantsura、J.、Chunduri、U.、Talaulikar、K.、Mirsky、G。、およびN. Triantafillis、「ボーダーゲートウェイプロトコルリンクステートを使用したMSD（最大SID深度）のシグナリング」、作業中、Internet-Draft、draft-ietf-idr-bgp-ls-segment-routing-msd-09、2019年10月15日、<https://tools.ietf.org/html/draft-ietf-idr-bgp-ls- segment-routing-msd-09>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank John Drake, Loa Andersson, Curtis Villamizar, Greg Mirsky, Markus Jork, Kamran Raza, Carlos Pignataro, Bruno Decraene, Chris Bowers, Nobo Akiya, Daniele Ceccarelli, and Joe Clarke for their review, comments, and suggestions.",
      "ja": "著者は、レビュー、コメント、および提案を提供してくれたJohn Drake、Loa Andersson、Curtis Villamizar、Greg Mirsky、Markus Jork、Kamran Raza、Carlos Pignataro、Bruno Decraene、Chris Bowers、Nobo Akiya、Daniele Ceccarelli、およびJoe Clarkeに感謝します。 。"
    },
    {
      "indent": 0,
      "text": "Contributors",
      "ja": "貢献者"
    },
    {
      "indent": 3,
      "text": "Xiaohu Xu Huawei Email: xuxiaohu@huawei.com",
      "ja": "ξアウトバックXええとUAはメール：Xu Xiaohu@Huawei.com"
    },
    {
      "indent": 3,
      "text": "Wim Hendrickx Nokia Email: wim.henderickx@nokia.com",
      "ja": "Wim Hendrickx Nokiaメール：wim.henderickx@nokia.com"
    },
    {
      "indent": 3,
      "text": "Gunter Van de Velde Nokia Email: gunter.van_de_velde@nokia.com",
      "ja": "Gunter Van de Velde Nokiaメール：gunter.van_de_velde@nokia.com"
    },
    {
      "indent": 3,
      "text": "Acee Lindem Cisco Email: acee@cisco.com",
      "ja": "Asi Lindem Cisco Eメール：AsiSisco.com"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Sriganesh Kini",
      "ja": "スリガネシキニ"
    },
    {
      "indent": 3,
      "text": "Email: sriganeshkini@gmail.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Kireeti Kompella Juniper",
      "ja": "キリーティコンペラジュニパー"
    },
    {
      "indent": 3,
      "text": "Email: kireeti@juniper.net",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Siva Sivabalan Cisco",
      "ja": "シヴァシババランシスコ"
    },
    {
      "indent": 3,
      "text": "Email: msiva@cisco.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Stephane Litkowski Orange",
      "ja": "ステファンリトコウスキーオレンジ"
    },
    {
      "indent": 3,
      "text": "Email: slitkows.ietf@gmail.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Rob Shakir Google",
      "ja": "ロブシャキールグーグル"
    },
    {
      "indent": 3,
      "text": "Email: robjs@google.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Jeff Tantsura Apstra, Inc.",
      "ja": "Jeff Tantsura Apstra、Inc."
    },
    {
      "indent": 3,
      "text": "Email: jefftant.ietf@gmail.com",
      "raw": true,
      "ja": ""
    }
  ]
}