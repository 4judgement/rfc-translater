{
  "title": {
    "text": "RFC 8649 - Hash Of Root Key Certificate Extension",
    "ja": "RFC 8649 - ルートキー証明書拡張のハッシュ"
  },
  "number": 8649,
  "created_at": "2020-08-17 19:17:40.084319+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        R. Housley\nRequest for Comments: 8649                                Vigil Security\nCategory: Informational                                      August 2019\nISSN: 2070-1721",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Hash Of Root Key Certificate Extension",
      "ja": "ルートキー証明書拡張のハッシュ"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document specifies the Hash Of Root Key certificate extension. This certificate extension is carried in the self-signed certificate for a trust anchor, which is often called a Root Certification Authority (CA) certificate. This certificate extension unambiguously identifies the next public key that will be used at some point in the future as the next Root CA certificate, eventually replacing the current one.",
      "ja": "このドキュメントでは、Hash Of Root Key証明書拡張を指定します。この証明書拡張機能は、トラストアンカーの自己署名証明書に含まれています。トラストアンカーは、ルート証明機関（CA）証明書と呼ばれることがよくあります。この証明書拡張は、将来のある時点で次のルートCA証明書として使用される次の公開鍵を明確に識別し、最終的に現在のものを置き換えます。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントはInternet Standards Trackの仕様ではありません。情報提供を目的として公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are candidates for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。 IESGによって承認されたすべてのドキュメントが、あらゆるレベルのインターネット標準の候補であるとは限りません。 RFC 7841のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8649.",
      "ja": "このドキュメントの現在のステータス、正誤表、およびフィードバックの提供方法に関する情報は、https：//www.rfc-editor.org/info/rfc8649で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2019 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2019 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n   1.1. Terminology ................................................2\n   1.2. ASN.1 ......................................................3\n2. Overview ........................................................3\n3. Hash Of Root Key Certificate Extension ..........................4\n4. IANA Considerations .............................................4\n5. Operational Considerations ......................................4\n6. Security Considerations .........................................6\n7. References ......................................................7\n   7.1. Normative References .......................................7\n   7.2. Informative References .....................................8\nAppendix A.  ASN.1 Module ..........................................9\nAcknowledgements ..................................................10\nAuthor's Address ..................................................10",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document specifies the Hash Of Root Key X.509 version 3 certificate extension. The extension is an optional addition to the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile [RFC5280]. The certificate extension facilitates the orderly transition from one Root Certification Authority (CA) public key to the next. It does so by publishing the hash value of the next-generation public key in the current self-signed certificate. This hash value is a commitment to a particular public key in the next-generation self-signed certificate. This commitment allows a relying party to unambiguously recognize the next-generation self-signed certificate when it becomes available, install the new self-signed certificate in the trust anchor store, and eventually remove the previous one from the trust anchor store.",
      "ja": "このドキュメントは、Hash Of Root Key X.509バージョン3証明書拡張を指定します。拡張機能は、インターネットX.509公開鍵インフラストラクチャ証明書および証明書失効リスト（CRL）プロファイル[RFC5280]へのオプションの追加です。証明書拡張機能により、ルート認証局（CA）の公開鍵から次の公開鍵への順序どおりの移行が容易になります。これは、現在の自己署名証明書で次世代の公開鍵のハッシュ値を公開することによって行われます。このハッシュ値は、次世代の自己署名証明書の特定の公開鍵へのコミットメントです。このコミットメントにより、証明書利用者は次世代の自己署名証明書が利用可能になったときにそれを明確に認識し、新しい自己署名証明書をトラストアンカーストアにインストールし、最終的にトラストアンカーストアから以前の証明書を削除できます。"
    },
    {
      "indent": 3,
      "text": "A Root CA certificate MAY include the Hash Of Root Key certificate extension to provide the hash value of the next public key that will be used by the Root CA.",
      "ja": "ルートCA証明書には、ルートCAによって使用される次の公開鍵のハッシュ値を提供するために、ハッシュのルートキー証明書拡張が含まれる場合があります。"
    },
    {
      "indent": 0,
      "text": "1.1. Terminology",
      "section_title": true,
      "ja": "1.1. 用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "キーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「NOT RECOMMENDED」、「MAY」、「OPTIONALこのドキュメントの「」は、BCP 14 [RFC2119] [RFC8174]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "1.2. ASN.1",
      "section_title": true,
      "ja": "1.2. ASN.1"
    },
    {
      "indent": 3,
      "text": "Certificates [RFC5280] use ASN.1 [X680]; Distinguished Encoding Rules (DER) [X690] are REQUIRED for certificate signing and validation.",
      "ja": "証明書[RFC5280]はASN.1 [X680]を使用します。証明書の署名と検証には、Distinguished Encoding Rules（DER）[X690]が必要です。"
    },
    {
      "indent": 0,
      "text": "2. Overview",
      "section_title": true,
      "ja": "2. 概観"
    },
    {
      "indent": 3,
      "text": "Before the initial deployment of the Root CA, the following are generated:",
      "ja": "ルートCAの初期展開の前に、以下が生成されます。"
    },
    {
      "indent": 6,
      "text": "R1 = The initial Root key pair R2 = The second-generation Root key pair H2 = Thumbprint (hash) of the public key of R2 C1 = Self-signed certificate for R1, which also contains H2",
      "ja": "R1 =最初のルートキーペアR2 =第2世代のルートキーペアH2 = R2の公開キーの拇印（ハッシュ）C1 = R1の自己署名証明書"
    },
    {
      "indent": 3,
      "text": "C1 is a self-signed certificate, and it contains H2 within the HashOfRootKey extension. C1 is distributed as part of the initial system deployment. The HashOfRootKey certificate extension is described in Section 3.",
      "ja": "C1は自己署名証明書であり、HashOfRootKey拡張内にH2が含まれています。 C1は、初期システム展開の一部として配布されます。 HashOfRootKey証明書拡張機能については、セクション3で説明します。"
    },
    {
      "indent": 3,
      "text": "When the time comes to replace the initial Root CA certificate, R1, the following are generated:",
      "ja": "初期ルートCA証明書R1を置き換える時期になると、次のものが生成されます。"
    },
    {
      "indent": 6,
      "text": "R3 = The third-generation Root key pair H3 = Thumbprint (hash) the public key of R3 C2 = Self-signed certificate for R2, which contains H3",
      "ja": "R3 =第3世代のルートキーのペアH3 = R3の公開鍵（拇印）の公開キーC2 = H3を含むR2の自己署名証明書"
    },
    {
      "indent": 3,
      "text": "This is an iterative process. That is, R4 and H4 are generated when it is time for C3 to replace C2, and so on.",
      "ja": "これは反復的なプロセスです。つまり、C3がC2を置き換えるときなどに、R4とH4が生成されます。"
    },
    {
      "indent": 0,
      "text": " The successor to the Root CA self-signed certificate can be delivered by any means. Whenever a new Root CA self-signed certificate is received, the recipient is able to verify that the potential Root CA certificate links back to a previously authenticated Root CA certificate with the HashOfRootKey certificate extension. That is, the recipient verifies the signature on the self-signed certificate and verifies that the hash of the DER-encoded SubjectPublicKeyInfo from the potential Root CA certificate matches the value from the HashOfRootKey certificate extension of the current Root CA certificate. Checking the self-signed certificate signature ensures that the certificate contains the subject name, public key algorithm identifier, and public key algorithm parameters intended by the key owner; these are important inputs to certification path validation as defined in Section 6 of [RFC5280]. Checking the hash of the SubjectPublicKeyInfo ensures that the certificate contains the intended public key. If either check fails, then the potential Root CA certificate is not a valid replacement, and the recipient continues to use the current Root CA certificate. If both checks succeed, then the recipient adds the potential Root CA certificate to the trust anchor store. As discussed in Section 5, the recipient can remove the current Root CA certificate immediately in some situations. In other situations, the recipient waits an appropriate amount of time to ensure that existing certification paths continue to validate.",
      "ja": "ルートCA自己署名証明書の後継者は、任意の方法で配信できます。新しいルートCA自己署名証明書を受信するたびに、受信者は、潜在的なルートCA証明書が、HashOfRootKey証明書拡張を使用して以前に認証されたルートCA証明書にリンクしていることを確認できます。つまり、受信者は自己署名証明書の署名を検証し、潜在的なルートCA証明書からのDERエンコードされたSubjectPublicKeyInfoのハッシュが、現在のルートCA証明書のHashOfRootKey証明書拡張からの値と一致することを検証します。自己署名証明書の署名を確認すると、証明書に、サブジェクト名、公開鍵アルゴリズムの識別子、および鍵所有者が意図した公開鍵アルゴリズムのパラメーターが含まれていることが保証されます。これらは、[RFC5280]のセクション6で定義されている認定パス検証への重要な入力です。 SubjectPublicKeyInfoのハッシュをチェックすると、証明書に目的の公開鍵が含まれていることが保証されます。いずれかのチェックが失敗した場合、潜在的なルートCA証明書は有効な代替ではなく、受信者は現在のルートCA証明書を引き続き使用します。両方のチェックが成功した場合、受信者は潜在的なルートCA証明書をトラストアンカーストアに追加します。セクション5で説明したように、受信者は状況によっては現在のルートCA証明書をすぐに削除できます。他の状況では、受信者は適切な時間待機して、既存の証明書パスが引き続き検証されるようにします。"
    },
    {
      "indent": 0,
      "text": "3. Hash Of Root Key Certificate Extension",
      "section_title": true,
      "ja": "3. ルートキー証明書拡張のハッシュ"
    },
    {
      "indent": 3,
      "text": "The HashOfRootKey certificate extension MUST NOT be critical.",
      "ja": "HashOfRootKey証明書拡張機能は重要ではありません。"
    },
    {
      "indent": 3,
      "text": "The following ASN.1 [X680] [X690] syntax defines the HashOfRootKey certificate extension:",
      "ja": "次のASN.1 [X680] [X690]構文は、HashOfRootKey証明書拡張を定義します。"
    },
    {
      "indent": 3,
      "text": "ext-HashOfRootKey EXTENSION ::= {    -- Only in Root CA certificates\n   SYNTAX         HashedRootKey\n   IDENTIFIED BY  id-ce-hashOfRootKey\n   CRITICALITY    {FALSE} }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "HashedRootKey ::= SEQUENCE {\n   hashAlg        HashAlgorithm,        -- Hash algorithm used\n   hashValue      OCTET STRING }        -- Hash of DER-encoded\n                                        --   SubjectPublicKeyInfo",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "id-ce-hashOfRootKey  ::=  OBJECT IDENTIFIER { 1 3 6 1 4 1 51483 2 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The definitions of EXTENSION and HashAlgorithm can be found in [RFC5912].",
      "ja": "EXTENSIONとHashAlgorithmの定義は[RFC5912]にあります。"
    },
    {
      "indent": 3,
      "text": "The hashAlg indicates the one-way hash algorithm that was used to compute the hash value.",
      "ja": "hashAlgは、ハッシュ値の計算に使用された一方向ハッシュアルゴリズムを示します。"
    },
    {
      "indent": 3,
      "text": "The hashValue contains the hash value computed from the next-generation public key. The public key is the DER-encoded SubjectPublicKeyInfo as defined in [RFC5280].",
      "ja": "hashValueには、次世代の公開鍵から計算されたハッシュ値が含まれます。公開鍵は、[RFC5280]で定義されているDERエンコードされたSubjectPublicKeyInfoです。"
    },
    {
      "indent": 0,
      "text": "4. IANA Considerations",
      "section_title": true,
      "ja": "4. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no IANA actions.",
      "ja": "このドキュメントにはIANAアクションはありません。"
    },
    {
      "indent": 0,
      "text": "5. Operational Considerations",
      "section_title": true,
      "ja": "5. 運用上の考慮事項"
    },
    {
      "indent": 0,
      "text": " Guidance on the transition from one root key to another is available in Section 4.4 of [RFC4210]. Of course, a root key is also known as a trust anchor. In particular, the oldWithNew and newWithOld advice ensures that relying parties are able to validate certificates issued under the current Root CA certificate and the next-generation Root CA certificate throughout the transition. The notAfter field in the oldWithNew certificate MUST cover the validity period of all unexpired certificates issued under the old Root CA private key. Further, this advice SHOULD be followed by Root CAs to avoid the need for all relying parties to make the transition at the same time.",
      "ja": "あるルートキーから別のルートキーへの移行に関するガイダンスは、[RFC4210]のセクション4.4にあります。もちろん、ルートキーはトラストアンカーとも呼ばれます。特に、oldWithNewとnewWithOldのアドバイスにより、依存関係者は、現在のルートCA証明書と次世代のルートCA証明書の下で発行された証明書を移行全体で検証できます。 oldWithNew証明書のnotAfterフィールドは、古いルートCA秘密鍵で発行されたすべての有効期限が切れていない証明書の有効期間をカバーする必要があります。さらに、すべての依存パーティが同時に移行を行う必要がないように、このアドバイスの後にルートCAが続く必要があります。"
    },
    {
      "indent": 3,
      "text": "After issuing the newWithOld certificate, the Root CA MUST stop using the old private key to sign certificates.",
      "ja": "ルート証明書は、newWithOld証明書を発行した後、古い秘密鍵を使用して証明書に署名することを停止する必要があります。"
    },
    {
      "indent": 3,
      "text": "Some enterprise and application-specific environments offer a directory service or certificate repository to make certificate and CRLs available to relying parties. Section 3 in [RFC5280] describes a certificate repository. When a certificate repository is available, the oldWithNew and newWithOld certificates SHOULD be published before the successor to the current Root CA self-signed certificate is released. Recipients that are able to obtain the oldWithNew certificate SHOULD immediately remove the old Root CA self-signed certificate from the trust anchor store.",
      "ja": "一部のエンタープライズ環境およびアプリケーション固有の環境では、証明書とCRLを証明書利用者が利用できるようにするディレクトリサービスまたは証明書リポジトリを提供しています。 [RFC5280]のセクション3は、証明書リポジトリについて説明しています。証明書リポジトリが利用可能な場合、現在のルートCA自己署名証明書の後継がリリースされる前に、oldWithNewおよびnewWithOld証明書を公開する必要があります。 oldWithNew証明書を取得できる受信者は、古いルートCA自己署名証明書をトラストアンカーストアからすぐに削除する必要があります（SHOULD）。"
    },
    {
      "indent": 3,
      "text": "In environments without such a directory service or repository, like the Web PKI, recipients need a way to obtain the oldWithNew and newWithOld certificates. The Root CA SHOULD include the subject information access extension [RFC5280] with the accessMethod set to id-ad-caRepository and the assessLocation set to the HTTP URL that can be used to fetch a DER-encoded \"certs-only\" (simple PKI response) message as specified in [RFC5272] in all of their self-signed certificates. The Root CA SHOULD publish the \"certs-only\" message with the oldWithNew certificate and the newWithOld certificate before the subsequent Root CA self-signed certificate is released. The \"certs-only\" message format allows certificates to be added and removed from the bag of certificates over time, so the same HTTP URL can be used throughout the lifetime of the Root CA.",
      "ja": "Web PKIのような、このようなディレクトリサービスやリポジトリのない環境では、受信者はoldWithNewおよびnewWithOld証明書を取得する方法を必要とします。ルートCAは、サブジェクト情報アクセス拡張[RFC5280]を含み、accessMethodがid-ad-caRepositoryに設定され、assessLocationがDERエンコードされた「証明書のみ」（単純なPKI応答）をフェッチするために使用できるHTTP URLに設定される必要があります（SHOULD）。 ）すべての自己署名証明書で[RFC5272]に指定されているメッセージ。ルートCAは、後続のルートCA自己署名証明書がリリースされる前に、oldWithNew証明書とnewWithOld証明書を含む「certs-only」メッセージを公開する必要があります（SHOULD）。 「certs-only」メッセージ形式では、証明書を時間の経過とともに証明書のバッグに追加および削除できるため、ルートCAの存続期間を通じて同じHTTP URLを使用できます。"
    },
    {
      "indent": 3,
      "text": "In environments without such a directory service or repository, recipients SHOULD keep both the old and replacement Root CA self-signed certificates in the trust anchor store for some amount of time to ensure that all end-entity certificates can be validated until they expire. The recipient MAY keep the old Root CA self-signed certificate until all of the certificates in the local cache that are subordinate to it have expired.",
      "ja": "そのようなディレクトリサービスまたはリポジトリのない環境では、受信者は古いおよび置換ルートCA自己署名証明書の両方を一定期間トラストアンカーストアに保持して、すべてのエンドエンティティ証明書が期限切れになるまで確実に検証できるようにする必要があります。受信者は、それに従属するローカルキャッシュ内のすべての証明書が期限切れになるまで、古いルートCA自己署名証明書を保持できます（MAY）。"
    },
    {
      "indent": 3,
      "text": "Certification path construction is more complex when the trust anchor store contains multiple self-signed certificates with the same distinguished name. For this reason, the replacement Root CA self-signed certificate SHOULD contain a different distinguished name than the one it is replacing. One approach is to include a number as part of the name that is incremented with each generation, such as \"Example CA\", \"Example CA G2\", \"Example CA G3\", and so on.",
      "ja": "トラストアンカーストアに同じ識別名を持つ複数の自己署名証明書が含まれている場合、証明書パスの構築はより複雑になります。このため、置換ルートCA自己署名証明書には、置換するものとは異なる識別名を含める必要があります（SHOULD）。 1つのアプローチは、「例CA」、「例CA G2」、「例CA G3」など、世代ごとに増分される名前の一部として番号を含めることです。"
    },
    {
      "indent": 3,
      "text": "Changing names from one generation to another can lead to confusion when reviewing the history of a trust anchor store. To assist with such review, a recipient MAY create an audit entry to capture the old and replacement self-signed certificates.",
      "ja": "ある世代から別の世代に名前を変更すると、トラストアンカーストアの履歴を確認するときに混乱が生じる可能性があります。そのようなレビューを支援するために、受信者は、古いおよび交換用の自己署名証明書を取得するための監査エントリを作成できます（MAY）。"
    },
    {
      "indent": 3,
      "text": "The Root CA must securely back up the yet-to-be-deployed key pair. If the Root CA stores the key pair in a hardware security module and that module fails, the Root CA remains committed to the key pair that is no longer available. This leaves the Root CA with no alternative but to deploy a new self-signed certificate that contains a newly generated key pair in the same manner as the initial self-signed certificate, thus losing the benefits of the Hash Of Root Key certificate extension altogether.",
      "ja": "ルートCAは、まだ展開されていないキーペアを安全にバックアップする必要があります。ルートCAがキーペアをハードウェアセキュリティモジュールに保存していて、そのモジュールが失敗した場合、ルートCAは使用できなくなったキーペアにコミットされたままになります。これにより、ルートCAに代替手段がなくなり、最初の自己署名証明書と同じ方法で、新しく生成されたキーペアを含む新しい自己署名証明書を展開する必要があるため、Hash Of Root Key証明書拡張の利点が完全に失われます。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The security considerations from [RFC5280] apply, especially the discussion of self-issued certificates.",
      "ja": "[RFC5280]のセキュリティに関する考慮事項が適用されます。特に、自己発行の証明書に関する説明が当てはまります。"
    },
    {
      "indent": 3,
      "text": "The Hash Of Root Key certificate extension facilitates the orderly transition from one Root CA public key to the next by publishing the hash value of the next-generation public key in the current certificate. This allows a relying party to unambiguously recognize the next-generation public key when it becomes available; however, the full public key is not disclosed until the Root CA releases the next-generation certificate. In this way, attackers cannot begin to analyze the public key before the next-generation Root CA self-signed certificate is released.",
      "ja": "ルートキーのハッシュ証明書拡張機能は、現在の証明書で次世代の公開キーのハッシュ値を公開することにより、1つのルートCA公開キーから次のルートCAへの整然とした移行を容易にします。これにより、依存パーティは、次世代の公開キーが利用可能になったときに、それを明確に認識することができます。ただし、ルートCAが次世代証明書をリリースするまで、完全な公開鍵は公開されません。このように、攻撃者は次世代のルートCA自己署名証明書がリリースされる前に公開鍵の分析を開始できません。"
    },
    {
      "indent": 3,
      "text": "The Root CA needs to ensure that the public key in the next-generation certificate is as strong or stronger than the key that it is replacing. Of course, a significant advance in cryptoanalytic capability can break the yet-to-be-deployed key pair. Such advances are rare and difficult to predict. If such an advance occurs, the Root CA remains committed to the now broken key. This leaves the Root CA with no alternative but to deploy a new self-signed certificate that contains a newly generated key pair, most likely using a different signature algorithm, in the same manner as the initial self-signed certificate, thus losing the benefits of the Hash Of Root Key certificate extension altogether.",
      "ja": "ルートCAは、次世代証明書の公開鍵が、置き換えられる鍵と同じかそれ以上であることを確認する必要があります。もちろん、暗号分析機能の大幅な進歩により、まだ展開されていない鍵ペアが破られる可能性があります。このような進歩はまれであり、予測が困難です。このような問題が発生した場合、ルートCAは壊れたキーにコミットされたままになります。これにより、ルートCAには代替手段がなくなりますが、新しく生成されたキーペアを含む新しい自己署名証明書を展開する必要があります。最初の自己署名証明書と同じように、異なる署名アルゴリズムを使用している可能性が高いため、以下の利点が失われます。 Hash Of Root Key証明書の拡張機能をまとめて使用します。"
    },
    {
      "indent": 0,
      "text": " The Root CA needs to employ a hash function that is resistant to preimage attacks [RFC4270]. A first-preimage attack against the hash function would allow an attacker to find another input that results in the hash value of the next-generation public key that was published in the current certificate. For the attack to be successful, the input would have to be a valid SubjectPublicKeyInfo that contains a public key that corresponds to a private key known to the attacker. A second-preimage attack becomes possible once the Root CA releases the next-generation public key, which makes the input to the hash function available to the attacker and everyone else. Again, the attacker needs to find a valid SubjectPublicKeyInfo that contains the public key that corresponds to a private key known to the attacker. If the employed hash function is broken after the Root CA publishes the self-signed certificate with the HashOfRootKey certificate extension, an attacker would be able to trick the recipient into installing the incorrect next-generation certificate in the trust anchor store.",
      "ja": "ルートCAは、プリイメージ攻撃に耐性のあるハッシュ関数を使用する必要があります[RFC4270]。ハッシュ関数に対する最初のプリイメージ攻撃では、攻撃者は現在の証明書で公開された次世代の公開キーのハッシュ値をもたらす別の入力を見つけることができます。攻撃が成功するには、入力は、攻撃者が知っている秘密鍵に対応する公開鍵を含む有効なSubjectPublicKeyInfoである必要があります。ルートCAが次世代の公開鍵をリリースすると、2番目のプリイメージ攻撃が可能になり、ハッシュ関数への入力を攻撃者や他のすべての人が利用できるようになります。この場合も、攻撃者は、攻撃者が知っている秘密鍵に対応する公開鍵を含む有効なSubjectPublicKeyInfoを見つける必要があります。ルートCAがHashOfRootKey証明書拡張を使用して自己署名証明書を公開した後に、採用されているハッシュ関数が壊れている場合、攻撃者は受信者をだまして、不正な次世代証明書をトラストアンカーストアにインストールさせることができます。"
    },
    {
      "indent": 3,
      "text": "If an early release of the next-generation public key occurs and the Root CA is concerned that attackers were given too much lead time to analyze that public key, then the Root CA can transition to a freshly generated key pair by rapidly performing two transitions. After the first transition, the Root CA is using the key pair that suffered the early release, and that transition causes the Root CA to generate the subsequent Root key pair. The second transition occurs when the Root CA is confident that the population of relying parties has completed the first transition, and it takes the Root CA to the freshly generated key pair. Of course, the second transition also causes the Root CA to generate another key pair that is reserved for future use. Queries for the CRLs associated with certificates that are subordinate to the self-signed certificate can give some indication of the number of relying parties that are still actively using the self-signed certificates.",
      "ja": "次世代の公開鍵の早期リリースが発生し、ルートCAが、公開鍵を分析するために攻撃者に与えられたリードタイムが長すぎることに懸念がある場合、ルートCAは、2つの遷移を迅速に実行することにより、新しく生成された鍵ペアに遷移できます。最初の移行後、ルートCAは初期リリースの影響を受けたキーペアを使用しており、その移行によりルートCAは後続のルートキーペアを生成します。 2番目の遷移は、依存CAの集団が最初の遷移を完了したことをルートCAが確信しているときに発生し、ルートCAを新しく生成された鍵ペアに導きます。もちろん、2番目の遷移により、ルートCAは将来の使用のために予約されている別のキーペアを生成します。自己署名証明書に従属する証明書に関連付けられたCRLのクエリは、自己署名証明書をまだアクティブに使用している証明書利用者の数を示す可能性があります。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7. 参考文献"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC4210] Adams, C., Farrell, S., Kause, T., and T. Mononen, \"Internet X.509 Public Key Infrastructure Certificate Management Protocol (CMP)\", RFC 4210, DOI 10.17487/RFC4210, September 2005, <https://www.rfc-editor.org/info/rfc4210>.",
      "ja": "[RFC4210] Adams、C.、Farrell、S.、Kause、T。、およびT. Mononen、「Internet X.509 Public Key Infrastructure Certificate Management Protocol（CMP）」、RFC 4210、DOI 10.17487 / RFC4210、2005年9月、 <https://www.rfc-editor.org/info/rfc4210>。"
    },
    {
      "indent": 3,
      "text": "[RFC4270] Hoffman, P. and B. Schneier, \"Attacks on Cryptographic Hashes in Internet Protocols\", RFC 4270, DOI 10.17487/RFC4270, November 2005, <https://www.rfc-editor.org/info/rfc4270>.",
      "ja": "[RFC4270] Hoffman、P。およびB. Schneier、「インターネットプロトコルにおける暗号化ハッシュの攻撃」、RFC 4270、DOI 10.17487 / RFC4270、2005年11月、<https://www.rfc-editor.org/info/rfc4270> 。"
    },
    {
      "indent": 3,
      "text": "[RFC5272] Schaad, J. and M. Myers, \"Certificate Management over CMS (CMC)\", RFC 5272, DOI 10.17487/RFC5272, June 2008, <https://www.rfc-editor.org/info/rfc5272>.",
      "ja": "[RFC5272] Schaad、J。およびM. Myers、「CMS（CMC）を介した証明書管理」、RFC 5272、DOI 10.17487 / RFC5272、2008年6月、<https://www.rfc-editor.org/info/rfc5272> 。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, DOI 10.17487/RFC5280, May 2008, <https://www.rfc-editor.org/info/rfc5280>.",
      "ja": "[RFC5280] Cooper、D.、Santesson、S.、Farrell、S.、Boeyen、S.、Housley、R。、およびW. Polk、「Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List（CRL）Profile \"、RFC 5280、DOI 10.17487 / RFC5280、2008年5月、<https://www.rfc-editor.org/info/rfc5280>。"
    },
    {
      "indent": 3,
      "text": "[RFC5912] Hoffman, P. and J. Schaad, \"New ASN.1 Modules for the Public Key Infrastructure Using X.509 (PKIX)\", RFC 5912, DOI 10.17487/RFC5912, June 2010, <https://www.rfc-editor.org/info/rfc5912>.",
      "ja": "[RFC5912] Hoffman、P。およびJ. Schaad、「X.509（PKIX）を使用した公開鍵インフラストラクチャ用の新しいASN.1モジュール」、RFC 5912、DOI 10.17487 / RFC5912、2010年6月、<https：// www。 rfc-editor.org/info/rfc5912>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B。、「RFC 2119キーワードの大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>。"
    },
    {
      "indent": 3,
      "text": "[X680] ITU-T, \"Information technology -- Abstract Syntax Notation One (ASN.1): Specification of basic notation\", ITU-T Recommendation X.680, August 2015.",
      "ja": "[X680] ITU-T、「情報技術-抽象構文記法1（ASN.1）：基本記法の仕様」、ITU-T勧告X.680、2015年8月。"
    },
    {
      "indent": 3,
      "text": "[X690] ITU-T, \"Information Technology -- ASN.1 encoding rules: Specification of Basic Encoding Rules (BER), Canonical Encoding Rules (CER) and Distinguished Encoding Rules (DER)\", ITU-T Recommendation X.690, August 2015.",
      "ja": "[X690] ITU-T、「情報技術-ASN.1エンコーディングルール：基本エンコーディングルール（BER）、正規エンコーディングルール（CER）およびDistinguished Encodingルール（DER）の仕様」、ITU-T勧告X.690、 2015年8月。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[SET] MasterCard and VISA, \"SET Secure Electronic Transaction Specification -- Book 2: Programmer's Guide, Version 1.0\", May 1997.",
      "ja": "[SET] MasterCardおよびVISA、「SET Secure Electronic Transaction Specification-Book 2：Programmer's Guide、Version 1.0」、1997年5月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. ASN.1 Module",
      "section_title": true,
      "ja": "付録A. ASN.1モジュール"
    },
    {
      "indent": 3,
      "text": "The following ASN.1 module provides the complete definition of the HashOfRootKey certificate extension.",
      "ja": "次のASN.1モジュールは、HashOfRootKey証明書拡張の完全な定義を提供します。"
    },
    {
      "indent": 3,
      "text": "<CODE BEGINS>",
      "ja": "<コード開始>"
    },
    {
      "indent": 3,
      "text": "HashedRootKeyCertExtn { 1 3 6 1 4 1 51483 0 1 }",
      "ja": "HashedRootKeyCertExtn {1 3 6 1 4 1 51483 0 1}"
    },
    {
      "indent": 3,
      "text": "DEFINITIONS IMPLICIT TAGS ::=\nBEGIN",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "-- EXPORTS All",
      "ja": "-すべてをエクスポート"
    },
    {
      "indent": 3,
      "text": "IMPORTS",
      "ja": "輸入"
    },
    {
      "indent": 3,
      "text": "HashAlgorithm\n  FROM PKIX1-PSS-OAEP-Algorithms-2009  -- RFC 5912\n       { iso(1) identified-organization(3) dod(6) internet(1)\n         security(5) mechanisms(5) pkix(7) id-mod(0)\n         id-mod-pkix1-rsa-pkalgs-02(54) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "EXTENSION\n  FROM PKIX-CommonTypes-2009  -- RFC 5912\n    { iso(1) identified-organization(3) dod(6) internet(1)\n      security(5) mechanisms(5) pkix(7) id-mod(0)\n      id-mod-pkixCommon-02(57) } ;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "-- -- Expand the certificate extensions list in RFC 5912 --",
      "ja": "--RFC 5912の証明書拡張リストを拡張-"
    },
    {
      "indent": 3,
      "text": "CertExtensions EXTENSION ::= {\n   ext-HashOfRootKey, ... }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "-- -- HashOfRootKey Certificate Extension --",
      "ja": "--HashOfRootKey証明書拡張-"
    },
    {
      "indent": 3,
      "text": "ext-HashOfRootKey EXTENSION ::= {    -- Only in Root CA certificates\n   SYNTAX         HashedRootKey\n   IDENTIFIED BY  id-ce-hashOfRootKey\n   CRITICALITY    {FALSE} }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "HashedRootKey  ::=  SEQUENCE {\n   hashAlg        HashAlgorithm,     -- Hash algorithm used\n   hashValue      OCTET STRING }     -- Hash of DER-encoded\n                                     --   SubjectPublicKeyInfo",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "id-ce-hashOfRootKey OBJECT IDENTIFIER  ::=  { 1 3 6 1 4 1 51483 2 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 3,
      "text": "<CODE ENDS>",
      "ja": "<コード終了>"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The Secure Electronic Transaction (SET) [SET] specification published by MasterCard and VISA in 1997 includes a very similar certificate extension. The SET certificate extension has essentially the same semantics, but the syntax fairly different.",
      "ja": "MasterCardおよびVISAによって1997年に公開されたセキュア電子トランザクション（SET）[SET]仕様には、非常によく似た証明書拡張が含まれています。 SET証明書拡張のセマンティクスは基本的に同じですが、構文はかなり異なります。"
    },
    {
      "indent": 3,
      "text": "CTIA - The Wireless Association - is developing a public key infrastructure that will make use of the certificate extension described in this document; the object identifiers used in the ASN.1 module were assigned by CTIA.",
      "ja": "CTIA-Wireless Association-は、このドキュメントで説明されている証明書拡張機能を利用する公開鍵インフラストラクチャを開発しています。 ASN.1モジュールで使用されるオブジェクト識別子はCTIAによって割り当てられました。"
    },
    {
      "indent": 3,
      "text": "Many thanks to Stefan Santesson, Jim Schaad, Daniel Kahn Gillmor, Joel Halpern, Paul Hoffman, Rich Salz, and Ben Kaduk. Their reviews and comments greatly improved the document, especially the \"Operational Considerations\" and \"Security Considerations\" sections.",
      "ja": "Stefan Santesson、Jim Schaad、Daniel Kahn Gillmor、Joel Halpern、Paul Hoffman、Rich Salz、Ben Kadukに感謝します。彼らのレビューとコメントは、ドキュメント、特に「運用上の考慮事項」と「セキュリティに関する考慮事項」のセクションを大幅に改善しました。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Russ Housley Vigil Security 516 Dranesville Road Herndon, VA 20170 United States of America",
      "ja": "Russ Housley Vigil Security 516 Dranesville Road Herndon、VA 20170アメリカ合衆国"
    },
    {
      "indent": 3,
      "text": "Email: housley@vigilsec.com",
      "raw": true,
      "ja": ""
    }
  ]
}