{
  "title": {
    "text": "RFC 8860 - Sending Multiple Types of Media in a Single RTP Session",
    "ja": "RFC 8860 - 単一のRTPセッションで複数の種類のメディアを送信する"
  },
  "number": 8860,
  "created_at": "2021-03-14 06:59:04.997804+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                     M. Westerlund\nRequest for Comments: 8860                                      Ericsson\nUpdates: 3550, 3551                                           C. Perkins\nCategory: Standards Track                          University of Glasgow\nISSN: 2070-1721                                                J. Lennox\n                                                             8x8 / Jitsi\n                                                            January 2021",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Sending Multiple Types of Media in a Single RTP Session",
      "ja": "単一のRTPセッションで複数の種類のメディアを送信する"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document specifies how an RTP session can contain RTP streams with media from multiple media types such as audio, video, and text. This has been restricted by the RTP specifications (RFCs 3550 and 3551), and thus this document updates RFCs 3550 and 3551 to enable this behaviour for applications that satisfy the applicability for using multiple media types in a single RTP session.",
      "ja": "このドキュメントは、オーディオ、ビデオ、テキストなどの複数のメディアタイプからのメディアを使用してRTPセッションのRTPストリームをどのように含めるかを指定します。これはRTP仕様（RFCS 3550と3551）によって制限されているため、この文書はRFCS 3550と3551を更新し、1つのRTPセッションで複数のメディアタイプを使用するための適用可能性を満たすアプリケーションのこの動作を可能にします。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはインターネット規格のトラック文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "この文書は、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表します。それは公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による出版の承認を受けました。インターネット規格に関する詳細情報は、RFC 7841のセクション2で利用できます。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8860.",
      "ja": "この文書の現在のステータス、任意のエラータ、およびフィードバックを提供する方法は、https://www.rfc-editor.org/info/rfc8860で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2021 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2021 IETF信頼と文書著者として識別された人。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、この文書の公開日に有効なIETF文書（https://truste.ietf.org/License-info）に関するBCP 78とIETF信頼の法的規定を受けています。この文書に関してあなたの権利と制限を説明するので、これらの文書を慎重に見直してください。この文書から抽出されたコードコンポーネントには、信頼法の法的規定のセクション4。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n2.  Terminology\n3.  Background and Motivation\n4.  Applicability\n5.  Using Multiple Media Types in a Single RTP Session\n  5.1.  Allowing Multiple Media Types in an RTP Session\n  5.2.  Demultiplexing Media Types within an RTP Session\n  5.3.  Per-SSRC Media Type Restrictions\n  5.4.  RTCP Considerations\n6.  Extension Considerations\n  6.1.  RTP Retransmission Payload Format\n  6.2.  RTP Payload Format for Generic FEC\n  6.3.  RTP Payload Format for Redundant Audio\n7.  Signalling\n8.  Security Considerations\n9.  IANA Considerations\n10. References\n  10.1.  Normative References\n  10.2.  Informative References\nAcknowledgements\nAuthors' Addresses",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The Real-time Transport Protocol [RFC3550] was designed to use separate RTP sessions to transport different types of media. This implies that different transport-layer flows are used for different RTP streams. For example, a video conferencing application might send audio and video traffic RTP flows on separate UDP ports. With increased use of network address/port translation, firewalls, and other middleboxes, it is, however, becoming difficult to establish multiple transport-layer flows between endpoints. Hence, there is pressure to reduce the number of concurrent transport flows used by RTP applications.",
      "ja": "リアルタイムトランスポートプロトコル[RFC3550]は、さまざまな種類のメディアを転送するために別々のRTPセッションを使用するように設計されていました。これは、異なるRTPストリームに異なるトランスポートレイヤフローが使用されることを意味します。たとえば、ビデオ会議アプリケーションは、別々のUDPポートにオーディオとビデオトラフィックRTPフローを送信する可能性があります。ネットワークアドレス/ポート変換、ファイアウォール、およびその他のミドルボックスを使用すると、エンドポイント間に複数のトランスポート層の流れを確立することが困難になることです。したがって、RTPアプリケーションによって使用される同時トランスポートフローの数を減らすための圧力があります。"
    },
    {
      "indent": 3,
      "text": "This memo updates [RFC3550] and [RFC3551] to allow multiple media types to be sent in a single RTP session in certain cases, thereby reducing the number of transport-layer flows that are needed. It makes no changes to RTP behaviour when using multiple RTP streams containing media of the same type (e.g., multiple audio streams or multiple video streams) in a single RTP session. However, [RFC8108] provides important clarifications to RTP behaviour in that case.",
      "ja": "このメモの更新[RFC3550]と[RFC3551]は、特定の場合に複数のメディアタイプを1つのRTPセッションで送信できるようにするために、必要とされるトランスポート層の流れの数を減らすことができます。単一のRTPセッションで同じタイプのメディア（例えば、複数のオーディオストリームまたは複数のビデオストリーム）を含む複数のRTPストリームを使用するときは、RTPの動作を変更しません。ただし、[RFC8108]その場合のRTPの動作に重要な説明を提供します。"
    },
    {
      "indent": 3,
      "text": "This memo is structured as follows. Section 2 defines terminology. Section 3 further describes the background to, and motivation for, this memo; Section 4 describes the scenarios where this memo is applicable. Section 5 discusses issues arising from the base RTP and RTP Control Protocol (RTCP) specifications [RFC3550] [RFC3551] when using multiple types of media in a single RTP session, while Section 6 considers the impact of RTP extensions. We discuss signalling in Section 7. Finally, security considerations are discussed in Section 8.",
      "ja": "このメモは次のように構成されています。セクション2は用語を定義します。セクション3はさらにこのメモの動機をさらに説明します。セクション4は、このメモが適用可能なシナリオについて説明します。セクション5は、単一のRTPセッションで複数の種類のメディアを使用している場合、Base RTPおよびRTP制御プロトコル（RFC3551] [RFC3551]から発生した問題について説明しますが、セクション6はRTP拡張機能の影響を考慮します。セクション7のシグナリングについて説明します。最後にセキュリティ上の考慮事項についてはセクション8で説明します。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2. 用語"
    },
    {
      "indent": 3,
      "text": "The terms \"encoded stream\", \"endpoint\", \"media source\", \"RTP session\", and \"RTP stream\" are used as defined in [RFC7656]. We also define the following terms:",
      "ja": "「符号化ストリーム」、「エンドポイント」、「メディアソース」、「RTP SESSION」、「RTP STREAM」という用語は、[RFC7656]で定義されているように使用されます。以下の用語も定義します。"
    },
    {
      "indent": 3,
      "text": "Media Type: The general type of media data used by a real-time application. The media type corresponds to the value used in the <media> field of a Session Description Protocol (SDP) \"m=\" line. The media types defined at the time of this writing are \"audio\", \"video\", \"text\", \"image\", \"application\", and \"message\" [RFC4566] [RFC6466].",
      "ja": "メディアタイプ：リアルタイムアプリケーションで使用されるメディアデータの一般的な種類。メディアタイプは、セッション記述プロトコル（SDP） \"M =\"行の<media>フィールドで使用される値に対応します。この書き込み時に定義されたメディアタイプは、「オーディオ」、「ビデオ」、「テキスト」、「画像」、「アプリケーション」、「メッセージ」[RFC4566] [RFC6466]です。"
    },
    {
      "indent": 3,
      "text": "Quality of Service (QoS): Network mechanisms that are intended to ensure that the packets within a flow or with a specific marking are transported with certain properties.",
      "ja": "サービス品質（QoS）：フロー内または特定のマーキング内のパケットが特定のプロパティで転送されるようにするためのネットワークメカニズム。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "「必須」、「必須」、「必須」、「SHALL」、「必ず」、「推奨する」、「推奨する」、「推奨する」、「推奨する」、「推奨する」、「5月」「この文書では、BCP 14 [RFC2119] [RFC8174]に記載されている場合に解釈されるべきであり、ここに示すように、すべての首都に表示されます。"
    },
    {
      "indent": 0,
      "text": "3. Background and Motivation",
      "section_title": true,
      "ja": "3. 背景と動機"
    },
    {
      "indent": 3,
      "text": "RTP was designed to support multimedia sessions, containing multiple types of media sent simultaneously, by using multiple transport-layer flows. The existence of network address translators, firewalls, and other middleboxes complicates this, however, since a mechanism is needed to ensure that all the transport-layer flows needed by the application can be established. This has three consequences:",
      "ja": "RTPは、複数のトランスポート層の流れを使用することによって、複数の種類のメディアを同時に含むマルチメディアセッションをサポートするように設計されました。しかしながら、ネットワークアドレストランスレータ、ファイアウォール、および他のミドルボックスの存在はこれを複雑にしているので、アプリケーションによって必要とされるすべてのトランスポート層の流れが確立され得ることを確実にするためにメカニズムが必要である。これには3つの結果があります。"
    },
    {
      "indent": 3,
      "text": "1. increased delay to establish a complete session, since each of the transport-layer flows needs to be negotiated and established;",
      "ja": "1. 各トランスポート層の流れを交渉し確立する必要があるため、完全なセッションを確立するための遅延の増加。"
    },
    {
      "indent": 3,
      "text": "2. increased state and resource consumption in the middleboxes that can lead to unexpected behaviour when middlebox resource limits are reached; and",
      "ja": "2. ミドルボックスのリソースの制限が到達したときに予期しない動作につながる可能性があるミドルボックス内の状態とリソース消費量の増加。そして"
    },
    {
      "indent": 3,
      "text": "3. increased risk that a subset of the transport-layer flows will fail to be established, thus preventing the application from communicating.",
      "ja": "3. トランスポート層の流れのサブセットが確立されないことになる危険性が高まり、アプリケーションが通信するのを防ぎます。"
    },
    {
      "indent": 3,
      "text": "Using fewer transport-layer flows can hence be seen to reduce the risk of communication failure and can lead to improved reliability and performance.",
      "ja": "したがって、より少ないトランスポート層の流れを使用することで、通信障害のリスクを軽減し、信頼性と性能を向上させることができます。"
    },
    {
      "indent": 3,
      "text": "One of the benefits of using multiple transport-layer flows is that it makes it easy to use network-layer QoS mechanisms to give differentiated performance for different flows. However, we note that many applications that use RTP don't use network QoS features and don't expect or desire any separation in network treatment of their media packets, independent of whether they are audio, video, or text. When an application has no such desire, it doesn't need to provide a transport flow structure that simplifies flow-based QoS.",
      "ja": "複数のトランスポート層の流れを使用する利点の1つは、ネットワーク層QoSメカニズムを使用して、異なるフローに対して微分パフォーマンスを得ることを容易にすることです。ただし、RTPを使用する多くのアプリケーションは、ネットワークQoS機能を使用しないことに注意しており、オーディオ、ビデオ、またはテキストであるかとは無関係に、メディアパケットのネットワーク扱いでの分離を期待または望まないことに注意してください。アプリケーションがそのような願望がない場合、フローベースのQoSを単純化するトランスポートフロー構造を提供する必要はありません。"
    },
    {
      "indent": 3,
      "text": "Given the above issues, it might seem appropriate for RTP-based applications to send all their RTP streams bundled into one RTP session, running over a single transport-layer flow. However, this is prohibited by the RTP specifications [RFC3550] [RFC3551], because the design of RTP makes certain assumptions that can be incompatible with sending multiple media types in a single RTP session. Specifically, the RTCP timing rules assume that all RTP media flows in a single RTP session have broadly similar RTCP reporting and feedback requirements, which can be problematic when different types of media are multiplexed together. Various RTP extensions also make assumptions about Synchronisation Source (SSRC) use and RTCP reporting that are incompatible with sending different media types in a single RTP session.",
      "ja": "上記の問題を考えると、RTPベースのアプリケーションには、単一のトランスポートレイヤフローを介して実行されている1つのRTPセッションにバンドルされたすべてのRTPストリームを送信することが適切である可能性があります。ただし、RTPの設計は、単一のRTPセッションで複数のメディアタイプを送信することと互換性がある特定の仮定を作成するため、RTP仕様[RFC3550] [RFC3551]によって禁止されています。具体的には、RTCPタイミング規則は、単一のRTPセッション内のすべてのRTPメディアフローが広く同様のRTCPレポートおよびフィードバック要件を持ち、異なる種類のメディアが一緒に多重化されている場合に問題となる可能性があります。さまざまなRTP拡張機能では、Syncization Source（SSRC）の使用とRTCPレポートが単一のRTPセッションで異なるメディアタイプを送信すると互換性があります。"
    },
    {
      "indent": 3,
      "text": "This memo updates [RFC3550] and [RFC3551] to allow RTP sessions to contain more than one media type in certain circumstances and gives guidance on when it is safe to send multiple media types in a single RTP session.",
      "ja": "このメモは[RFC3550]と[RFC3551]と[RFC3551]を更新し、特定の状況で複数のメディアタイプを含め、単一のRTPセッションで複数のメディアタイプを送信してもガイダンスを与えます。"
    },
    {
      "indent": 0,
      "text": "4. Applicability",
      "section_title": true,
      "ja": "4. 適用可能性"
    },
    {
      "indent": 3,
      "text": "This specification has limited applicability, and anyone intending to use it needs to ensure that their application and use case meet the following criteria:",
      "ja": "この仕様には適用可能性が限られており、それらのアプリケーションとユースケースが以下の基準を満たすようにする必要がある人は、使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "Equal treatment of media: The use of a single RTP session normally results in similar network treatment for all types of media used within the session. Applications that require significantly different network QoS or RTCP configuration for different RTP streams are better suited to sending those RTP streams in separate RTP sessions, using separate transport-layer flows for each, since that method provides greater flexibility. Further guidance on how to provide differential treatment for some media streams is given in [RFC8872] and [RFC7657].",
      "ja": "メディアの等しい処理：単一のRTPセッションの使用は通常、セッション内で使用されるすべてのタイプのメディアに対して同様のネットワーク扱いをもたらします。さまざまなRTPストリームに対して大幅に異なるネットワークQoSまたはRTCP構成を必要とするアプリケーションは、それぞれのための別々のトランスポート層の流れを使用して、別々のRTPセッションでそれらのRTPストリームを送信するのに適しています。いくつかのメディアストリームの差動治療を提供する方法に関するさらなるガイダンスは[RFC8872]および[RFC7657]に与えられます。"
    },
    {
      "indent": 3,
      "text": "Compatible RTCP behaviour: The RTCP timing rules enforce a single RTCP reporting interval for all participants in an RTP session. Flows with very different media sending rates or RTCP feedback requirements cannot be multiplexed together, since this leads to either excessive or insufficient RTCP for some flows, depending on how the RTCP session bandwidth, and hence the reporting interval, are configured. For example, it is likely infeasible to find a single RTCP configuration that simultaneously suits both a low-rate audio flow with no feedback and a high-quality video flow with sophisticated RTCP-based feedback. Thus, combining these into a single RTP session is difficult and/or inadvisable.",
      "ja": "互換性のあるRTCPの動作：RTCPタイミングルールは、RTPセッション内のすべての参加者に対して単一のRTCPレポートインターバルを強制します。非常に異なるメディア送信レートまたはRTCPフィードバックの要件を持つフローは、RTCPセッション帯域幅のどちらのフローでは過度か不十分なRTCPのいずれかになります。たとえば、フィードバックなしの低レートのオーディオフローと高度なRTCPベースのフィードバックを備えた高品質のビデオフローの両方に同時に適した単一のRTCP構成を見つけることができます。したがって、これらを単一のRTPセッションに組み合わせることは困難であり、そして/または不可視可能である。"
    },
    {
      "indent": 3,
      "text": "Signalled support: The extensions defined in this memo are not compatible with unmodified endpoints that are compatible with [RFC3550]. Their use requires signalling and mutual agreement by all participants within an RTP session. This requirement can be a problem for signalling solutions that can't negotiate with all participants. For declarative signalling solutions, mandating that the session use multiple media types in one RTP session can be a way of attempting to ensure that all participants in the RTP session follow the requirement. However, for signalling solutions that lack methods for enforcing a requirement that a receiver support a specific feature, this can still cause issues.",
      "ja": "シグナリングサポート：このメモに定義されている拡張子は、[RFC3550]と互換性のある変更されていないエンドポイントと互換性がありません。彼らの使用は、RTPセッション内のすべての参加者によるシグナリングと相互合意を必要とします。この要件は、すべての参加者と交渉できないソリューションをシグナリングするための問題になる可能性があります。宣言型シグナリングソリューションの場合、1つのRTPセッションでセッションが複数のメディアタイプを使用することを命令することは、RTPセッション内のすべての参加者が要件に従うことを確実にする方法です。ただし、受信側が特定の機能をサポートする要件を強制する方法を不足しているシグナリングソリューションの場合、これは依然として問題を引き起こす可能性があります。"
    },
    {
      "indent": 3,
      "text": "Consistent support for multiparty RTP sessions: If it is desired to send multiple types of media in a multiparty RTP session, then all participants in that session need to support sending multiple types of media in a single RTP session. It is not possible, in the general case, to implement a gateway that can interconnect an endpoint that uses multiple types of media sent using separate RTP sessions with one or more endpoints that send multiple types of media in a single RTP session.",
      "ja": "マルチパーティRTPセッションに対する一貫したサポート：マルチパーティRTPセッションで複数の種類のメディアを送信することが望ましい場合は、そのセッション内のすべての参加者が1つのRTPセッションで複数の種類のメディアの送信をサポートする必要があります。一般的な場合、単一のRTPセッションで複数の種類のメディアを送信する1つ以上のエンドポイントを使用して、別々のRTPセッションを使用して送信された複数の種類のメディアを使用するエンドウェインをインターコネリングできるゲートウェイを実装することはできません。"
    },
    {
      "indent": 6,
      "text": "One reason for this is that the same SSRC value can safely be used for different streams in multiple RTP sessions, but when collapsed to a single RTP session there is an SSRC collision. This would not be an issue, since SSRC collision detection will resolve the conflict, except that some RTP payload formats and extensions use matching SSRCs to identify related flows and will break when a single RTP session is used.",
      "ja": "この理由の1つは、同じSSRC値が複数のRTPセッション内のさまざまなストリームに安全に使用できることですが、単一のRTPセッションに折りたたまれるとSSRC衝突があります。SSRCの衝突検出は、SSRCの衝突検出が競合を解決するため、SSRCの衝突検出は競合を解決するため、一致するSSRCSを使用して関連するフローを識別し、単一のRTPセッションが使用されたときに壊れます。"
    },
    {
      "indent": 6,
      "text": "A middlebox that remaps SSRC values when combining multiple RTP sessions into one also needs to be aware of all possible RTCP packet types that might be used, so that it can remap the SSRC values in those packets. This is impossible to do without restricting the set of RTCP packet types that can be used to those that are known by the middlebox. Such a middlebox might also have difficulty due to differences in configured RTCP bandwidth and other parameters between the RTP sessions.",
      "ja": "複数のRTPセッションを1つに組み合わせるときにSSRC値を再マイプするミドルボックスは、使用される可能性のあるすべてのRTCPパケットタイプを認識する必要があります。これは、ミドルボックスで知られているものに使用できるRTCPパケットタイプのセットを制限することなく行うことは不可能です。このようなミドルボックスは、RTCP帯域幅の違いやRTPセッション間の他のパラメータの違いによるものもあります。"
    },
    {
      "indent": 6,
      "text": "Finally, the use of a middlebox that translates SSRC values can negatively impact the possibility of loop detection, as SSRC/CSRC (Contributing Source) can't be used to detect the loops; instead, some other RTP stream or media source identity namespace that is common across all interconnected parts is needed.",
      "ja": "最後に、SSRC値を変換するミドルボックスを使用すると、SSRC / CSRC（寄与元）を使用してループを検出できないため、ループ検出の可能性に悪影響を及ぼす可能性があります。代わりに、すべての相互接続された部分にわたって一般的な他のRTPストリームまたはメディアソースIDネームスペースが必要です。"
    },
    {
      "indent": 3,
      "text": "Ability to operate with limited payload type space: An RTP session has only a single 7-bit payload type space for all its payload type numbers. Some applications might find this space to be limiting (i.e., overly restrictive) when using different media types and RTP payload formats within a single RTP session.",
      "ja": "限られたペイロードタイプスペースで動作する機能：RTPセッションは、そのすべてのペイロードタイプ番号に対して1つの7ビットペイロードタイプスペースしかありません。一部のアプリケーションでは、単一のRTPセッション内でさまざまなメディアタイプとRTPペイロードフォーマットを使用する場合、このスペースが制限される（すなわち、過度に制限的な）ということがある。"
    },
    {
      "indent": 3,
      "text": "Avoidance of incompatible extensions: Some RTP and RTCP extensions rely on the existence of multiple RTP sessions and relate RTP streams between sessions. Others report on particular media types and cannot be used with other media types. Applications that send multiple types of media into a single RTP session need to avoid such extensions.",
      "ja": "互換性のない拡張機能の回避：いくつかのRTPおよびRTCP拡張機能は、複数のRTPセッションの存在に依存し、セッション間のRTPストリームを関連付ける。他のメディアタイプは特定のメディアタイプを報告し、他のメディアタイプと一緒に使用することはできません。単一のRTPセッションに複数の種類のメディアを送信するアプリケーションは、そのような拡張を回避する必要があります。"
    },
    {
      "indent": 0,
      "text": "5. Using Multiple Media Types in a Single RTP Session",
      "section_title": true,
      "ja": "5. 単一のRTPセッションで複数のメディアタイプを使用する"
    },
    {
      "indent": 3,
      "text": "This section defines what needs to be done or avoided to make an RTP session with multiple media types function without issues.",
      "ja": "このセクションでは、問題なく複数のメディアタイプを持つRTPセッションを実行するために行う必要があるか回避する必要があるのかを定義します。"
    },
    {
      "indent": 0,
      "text": "5.1. Allowing Multiple Media Types in an RTP Session",
      "section_title": true,
      "ja": "5.1. RTPセッション内の複数のメディアタイプを許可する"
    },
    {
      "indent": 3,
      "text": "Section 5.2 of \"RTP: A Transport Protocol for Real-Time Applications\" [RFC3550] states:",
      "ja": "「RTP：リアルタイムアプリケーションのトランスポートプロトコル」のセクション5.2 [RFC3550]"
    },
    {
      "indent": 3,
      "text": "|  For example, in a teleconference composed of audio and video media\n|  encoded separately, each medium SHOULD be carried in a separate\n|  RTP session with its own destination transport address.\n|\n|  Separate audio and video streams SHOULD NOT be carried in a single\n|  RTP session and demultiplexed based on the payload type or SSRC\n|  fields.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This specification changes both of these sentences. The first sentence is changed to:",
      "ja": "この仕様はこれらの文の両方を変えます。最初の文は次のように変更されました。"
    },
    {
      "indent": 3,
      "text": "|  For example, in a teleconference composed of audio and video media\n|  encoded separately, each medium SHOULD be carried in a separate\n|  RTP session with its own destination transport address, unless the\n|  guidelines specified in [RFC8860] are followed and the application\n|  meets the applicability constraints.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The second sentence is changed to:",
      "ja": "2番目の文は次のように変更されています。"
    },
    {
      "indent": 3,
      "text": "|  Separate audio and video media sources SHOULD NOT be carried in a\n|  single RTP session, unless the guidelines specified in [RFC8860]\n|  are followed.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The second paragraph of Section 6 of \"RTP Profile for Audio and Video Conferences with Minimal Control\" [RFC3551] says:",
      "ja": "「オーディオおよびビデオ会議のためのRTPプロファイルの最小コントロール」[RFC3551]のセクション6の第2段落："
    },
    {
      "indent": 3,
      "text": "|  The payload types currently defined in this profile are assigned\n|  to exactly one of three categories or media types: audio only,\n|  video only and those combining audio and video.  The media types\n|  are marked in Tables 4 and 5 as \"A\", \"V\" and \"AV\", respectively.\n|  Payload types of different media types SHALL NOT be interleaved or\n|  multiplexed within a single RTP session, but multiple RTP sessions\n|  MAY be used in parallel to send multiple media types.  An RTP\n|  source MAY change payload types within the same media type during\n|  a session.  See the section \"Multiplexing RTP Sessions\" of RFC\n|  3550 for additional explanation.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This specification's purpose is to override the above-listed \"SHALL NOT\" under certain conditions. Thus, this sentence also has to be changed to allow for multiple media types' payload types in the same session. The sentence containing \"SHALL NOT\" in the above paragraph is changed to:",
      "ja": "この仕様の目的は、特定の条件下で上記の「しない」を上書きすることです。したがって、この文は、同じセッション内の複数のメディアタイプのペイロードタイプを許可するように変更する必要があります。上記の段落に「しない」を含む文は次のように変更されています。"
    },
    {
      "indent": 3,
      "text": "|  Payload types of different media types SHALL NOT be interleaved or\n|  multiplexed within a single RTP session unless [RFC8860] is used\n|  and the application conforms to the applicability constraints.\n|  Multiple RTP sessions MAY be used in parallel to send multiple\n|  media types.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.2. Demultiplexing Media Types within an RTP Session",
      "section_title": true,
      "ja": "5.2. RTPセッション内のメディアタイプを逆重化します"
    },
    {
      "indent": 3,
      "text": "When receiving packets from a transport-layer flow, an endpoint will first separate the RTP and RTCP packets from the non-RTP packets and pass them to the RTP/RTCP protocol handler. The RTP and RTCP packets are then demultiplexed into the different RTP streams based on their SSRC. For each RTP stream, incoming RTCP packets are processed, and the RTP payload type is used to select the appropriate media decoder. This process remains the same irrespective of whether multiple media types are sent in a single RTP session or not.",
      "ja": "トランスポート層の流れからパケットを受信すると、エンドポイントは最初にRTPパケットとRTCPパケットをRTPパケット以外のパケットから分離し、それらをRTP / RTCPプロトコルハンドラに渡します。その後、RTPパケットとRTCPパケットは、SSRCに基づいて異なるRTPストリームに分離されます。各RTPストリームについて、着信RTCPパケットが処理され、RTPペイロードタイプが適切なメディアデコーダを選択するために使用されます。このプロセスは、複数のメディアタイプが単一のRTPセッションで送信されているかどうかにかかわらず、同じままです。"
    },
    {
      "indent": 3,
      "text": "As explained below, it is important to note that the RTP payload type is never used to distinguish RTP streams. The RTP packets are demultiplexed into RTP streams based on their SSRC; the RTP payload type is then used to select the correct media-decoding pathway for each RTP stream.",
      "ja": "後述するように、RTPペイロードタイプはRTPストリームを区別するために使用されないことに注意することが重要です。RTPパケットは、それらのSSRCに基づいてRTPストリームに分離されています。次に、RTPペイロードタイプを使用して、各RTPストリームの正しいメディアデコード経路を選択します。"
    },
    {
      "indent": 0,
      "text": "5.3. Per-SSRC Media Type Restrictions",
      "section_title": true,
      "ja": "5.3. SSRCごとのメディアタイプの制限事項"
    },
    {
      "indent": 3,
      "text": "An SSRC in an RTP session can change between media formats of the same type, subject to certain restrictions [RFC7160], but MUST NOT change its media type during its lifetime. For example, an SSRC can change between different audio formats, but it cannot start sending audio and then change to sending video. The lifetime of an SSRC ends when an RTCP BYE packet for that SSRC is sent or when it ceases transmission for long enough that it times out for the other participants in the session.",
      "ja": "RTPセッションのSSRCは、特定の制限事項[RFC7160]に対象となるが、その有効期間中にメディアタイプを変更してはなりません。たとえば、SSRCは異なるオーディオフォーマットの間で変更できますが、オーディオの送信を開始してからビデオの送信に変更することはできません。SSRCのRTCP BYEパケットが送信されたとき、またはセッション内の他の参加者に対して十分に送信を終了すると、SSRCの寿命は終了します。"
    },
    {
      "indent": 3,
      "text": "The main motivation is that a given SSRC has its own RTP timestamp and sequence number spaces. The same way that you can't send two encoded streams of audio with the same SSRC, you can't send one encoded audio and one encoded video stream with the same SSRC. Each encoded stream, when made into an RTP stream, needs to have sole control over the sequence number and timestamp space. If not, one would not be able to detect packet loss for that particular encoded stream, nor could one easily determine which clock rate a particular SSRC's timestamp will increase with. For additional arguments regarding why multiplexing of multiple media sources that is based on RTP payload type doesn't work, see [RFC8872].",
      "ja": "主な動機は、特定のSSRCに独自のRTPタイムスタンプとシーケンス番号スペースがあることです。同じSSRCを使用して2つのエンコードされたオーディオストリームを送信できないのと同じ方法で、1つのエンコードされたオーディオと1つのエンコードされたビデオストリームを同じSSRCで送信することはできません。RTPストリームに作成された場合、各エンコードされたストリームは、シーケンス番号とタイムスタンプスペースを統括的に制御する必要があります。そうでなければ、その特定の符号化されたストリームのパケット損失を検出することはできないであろうと、特定のSSRCのタイムスタンプがどのクロックレートで増加するかを容易に決定することもできない。RTPペイロードタイプに基づく複数のメディアソースの多重化が機能しない理由に関する追加の引数については、[RFC8872]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Within an RTP session where multiple media types have been configured for use, an SSRC can only send one type of media during its lifetime (i.e., it can switch between different audio codecs, since those are both the same type of media, but it cannot switch between audio and video). Different SSRCs MUST be used for the different media sources, the same way multiple media sources of the same media type already have to do. The payload type will inform a receiver which media type the SSRC is being used for. Thus, the payload type MUST be unique across all of the payload configurations, independent of the media type that is used in the RTP session.",
      "ja": "複数のメディアタイプが使用するように構成されているRTPセッション内で、SSRCはその存続期間中に1種類のメディアを送信できます（つまり、それらのメディアは両方とも同じ種類のメディアであるため、異なるオーディオコーデック間で切り替えることができますが、できません。オーディオとビデオを切り替えます）。同じメディアタイプの複数のメディアソースがすでに行われなければならないのと同じ方法で、さまざまなメディアソースには異なるSSRCを使用する必要があります。ペイロードタイプは、SSRCが使用されているメディアタイプが使用されている受信機に通知します。したがって、RTPセッションで使用されるメディアタイプとは無関係に、ペイロードタイプはすべてのペイロード構成にわたって一意である必要があります。"
    },
    {
      "indent": 0,
      "text": "5.4. RTCP Considerations",
      "section_title": true,
      "ja": "5.4. RTCPに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "When sending multiple types of media that have different rates in a single RTP session, endpoints MUST follow the guidelines for handling RTCP as provided in Section 7 of [RFC8108].",
      "ja": "単一のRTPセッションで異なるレートを持つ複数の種類のメディアを送信する場合、エンドポイントは[RFC8108]のセクション7で提供されているRTCPを処理するためのガイドラインに従う必要があります。"
    },
    {
      "indent": 0,
      "text": "6. Extension Considerations",
      "section_title": true,
      "ja": "6. 拡張に関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This section outlines known issues and incompatibilities with RTP and RTCP extensions when multiple media types are used in a single RTP session. Future extensions to RTP and RTCP need to consider, and document, any potential incompatibilities.",
      "ja": "このセクションでは、1つのRTPセッションで複数のメディアタイプが使用されている場合、RTPおよびRTCP拡張機能を備えた既知の問題と非互換性について説明します。RTPおよびRTCPへの将来の拡張機能は、潜在的な非互換性を考慮し、文書化する必要があります。"
    },
    {
      "indent": 0,
      "text": "6.1. RTP Retransmission Payload Format",
      "section_title": true,
      "ja": "6.1. RTP再送ペイロードフォーマット"
    },
    {
      "indent": 3,
      "text": "The RTP retransmission payload format [RFC4588] can operate in either SSRC-multiplexed mode or session-multiplexed mode.",
      "ja": "RTP再送ペイロードフォーマット[RFC4588]は、SSRC多重モードまたはセッション多重モードで動作できます。"
    },
    {
      "indent": 3,
      "text": "In SSRC-multiplexed mode, retransmitted RTP packets are sent in the same RTP session as the original packets but use a different SSRC with the same RTCP Source Description (SDES) CNAME. If each endpoint sends only a single original RTP stream and a single retransmission RTP stream in the session, this is sufficient. If an endpoint sends multiple original and retransmission RTP streams, as would occur when sending multiple media types in a single RTP session, then each original RTP stream and the retransmission RTP stream have to be associated using heuristics. By having retransmission requests outstanding for only one SSRC not yet mapped, a receiver can determine the binding between the original and retransmission RTP streams. Another alternative is the use of different RTP payload types, allowing the signalled \"apt\" (associated payload type) parameter [RFC4588] of the RTP retransmission payload format to be used to associate retransmitted and original packets.",
      "ja": "SSRC多重化モードでは、再送信されたRTPパケットは元のパケットと同じRTPセッションで送信されますが、同じRTCPソース記述（SDES）CNAMEを持つ別のSSRCを使用します。各エンドポイントがセッション内で単一のオリジナルRTPストリームと単一の再送信RTPストリームのみを送信すると、これで十分です。単一のRTPセッションで複数のメディアタイプを送信するときに発生するように、エンドポイントが複数のオリジナルおよび再送信RTPストリームを送信する場合、各オリジナルのRTPストリームと再送信RTPストリームはヒューリスティックを使用して関連付ける必要があります。再送要求を未解決の要求をまだマッピングされていないSSRCのみに未処理にすることで、受信機は元のRTPストリームと再送信RTPストリーム間のバインディングを決定できます。もう1つの代替案は、さまざまなRTPペイロードタイプの使用で、RTP再送ペイロードフォーマットのシグナリングされた「APT」（関連ペイロードタイプ）パラメータ[RFC4588]を再送信および元のパケットと関連付けるために使用されます。"
    },
    {
      "indent": 3,
      "text": "Session-multiplexed mode sends the retransmission RTP stream in a separate RTP session to the original RTP stream, but using the same SSRC for each, with the association being done by matching SSRCs between the two sessions. This is unaffected by the use of multiple media types in a single RTP session, since each media type will be sent using a different SSRC in the original RTP session, and the same SSRCs can be used in the retransmission session, allowing the streams to be associated. This can be signalled using SDP with the BUNDLE grouping extension [RFC8843] and the Flow Identification (FID) grouping extension [RFC5888]. These SDP extensions require each \"m=\" line to only be included in a single FID group, but the RTP retransmission payload format uses FID groups to indicate the \"m=\" lines that form an original and retransmission pair. Accordingly, when using the BUNDLE extension to allow multiple media types to be sent in a single RTP session, each original media source (\"m=\" line) that is retransmitted needs a corresponding \"m=\" line in the retransmission RTP session. If there are multiple media lines for retransmission, these media lines will form an independent BUNDLE group from the BUNDLE group with the source streams.",
      "ja": "セッション多重化モードは、再送信RTPストリームを別のRTPセッションで元のRTPストリームに送信しますが、それぞれのSSRCを2つのセッション間でSSRCを一致させることによって実行されます。これは、単一のRTPセッションで複数のメディアタイプを使用することによって影響を受けません。各メディアタイプは、元のRTPセッションで異なるSSRCを使用して送信され、同じSSRCが再送信セッションで使用できるため、ストリームが関連付けられている。これは、バンドルグループ化拡張[RFC8843]とフローID（FID）グループ化拡張[RFC5888]を使用してSDPを使用してシグナリングできます。これらのSDP拡張機能は、単一のFIDグループにのみ含まれるのにのみ「M =」回線を必要としますが、RTP再送ペイロードフォーマットはFIDグループを使用して、元のレスミッションペアを形成する「M =」行を示します。したがって、バンドル拡張子を使用して複数のメディアタイプを単一のRTPセッションで送信できるようにする場合、再送される各元のメディアソース（「M =」行）は、再送RTPセッション内の対応する「M =」行を必要とする。再送のためのメディアラインが複数ある場合、これらのメディアラインはバンドルグループからソースストリームを使用して独立したバンドルグループを形成します。"
    },
    {
      "indent": 3,
      "text": "An example SDP fragment showing the grouping structures is provided in Figure 1. This example is not legal SDP, and only the most important attributes have been left in place. Note that this SDP is not an initial BUNDLE offer. As can be seen in this example, there are two bundle groups -- one for the source RTP session and one for the retransmissions. Then, each of the media sources is grouped with its retransmission flow using FID, resulting in three more groupings.",
      "ja": "グループ化構造を示す例示的なSDPフラグメントを図1に示します。この例は、正当なSDPではなく、最も重要な属性のみが残っています。このSDPは初期バンドルオファーではありません。この例で見られるように、ソースRTPセッションのためのものと再送信のための2つのバンドルグループがあります。次に、各メディアソースはFIDを使用してその再送信フローとグループ化され、その結果3つのグループ化が得られます。"
    },
    {
      "indent": 10,
      "text": "a=group:BUNDLE foo bar fiz\na=group:BUNDLE zoo kelp glo\na=group:FID foo zoo\na=group:FID bar kelp\na=group:FID fiz glo\nm=audio 10000 RTP/AVP 0\na=mid:foo\na=rtpmap:0 PCMU/8000\nm=video 10000 RTP/AVP 31\na=mid:bar\na=rtpmap:31 H261/90000\nm=video 10000 RTP/AVP 31\na=mid:fiz\na=rtpmap:31 H261/90000\nm=audio 40000 RTP/AVPF 99\na=rtpmap:99 rtx/90000\na=fmtp:99 apt=0;rtx-time=3000\na=mid:zoo\nm=video 40000 RTP/AVPF 100\na=rtpmap:100 rtx/90000\na=fmtp:199 apt=31;rtx-time=3000\na=mid:kelp\nm=video 40000 RTP/AVPF 100\na=rtpmap:100 rtx/90000\na=fmtp:199 apt=31;rtx-time=3000\na=mid:glo",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Figure 1: SDP Example of Session-Multiplexed RTP Retransmission",
      "ja": "図1：セッション多重化RTP再送のSDPの例"
    },
    {
      "indent": 0,
      "text": "6.2. RTP Payload Format for Generic FEC",
      "section_title": true,
      "ja": "6.2. 汎用FECのRTPペイロード形式"
    },
    {
      "indent": 3,
      "text": "The RTP payload format for generic Forward Error Correction (FEC), as defined in [RFC5109] (and its predecessor, [RFC2733]), can either send the FEC stream as a separate RTP stream or send the FEC combined with the original RTP stream as a redundant encoding [RFC2198].",
      "ja": "[RFC5109]（およびその前身[RFC2733]）で定義されているジェネリックフォワードエラー訂正（FEC）のRTPペイロード形式（FEC）は、FECストリームを別のRTPストリームとして送信したり、元のRTPストリームと組み合わせてFECを送信できます。冗長符号化として[RFC2198]。"
    },
    {
      "indent": 3,
      "text": "When sending FEC as a separate stream, the RTP payload format for generic FEC requires that FEC stream to be sent in a separate RTP session to the original stream, using the same SSRC, with the FEC stream being associated by matching the SSRC between sessions. The RTP session used for the original streams can include multiple RTP streams, and those RTP streams can use multiple media types. The repair session only needs one RTP payload type to indicate FEC data, irrespective of the number of FEC streams sent, since the SSRC is used to associate the FEC streams with the original streams. Hence, it is RECOMMENDED that the FEC stream use the \"application/ulpfec\" media type in the case of support for [RFC5109] and the \"application/parityfec\" media type in the case of support for [RFC2733]. It is legal, but NOT RECOMMENDED, to send FEC streams using media-specific payload format names (e.g., using both the \"audio/ulpfec\" and \"video/ulpfec\" payload formats for a single RTP session containing both audio and video flows), since this (1) unnecessarily uses up RTP payload type values and (2) adds no value for demultiplexing because there might be multiple streams of the same media type).",
      "ja": "FECを別のストリームとして送信するとき、一般的なFECのRTPペイロード形式は、同じSSRCを使用して、SESSIONS間のSSRCを一致させることによって関連するSSRCを使用して、FECストリームを元のストリームに別々のRTPセッションで送信する必要があります。元のストリームに使用されるRTPセッションは複数のRTPストリームを含めることができ、それらのRTPストリームは複数のメディアタイプを使用できます。 SSRCはFECストリームと元のストリームを関連付けるためにSSRCが使用されているため、FECストリームの数に関係なく、FECデータを示すために1つのRTPペイロードタイプのみが必要です。したがって、[RFC5109]のサポートの場合は、[RFC2733]をサポートする場合の「アプリケーション/ ParityFec」メディアタイプの場合、FECストリームは「アプリケーション/ ULPFEC」メディアタイプを使用することをお勧めします。これは、（例えば、「オーディオ/ ulpfec」および「ビデオ/ ulpfec」の両方を使用して、オーディオとビデオフローの両方を含む単一のRTPセッションのペイロードフォーマットの使用）を使用してFECストリームを送信することは合法ですが推奨されていません。 、この（1）は不必要にRTPペイロードタイプの値を使用し、（2）を使用しているため、同じメディアタイプの複数のストリームがある可能性があるため、逆多重化に値が追加されません）。"
    },
    {
      "indent": 3,
      "text": "The combination of an original RTP session using multiple media types with an associated generic FEC session can be signalled using SDP with the BUNDLE extension [RFC8843]. In this case, the RTP session carrying the FEC streams will be its own BUNDLE group. The \"m=\" line for each original stream and the \"m=\" line for the corresponding FEC stream are grouped using the SDP Grouping Framework, using either the FEC-FR grouping [RFC5956] or, for backwards compatibility, the FEC grouping [RFC4756]. This is similar to the situation that arises for RTP retransmission with session-based multiplexing as discussed in Section 6.1.",
      "ja": "関連する一般的なFECセッションを使用して複数のメディアタイプを使用したオリジナルのRTPセッションの組み合わせは、バンドル拡張[RFC8843]を使用してSDPを使用してシグナリングできます。この場合、FECストリームを運ぶRTPセッションは独自のバンドルグループになります。FEC-FRグループ化[RFC5956]または下位互換性のために、対応するFECストリームの \"M =\"行の \"M =\"行は、FEC-FRグループ化[RFC5956]を使用して、SDPグループ化フレームワークを使用してグループ化されます。RFC4756]。これは、セクション6.1で説明したように、セッションベースの多重化によるRTP再送のための状況に似ています。"
    },
    {
      "indent": 3,
      "text": "The source-specific media attributes specification [RFC5576] defines an SDP extension (the \"FEC\" semantic of the \"ssrc-group\" attribute) to signal FEC relationships between multiple RTP streams within a single RTP session. This cannot be used with generic FEC, since the FEC repair packets need to have the same SSRC value as the source packets being protected. There existed a proposal (now abandoned) for an Uneven Level Protection (ULP) extension to enable transmission of the FEC RTP streams within the same RTP session as the source stream [FEC-Src-Multiplexing].",
      "ja": "ソース固有のメディア属性指定[RFC5576]は、単一のRTPセッション内の複数のRTPストリーム間のFEC関係をシグナリングするためのSDP拡張子（「FEC」セマンティック）を定義します。FECの修復パケットは、保護されているソースパケットと同じSSRC値を持つ必要があるため、一般的なFECでは使用できません。ソースストリーム[FEC-SRC多重化]と同じRTPセッション内のFEC RTPストリームの送信を可能にするために、不均一レベル保護（ULP）拡張子の提案が存在しました。"
    },
    {
      "indent": 3,
      "text": "When the FEC is sent as a redundant encoding, the considerations in Section 6.3 apply.",
      "ja": "FECが冗長エンコーディングとして送信されると、6.3項の考慮事項が適用されます。"
    },
    {
      "indent": 0,
      "text": "6.3. RTP Payload Format for Redundant Audio",
      "section_title": true,
      "ja": "6.3. 冗長オーディオのRTPペイロードフォーマット"
    },
    {
      "indent": 3,
      "text": "The RTP payload format for redundant audio [RFC2198] can be used to protect audio streams. It can also be used along with the generic FEC payload format to send original and repair data in the same RTP packets. Both are compatible with RTP sessions containing multiple media types.",
      "ja": "冗長オーディオ[RFC2198]のRTPペイロード形式を使用してオーディオストリームを保護できます。また、汎用FECペイロードフォーマットと一緒に使用して、同じRTPパケット内のオリジナルおよび修復データを送信することもできます。どちらも、複数のメディアタイプを含むRTPセッションと互換性があります。"
    },
    {
      "indent": 3,
      "text": "This payload format requires each different redundant encoding to use a different RTP payload type number. When used with generic FEC in sessions that contain multiple media types, this requires each media type to use a different payload type for the FEC stream. For example, if audio and text are sent in a single RTP session with generic ULP FEC sent as a redundant encoding for each, then payload types need to be assigned for FEC using the audio/ulpfec and text/ulpfec payload formats. If multiple original payload types are used in the session, different redundant payload types need to be allocated for each one. This has potential to rapidly exhaust the available RTP payload type numbers.",
      "ja": "このペイロードフォーマットでは、異なるRTPペイロードタイプ番号を使用するために、各異なる冗長エンコーディングが必要です。複数のメディアタイプを含むセッションで一般的なFECと共に使用する場合、これはFECストリームに対して異なるペイロードタイプを使用するように各メディアタイプを必要とします。たとえば、オーディオとテキストが冗長符号化として送信された単一のRTPセッションで送信された場合、Payloadタイプは、Audio / ULPFECおよびText / ULPFECペイロードフォーマットを使用してFEC用に割り当てる必要があります。セッションで複数のオリジナルペイロードタイプが使用されている場合、それぞれに対して異なる冗長ペイロードタイプを割り当てる必要があります。これには、利用可能なRTPペイロードタイプ番号を迅速に排気する可能性があります。"
    },
    {
      "indent": 0,
      "text": "7. Signalling",
      "section_title": true,
      "ja": "7. シグナリング"
    },
    {
      "indent": 3,
      "text": "Establishing a single RTP session using multiple media types requires signalling. This signalling has to:",
      "ja": "複数のメディアタイプを使用して単一のRTPセッションを確立するにはシグナリングが必要です。このシグナリングは以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. ensure that any participant in the RTP session is aware that this is an RTP session with multiple media types;",
      "ja": "1. RTPセッションの参加者が、これが複数のメディアタイプを持つRTPセッションであることを確認してください。"
    },
    {
      "indent": 3,
      "text": "2. ensure that the payload types in use in the RTP session are using unique values, with no overlap between the media types;",
      "ja": "2. RTPセッションで使用されているペイロードタイプが一意の値を使用していることを確認し、メディアタイプ間で重複はありません。"
    },
    {
      "indent": 3,
      "text": "3. ensure that RTP session-level parameters -- for example, the RTCP RR and RS bandwidth modifiers [RFC3556], the RTP/AVPF trr-int parameter [RFC4585], transport protocol, RTCP extensions in use, and any security parameters -- are consistent across the session; and",
      "ja": "3. RTCP RRおよびRS帯域幅修飾子[RFC3556]、RTP / AVPF TRR-INTパラメータ[RFC4585]、トランスポートプロトコル、使用中のRTCP拡張機能、およびセキュリティパラメータなど、RFC3556のパラメータ（RFC3585]、トランスポートプロトコル、RTCP拡張（RFC4585]などです。セッション全体で一貫しています。そして"
    },
    {
      "indent": 3,
      "text": "4. ensure that RTP and RTCP functions that can be bound to a particular media type are reused where possible, rather than configuring multiple code points for the same thing.",
      "ja": "4. 特定のメディアタイプにバインドできるRTPおよびRTCP関数が、同じことに複数のコードポイントを設定するのではなく、可能な限り再利用されていることを確認してください。"
    },
    {
      "indent": 3,
      "text": "When using SDP signalling, the BUNDLE extension [RFC8843] is used to signal RTP sessions containing multiple media types.",
      "ja": "SDPシグナリングを使用する場合、バンドル拡張[RFC8843]は、複数のメディアタイプを含むRTPセッションをシグナリングするために使用されます。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "RTP provides a range of strong security mechanisms that can be used to secure sessions [RFC7201] [RFC7202]. The majority of these are independent of the type of media sent in the RTP session; however, it is important to check that the security mechanism chosen is compatible with all types of media sent within the session.",
      "ja": "RTPは、セッションを保護するために使用できる範囲の強力なセキュリティメカニズムを提供します[RFC7201] [RFC7202]。これらの大部分は、RTPセッションで送信されたメディアの種類とは無関係です。ただし、選択されたセキュリティメカニズムがセッション内で送信されたすべての種類のメディアと互換性があることを確認することが重要です。"
    },
    {
      "indent": 3,
      "text": "Sending multiple media types in a single RTP session will generally require that all use the same security mechanism, whereas media sent using different RTP sessions can be secured in different ways. When different media types have different security requirements, it might be necessary to send them using separate RTP sessions to meet those different requirements. This can have significant costs in terms of resource usage, session setup time, etc.",
      "ja": "単一のRTPセッションで複数のメディアタイプを送信することは、一般に、すべてのRTPセッションを使用して送信されたメディアをさまざまな方法で保護することができますが、すべて同じセキュリティメカニズムを使用する必要があります。異なるメディアタイプが異なるセキュリティ要件を持つ場合は、それらのさまざまな要件を満たすように別々のRTPセッションを使用してそれらを送信する必要があるかもしれません。これは、リソース使用量、セッション設定時間などの点で大きなコストを持つことができます。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no IANA actions.",
      "ja": "この文書にはIANAの行動がありません。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10. 参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] BRADNER、S、「RFCSで使用するためのキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https：//www.rfc-editor.org/info/RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3550] Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson, \"RTP: A Transport Protocol for Real-Time Applications\", STD 64, RFC 3550, DOI 10.17487/RFC3550, July 2003, <https://www.rfc-editor.org/info/rfc3550>.",
      "ja": "[RFC3550] Schulzrinne、H.、Casner、S.、Frederick、R.、およびV. Jacobson、「RTP：リアルタイムアプリケーション用輸送プロトコル」、STD 64、RFC 3550、DOI 10.17487 / RFC3550、2003年7月、<https://www.rfc-editor.org/info/rfc3550>。"
    },
    {
      "indent": 3,
      "text": "[RFC3551] Schulzrinne, H. and S. Casner, \"RTP Profile for Audio and Video Conferences with Minimal Control\", STD 65, RFC 3551, DOI 10.17487/RFC3551, July 2003, <https://www.rfc-editor.org/info/rfc3551>.",
      "ja": "[RFC3551] Schulzrinne、H.およびS.Casner、STD 65、RFC 3551、DOI 10.17487 / RFC3551、2003年7月、<https：///www.rfc-編集者。ORG / INFO / RFC3551>。"
    },
    {
      "indent": 3,
      "text": "[RFC8108] Lennox, J., Westerlund, M., Wu, Q., and C. Perkins, \"Sending Multiple RTP Streams in a Single RTP Session\", RFC 8108, DOI 10.17487/RFC8108, March 2017, <https://www.rfc-editor.org/info/rfc8108>.",
      "ja": "[RFC8108] Lennox、J.、Westerlund、M.、Wu、Q.、およびC. Perkins、「単一のRTPセッションで複数のRTPストリームを送信する」、RFC 8108、DOI 10.17487 / RFC8108、2017年3月、<https：//www.rfc-editor.org/info/rfc8108>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B、「RFC 2119キーワードの大文字の曖昧さ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https：//www.rfc-editor.org/info/RFC8174>。"
    },
    {
      "indent": 3,
      "text": "[RFC8843] Holmberg, C., Alvestrand, H., and C. Jennings, \"Negotiating Media Multiplexing Using the Session Description Protocol (SDP)\", RFC 8843, DOI 10.17487/RFC8843, January 2021, <https://www.rfc-editor.org/info/rfc8843>.",
      "ja": "[RFC8843] Holmberg、C、Alvestrand、H.、およびC.ジェンニング、「セッション記述プロトコル（SDP）」、RFC 8843、DOI 10.17487 / RFC8843、<https：// www。rfc-editor.org/info/rfc8843>。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[FEC-Src-Multiplexing] Lennox, J., \"Supporting Source-Multiplexing of the Real-Time Transport Protocol (RTP) Payload for Generic Forward Error Correction\", Work in Progress, Internet-Draft, draft-lennox-payload-ulp-ssrc-mux-00, 18 February 2013, <https://tools.ietf.org/html/draft-lennox-payload-ulp-ssrc-mux-00>.",
      "ja": "[FEC-SRC多重化] Lennox、J.、「一般的な前方誤り訂正のためのリアルタイムトランスポートプロトコル（RTP）ペイロードのサポート」、進行中の作業、インターネットドラフト、ドラフトLennox-Payload-ULP-ssrc-mux-00,2013、<https://tools.ietf.org/html/draft-lennox-payload-ulp-ssrc-mux-00>"
    },
    {
      "indent": 3,
      "text": "[RFC2198] Perkins, C., Kouvelas, I., Hodson, O., Hardman, V., Handley, M., Bolot, J.C., Vega-Garcia, A., and S. Fosse-Parisis, \"RTP Payload for Redundant Audio Data\", RFC 2198, DOI 10.17487/RFC2198, September 1997, <https://www.rfc-editor.org/info/rfc2198>.",
      "ja": "[RFC2198] Perkins、C、Kouvelas、I。、Hodson、O.、Hardman、V.、Handley、M.、Bolot、JC、Vega-Garcia、A.、およびS.FOSSE-PARISIS、「RTPペイロード」冗長オーディオデータ \"、RFC 2198、DOI 10.17487 / RFC2198、1997年9月、<https://www.rfc-editor.org/info/rfc2198>。"
    },
    {
      "indent": 3,
      "text": "[RFC2733] Rosenberg, J. and H. Schulzrinne, \"An RTP Payload Format for Generic Forward Error Correction\", RFC 2733, DOI 10.17487/RFC2733, December 1999, <https://www.rfc-editor.org/info/rfc2733>.",
      "ja": "[RFC2733] Rosenberg、J.およびH.Schulzrinne、「一般順方向誤り訂正のためのRTPペイロード形式」、RFC 2733、DOI 10.17487 / RFC2733、1999年12月、<https：//www.rfc-editor.org/info/RFC2733>。"
    },
    {
      "indent": 3,
      "text": "[RFC3556] Casner, S., \"Session Description Protocol (SDP) Bandwidth Modifiers for RTP Control Protocol (RTCP) Bandwidth\", RFC 3556, DOI 10.17487/RFC3556, July 2003, <https://www.rfc-editor.org/info/rfc3556>.",
      "ja": "[RFC3556] Casner、S.、「セッション記述プロトコル（SDP）帯域幅修飾子（RTCP）帯域幅（RFC）帯域幅（RFC 3556、DOI 10.17487 / RFC3556、2003年7月、<https：//www.rfc-editor.org/ info / rfc3556>。"
    },
    {
      "indent": 3,
      "text": "[RFC4566] Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session Description Protocol\", RFC 4566, DOI 10.17487/RFC4566, July 2006, <https://www.rfc-editor.org/info/rfc4566>.",
      "ja": "[RFC4566]ハンドリー、M.、Jacobson、V.、およびC.Perkins、「SDP：セッション記述プロトコル」、RFC 4566、DOI 10.17487 / RFC4566、2006年7月、<https：//www.rfc-editor.org/情報/ RFC4566>。"
    },
    {
      "indent": 3,
      "text": "[RFC4585] Ott, J., Wenger, S., Sato, N., Burmeister, C., and J. Rey, \"Extended RTP Profile for Real-time Transport Control Protocol (RTCP)-Based Feedback (RTP/AVPF)\", RFC 4585, DOI 10.17487/RFC4585, July 2006, <https://www.rfc-editor.org/info/rfc4585>.",
      "ja": "[RFC4585] OTT、J.、Wenger、S.、Sato、N.、Burmeister、C.、J.REY、「リアルタイムトランスポート制御プロトコルのための拡張RTPプロファイル（RTCP）ベースのフィードバック（RTP / AVPF）\"、RFC 4585、DOI 10.17487 / RFC4585、2006年7月、<https://www.rfc-editor.org/info/rfc4585>。"
    },
    {
      "indent": 3,
      "text": "[RFC4588] Rey, J., Leon, D., Miyazaki, A., Varsa, V., and R. Hakenberg, \"RTP Retransmission Payload Format\", RFC 4588, DOI 10.17487/RFC4588, July 2006, <https://www.rfc-editor.org/info/rfc4588>.",
      "ja": "[RFC4588] Rey、J.、Leon、D.、Miyazaki、A.、Varsa、V.およびR.Hakenberg、「RTP再送ペイロードフォーマット」、RFC 4588、DOI 10.17487 / RFC4588、2006年7月、<https：//www.rfc-editor.org/info/rfc4588>。"
    },
    {
      "indent": 3,
      "text": "[RFC4756] Li, A., \"Forward Error Correction Grouping Semantics in Session Description Protocol\", RFC 4756, DOI 10.17487/RFC4756, November 2006, <https://www.rfc-editor.org/info/rfc4756>.",
      "ja": "[RFC4756] LI、A。、「セッション記述プロトコルの「前方誤り訂正グループ化」、RFC 4756、DOI 10.17487 / RFC4756、2006年11月、<https：//www.rfc-editor.org/info/rfc4756>。"
    },
    {
      "indent": 3,
      "text": "[RFC5109] Li, A., Ed., \"RTP Payload Format for Generic Forward Error Correction\", RFC 5109, DOI 10.17487/RFC5109, December 2007, <https://www.rfc-editor.org/info/rfc5109>.",
      "ja": "[RFC5109] Li、A.、ED。、「汎用フォワードエラー訂正のためのRTPペイロード形式」、RFC 5109、DOI 10.17487 / RFC5109、2007年12月、<https：//www.rfc-editor.org/info/rfc5109>。"
    },
    {
      "indent": 3,
      "text": "[RFC5576] Lennox, J., Ott, J., and T. Schierl, \"Source-Specific Media Attributes in the Session Description Protocol (SDP)\", RFC 5576, DOI 10.17487/RFC5576, June 2009, <https://www.rfc-editor.org/info/rfc5576>.",
      "ja": "[RFC5576] Lennox、J.、OTT、J.、およびT.Schierl、「セッション記述プロトコル（SDP）」、RFC 5576、DOI 10.17487 / RFC5576、2009年6月、<https：//のソース固有のメディア属性www.rfc-editor.org/info/rfc5576>。"
    },
    {
      "indent": 3,
      "text": "[RFC5888] Camarillo, G. and H. Schulzrinne, \"The Session Description Protocol (SDP) Grouping Framework\", RFC 5888, DOI 10.17487/RFC5888, June 2010, <https://www.rfc-editor.org/info/rfc5888>.",
      "ja": "[RFC5888] Camarillo、G.およびH.Schulzrinne「セッション記述プロトコル（SDP）グループ化フレームワーク」、RFC 5888、DOI 10.17487 / RFC5888、2010年6月、<https：//www.rfc-editor.org/info/RFC5888>。"
    },
    {
      "indent": 3,
      "text": "[RFC5956] Begen, A., \"Forward Error Correction Grouping Semantics in the Session Description Protocol\", RFC 5956, DOI 10.17487/RFC5956, September 2010, <https://www.rfc-editor.org/info/rfc5956>.",
      "ja": "[RFC5956] BEGEN、A。、「セッション記述プロトコル」、RFC 5956、DOI 10.17487 / RFC5956、2010年9月、<https://www.rfc-editor.org/info/rfc5956>。"
    },
    {
      "indent": 3,
      "text": "[RFC6466] Salgueiro, G., \"IANA Registration of the 'image' Media Type for the Session Description Protocol (SDP)\", RFC 6466, DOI 10.17487/RFC6466, December 2011, <https://www.rfc-editor.org/info/rfc6466>.",
      "ja": "[RFC6466] Salgueiro、G. \"セッション記述プロトコル（SDP）\"、RFC 6466、DOI 10.17487 / RFC6466、2011年12月、<https：///www.rfc-編集者の「IANA登録」。org / info / rfc6466>。"
    },
    {
      "indent": 3,
      "text": "[RFC7160] Petit-Huguenin, M. and G. Zorn, Ed., \"Support for Multiple Clock Rates in an RTP Session\", RFC 7160, DOI 10.17487/RFC7160, April 2014, <https://www.rfc-editor.org/info/rfc7160>.",
      "ja": "[RFC7160] Petit-Huguenin、M.およびG. Zorn、ED。、「RTPセッションにおける複数のクロックレートのサポート」、RFC 7160、DOI 10.17487 / RFC7160、2014年4月、<https：//www.rfc-編集者.ORG / INFO / RFC7160>。"
    },
    {
      "indent": 3,
      "text": "[RFC7201] Westerlund, M. and C. Perkins, \"Options for Securing RTP Sessions\", RFC 7201, DOI 10.17487/RFC7201, April 2014, <https://www.rfc-editor.org/info/rfc7201>.",
      "ja": "[RFC7201] Westerlund、M.およびC. Perkins、RFC 7201、DOI 10.17487 / RFC7201、2014年4月、<https://www.rfc-editor.org/info/rfc7201>。"
    },
    {
      "indent": 3,
      "text": "[RFC7202] Perkins, C. and M. Westerlund, \"Securing the RTP Framework: Why RTP Does Not Mandate a Single Media Security Solution\", RFC 7202, DOI 10.17487/RFC7202, April 2014, <https://www.rfc-editor.org/info/rfc7202>.",
      "ja": "[RFC7202] Perkins、C、M.Westerlund、「RTPフレームワークの確保：なぜRTPは、なぜ単一のメディアセキュリティソリューションを義務付けていないのか」、RFC 7202、DOI 10.17487 / RFC7202、2014年4月、<https：//www.rfc-editor.org/info/rfc7202>。"
    },
    {
      "indent": 3,
      "text": "[RFC7656] Lennox, J., Gross, K., Nandakumar, S., Salgueiro, G., and B. Burman, Ed., \"A Taxonomy of Semantics and Mechanisms for Real-Time Transport Protocol (RTP) Sources\", RFC 7656, DOI 10.17487/RFC7656, November 2015, <https://www.rfc-editor.org/info/rfc7656>.",
      "ja": "[RFC7656] Lennox、J.、Gross、K.、Nandakumar、S.、Salgueiro、G.、B. Burman、ED。、「リアルタイムトランスポートプロトコル（RTP）ソースのためのセマンティクスおよびメカニズムの分類」、RFC 7656、DOI 10.17487 / RFC7656、2015年11月、<https：//www.rfc-editor.org/info/rfc7656>。"
    },
    {
      "indent": 3,
      "text": "[RFC7657] Black, D., Ed. and P. Jones, \"Differentiated Services (Diffserv) and Real-Time Communication\", RFC 7657, DOI 10.17487/RFC7657, November 2015, <https://www.rfc-editor.org/info/rfc7657>.",
      "ja": "[RFC7657]黒、D.、ED。P. Jones、「差別化サービス（DiffServ）およびリアルタイム通信」、RFC 7657、DOI 10.17487 / RFC 7657、2015年11月、<https：//www.rfc-editor.org/info/rfc7657>。"
    },
    {
      "indent": 3,
      "text": "[RFC8872] Westerlund, M., Burman, B., Perkins, C., Alvestrand, H., and R. Even, \"Guidelines for Using the Multiplexing Features of RTP to Support Multiple Media Streams\", RFC 8872, DOI 10.17487/RFC8872, January 2021, <https://www.rfc-editor.org/info/rfc8872>.",
      "ja": "[RFC8872] Westerlund、M.、Burman、B.、Perkins、C.、Alvestrand、H.、R.さえ、「複数のメディアストリームをサポートするためのRTPの多重化機能を使用するためのガイドライン」、RFC 8872、DOI 10.17487 /RFC8872、2021年1月、<https://www.rfc-editor.org/info/rfc8872>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Christer Holmberg, Gunnar Hellström, Charles Eckel, Tolga Asveren, Warren Kumari, and Meral Shirazipour for their feedback on this document.",
      "ja": "著者らは、この文書に関するフィードバックのために、Christer Holmberg、GunnarHellström、Charles Eckel、Tolga Asveren、Warren Kumari、およびMerran Shirazipourに感謝します。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者の住所"
    },
    {
      "indent": 3,
      "text": "Magnus Westerlund Ericsson Torshamnsgatan 23 SE-164 80 Stockholm Sweden",
      "ja": "Magnus Westerlund Ericsson Torshamnsgatan 23 SE-164 80ストックホルムスウェーデン"
    },
    {
      "indent": 3,
      "text": "Email: magnus.westerlund@ericsson.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Colin Perkins University of Glasgow School of Computing Science Glasgow G12 8QQ United Kingdom",
      "ja": "Colin Perkins Glasgow大学コンピューティングサイエンスグラスゴーG12 8QQイギリス"
    },
    {
      "indent": 3,
      "text": "Email: csp@csperkins.org",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Jonathan Lennox 8x8, Inc. / Jitsi Jersey City, NJ 07302 United States of America",
      "ja": "Jonathan Lennox 8x8、Inc。/ Jitsi Jersey City、NJ 07302アメリカ合衆国"
    },
    {
      "indent": 3,
      "text": "Email: jonathan.lennox@8x8.com",
      "raw": true,
      "ja": ""
    }
  ]
}