{
  "title": {
    "text": "RFC 8424 - Extensions to RSVP-TE for Label Switched Path (LSP) Ingress Fast Reroute (FRR) Protection",
    "ja": "RFC 8424 - ラベルスイッチドパス（LSP）入力高速リルート（FRR）保護のためのRSVP-TEの拡張"
  },
  "number": 8424,
  "created_at": "2020-08-23 11:58:40.597864+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                      H. Chen, Ed.\nRequest for Comments: 8424                           Huawei Technologies\nCategory: Experimental                                     R. Torvi, Ed.\nISSN: 2070-1721                                         Juniper Networks\n                                                             August 2018",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "Extensions to RSVP-TE for Label Switched Path (LSP) Ingress Fast Reroute (FRR) Protection",
      "ja": "ラベルスイッチドパス（LSP）入力高速リルート（FRR）保護のためのRSVP-TEの拡張"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document describes extensions to Resource Reservation Protocol - Traffic Engineering (RSVP-TE) for locally protecting the ingress node of a Point-to-Point (P2P) or Point-to-Multipoint (P2MP) Traffic Engineered (TE) Label Switched Path (LSP). It extends the Fast Reroute (FRR) protection for transit nodes of an LSP to the ingress node of the LSP. The procedures described in this document are experimental.",
      "ja": "このドキュメントでは、ポイントツーポイント（P2P）またはポイントツーマルチポイント（P2MP）トラフィックエンジニアリング（TE）ラベルスイッチドパスの入口ノードをローカルで保護するためのリソース予約プロトコル-トラフィックエンジニアリング（RSVP-TE）の拡張について説明します。 LSP）。 LSPのトランジットノードの高速再ルーティング（FRR）保護をLSPの入力ノードに拡張します。このドキュメントで説明されている手順は実験的なものです。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for examination, experimental implementation, and evaluation.",
      "ja": "このドキュメントはInternet Standards Trackの仕様ではありません。試験、実験、評価のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document defines an Experimental Protocol for the Internet community. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are candidates for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "このドキュメントでは、インターネットコミュニティの実験プロトコルを定義します。このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。 IESGによって承認されたすべてのドキュメントが、あらゆるレベルのインターネット標準の候補であるとは限りません。 RFC 7841のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8424.",
      "ja": "このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、https：//www.rfc-editor.org/info/rfc8424で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2018 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document.",
      "ja": "この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   4\n  1.1.  Ingress Local Protection Example  . . . . . . . . . . . .   5\n  1.2.  Ingress Local Protection Overview . . . . . . . . . . . .   6\n2.  Conventions Used in This Document . . . . . . . . . . . . . .   7\n3.  Ingress Failure Detection . . . . . . . . . . . . . . . . . .   7\n  3.1.  Source Detects Failure  . . . . . . . . . . . . . . . . .   7\n  3.2.  Backup and Source Detect Failure  . . . . . . . . . . . .   8\n4.  Backup Forwarding State . . . . . . . . . . . . . . . . . . .   9\n  4.1.  Forwarding State for Backup LSP . . . . . . . . . . . . .   9\n5.  Protocol Extensions . . . . . . . . . . . . . . . . . . . . .   9\n  5.1.  INGRESS_PROTECTION Object . . . . . . . . . . . . . . . .  10\n    5.1.1.  Class Number and Class Type . . . . . . . . . . . . .  10\n    5.1.2.  Object Format . . . . . . . . . . . . . . . . . . . .  11\n    5.1.3.  Subobject: Backup Ingress IPv4 Address  . . . . . . .  12\n    5.1.4.  Subobject: Backup Ingress IPv6 Address  . . . . . . .  13\n    5.1.5.  Subobject: Ingress IPv4 Address . . . . . . . . . . .  13\n    5.1.6.  Subobject: Ingress IPv6 Address . . . . . . . . . . .  13\n    5.1.7.  Subobject: TRAFFIC_DESCRIPTOR . . . . . . . . . . . .  14\n    5.1.8.  Subobject: Label-Routes . . . . . . . . . . . . . . .  15\n6.  Behavior of Ingress Protection  . . . . . . . . . . . . . . .  15\n  6.1.  Overview  . . . . . . . . . . . . . . . . . . . . . . . .  15\n    6.1.1.  Relay-Message Method  . . . . . . . . . . . . . . . .  15\n    6.1.2.  Proxy-Ingress Method  . . . . . . . . . . . . . . . .  16\n  6.2.  Ingress Behavior  . . . . . . . . . . . . . . . . . . . .  17\n    6.2.1.  Relay-Message Method  . . . . . . . . . . . . . . . .  17\n    6.2.2.  Proxy-Ingress Method  . . . . . . . . . . . . . . . .  18\n  6.3.  Backup Ingress Behavior . . . . . . . . . . . . . . . . .  19\n    6.3.1.  Backup Ingress Behavior in the Off-Path Case  . . . .  20\n    6.3.2.  Backup Ingress Behavior in the On-Path Case . . . . .  22\n    6.3.3.  Failure Detection and Refresh PATH Messages . . . . .  23\n  6.4.  Revertive Behavior  . . . . . . . . . . . . . . . . . . .  23\n    6.4.1.  Revert to Primary Ingress . . . . . . . . . . . . . .  24\n    6.4.2.  Global Repair by Backup Ingress . . . . . . . . . . .  24\n7.  Security Considerations . . . . . . . . . . . . . . . . . . .  24\n8.  Compatibility . . . . . . . . . . . . . . . . . . . . . . . .  24\n9.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  25\n10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  25\n  10.1.  Normative References . . . . . . . . . . . . . . . . . .  25\n  10.2.  Informative References . . . . . . . . . . . . . . . . .  26\nAcknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  26\nContributors  . . . . . . . . . . . . . . . . . . . . . . . . . .  26\nAuthors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  28",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "For an MPLS Traffic Engineered (TE) Label Switched Path (LSP), protecting the failures of its transit nodes using Fast Reroute (FRR) is covered in [RFC4090] for Point-to-Point (P2P) LSPs and [RFC4875] for Point-to-Multipoint (P2MP) LSPs. However, protecting the failure of its ingress node using FRR is not covered in either [RFC4090] or [RFC4875]. The MPLS Transport Profile (MPLS-TP) Linear Protection described in [RFC6378] can provide a protection against the failure of any transit node of an LSP between the ingress node and the egress node of the LSP, but it cannot protect against the failure of the ingress node.",
      "ja": "MPLSトラフィックエンジニアド（TE）ラベルスイッチドパス（LSP）の場合、高速リルート（FRR）を使用したトランジットノードの障害の保護は、ポイントツーポイント（P2P）LSPの[RFC4090]およびポイントの[RFC4875]でカバーされています。対マルチポイント（P2MP）LSP。ただし、FRRを使用してその入口ノードの障害を保護することは、[RFC4090]と[RFC4875]のどちらでもカバーされていません。 [RFC6378]で説明されているMPLSトランスポートプロファイル（MPLS-TP）線形保護は、LSPの入口ノードと出口ノード間のLSPのトランジットノードの障害に対する保護を提供できますが、LSPの障害に対する保護はできません。入力ノード。"
    },
    {
      "indent": 3,
      "text": "To protect against the failure of the (primary) ingress node of a primary end-to-end P2MP (or P2P) TE LSP, a typical existing solution is to set up a secondary backup end-to-end P2MP (or P2P) TE LSP. The backup LSP is from a backup ingress node to backup egress nodes (or node). The backup ingress node is different from the primary ingress node. The backup egress nodes (or node) are (or is) different from the primary egress nodes (or node) of the primary LSP. For a P2MP TE LSP, on each of the primary (and backup) egress nodes, a P2P LSP is created from the egress node to its primary (backup) ingress node and configured with Bidirectional Forwarding Detection (BFD). This is used to detect the failure of the primary (backup) ingress node for the receiver to switch to the backup (or primary) egress node to receive the traffic after the primary (or backup) ingress node fails when both the primary LSP and the secondary LSP carry the traffic. In addition, FRR may be used to provide protections against the failures of the transit nodes and the links of the primary and secondary end-to-end TE LSPs.",
      "ja": "プライマリエンドツーエンドP2MP（またはP2P）TE LSPの（プライマリ）入力ノードの障害から保護するための一般的な既存のソリューションは、セカンダリバックアップエンドツーエンドP2MP（またはP2P）TEをセットアップすることですLSP。バックアップLSPは、バックアップ入力ノードからバックアップ出力ノード（またはノード）へのものです。バックアップ入力ノードは、プライマリ入力ノードとは異なります。バックアップ出力ノード（またはノード）は、プライマリLSPのプライマリ出力ノード（またはノード）とは異なります。 P2MP TE LSPの場合、プライマリ（およびバックアップ）出力ノードのそれぞれで、出力ノードからそのプライマリ（バックアップ）入力ノードへのP2P LSPが作成され、双方向転送検出（BFD）で構成されます。これは、プライマリLSPとセカンダリLSPがトラフィックを伝送します。さらに、FRRを使用して、トランジットノードの障害とプライマリおよびセカンダリエンドツーエンドTE LSPのリンクに対する保護を提供できます。"
    },
    {
      "indent": 3,
      "text": "There are a number of issues in this solution:",
      "ja": "このソリューションにはいくつかの問題があります。"
    },
    {
      "indent": 3,
      "text": "o It consumes lots of network resources. Double states need to be maintained in the network since two end-to-end TE LSPs are created. Double link bandwidth is reserved and used when both the primary and the secondary end-to-end TE LSPs carry the traffic at the same time.",
      "ja": "o 多くのネットワークリソースを消費します。 2つのエンドツーエンドTE LSPが作成されるため、ネットワークで二重状態を維持する必要があります。ダブルリンク帯域幅は予約され、プライマリとセカンダリの両方のエンドツーエンドTE LSPが同時にトラフィックを伝送するときに使用されます。"
    },
    {
      "indent": 3,
      "text": "o More operations are needed, which include the configuration of two end-to-end TE LSPs and BFDs from each of the egress nodes to its corresponding ingress node.",
      "ja": "o 各出口ノードから対応する入口ノードへの2つのエンドツーエンドTE LSPおよびBFDの構成を含む、より多くの操作が必要です。"
    },
    {
      "indent": 3,
      "text": "o The detection of the failure of the ingress node may not be reliable. Any failure on the path of the BFD from an egress node to an ingress node may cause the BFD to indicate the failure of the ingress node.",
      "ja": "o 入力ノードの障害の検出は信頼できない場合があります。出力ノードから入力ノードへのBFDのパスで障害が発生すると、BFDが入力ノードの障害を示します。"
    },
    {
      "indent": 3,
      "text": "o The speed of protection against the failure of the ingress node may be slow.",
      "ja": "o 入力ノードの障害に対する保護の速度が遅い場合があります。"
    },
    {
      "indent": 3,
      "text": "This specification defines a simple extension to RSVP-TE for local protection (FRR) of the ingress node of a P2MP or P2P LSP to resolve these issues. Ingress local protection and ingress FRR protection will be used interchangeably.",
      "ja": "この仕様は、これらの問題を解決するためのP2MPまたはP2P LSPの入力ノードのローカル保護（FRR）のためのRSVP-TEへの単純な拡張を定義しています。入力ローカル保護と入力FRR保護は互換的に使用されます。"
    },
    {
      "indent": 3,
      "text": "Note that this document is an Experimental RFC. Two different approaches are proposed to transfer the information for ingress protection. They both use the same new INGRESS_PROTECTION object, which is sent in both PATH and RESV messages between a primary ingress and a backup ingress. One approach is the Relay-Message Method (refer to Sections 6.1.1 and 6.2.1), the other is the Proxy-Ingress Method (refer to Sections 6.1.2 and 6.2.2). Each of them has advantages and disadvantages. It is hard to decide which one is used as a standard approach now. It is expected that the experiment on the ingress local protection with these two approaches will provide quantities to help choose one. The quantities include the numbers on control traffic, states, codes, and operations. After one approach is selected, the document will be revised to reflect that selection and any other items learned from the experiment. The revised document is expected to be submitted for publication on the standards track.",
      "ja": "このドキュメントは試験的なRFCであることに注意してください。進入保護のために情報を転送するために、2つの異なるアプローチが提案されています。どちらも同じ新しいINGRESS_PROTECTIONオブジェクトを使用します。このオブジェクトは、プライマリ入力とバックアップ入力の間でPATHメッセージとRESVメッセージの両方で送信されます。 1つのアプローチはリレーメッセージ方式（セクション6.1.1および6.2.1を参照）、もう1つのアプローチはプロキシ-入力方式（セクション6.1.2および6.2.2を参照）です。それぞれに長所と短所があります。現在、どちらを標準的なアプローチとして使用するかを決定するのは困難です。これらの2つのアプローチを使用したイングレスローカル保護の実験は、1つを選択するのに役立つ量を提供することが期待されます。数量には、制御トラフィック、状態、コード、および操作の番号が含まれます。 1つのアプローチが選択された後、ドキュメントはその選択と実験から学んだ他の項目を反映するように改訂されます。改訂された文書は、標準化トラックに公開するために提出される予定です。"
    },
    {
      "indent": 0,
      "text": "1.1. Ingress Local Protection Example",
      "section_title": true,
      "ja": "1.1. 入力ローカル保護の例"
    },
    {
      "indent": 3,
      "text": "Figure 1 shows an example of using a backup P2MP LSP to locally protect the ingress of a primary P2MP LSP, which is from ingress Ia to three egresses: L1, L2, and L3. The backup LSP is from backup ingress Ib to the next hops of ingress Ia: R2 and R4.",
      "ja": "図1は、バックアップP2MP LSPを使用してプライマリP2MP LSPの入力をローカルで保護する例を示しています。これは、入力IaからL1、L2、およびL3の3つの出力です。バックアップLSPは、バックアップ入力Ibから入力Iaの次のホップであるR2およびR4までです。"
    },
    {
      "indent": 5,
      "text": "                 *******  *******              S Source\n              [R2]-----[R3]-----[L1]          Ix Ingress\n             */ &                             Rx Transit\n            */  &                             Lx Egress\n           */   &                            *** Primary LSP\n          */    &                            &&& Backup LSP across\n         */     &                                Logical Hop\n        */      &\n       */ ********    ********  *******\n[S]---[Ia]--------[R4]------[R5]-----[L2]\n  \\      |     &    &           *\\\n   \\     |    &    &             *\\\n    \\    |   &    &               *\\\n     \\   |  &    &                 *\\\n      \\  | &    &                   *\\\n       \\ |&    &                     *\\\n        [Ib]&&&                       [L3]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 20,
      "text": "Figure 1: Ingress Local Protection",
      "ja": "図1：入力ローカル保護"
    },
    {
      "indent": 3,
      "text": "In normal operations, source S sends the traffic to primary ingress Ia. Ia imports the traffic into the primary LSP.",
      "ja": "通常の動作では、送信元Sはトラフィックをプライマリ入力Iaに送信します。 IaはトラフィックをプライマリLSPにインポートします。"
    },
    {
      "indent": 3,
      "text": "When source S detects the failure of Ia, it switches the traffic to backup ingress Ib, which imports the traffic from S into the backup LSP to Ia's next hops, R2 and R4, where the traffic is merged into the primary LSP and then sent to egresses L1, L2, and L3.",
      "ja": "ソースSがIaの障害を検出すると、トラフィックをバックアップ入力Ibに切り替えます。これにより、トラフィックがSからバックアップLSPにインポートされ、Iaの次のホップであるR2およびR4にインポートされます。トラフィックは、プライマリLSPにマージされてから送信されます。出力L1、L2、およびL3。"
    },
    {
      "indent": 3,
      "text": "Note that the backup ingress is one logical hop away from the ingress. A logical hop is a direct link or a tunnel (such as a GRE tunnel) over which RSVP-TE messages may be exchanged.",
      "ja": "バックアップ入力は、入力から論理的に1ホップ離れていることに注意してください。論理ホップは、RSVP-TEメッセージが交換される直接リンクまたはトンネル（GREトンネルなど）です。"
    },
    {
      "indent": 0,
      "text": "1.2. Ingress Local Protection Overview",
      "section_title": true,
      "ja": "1.2. 入力ローカル保護の概要"
    },
    {
      "indent": 3,
      "text": "There are four parts in ingress local protection:",
      "ja": "入力ローカル保護には4つの部分があります。"
    },
    {
      "indent": 3,
      "text": "o setting up the necessary backup LSP forwarding state based on the information received for ingress local protection;",
      "ja": "o 入力ローカル保護のために受信した情報に基づいて、必要なバックアップLSP転送状態を設定します。"
    },
    {
      "indent": 3,
      "text": "o detecting the primary ingress failure and providing the fast repair (as discussed in Sections 3 and 4);",
      "ja": "o プライマリ入力障害を検出し、迅速な修復を提供します（セクション3および4で説明）。"
    },
    {
      "indent": 3,
      "text": "o maintaining the RSVP-TE control-plane state until a global repair is done; and,",
      "ja": "o グローバルな修復が完了するまで、RSVP-TEコントロールプレーンの状態を維持します。そして、"
    },
    {
      "indent": 3,
      "text": "o performing the global repair (see Section 6.4.2).",
      "ja": "o グローバル修復を実行します（6.4.2項を参照）。"
    },
    {
      "indent": 3,
      "text": "The primary ingress of a primary LSP sends the backup ingress the information for ingress protection in a PATH message with a new INGRESS_PROTECTION object. The backup ingress sets up the backup LSP(s) and forwarding state after receiving the necessary information for ingress protection. Then, it sends the primary ingress the status of ingress protection in a RESV message with a new INGRESS_PROTECTION object.",
      "ja": "プライマリLSPのプライマリ入力は、新しいINGRESS_PROTECTIONオブジェクトを使用して、PATHメッセージで入力保護に関する情報をバックアップ入力に送信します。バックアップ入力は、入力保護に必要な情報を受信した後、バックアップLSPと転送状態をセットアップします。次に、新しいINGRESS_PROTECTIONオブジェクトを使用して、RESVメッセージでプライマリ保護のステータスを入力保護に送信します。"
    },
    {
      "indent": 3,
      "text": "When the primary ingress fails, the backup ingress sends or refreshes the next hops of the primary ingress the PATH messages without any INGRESS_PROTECTION object after verifying the failure. Thus, the RSVP-TE control-plane state of the primary LSP is maintained.",
      "ja": "プライマリ入力が失敗すると、バックアップ入力は、失敗を確認した後、INGRESS_PROTECTIONオブジェクトなしで、プライマリ入力のネクストホップをPATHメッセージに送信または更新します。したがって、プライマリLSPのRSVP-TEコントロールプレーン状態が維持されます。"
    },
    {
      "indent": 0,
      "text": "2. Conventions Used in This Document",
      "section_title": true,
      "ja": "2. このドキュメントで使用される規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "キーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「NOT RECOMMENDED」、「MAY」、「OPTIONALこのドキュメントの「」は、BCP 14 [RFC2119] [RFC8174]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Ingress Failure Detection",
      "section_title": true,
      "ja": "3. 入力障害検出"
    },
    {
      "indent": 3,
      "text": "Exactly how to detect the failure of the ingress is out of scope. However, it is necessary to discuss different modes for detecting the failure because they determine what is the required behavior for the source and backup ingress.",
      "ja": "入力の失敗を正確に検出する方法は範囲外です。ただし、ソースとバックアップの入力に必要な動作を決定するため、障害を検出するためのさまざまなモードについて説明する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.1. Source Detects Failure",
      "section_title": true,
      "ja": "3.1. ソースが障害を検出"
    },
    {
      "indent": 3,
      "text": "Source Detects Failure, or Source-Detect for short, means that the source is responsible for \"fast detecting\" the failure of the primary ingress of an LSP. Fast detecting the failure means detecting the failure in a few or tens of milliseconds. The backup ingress is ready to import the traffic from the source into the backup LSP(s) after the backup LSP(s) is up.",
      "ja": "Source Detects Failure、または略してSource-Detectは、ソースがLSPのプライマリ入力の障害を「高速検出」する責任があることを意味します。障害の高速検出とは、数ミリ秒または数十ミリ秒で障害を検出することを意味します。バックアップ入力は、バックアップLSPの起動後、ソースからバックアップLSPにトラフィックをインポートする準備ができています。"
    },
    {
      "indent": 3,
      "text": "In normal operations, the source sends the traffic to the primary ingress. When the source detects the failure of the primary ingress, it switches the traffic to the backup ingress, which delivers the traffic to the next hops of the primary ingress through the backup LSP(s), where the traffic is merged into the primary LSP.",
      "ja": "通常の操作では、送信元はトラフィックをプライマリ入力に送信します。ソースはプライマリ入力の障害を検出すると、トラフィックをバックアップ入力に切り替えます。バックアップ入力は、トラフィックをバックアップLSPを通じてプライマリ入力のネクストホップに配信し、そこでトラフィックはプライマリLSPにマージされます。"
    },
    {
      "indent": 0,
      "text": " For an LSP, after the primary ingress fails, the backup ingress MUST use a method to verify the failure of the primary ingress before the PATH message for the LSP expires at the next hop of the primary ingress. After verifying the failure, the backup ingress sends/ refreshes the PATH message to the next hop through the backup LSP as needed. The method may verify the failure of the primary ingress slowly, such as in seconds.",
      "ja": "LSPの場合、プライマリ入力が失敗した後、バックアップ入力は、プライマリ入力のネクストホップでLSPのPATHメッセージが期限切れになる前に、プライマリ入力の失敗を確認する方法を使用する必要があります。障害を確認した後、バックアップ入力は、必要に応じて、バックアップLSPを介してPATHメッセージをネクストホップに送信/更新します。このメソッドは、プライマリ入力の失敗をゆっくりと（数秒など）検証する場合があります。"
    },
    {
      "indent": 3,
      "text": "After the primary ingress fails, it will not be reachable after routing convergence. Thus, checking whether the primary ingress (address) is reachable is a possible method.",
      "ja": "プライマリ入力が失敗すると、ルーティングコンバージェンス後に到達できなくなります。したがって、プライマリ入力（アドレス）が到達可能かどうかを確認することは、可能な方法です。"
    },
    {
      "indent": 3,
      "text": "When the previously failed primary ingress of a primary LSP becomes available again and the primary LSP has recovered from its primary ingress, the source may switch the traffic to the primary ingress from the backup ingress. An operator may control the traffic switch through using a command on the source node after seeing that the primary LSP has recovered.",
      "ja": "以前に失敗したプライマリLSPのプライマリ入力が再び使用可能になり、プライマリLSPがプライマリ入力から回復した場合、ソースはトラフィックをバックアップ入力からプライマリ入力に切り替えることがあります。オペレータは、プライマリLSPが回復したことを確認した後、送信元ノードでコマンドを使用してトラフィックスイッチを制御できます。"
    },
    {
      "indent": 0,
      "text": "3.2. Backup and Source Detect Failure",
      "section_title": true,
      "ja": "3.2. バックアップとソース検出の失敗"
    },
    {
      "indent": 3,
      "text": "Backup and Source Detect Failure, or Backup-Source-Detect for short, means that both the backup ingress and the source are concurrently responsible for fast detecting the failure of the primary ingress.",
      "ja": "バックアップとソースの検出の失敗、または略してBackup-Source-Detectは、バックアップ入力とソースの両方が同時にプライマリ入力の失敗を迅速に検出する責任があることを意味します。"
    },
    {
      "indent": 3,
      "text": "Note that one of the differences between Source-Detect and Backup-Source-Detect is the following: in the former, the backup ingress verifies the failure of the primary ingress slowly, such as in seconds; in the latter, the backup ingress detects the failure fast, such as in a few or tens of milliseconds.",
      "ja": "Source-DetectとBackup-Source-Detectの違いの1つは次のとおりです。前者では、バックアップ入力はプライマリ入力の失敗を秒単位などでゆっくり検証します。後者の場合、バックアップ入力は、数ミリ秒または数十ミリ秒などの高速で障害を検出します。"
    },
    {
      "indent": 3,
      "text": "In normal operations, the source sends the traffic to the primary ingress. It switches the traffic to the backup ingress when it detects the failure of the primary ingress.",
      "ja": "通常の操作では、送信元はトラフィックをプライマリ入力に送信します。プライマリ入力の障害を検出すると、トラフィックをバックアップ入力に切り替えます。"
    },
    {
      "indent": 3,
      "text": "The backup ingress does not import any traffic from the source into the backup LSP in normal operations. When it detects the failure of the primary ingress, it imports the traffic from the source into the backup LSP to the next hops of the primary ingress, where the traffic is merged into the primary LSP.",
      "ja": "バックアップ入力は、通常の操作では、ソースからバックアップLSPにトラフィックをインポートしません。プライマリ入力の障害を検出すると、送信元からバックアップLSPにトラフィックをインポートし、プライマリ入力の次のホップに送ります。そこで、トラフィックはプライマリLSPにマージされます。"
    },
    {
      "indent": 3,
      "text": "The Source-Detect is preferred. It is simpler than the Backup-Source-Detect, which needs both the source and the backup ingress to detect the ingress failure quickly.",
      "ja": "Source-Detectが推奨されます。これは、入力障害をすばやく検出するためにソースとバックアップの両方の入力を必要とするBackup-Source-Detectよりも簡単です。"
    },
    {
      "indent": 0,
      "text": "4. Backup Forwarding State",
      "section_title": true,
      "ja": "4. バックアップ転送状態"
    },
    {
      "indent": 3,
      "text": "Before the primary ingress fails, the backup ingress is responsible for creating the necessary backup LSPs. These LSPs might be multiple bypass P2P LSPs that avoid the ingress. Alternately, the backup ingress could choose to use a single backup P2MP LSP as a bypass or detour to protect the primary ingress of a primary P2MP LSP.",
      "ja": "プライマリ入力が失敗する前に、バックアップ入力は必要なバックアップLSPを作成する責任があります。これらのLSPは、入力を回避する複数のバイパスP2P LSPである可能性があります。あるいは、バックアップ入力は、単一のバックアップP2MP LSPをバイパスまたは迂回として使用して、プライマリP2MP LSPのプライマリ入力を保護することを選択できます。"
    },
    {
      "indent": 3,
      "text": "The backup ingress may be \"off path\" or \"on path\" of an LSP. If a backup ingress is not any node of the LSP, it is off path. If a backup ingress is a next hop of the primary ingress of the LSP, it is on path. When a backup ingress for protecting the primary ingress is configured, the backup ingress MUST not be on the LSP except for if it is the next hop of the primary ingress. If it is on path, the primary forwarding state associated with the primary LSP SHOULD be clearly separated from the backup LSP(s) state.",
      "ja": "バックアップ入力は、LSPの「オフパス」または「オンパス」の場合があります。バックアップ入力がLSPのどのノードでもない場合、パスから外れています。バックアップ入力がLSPのプライマリ入力のネクストホップである場合、それはパス上にあります。プライマリ入力を保護するためのバックアップ入力が設定されている場合、バックアップ入力がプライマリ入力のネクストホップである場合を除いて、バックアップ入力はLSPに存在してはなりません。パス上にある場合、プライマリLSPに関連付けられたプライマリフォワーディング状態は、バックアップLSP状態から明確に分離する必要があります（SHOULD）。"
    },
    {
      "indent": 0,
      "text": "4.1. Forwarding State for Backup LSP",
      "section_title": true,
      "ja": "4.1. バックアップLSPの転送状態"
    },
    {
      "indent": 3,
      "text": "A forwarding entry for a backup LSP is created on the backup ingress after the LSP is set up. Depending on the failure-detection mode (e.g., Source-Detect), it may be used to forward received traffic or simply be inactive (e.g., Backup-Source-Detect) until required. In either case, when the primary ingress fails, this entry is used to import the traffic into the backup LSP to the next hops of the primary ingress, where the traffic is merged into the primary LSP.",
      "ja": "LSPが設定された後、バックアップLSPの転送エントリがバックアップ入力で作成されます。障害検出モード（Source-Detectなど）に応じて、受信したトラフィックを転送するか、必要になるまで単に非アクティブ（Backup-Source-Detectなど）にすることができます。どちらの場合でも、プライマリ入力が失敗すると、このエントリを使用して、トラフィックがバックアップLSPからプライマリ入力のネクストホップにインポートされ、そこでトラフィックがプライマリLSPにマージされます。"
    },
    {
      "indent": 3,
      "text": "The forwarding entry for a backup LSP is a local implementation issue. In one device, it may have an inactive flag. This inactive forwarding entry is not used to forward any traffic normally. When the primary ingress fails, it is changed to active; thus, the traffic from the source is imported into the backup LSP.",
      "ja": "バックアップLSPの転送エントリはローカル実装の問題です。 1つのデバイスでは、非アクティブフラグが設定されている場合があります。この非アクティブな転送エントリは、通常のトラフィックの転送には使用されません。プライマリ入力が失敗すると、アクティブに変更されます。したがって、ソースからのトラフィックはバックアップLSPにインポートされます。"
    },
    {
      "indent": 0,
      "text": "5. Protocol Extensions",
      "section_title": true,
      "ja": "5. プロトコル拡張"
    },
    {
      "indent": 3,
      "text": "A new object, INGRESS_PROTECTION, is defined for signaling ingress local protection. The primary ingress of a primary LSP sends the backup ingress this object in a PATH message. In this case, the object contains the information needed to set up ingress protection. The information includes:",
      "ja": "新しいオブジェクトINGRESS_PROTECTIONが、信号のローカル入力保護を定義するために定義されています。プライマリLSPのプライマリ入力は、このオブジェクトのバックアップ入力をPATHメッセージで送信します。この場合、オブジェクトには、進入保護を設定するために必要な情報が含まれています。情報は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o the Backup Ingress IP Address, which indicates the backup ingress;",
      "ja": "o バックアップ入力を示すバックアップ入力IPアドレス。"
    },
    {
      "indent": 3,
      "text": "o the TRAFFIC_DESCRIPTOR, which describes the traffic that the primary LSP transports (this traffic is imported into the backup LSP(s) on the backup ingress when the primary ingress fails);",
      "ja": "o TRAFFIC_DESCRIPTOR。プライマリLSPが転送するトラフィックを示します（このトラフィックは、プライマリ入力が失敗したときにバックアップ入力のバックアップLSPにインポートされます）。"
    },
    {
      "indent": 3,
      "text": "o the Labels and Routes, which indicate the first hops of the primary LSP, each of which is paired with its label; and,",
      "ja": "o ラベルとルートは、プライマリLSPの最初のホップを示し、それぞれのラベルとペアになっています。そして、"
    },
    {
      "indent": 3,
      "text": "o the Desire options on ingress protection, such as a P2MP option, which indicates a desire to use a backup P2MP LSP to protect the primary ingress of a primary P2MP LSP.",
      "ja": "o プライマリP2MP LSPのプライマリ入力を保護するためにバックアップP2MP LSPを使用したいという希望を示す、P2MPオプションなどの入力保護に関する欲望オプション。"
    },
    {
      "indent": 3,
      "text": "The backup ingress sends the primary ingress this object in a RESV message. In this case, the object contains the information about the status on the ingress protection.",
      "ja": "バックアップ入力は、このオブジェクトをRESVメッセージでプライマリ入力に送信します。この場合、オブジェクトには、進入保護のステータスに関する情報が含まれています。"
    },
    {
      "indent": 0,
      "text": "5.1. INGRESS_PROTECTION Object",
      "section_title": true,
      "ja": "5.1. INGRESS_PROTECTIONオブジェクト"
    },
    {
      "indent": 0,
      "text": "5.1.1. Class Number and Class Type",
      "section_title": true,
      "ja": "5.1.1. クラス番号とクラスタイプ"
    },
    {
      "indent": 3,
      "text": "The Class Number for the INGRESS_PROTECTION object MUST be of the form 0bbbbbbb to enable implementations that do not recognize the object to reject the entire message and return an \"Unknown Object Class\" error [RFC2205]. It is suggested that a Class Number value from the Private Use range (124-127) [RFC3936] specified for the 0bbbbbbb octet be chosen for this experiment. It is also suggested that a Class Type value of 1 be used for this object in this experiment.",
      "ja": "INGRESS_PROTECTIONオブジェクトのクラス番号は、オブジェクトを認識しない実装がメッセージ全体を拒否して「不明なオブジェクトクラス」エラー[RFC2205]を返すことができるように、0bbbbbbbの形式でなければなりません。この実験では、0bbbbbbbオクテットに指定された私的使用範囲（124-127）[RFC3936]のクラス番号値を選択することをお勧めします。この実験では、このオブジェクトにクラスタイプ値1を使用することもお勧めします。"
    },
    {
      "indent": 3,
      "text": "The INGRESS_PROTECTION object with the FAST_REROUTE object in a PATH message is used to control the backup for protecting the primary ingress of a primary LSP. The primary ingress MUST insert this object into the PATH message to be sent to the backup ingress for protecting the primary ingress.",
      "ja": "PATHメッセージ内のFAST_REROUTEオブジェクトを含むINGRESS_PROTECTIONオブジェクトは、プライマリLSPのプライマリ入力を保護するためのバックアップを制御するために使用されます。プライマリ入力は、このオブジェクトをPATHメッセージに挿入して、プライマリ入力を保護するためにバックアップ入力に送信する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.1.2. Object Format",
      "section_title": true,
      "ja": "5.1.2. オブジェクト形式"
    },
    {
      "indent": 3,
      "text": "The INGRESS_PROTECTION object has the following format:",
      "ja": "INGRESS_PROTECTIONオブジェクトの形式は次のとおりです。"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|         Length (bytes)        |    Class-Num  |    C-Type     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|    Reserved (zero)  |   NUB   |      Flags    |    Options    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n~                         (Subobjects)                          ~\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Flags 0x01 Ingress local protection available 0x02 Ingress local protection in use 0x04 Bandwidth protection",
      "ja": "フラグ0x01使用可能な入力ローカル保護0x02使用中の入力ローカル保護0x04帯域幅保護"
    },
    {
      "indent": 8,
      "text": "Options 0x01 Revert to Ingress 0x02 P2MP Backup",
      "ja": "オプション0x01入力0x02 P2MPバックアップに戻す"
    },
    {
      "indent": 3,
      "text": "For protecting the ingress of a P2MP LSP, if the backup ingress doesn't have a backup LSP to each of the next hops of the primary ingress, it SHOULD clear \"Ingress local protection available\" and set the Number of Unprotected Branches (NUB) to the number of the next hops to which there is no backup LSP.",
      "ja": "P2MP LSPの入力を保護するために、バックアップ入力にプライマリ入力の次のホップへのバックアップLSPがない場合は、「使用可能な入力ローカル保護」をクリアして、保護されていないブランチ（NUB）の数を設定する必要があります。バックアップLSPがないネクストホップの数に。"
    },
    {
      "indent": 3,
      "text": "The flags are used to communicate status information from the backup ingress to the primary ingress.",
      "ja": "フラグは、バックアップ入力からプライマリ入力へのステータス情報の通信に使用されます。"
    },
    {
      "indent": 3,
      "text": "o Ingress local protection available: The backup ingress MUST set this flag after backup LSPs are up and ready for locally protecting the primary ingress. The backup ingress sends this to the primary ingress to indicate that the primary ingress is locally protected.",
      "ja": "o 入力ローカル保護が利用可能：バックアップ入力は、バックアップLSPが起動し、プライマリ入力をローカルで保護する準備ができた後に、このフラグを設定する必要があります。バックアップ入力はこれをプライマリ入力に送信して、プライマリ入力がローカルで保護されていることを示します。"
    },
    {
      "indent": 3,
      "text": "o Ingress local protection in use: The backup ingress MUST set this flag when it detects a failure in the primary ingress and actively redirects the traffic into the backup LSPs. The backup ingress records this flag and does not send any RESV messages with this flag to the primary ingress since the primary ingress is down.",
      "ja": "o 使用中の入力ローカル保護：バックアップ入力は、プライマリ入力で障害を検出し、トラフィックをバックアップLSPにアクティブにリダイレクトするときに、このフラグを設定する必要があります。バックアップ入力はこのフラグを記録し、プライマリ入力がダウンしているため、このフラグが付いたRESVメッセージをプライマリ入力に送信しません。"
    },
    {
      "indent": 3,
      "text": "o Bandwidth protection: The backup ingress MUST set this flag if the backup LSPs guarantee to provide the desired bandwidth for the protected LSP against the primary ingress failure.",
      "ja": "o 帯域幅保護：バックアップLSPが、プライマリ入力障害に対して保護されたLSPに必要な帯域幅を提供することを保証する場合、バックアップ入力はこのフラグを設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "The options are used by the primary ingress to specify the desired behavior to the backup ingress.",
      "ja": "これらのオプションは、プライマリ入力で使用され、バックアップ入力に必要な動作を指定します。"
    },
    {
      "indent": 3,
      "text": "o Revert to Ingress: The primary ingress sets this option, which indicates that the traffic for the primary LSP, if successfully resignaled, will be switched back to the primary ingress from the backup ingress when the primary ingress is restored.",
      "ja": "o 入力に戻す：プライマリ入力はこのオプションを設定します。これは、プライマリLSPのトラフィックが正常に再シグナリングされた場合、プライマリ入力が復元されると、バックアップ入力からプライマリ入力に切り替えられることを示します。"
    },
    {
      "indent": 3,
      "text": "o P2MP Backup: This option is set to ask for the backup ingress to use backup P2MP LSP to protect the primary ingress.",
      "ja": "o P2MPバックアップ：このオプションは、バックアップの入口でバックアップのP2MP LSPを使用してプライマリの入口を保護するように要求するように設定されています。"
    },
    {
      "indent": 3,
      "text": "The INGRESS_PROTECTION object may contain some subobjects of following format:",
      "ja": "INGRESS_PROTECTIONオブジェクトには、次の形式のサブオブジェクトが含まれる場合があります。"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |            Length             |Reserved (zero)|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    Contents / Body of Subobject               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "where Type is the type of a subobject and Length is the total size of the subobject in bytes, including Type, Length, and Contents fields.",
      "ja": "Typeはサブオブジェクトのタイプ、Lengthはサブオブジェクトの合計サイズ（バイト）で、Type、Length、Contentsフィールドを含みます。"
    },
    {
      "indent": 0,
      "text": "5.1.3. Subobject: Backup Ingress IPv4 Address",
      "section_title": true,
      "ja": "5.1.3. サブオブジェクト：バックアップ入力IPv4アドレス"
    },
    {
      "indent": 3,
      "text": "When the primary ingress of a protected LSP sends a PATH message with an INGRESS_PROTECTION object to the backup ingress, the object MUST have a Backup Ingress IPv4 Address subobject containing an IPv4 address belonging to the backup ingress if IPv4 is used. The Type of the subobject is 1, and the body of the subobject is given below:",
      "ja": "保護されたLSPのプライマリ入力がINGRESS_PROTECTIONオブジェクトを含むPATHメッセージをバックアップ入力に送信するとき、IPv4が使用されている場合、オブジェクトにはバックアップ入力IPv4アドレスを含むバックアップ入力IPv4アドレスサブオブジェクトが必要です。サブオブジェクトのタイプは1で、サブオブジェクトの本体は次のとおりです。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|              Backup Ingress IPv4 Address (4 bytes)            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Backup Ingress IPv4 Address: An IPv4 host address of backup ingress",
      "ja": "バックアップ入力IPv4アドレス：バックアップ入力のIPv4ホストアドレス"
    },
    {
      "indent": 0,
      "text": "5.1.4. Subobject: Backup Ingress IPv6 Address",
      "section_title": true,
      "ja": "5.1.4. サブオブジェクト：バックアップ入力IPv6アドレス"
    },
    {
      "indent": 3,
      "text": "When the primary ingress of a protected LSP sends a PATH message with an INGRESS_PROTECTION object to the backup ingress, the object MUST have a Backup Ingress IPv6 Address subobject containing an IPv6 address belonging to the backup ingress if IPv6 is used. The Type of the subobject is 2, the body of the subobject is given below:",
      "ja": "保護されたLSPのプライマリ入力がINGRESS_PROTECTIONオブジェクトを含むPATHメッセージをバックアップ入力に送信する場合、IPv6が使用される場合、オブジェクトにはバックアップ入力に属するIPv6アドレスを含むバックアップ入力IPv6アドレスサブオブジェクトが必要です。サブオブジェクトのタイプは2で、サブオブジェクトの本体は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             Backup Ingress IPv6 Address (16 bytes)            |\n~                                                               ~\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Backup Ingress IPv6 Address: An IPv6 host address of backup ingress",
      "ja": "バックアップ入力IPv6アドレス：バックアップ入力のIPv6ホストアドレス"
    },
    {
      "indent": 0,
      "text": "5.1.5. Subobject: Ingress IPv4 Address",
      "section_title": true,
      "ja": "5.1.5. サブオブジェクト：入力IPv4アドレス"
    },
    {
      "indent": 3,
      "text": "The INGRESS_PROTECTION object may have an Ingress IPv4 Address subobject containing an IPv4 address belonging to the primary ingress if IPv4 is used. The Type of the subobject is 3. The subobject has the following body:",
      "ja": "INGRESS_PROTECTIONオブジェクトには、IPv4が使用されている場合、プライマリ入力に属するIPv4アドレスを含むIngress IPv4 Addressサブオブジェクトが含まれる場合があります。サブオブジェクトのタイプは3です。サブオブジェクトには次の本体があります。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               Ingress IPv4 Address (4 bytes)                  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Ingress IPv4 Address: An IPv4 host address of ingress",
      "ja": "入力IPv4アドレス：入力のIPv4ホストアドレス"
    },
    {
      "indent": 0,
      "text": "5.1.6. Subobject: Ingress IPv6 Address",
      "section_title": true,
      "ja": "5.1.6. サブオブジェクト：入力IPv6アドレス"
    },
    {
      "indent": 3,
      "text": "The INGRESS_PROTECTION object may have an Ingress IPv6 Address subobject containing an IPv6 address belonging to the primary ingress if IPv6 is used. The Type of the subobject is 4. The subobject has the following body:",
      "ja": "INGRESS_PROTECTIONオブジェクトには、IPv6が使用されている場合、プライマリ入力に属するIPv6アドレスを含むIngress IPv6 Addressサブオブジェクトがある場合があります。サブオブジェクトのタイプは4です。サブオブジェクトには次の本体があります。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               Ingress IPv6 Address (16 bytes)                 |\n~                                                               ~\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Ingress IPv6 Address: An IPv6 host address of ingress",
      "ja": "入力IPv6アドレス：入力のIPv6ホストアドレス"
    },
    {
      "indent": 0,
      "text": "5.1.7. Subobject: TRAFFIC_DESCRIPTOR",
      "section_title": true,
      "ja": "5.1.7. サブオブジェクト：TRAFFIC_DESCRIPTOR"
    },
    {
      "indent": 3,
      "text": "The INGRESS_PROTECTION object may have a TRAFFIC_DESCRIPTOR subobject describing the traffic to be mapped to the backup LSP on the backup ingress for locally protecting the primary ingress. The subobject types for Interface, IPv4 Prefix, IPv6 Prefix, and Application Identifier are 5, 6, 7, and 8, respectively. The subobject has the following body:",
      "ja": "INGRESS_PROTECTIONオブジェクトには、プライマリ入力をローカルで保護するために、バックアップ入力のバックアップLSPにマッピングされるトラフィックを記述するTRAFFIC_DESCRIPTORサブオブジェクトが含まれる場合があります。インターフェイス、IPv4プレフィックス、IPv6プレフィックス、およびアプリケーション識別子のサブオブジェクトタイプは、それぞれ5、6、7、および8です。サブオブジェクトには次の本体があります。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        Traffic Element 1                      |\n~                                                               ~\n|                        Traffic Element n                      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The TRAFFIC_DESCRIPTOR subobject may contain multiple Traffic Elements of the same type as follows:",
      "ja": "TRAFFIC_DESCRIPTORサブオブジェクトには、次のように同じタイプの複数のトラフィック要素が含まれる場合があります。"
    },
    {
      "indent": 3,
      "text": "o Interface Traffic: Each of the Traffic Elements is a 32-bit index of an interface from which the traffic is imported into the backup LSP.",
      "ja": "o インターフェイストラフィック：各トラフィック要素は、トラフィックがバックアップLSPにインポートされるインターフェイスの32ビットインデックスです。"
    },
    {
      "indent": 3,
      "text": "o IPv4 Prefix Traffic: Each of the Traffic Elements is an IPv4 prefix that contains an 8-bit prefix length followed by an IPv4 address prefix (whose length, in bits, is specified by the prefix length) that is padded to a byte boundary.",
      "ja": "o IPv4プレフィックストラフィック：各トラフィック要素は、8ビットのプレフィックス長と、それに続くIPv4アドレスプレフィックス（ビット長はプレフィックス長によって指定されます）を含むIPv4プレフィックスで、バイト境界に埋め込まれます。"
    },
    {
      "indent": 3,
      "text": "o IPv6 Prefix Traffic Each of the Traffic Elements is an IPv6 prefix, containing an 8-bit prefix length followed by an IPv6 address prefix (whose length, in bits, is specified by the prefix length) that is padded to a byte boundary.",
      "ja": "o IPv6プレフィックストラフィック各トラフィック要素はIPv6プレフィックスであり、8ビットのプレフィックス長と、それに続くIPv6アドレスプレフィックス（長さはビット単位で、プレフィックス長によって指定されます）がバイト境界に埋め込まれます。"
    },
    {
      "indent": 3,
      "text": "o Application Traffic: Each of the Traffic Elements is a 32-bit identifier of an application from which the traffic is imported into the backup LSP.",
      "ja": "o アプリケーショントラフィック：各トラフィック要素は、トラフィックがバックアップLSPにインポートされるアプリケーションの32ビットの識別子です。"
    },
    {
      "indent": 0,
      "text": "5.1.8. Subobject: Label-Routes",
      "section_title": true,
      "ja": "5.1.8. サブオブジェクト：ラベルルート"
    },
    {
      "indent": 3,
      "text": "The INGRESS_PROTECTION object in a PATH message from the primary ingress to the backup ingress may have a Label-Routes subobject containing the labels and routes that the next hops of the ingress use. The Type of the subobject is 9. The subobject has the following body:",
      "ja": "プライマリ入力からバックアップ入力へのPATHメッセージ内のINGRESS_PROTECTIONオブジェクトには、入力のネクストホップが使用するラベルとルートを含むLabel-Routesサブオブジェクトが含まれる場合があります。サブオブジェクトのタイプは9です。サブオブジェクトには次の本体があります。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n~                           Subobjects                          ~\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The Subobjects in Label-Routes are copied from those in the RECORD_ROUTE objects in the RESV messages that the primary ingress receives from its next hops for the primary LSP. They MUST contain the first hops of the LSP, each of which is paired with its label.",
      "ja": "Label-Routesのサブオブジェクトは、プライマリ入力がプライマリLSPのネクストホップから受信するRESVメッセージのRECORD_ROUTEオブジェクトのサブオブジェクトからコピーされます。それらはLSPの最初のホップを含まなければなりません、それぞれはそのラベルと対になっています。"
    },
    {
      "indent": 0,
      "text": "6. Behavior of Ingress Protection",
      "section_title": true,
      "ja": "6. 進入保護の動作"
    },
    {
      "indent": 0,
      "text": "6.1. Overview",
      "section_title": true,
      "ja": "6.1. 概観"
    },
    {
      "indent": 3,
      "text": "There are two different proposed signaling approaches to transfer the information for ingress protection. They both use the same new INGRESS_PROTECTION object. The object is sent in both PATH and RESV messages.",
      "ja": "進入保護のために情報を転送するための2つの異なるシグナリングアプローチが提案されています。どちらも同じ新しいINGRESS_PROTECTIONオブジェクトを使用します。オブジェクトは、PATHメッセージとRESVメッセージの両方で送信されます。"
    },
    {
      "indent": 0,
      "text": "6.1.1. Relay-Message Method",
      "section_title": true,
      "ja": "6.1.1. リレーメッセージ方式"
    },
    {
      "indent": 3,
      "text": "The primary ingress relays the information for ingress protection of an LSP to the backup ingress via PATH messages. Once the LSP is created, the ingress of the LSP sends the backup ingress a PATH message with an INGRESS_PROTECTION object with a Label-Routes subobject, which is populated with the next hops and labels. This provides sufficient information for the backup ingress to create the appropriate forwarding state and backup LSP(s).",
      "ja": "プライマリ入力は、LSPの入力保護に関する情報を、PATHメッセージを介してバックアップ入力に中継します。 LSPが作成されると、LSPの入口は、ネクストホップとラベルが入力されたLabel-Routesサブオブジェクトを含むINGRESS_PROTECTIONオブジェクトを含むPATHメッセージをバックアップ入口に送信します。これにより、バックアップ入力が適切な転送状態とバックアップLSPを作成するための十分な情報が提供されます。"
    },
    {
      "indent": 3,
      "text": "The ingress also sends the backup ingress all the other PATH messages for the LSP with an empty INGRESS_PROTECTION object. An INGRESS_PROTECTION object without any TRAFFIC_DESCRIPTOR subobject is called an empty INGRESS_PROTECTION object. Thus, the backup ingress has access to all the PATH messages needed for modification to refresh the control-plane state after a failure.",
      "ja": "入力はまた、空のINGRESS_PROTECTIONオブジェクトを使用して、LSPの他のすべてのPATHメッセージをバックアップ入力に送信します。 TRAFFIC_DESCRIPTORサブオブジェクトのないINGRESS_PROTECTIONオブジェクトは、空のINGRESS_PROTECTIONオブジェクトと呼ばれます。したがって、バックアップ入力は、障害後にコントロールプレーンの状態を更新するために変更する必要があるすべてのPATHメッセージにアクセスできます。"
    },
    {
      "indent": 0,
      "text": " The empty INGRESS_PROTECTION object is for efficient processing of ingress protection for a P2MP LSP. A P2MP LSP's primary ingress may have more than one PATH message, each of which is sent to a next hop along a branch of the P2MP LSP. The PATH message along a branch will be selected and sent to the backup ingress with an INGRESS_PROTECTION object containing the TRAFFIC_DESCRIPTOR subobject; all the PATH messages along the other branches will be sent to the backup ingress containing an INGRESS_PROTECTION object without any TRAFFIC_DESCRIPTOR subobject (empty INGRESS_PROTECTION object). For a P2MP LSP, the backup ingress only needs one TRAFFIC_DESCRIPTOR.",
      "ja": "空のINGRESS_PROTECTIONオブジェクトは、P2MP LSPの進入保護を効率的に処理するためのものです。 P2MP LSPのプライマリ入力には複数のPATHメッセージが含まれる場合があり、そのそれぞれがP2MP LSPのブランチに沿ってネクストホップに送信されます。ブランチに沿ったPATHメッセージが選択され、TRAFFIC_DESCRIPTORサブオブジェクトを含むINGRESS_PROTECTIONオブジェクトとともにバックアップ入力に送信されます。他のブランチに沿ったすべてのPATHメッセージは、TRAFFIC_DESCRIPTORサブオブジェクトなしのINGRESS_PROTECTIONオブジェクト（空のINGRESS_PROTECTIONオブジェクト）を含むバックアップ入力に送信されます。 P2MP LSPの場合、バックアップ入力に必要なのは1つのTRAFFIC_DESCRIPTORだけです。"
    },
    {
      "indent": 0,
      "text": "6.1.2. Proxy-Ingress Method",
      "section_title": true,
      "ja": "6.1.2. プロキシ入力方式"
    },
    {
      "indent": 3,
      "text": "Conceptually, a proxy ingress is created that starts the RSVP signaling. The explicit path of the LSP goes from the proxy ingress to the backup ingress and then to the real ingress. The behavior and signaling for the proxy ingress is done by the real ingress; the use of a proxy-ingress address avoids problems with loop detection. Note that the proxy ingress MUST reside within the same router as the real ingress.",
      "ja": "概念的には、RSVPシグナリングを開始するプロキシ入力が作成されます。 LSPの明示的なパスは、プロキシ入力からバックアップ入力、そして実際の入力へと進みます。プロキシ入力の動作とシグナリングは、実際の入力によって行われます。プロキシ入力アドレスを使用すると、ループ検出に関する問題を回避できます。プロキシ入力は、実際の入力と同じルーター内に存在する必要があることに注意してください。"
    },
    {
      "indent": 23,
      "text": "       [ Traffic Source ]       *** Primary LSP\n        $             $         --- Backup LSP\n        $             $          $$  Link\n        $             $\n[ Proxy Ingress ]  [ Backup ]\n[ & Ingress     ]     |\n       *              |\n       *****[ MP ]----|",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Figure 2: Example of a Protected LSP with a Proxy-Ingress Node",
      "ja": "図2：プロキシ入力ノードを持つ保護されたLSPの例"
    },
    {
      "indent": 3,
      "text": "The backup ingress MUST know the merge points or next hops and their associated labels. This is accomplished by having the RSVP PATH and RESV messages go through the backup ingress, although the forwarding path need not go through the backup ingress. If the backup ingress fails, the ingress simply removes the INGRESS_PROTECTION object and forwards the PATH messages to the LSP's next hop(s). If the ingress has its LSP configured for ingress protection, then the ingress can add the backup ingress and itself to the Explicit Route Object (ERO) and start forwarding the PATH messages to the backup ingress.",
      "ja": "バックアップ入力は、マージポイントまたはネクストホップとそれらに関連付けられたラベルを認識している必要があります。これは、RSVP PATHおよびRESVメッセージがバックアップ入力を通過することで実現されますが、転送パスはバックアップ入力を通過する必要はありません。バックアップ入力が失敗した場合、入力はINGRESS_PROTECTIONオブジェクトを削除し、PATHメッセージをLSPの次のホップに転送するだけです。入力のLSPに入力保護が設定されている場合、入力はバックアップ入力とそれ自体を明示的ルートオブジェクト（ERO）に追加し、PATHメッセージのバックアップ入力への転送を開始できます。"
    },
    {
      "indent": 3,
      "text": "Slightly different behavior can apply for the on-path and off-path cases. In the on-path case, the backup ingress is a next-hop node after the ingress for the LSP. In the off-path case, the backup ingress is not any next-hop node after the ingress for all associated sub-LSPs.",
      "ja": "パス上とパス外の場合には、わずかに異なる動作が適用されます。パス上の場合、バックアップ入力は、LSPの入力後のネクストホップノードです。オフパスの場合、バックアップ入力は、関連するすべてのサブLSPの入力後の次のホップノードではありません。"
    },
    {
      "indent": 0,
      "text": " The key advantage of this approach is that it minimizes the special handling code required. Because the backup ingress is on the signaling path, it can receive various notifications. It easily has access to all the PATH messages needed for a modification to be sent to refresh the control-plane state after a failure.",
      "ja": "このアプローチの主な利点は、必要な特別な処理コードが最小限に抑えられることです。バックアップ入力はシグナリングパス上にあるため、さまざまな通知を受信できます。障害発生後にコントロールプレーンの状態を更新するために変更を送信するために必要なすべてのPATHメッセージに簡単にアクセスできます。"
    },
    {
      "indent": 0,
      "text": "6.2. Ingress Behavior",
      "section_title": true,
      "ja": "6.2. イングレス動作"
    },
    {
      "indent": 3,
      "text": "The primary ingress MUST be configured with a couple of pieces of information for ingress protection.",
      "ja": "プライマリイングレスは、イングレス保護のためのいくつかの情報で構成されなければなりません。"
    },
    {
      "indent": 3,
      "text": "o Backup Ingress Address: The primary ingress MUST know the IP address of the backup ingress it wants to be used before it can use the INGRESS_PROTECTION object.",
      "ja": "o バックアップ入力アドレス：プライマリ入力は、INGRESS_PROTECTIONオブジェクトを使用する前に、使用したいバックアップ入力のIPアドレスを知っている必要があります。"
    },
    {
      "indent": 3,
      "text": "o Proxy-Ingress-Id (only needed for Proxy-Ingress Method): The Proxy-Ingress-Id is only used in the RECORD_ROUTE object for recording the proxy ingress. If no Proxy-Ingress-Id is specified, then a local interface address that will not otherwise be included in the RECORD_ROUTE object can be used. A similar technique is used in Section 6.1.1. of [RFC4090].",
      "ja": "o Proxy-Ingress-Id（Proxy-Ingressメソッドでのみ必要）：Proxy-Ingress-Idは、プロキシの進入を記録するためにRECORD_ROUTEオブジェクトでのみ使用されます。 Proxy-Ingress-Idが指定されていない場合は、RECORD_ROUTEオブジェクトに含まれないローカルインターフェイスアドレスを使用できます。同様の手法がセクション6.1.1でも使用されています。 [RFC4090]の。"
    },
    {
      "indent": 3,
      "text": "o Application Traffic Identifier: The primary ingress and backup ingress MUST both know what application traffic should be directed into the LSP. If a list of prefixes in the TRAFFIC_DESCRIPTOR subobject will not suffice, then a commonly understood Application Traffic Identifier can be sent between the primary ingress and backup ingress. The exact meaning of the identifier should be configured similarly at both the primary ingress and backup ingress. The Application Traffic Identifier is understood within the unique context of the primary ingress and backup ingress.",
      "ja": "o アプリケーショントラフィック識別子：プライマリ入力とバックアップ入力の両方が、どのアプリケーショントラフィックをLSPに送信する必要があるかを認識している必要があります。 TRAFFIC_DESCRIPTORサブオブジェクトのプレフィックスのリストでは不十分な場合は、一般的に理解されているアプリケーショントラフィック識別子をプライマリ入力とバックアップ入力の間で送信できます。識別子の正確な意味は、プライマリ入力とバックアップ入力の両方で同様に設定する必要があります。アプリケーショントラフィック識別子は、プライマリ入力とバックアップ入力の固有のコンテキスト内で理解されます。"
    },
    {
      "indent": 3,
      "text": "o A Connection between Backup Ingress and Primary Ingress: If there is not any direct link between the primary ingress and the backup ingress, a tunnel MUST be configured between them.",
      "ja": "o バックアップ入力とプライマリ入力間の接続：プライマリ入力とバックアップ入力の間に直接リンクがない場合、それらの間にトンネルを構成する必要があります。"
    },
    {
      "indent": 3,
      "text": "With this additional information, the primary ingress can create and signal the necessary RSVP extensions to support ingress protection.",
      "ja": "この追加情報を使用して、プライマリ入力は、入力保護をサポートするために必要なRSVP拡張を作成して通知できます。"
    },
    {
      "indent": 0,
      "text": "6.2.1. Relay-Message Method",
      "section_title": true,
      "ja": "6.2.1. リレーメッセージ方式"
    },
    {
      "indent": 3,
      "text": "To protect the primary ingress of an LSP, the primary ingress MUST do the following after the LSP is up.",
      "ja": "LSPのプライマリ入力を保護するために、LSPが起動した後、プライマリ入力は以下を実行する必要があります。"
    },
    {
      "indent": 3,
      "text": "1. Select a PATH message P0 for the LSP.",
      "ja": "1. LSPのPATHメッセージP0を選択します。"
    },
    {
      "indent": 0,
      "text": " 2. If the backup ingress is off path (the backup ingress is not the next hop of the primary ingress for P0), then send it a PATH message P0' with the content from P0 and an INGRESS_PROTECTION object; else (the backup ingress is a next hop, i.e., on-path case) add an INGRESS_PROTECTION object into the existing PATH message to the backup ingress (i.e., the next hop). The object contains the TRAFFIC_DESCRIPTOR subobject, the Backup Ingress Address subobject and the Label-Routes subobject. The options field is set to indicate whether a backup P2MP LSP is desired. The Label-Routes subobject contains the next hops of the primary ingress and their labels. Note that for the on-path case, there is an existing PATH message to the backup ingress (i.e., the next hop), and we just add an INGRESS_PROTECTION object into the existing PATH message to be sent to the backup ingress. We do not send a separate PATH message to the backup ingress for this existing PATH message.",
      "ja": "2.バックアップ入力がオフパスの場合（バックアップ入力はP0のプライマリ入力のネクストホップではない）、P0からのコンテンツとINGRESS_PROTECTIONオブジェクトを含むPATHメッセージP0 'を送信します。 else（バックアップ入力はネクストホップ、つまりパス上の場合）INGRESS_PROTECTIONオブジェクトを既存のPATHメッセージに追加してバックアップ入力（つまりネクストホップ）にします。このオブジェクトには、TRAFFIC_DESCRIPTORサブオブジェクト、Backup Ingress Addressサブオブジェクト、およびLabel-Routesサブオブジェクトが含まれています。オプションフィールドは、バックアップP2MP LSPが必要かどうかを示すために設定されます。 Label-Routesサブオブジェクトには、プライマリ入力のネクストホップとそのラベルが含まれています。オンパスの場合は、バックアップ入力（つまり、次のホップ）への既存のPATHメッセージがあり、INGRESS_PROTECTIONオブジェクトを既存のPATHメッセージに追加するだけで、バックアップ入力に送信されることに注意してください。この既存のPATHメッセージのバックアップ入力に個別のPATHメッセージを送信することはありません。"
    },
    {
      "indent": 3,
      "text": "3. For each Pi of the other PATH messages for the LSP, send the backup ingress a PATH message Pi' with the content copied from Pi and an empty INGRESS_PROTECTION object.",
      "ja": "3. LSPの他のPATHメッセージの各Piについて、Piからコピーされたコンテンツと空のINGRESS_PROTECTIONオブジェクトを含むPATHメッセージPi 'をバックアップ入力に送信します。"
    },
    {
      "indent": 3,
      "text": "For every PATH message Pj' (i.e., P0'/Pi') to be sent to the backup ingress, it has the same SESSION as Pj (i.e., P0/Pi). If the backup ingress is off path, the primary ingress updates Pj' according to the backup ingress as its next hop before sending it. It adds the backup ingress to the beginning of the ERO and sets RSVP_HOP based on the interface to the backup ingress. The primary ingress MUST NOT set up any forwarding state to the backup ingress if the backup ingress is off path.",
      "ja": "バックアップ入力に送信されるすべてのPATHメッセージPj '（つまり、P0' / Pi '）については、Pjと同じセッション（つまり、P0 / Pi）があります。バックアップ入力がパスから外れている場合、プライマリ入力は送信前に次のホップとしてのバックアップ入力に従ってPj 'を更新します。 EROの先頭にバックアップ入力を追加し、バックアップ入力へのインターフェイスに基づいてRSVP_HOPを設定します。バックアップ入力がパスから外れている場合、プライマリ入力はバックアップ入力への転送状態をセットアップしてはなりません（MUST NOT）。"
    },
    {
      "indent": 0,
      "text": "6.2.2. Proxy-Ingress Method",
      "section_title": true,
      "ja": "6.2.2. プロキシ入力方式"
    },
    {
      "indent": 3,
      "text": "The primary ingress is responsible for starting the RSVP signaling for the proxy-ingress node. To do this, the following MUST be done for the RSVP PATH message.",
      "ja": "プライマリ入力は、プロキシ入力ノードのRSVPシグナリングを開始する責任があります。これを行うには、RSVP PATHメッセージに対して以下を実行する必要があります。"
    },
    {
      "indent": 3,
      "text": "1. Compute the EROs for the LSP as normal for the ingress.",
      "ja": "1. 入力に対して通常どおりにLSPのEROを計算します。"
    },
    {
      "indent": 3,
      "text": "2. If the selected backup ingress node is not the first node on the path (for all sub-LSPs), then insert it at the beginning of the ERO first, then the backup ingress node, and then the ingress node.",
      "ja": "2. 選択したバックアップ入力ノードがパス上の最初のノードではない場合（すべてのサブLSPの場合）、最初にそれをEROの先頭に挿入し、次にバックアップ入力ノード、次に入力ノードを挿入します。"
    },
    {
      "indent": 3,
      "text": "3. In the PATH RECORD_ROUTE Object (RRO), instead of recording the ingress node's address, replace it with the Proxy-Ingress-Id.",
      "ja": "3. PATH RECORD_ROUTEオブジェクト（RRO）で、入口ノードのアドレスを記録する代わりに、それをProxy-Ingress-Idに置き換えます。"
    },
    {
      "indent": 3,
      "text": "4. Leave the hop (HOP) object populated as usual with information for the ingress node.",
      "ja": "4. ホップ（HOP）オブジェクトに入力ノードの情報を通常どおり入力したままにします。"
    },
    {
      "indent": 3,
      "text": "5. Add the INGRESS_PROTECTION object to the PATH message. Include the Backup Ingress Address (IPv4 or IPv6) subobject and the TRAFFIC_DESCRIPTOR subobject. Set or clear the options indicating that a backup P2MP LSP is desired.",
      "ja": "5. INGRESS_PROTECTIONオブジェクトをPATHメッセージに追加します。バックアップ入力アドレス（IPv4またはIPv6）サブオブジェクトとTRAFFIC_DESCRIPTORサブオブジェクトを含めます。バックアップP2MP LSPが必要であることを示すオプションを設定またはクリアします。"
    },
    {
      "indent": 3,
      "text": "6. Optionally, add the FAST-REROUTE object [RFC4090] to the Path message. Indicate whether one-to-one backup is desired. Indicate whether facility backup is desired.",
      "ja": "6. オプションで、FAST-REROUTEオブジェクト[RFC4090]をPathメッセージに追加します。 1対1のバックアップが必要かどうかを示します。施設のバックアップが必要かどうかを示します。"
    },
    {
      "indent": 3,
      "text": "7. The RSVP PATH message is sent to the backup node as normal.",
      "ja": "7. RSVP PATHメッセージは、通常どおりバックアップノードに送信されます。"
    },
    {
      "indent": 3,
      "text": "If the ingress detects that it can't communicate with the backup ingress, then the ingress SHOULD instead send the PATH message to the next hop indicated in the ERO computed in step 1. Once the ingress detects that it can communicate with the backup ingress, the ingress SHOULD follow steps 1-7 to obtain ingress failure protection.",
      "ja": "イングレスがバックアップイングレスと通信できないことを検出した場合、イングレスはステップ1で計算されたEROに示されているネクストホップにPATHメッセージを送信する必要があります（SHOULD）。入力は、ステップ1〜7に従って入力障害保護を取得する必要があります（SHOULD）。"
    },
    {
      "indent": 3,
      "text": "When the ingress node receives an RSVP PATH message with an INGRESS_PROTECTION object and the object specifies that node as the ingress node and the Previous Hop (PHOP) as the backup ingress node, the ingress node SHOULD remove the INGRESS_PROTECTION object from the PATH message before sending it out. Additionally, the ingress node MUST store that it will install ingress forwarding state for the LSP rather than midpoint forwarding.",
      "ja": "入力ノードがINGRESS_PROTECTIONオブジェクトを含むRSVP PATHメッセージを受信し、オブジェクトがそのノードを入力ノードとして、前のホップ（PHOP）をバックアップ入力ノードとして指定している場合、入力ノードは、送信する前にPATHメッセージからINGRESS_PROTECTIONオブジェクトを削除する必要があります（SHOULD）。それを出します。さらに、入力ノードは、ミッドポイント転送ではなく、LSPの入力転送状態をインストールすることを格納する必要があります。"
    },
    {
      "indent": 3,
      "text": "When an RSVP RESV message is received by the ingress, it uses the Next Hop (NHOP) to determine whether the message is received from the backup ingress or from a different node. The stored associated PATH message contains an INGRESS_PROTECTION object that identifies the backup ingress node. If the RESV message is not from the backup node, then the ingress forwarding state SHOULD be set up, and the INGRESS_PROTECTION object MUST be added to the RESV before it is sent to the NHOP, which SHOULD be the backup node. If the RESV message is from the backup node, then the LSP SHOULD be considered available for use.",
      "ja": "RSVP RESVメッセージが入力で受信されると、ネクストホップ（NHOP）を使用して、メッセージがバックアップ入力から受信されたか、別のノードから受信されたかを判断します。格納された関連するPATHメッセージには、バックアップ入力ノードを識別するINGRESS_PROTECTIONオブジェクトが含まれています。 RESVメッセージがバックアップノードからのものでない場合、入力転送状態を設定する必要があり（SHOULD）、INGRESS_PROTECTIONオブジェクトをNHOPに送信する前にRESVに追加する必要があります。これは、バックアップノードにする必要があります（SHOULD）。 RESVメッセージがバックアップノードからのものである場合、LSPは使用可能であると見なされるべきです（SHOULD）。"
    },
    {
      "indent": 3,
      "text": "If the backup ingress node is on the forwarding path, then a RESV is received with an INGRESS_PROTECTION object and an NHOP that matches the backup ingress. In this case, the ingress node's address will not appear after the backup ingress in the RRO. The ingress node SHOULD set up the ingress forwarding state, just as is done if the ingress node of the LSP weren't protected.",
      "ja": "バックアップ入力ノードが転送パス上にある場合、INGRESS_PROTECTIONオブジェクトとバックアップ入力に一致するNHOPを含むRESVが受信されます。この場合、入力ノードのアドレスは、RROのバックアップ入力後に表示されません。入力ノードは、LSPの入力ノードが保護されていない場合と同様に、入力転送状態を設定する必要があります（SHOULD）。"
    },
    {
      "indent": 0,
      "text": "6.3. Backup Ingress Behavior",
      "section_title": true,
      "ja": "6.3. バックアップ入力動作"
    },
    {
      "indent": 0,
      "text": " A Label Edge Router (LER) determines that the ingress local protection is requested for an LSP if the INGRESS_PROTECTION object is included in the PATH message it receives for the LSP. The LER can further determine that it is the backup ingress if one of its addresses is in the Backup Ingress Address subobject of the INGRESS_PROTECTION object. The LER as the backup ingress will assume full responsibility of the ingress after the primary ingress fails. In addition, the LER determines that it is off path if it is not any node of the LSP. The LER determines whether it uses the Relay-Message Method or the Proxy-Ingress Method according to configurations.",
      "ja": "ラベルエッジルーター（LER）は、LSSPに対して受信するPATHメッセージにINGRESS_PROTECTIONオブジェクトが含まれている場合、LSPに対して入力ローカル保護が要求されていると判断します。 LERはさらに、そのアドレスの1つがINGRESS_PROTECTIONオブジェクトのバックアップ入力アドレスサブオブジェクトにある場合、それがバックアップ入力であることを判別できます。バックアップ入力としてのLERは、プライマリ入力が失敗した後、入力の全責任を負います。さらに、LERは、LSPのノードでない場合、パスから外れていると判断します。 LERは、設定に応じて、リレーメッセージ方式とプロキシ入力方式のどちらを使用するかを決定します。"
    },
    {
      "indent": 0,
      "text": "6.3.1. Backup Ingress Behavior in the Off-Path Case",
      "section_title": true,
      "ja": "6.3.1. オフパスの場合のバックアップ入力動作"
    },
    {
      "indent": 3,
      "text": "The backup ingress considers itself a Point of Local Repair (PLR) and the primary ingress its next hop, and it provides a local protection for the primary ingress. It behaves very similarly to a PLR providing fast reroute where the primary ingress is considered to be the failure point to protect. Where not otherwise specified, the behavior given in [RFC4090] for a PLR applies.",
      "ja": "バックアップ入力は、自身をローカル修復ポイント（PLR）と見なし、プライマリ入力は次のホップであると見なし、プライマリ入力のローカル保護を提供します。これはPLRと非常によく似た動作をし、一次進入が保護すべき障害ポイントと見なされる高速リルートを提供します。特に明記されていない場合、PLRについて[RFC4090]で示されている動作が適用されます。"
    },
    {
      "indent": 3,
      "text": "The backup ingress MUST follow the control options specified in the INGRESS_PROTECTION object and the flags and specifications in the FAST-REROUTE object. This applies to providing a P2MP backup if the \"P2MP backup\" is set, a one-to-one backup if \"one-to-one desired\" is set, a facility backup if the \"facility backup desired\" is set, and backup paths that support both the desired bandwidth and administrative groups that are requested.",
      "ja": "バックアップ入力は、INGRESS_PROTECTIONオブジェクトで指定された制御オプションと、FAST-REROUTEオブジェクトのフラグと仕様に従う必要があります。これは、「P2MPバックアップ」が設定されている場合はP2MPバックアップ、「1対1が必要」が設定されている場合は1対1のバックアップ、「施設が必要」が設定されている場合は施設のバックアップ、およびバックアップの提供に適用されます。要求された帯域幅と管理グループの両方をサポートするパス。"
    },
    {
      "indent": 3,
      "text": "If multiple non-empty INGRESS_PROTECTION objects have been received via multiple PATH messages for the same LSP, then the most recent one MUST be the one used.",
      "ja": "空でない複数のINGRESS_PROTECTIONオブジェクトが同じLSPの複数のPATHメッセージを介して受信された場合、最新のものを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "The backup ingress creates the appropriate forwarding state for the backup LSP tunnel(s) to the merge point(s).",
      "ja": "バックアップ入力は、マージポイントへのバックアップLSPトンネルに適切な転送状態を作成します。"
    },
    {
      "indent": 3,
      "text": "When the backup ingress sends a RESV message to the primary ingress, it MUST add an INGRESS_PROTECTION object into the message. It MUST set or clear the flags in the object to report \"Ingress local protection available\", \"Ingress local protection in use\", and \"bandwidth protection\".",
      "ja": "バックアップ入力がRESVメッセージをプライマリ入力に送信するとき、INGRESS_PROTECTIONオブジェクトをメッセージに追加する必要があります。オブジェクトのフラグを設定またはクリアして、「使用可能なIngressローカル保護」、「使用中のIngressローカル保護」、および「帯域幅保護」を報告する必要があります。"
    },
    {
      "indent": 3,
      "text": "If the backup ingress doesn't have a backup LSP tunnel to each of the merge points, it SHOULD clear \"Ingress local protection available\" and set NUB to the number of the merge points to which there is no backup LSP.",
      "ja": "バックアップ入力に各マージポイントへのバックアップLSPトンネルがない場合は、「使用可能な入力ローカル保護」をクリアし、バックアップLSPがないマージポイントの数にNUBを設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "When the primary ingress fails, the backup ingress redirects the traffic from a source into the backup P2P LSPs or the backup P2MP LSP transmitting the traffic to the next hops of the primary ingress, where the traffic is merged into the protected LSP.",
      "ja": "プライマリ入力が失敗すると、バックアップ入力は、トラフィックをソースからバックアップP2P LSPまたはトラフィックを送信するバックアップP2MP LSPにリダイレクトして、トラフィックをプライマリ入力のネクストホップに転送します。そこで、トラフィックは保護されたLSPにマージされます。"
    },
    {
      "indent": 0,
      "text": " In this case, the backup ingress MUST keep the PATH message with the INGRESS_PROTECTION object received from the primary ingress and the RESV message with the INGRESS_PROTECTION object to be sent to the primary ingress. The backup ingress MUST set the \"local protection in use\" flag in the RESV message, which indicates that the backup ingress is actively redirecting the traffic into the backup P2P LSPs or the backup P2MP LSP for locally protecting the primary ingress failure.",
      "ja": "この場合、バックアップ入力は、プライマリ入力から受信したINGRESS_PROTECTIONオブジェクトを含むPATHメッセージと、プライマリ入力に送信されるINGRESS_PROTECTIONオブジェクトを含むRESVメッセージを保持する必要があります。バックアップ入力は、RESVメッセージで「使用中のローカル保護」フラグを設定する必要があります。これは、バックアップ入力がプライマリP2P LSPまたはバックアップP2MP LSPにトラフィックをアクティブにリダイレクトして、プライマリ入力障害をローカルで保護していることを示します。"
    },
    {
      "indent": 3,
      "text": "Note that the RESV message with this piece of information will not be sent to the primary ingress because the primary ingress has failed.",
      "ja": "この情報を含むRESVメッセージは、プライマリ入力が失敗したため、プライマリ入力に送信されないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "If the backup ingress has not received any PATH messages from the primary ingress for an extended period of time (e.g., a cleanup timeout interval) and a confirmed primary ingress failure did not occur, then the standard RSVP soft-state removal SHOULD occur. The backup ingress SHALL remove the state for the PATH message from the primary ingress and either tear down the one-to-one backup LSPs for protecting the primary ingress if one-to-one backup is used or unbind the facility backup LSPs if facility backup is used.",
      "ja": "バックアップ入力がプライマリ入力から長期間PATHメッセージを受信して​​いない場合（クリーンアップタイムアウト間隔など）、確認されたプライマリ入力エラーが発生しなかった場合、標準のRSVPソフト状態削除が発生する必要があります（SHOULD）。バックアップ入力は、PATHメッセージの状態をプライマリ入力から削除するものとし（SHALL）、1対1バックアップが使用されている場合はプライマリ入力を保護するために1対1バックアップLSPを破棄するか、施設バックアップの場合は施設バックアップLSPをバインド解除します使用されている。"
    },
    {
      "indent": 3,
      "text": "When the backup ingress receives a PATH message from the primary ingress for locally protecting the primary ingress of a protected LSP, it MUST check to see if any critical information has been changed. If the next hops of the primary ingress are changed, the backup ingress SHALL update its backup LSP(s) accordingly.",
      "ja": "保護されたLSPのプライマリ入力をローカルで保護するために、バックアップ入力がプライマリ入力からPATHメッセージを受信した場合、重要な情報が変更されていないか確認する必要があります。プライマリ入力のネクストホップが変更された場合、バックアップ入力はそれに応じてバックアップLSPを更新する必要があります（SHALL）。"
    },
    {
      "indent": 0,
      "text": "6.3.1.1. Relay-Message Method",
      "section_title": true,
      "ja": "6.3.1.1. リレーメッセージ方式"
    },
    {
      "indent": 3,
      "text": "When the backup ingress receives a PATH message with a non-empty INGRESS_PROTECTION object, it examines the object to learn what traffic associated with the LSP. It determines the next hops to be merged to by examining the Label-Routes subobject in the object.",
      "ja": "バックアップ入力が空でないINGRESS_PROTECTIONオブジェクトを含むPATHメッセージを受信すると、オブジェクトを調べて、LSPに関連付けられているトラフィックを確認します。オブジェクト内のLabel-Routesサブオブジェクトを調べることにより、マージされる次のホップを決定します。"
    },
    {
      "indent": 3,
      "text": "The backup ingress MUST store the PATH message received from the primary ingress but NOT forward it.",
      "ja": "バックアップ入力は、プライマリ入力から受信したPATHメッセージを保存する必要がありますが、転送しないでください。"
    },
    {
      "indent": 3,
      "text": "The backup ingress responds with a RESV message to the PATH message received from the primary ingress. If the backup ingress is off path, the LABEL object in the RESV message contains IMPLICIT-NULL. If the INGRESS_PROTECTION object is not \"empty\", the backup ingress SHALL send the RESV message with the state indicating protection is available after the backup LSP(s) are successfully established.",
      "ja": "バックアップ入力は、プライマリ入力から受信したPATHメッセージに対するRESVメッセージで応答します。バックアップ入力がパスから外れている場合、RESVメッセージのLABELオブジェクトにはIMPLICIT-NULLが含まれます。 INGRESS_PROTECTIONオブジェクトが「空」でない場合、バックアップ入力は、バックアップLSPが正常に確立された後に保護が利用可能であることを示す状態でRESVメッセージを送信する必要があります（SHALL）。"
    },
    {
      "indent": 0,
      "text": "6.3.1.2. Proxy-Ingress Method",
      "section_title": true,
      "ja": "6.3.1.2. プロキシ入力方式"
    },
    {
      "indent": 0,
      "text": " When receiving a RESV message for an LSP from a router that is not primary ingress, the backup ingress collects the pair of (IPv4/IPv6 subobject, Label subobject) in the second place to the top pair in the RECORD_ROUTE object of the message. It determines the next hops to be merged according to the set of the pairs collected. If a Label-Routes subobject is included in the INGRESS_PROTECTION object, the included IPv4/IPv6 subobjects are used to filter the set down to the specific next hops where protection is desired. An RESV message MUST have been received before the backup ingress can create or select the appropriate backup LSP.",
      "ja": "プライマリ入力ではないルーターからLSPのRESVメッセージを受信すると、バックアップ入力は2番目のペア（IPv4 / IPv6サブオブジェクト、ラベルサブオブジェクト）のペアをメッセージのRECORD_ROUTEオブジェクトの最上位ペアに収集します。収集されたペアのセットに従って、マージされる次のホップを決定します。 Label-RoutesサブオブジェクトがINGRESS_PROTECTIONオブジェクトに含まれている場合、含まれているIPv4 / IPv6サブオブジェクトを使用して、保護が必要な特定のネクストホップまでセットをフィルタリングします。バックアップ入力が適切なバックアップLSPを作成または選択する前に、RESVメッセージを受信する必要があります。"
    },
    {
      "indent": 3,
      "text": "When the backup ingress receives a PATH message with the INGRESS_PROTECTION object, the backup ingress examines the object to learn what traffic associated with the LSP. The backup ingress forwards the PATH message to the ingress node with the normal RSVP changes.",
      "ja": "バックアップ入力がINGRESS_PROTECTIONオブジェクトを含むPATHメッセージを受信すると、バックアップ入力はオブジェクトを調べて、LSPに関連付けられているトラフィックを確認します。バックアップ入力は、通常のRSVP変更を伴うPATHメッセージを入力ノードに転送します。"
    },
    {
      "indent": 3,
      "text": "When the backup ingress receives a RESV message with the INGRESS_PROTECTION object, the backup ingress records an IMPLICIT-NULL label in the RRO. Then, the backup ingress forwards the RESV message to the ingress node, which is acting for the proxy ingress.",
      "ja": "バックアップ入力がINGRESS_PROTECTIONオブジェクトを含むRESVメッセージを受信すると、バックアップ入力はIMPLICIT-NULLラベルをRROに記録します。次に、バックアップ入力はRESVメッセージを、プロキシ入力として機能している入力ノードに転送します。"
    },
    {
      "indent": 0,
      "text": "6.3.2. Backup Ingress Behavior in the On-Path Case",
      "section_title": true,
      "ja": "6.3.2. オンパスの場合のバックアップ入力動作"
    },
    {
      "indent": 3,
      "text": "An LER as the backup ingress determines that it is on path if one of its addresses is a next hop of the primary ingress; for the Proxy-Ingress Method, the primary ingress is determined as not its next hop by checking the PATH message with the INGRESS_PROTECTION object received from the primary ingress. The LER on path MUST send the corresponding PATH messages without any INGRESS_PROTECTION object to its next hops. It creates a number of backup P2P LSPs or a backup P2MP LSP from itself to the other next hops (i.e., the next hops other than the backup ingress) of the primary ingress. The other next hops are from the Label-Routes subobject.",
      "ja": "バックアップ入力としてのLERは、そのアドレスの1つがプライマリ入力のネクストホップである場合、それがパス上にあると判断します。 Proxy-Ingressメソッドの場合、プライマリ入力は、プライマリ入力から受信したINGRESS_PROTECTIONオブジェクトを使用してPATHメッセージをチェックすることにより、ネクストホップではないと判断されます。パス上のLERは、INGRESS_PROTECTIONオブジェクトなしで対応するPATHメッセージを次のホップに送信する必要があります。それは、それ自体からプライマリ入力の他の次のホップ（つまり、バックアップ入力以外の次のホップ）へのバックアップP2P LSPまたはバックアップP2MP LSPの数を作成します。その他の次のホップは、Label-Routesサブオブジェクトからのものです。"
    },
    {
      "indent": 3,
      "text": "It also creates a forwarding entry, which sends/multicasts the traffic from the source to the next hops of the backup ingress along the protected LSP when the primary ingress fails. The traffic is described by the TRAFFIC_DESCRIPTOR.",
      "ja": "また、プライマリイングレスが失敗した場合に、保護されたLSPに沿ってソースからバックアップイングレスのネクストホップにトラフィックを送信/マルチキャストする転送エントリを作成します。トラフィックはTRAFFIC_DESCRIPTORによって記述されます。"
    },
    {
      "indent": 3,
      "text": "After setting up all the backup P2P LSPs or the backup P2MP LSP, the backup ingress creates forwarding entry(s) for importing the traffic into the backup LSP(s) from the source when the primary ingress fails. Then, it MUST send the primary ingress a RESV message with an INGRESS_PROTECTION object. The object contains the state of the local protection, such as having the \"local protection available\" flag set to one, which indicates that the primary ingress is locally protected.",
      "ja": "すべてのバックアップP2P LSPまたはバックアップP2MP LSPをセットアップした後、バックアップ入力は、プライマリ入力が失敗したときにソースからバックアップLSPにトラフィックをインポートするための転送エントリを作成します。次に、INGRESS_PROTECTIONオブジェクトを含むRESVメッセージをプライマリ入力に送信する必要があります。オブジェクトには、「ローカル保護使用可能」フラグが1に設定されているなど、ローカル保護の状態が含まれています。これは、プライマリ入力がローカルで保護されていることを示します。"
    },
    {
      "indent": 0,
      "text": " When the primary ingress fails, the backup ingress sends/multicasts the traffic from the source to its next hops along the protected LSP and imports the traffic into each of the backup P2P LSPs or to the backup P2MP LSP transmitting the traffic to the other next hops of the primary ingress, where the traffic is merged into a protected LSP.",
      "ja": "プライマリ入力が失敗すると、バックアップ入力はトラフィックを送信元から保護されたLSPに沿って次のホップに送信/マルチキャストし、トラフィックを各バックアップP2P LSPまたは他の次ホップにトラフィックを送信するバックアップP2MP LSPにインポートしますトラフィックが保護されたLSPにマージされるプライマリ入力の。"
    },
    {
      "indent": 3,
      "text": "During the local repair, the backup ingress MUST continue to send the PATH messages to its next hops as before and keep the PATH message with the INGRESS_PROTECTION object received from the primary ingress and the RESV message with the INGRESS_PROTECTION object to be sent to the primary ingress. It MUST set the \"local protection in use\" flag in the RESV message.",
      "ja": "ローカル修復中、バックアップ入力は、以前と同様にPATHメッセージを次のホップに送信し続け、プライマリ入力から受信したINGRESS_PROTECTIONオブジェクトを含むPATHメッセージと、プライマリ入力に送信されるINGRESS_PROTECTIONオブジェクトを含むRESVメッセージを保持する必要があります。 RESVメッセージで「使用中のローカル保護」フラグを設定する必要があります。"
    },
    {
      "indent": 0,
      "text": "6.3.3. Failure Detection and Refresh PATH Messages",
      "section_title": true,
      "ja": "6.3.3. 障害の検出とPATHメッセージの更新"
    },
    {
      "indent": 3,
      "text": "As described in [RFC4090], it is necessary to refresh the PATH messages via the backup LSP(s). The backup ingress MUST wait to refresh the PATH messages until it can accurately detect that the ingress node has failed. An example of such an accurate detection would be that the IGP has no bidirectional links to the ingress node, or a BFD session to the primary ingress' loopback address has failed and stayed failed after the network has reconverged.",
      "ja": "[RFC4090]で説明されているように、バックアップLSPを介してPATHメッセージを更新する必要があります。バックアップ入力は、入力ノードが失敗したことを正確に検出できるまで、PATHメッセージの更新を待機する必要があります。このような正確な検出の例としては、IGPに入力ノードへの双方向リンクがない、またはプライマリ入力のループバックアドレスへのBFDセッションが失敗し、ネットワークが再収束した後も失敗したままであることが挙げられます。"
    },
    {
      "indent": 3,
      "text": "As described in Section 6.4.3 of [RFC4090], the backup ingress, acting as PLR, MUST modify and send any saved PATH messages associated with the primary LSP to the corresponding next hops through backup LSP(s). Any PATH message sent will not contain any INGRESS_PROTECTION objects. The RSVP_HOP object in the message contains an IP source address belonging to the backup ingress. The SENDER_TEMPLATE object has the Backup Ingress Address as its tunnel sender address.",
      "ja": "[RFC4090]のセクション6.4.3で説明されているように、PLRとして機能するバックアップ入力は、プライマリLSPに関連付けられている保存済みのPATHメッセージを変更し、バックアップLSPを介して対応するネクストホップに送信する必要があります。送信されるPATHメッセージには、INGRESS_PROTECTIONオブジェクトは含まれません。メッセージ内のRSVP_HOPオブジェクトには、バックアップ入力に属するIP送信元アドレスが含まれています。 SENDER_TEMPLATEオブジェクトには、トンネル送信者アドレスとしてバックアップ入力アドレスがあります。"
    },
    {
      "indent": 0,
      "text": "6.4. Revertive Behavior",
      "section_title": true,
      "ja": "6.4. リバーティブ動作"
    },
    {
      "indent": 3,
      "text": "Upon a failure event in the (primary) ingress of a protected LSP, the protected LSP is locally repaired by the backup ingress. There are a couple of basic strategies for restoring the LSP to a full working path.",
      "ja": "保護されたLSPの（プライマリ）イングレスで障害イベントが発生すると、保護されたLSPはバックアップのイングレスによってローカルに修復されます。 LSPを完全な作業パスに復元するには、いくつかの基本的な戦略があります。"
    },
    {
      "indent": 3,
      "text": "o Revert to Primary Ingress: When the primary ingress is restored, it resignals each of the LSPs that start from the primary ingress. The traffic for every LSP successfully resignaled is switched back to the primary ingress from the backup ingress.",
      "ja": "o プライマリ入力に戻す：プライマリ入力が復元されると、プライマリ入力から始まる各LSPに再シグナリングします。正常に再シグナリングされたすべてのLSPのトラフィックは、バックアップ入力からプライマリ入力に戻されます。"
    },
    {
      "indent": 3,
      "text": "o Global Repair by Backup Ingress: After determining that the primary ingress of an LSP has failed, the backup ingress computes a new optimal path, signals a new LSP along the new path, and switches the traffic to the new LSP.",
      "ja": "o バックアップ入力によるグローバル修復：LSPのプライマリ入力が失敗したと判断した後、バックアップ入力は新しい最適パスを計算し、新しいパスに沿って新しいLSPに信号を送り、トラフィックを新しいLSPに切り替えます。"
    },
    {
      "indent": 0,
      "text": "6.4.1. Revert to Primary Ingress",
      "section_title": true,
      "ja": "6.4.1. プライマリ入力に戻す"
    },
    {
      "indent": 3,
      "text": "If \"Revert to Primary Ingress\" is desired for a protected LSP, the (primary) ingress of the LSP SHOULD resignal the LSP that starts from the primary ingress after the primary ingress restores. After the LSP is resignaled successfully, the traffic SHOULD be switched back to the primary ingress from the backup ingress on the source node and redirected into the LSP starting from the primary ingress.",
      "ja": "保護されたLSPに「Revert to Primary Ingress」が必要な場合、LSPの（プライマリ）イングレスは、プライマリイングレスが復元した後、プライマリイングレスから開始するLSPを再シグナリングする必要があります（SHOULD）。 LSPが正常に再シグナリングされた後、トラフィックは送信元ノードのバックアップ入力からプライマリ入力に切り替えられ、プライマリ入力からLSPにリダイレクトされる必要があります（SHOULD）。"
    },
    {
      "indent": 3,
      "text": "The primary ingress can specify the \"Revert to Ingress\" control option in the INGRESS_PROTECTION object in the PATH messages to the backup ingress. After receiving the \"Revert to Ingress\" control option, the backup ingress MUST stop sending/refreshing PATH messages for the protected LSP.",
      "ja": "プライマリ入力は、バックアップ入力へのPATHメッセージのINGRESS_PROTECTIONオブジェクトで「入力に戻す」制御オプションを指定できます。 「入力に戻す」制御オプションを受信した後、バックアップの入力は、保護されたLSPのPATHメッセージの送信/更新を停止する必要があります。"
    },
    {
      "indent": 0,
      "text": "6.4.2. Global Repair by Backup Ingress",
      "section_title": true,
      "ja": "6.4.2. バックアップ進入によるグローバル修復"
    },
    {
      "indent": 3,
      "text": "When the backup ingress has determined that the primary ingress of the protected LSP has failed (e.g., via the IGP), it can compute a new path and signal a new LSP along the new path so that it no longer relies upon local repair. To do this, the backup ingress MUST use the same tunnel sender address in the SENDER_TEMPLATE object and allocate an LSP ID different from the one of the old LSP as the LSP ID of the new LSP. This allows the new LSP to share resources with the old LSP. Alternately, the backup ingress can create a new LSP with no bandwidth reservation that duplicates the path(s) of the protected LSP, move traffic to the new LSP, delete the protected LSP, and then resignal the new LSP with bandwidth.",
      "ja": "保護されたLSPのプライマリ入力が失敗したと（例えば、IGPを介して）バックアップ入力が判断した場合、バックアップをローカルパスの修復に依存しないように、新しいパスを計算し、新しいパスに沿って新しいLSPに信号を送ることができます。これを行うには、バックアップ入力でSENDER_TEMPLATEオブジェクトの同じトンネル送信者アドレスを使用し、古いLSPとは異なるLSP IDを新しいLSPのLSP IDとして割り当てる必要があります。これにより、新しいLSPが古いLSPとリソースを共有できます。または、バックアップ入力は、保護されたLSPのパスを複製する帯域幅予約のない新しいLSPを作成し、トラフィックを新しいLSPに移動し、保護されたLSPを削除して、新しいLSPに帯域幅を再シグナリングできます。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "In principle, this document does not introduce new security issues. The security considerations pertaining to [RFC4090], [RFC4875], [RFC2205], and [RFC3209] remain relevant.",
      "ja": "原則として、このドキュメントでは新しいセキュリティの問題を紹介していません。 [RFC4090]、[RFC4875]、[RFC2205]、および[RFC3209]に関連するセキュリティの考慮事項は引き続き関連しています。"
    },
    {
      "indent": 0,
      "text": "8. Compatibility",
      "section_title": true,
      "ja": "8. 互換性"
    },
    {
      "indent": 3,
      "text": "This extension reuses and extends semantics and procedures defined in [RFC2205], [RFC3209], [RFC4090], and [RFC4875] to support ingress protection. The new object defined to indicate ingress protection has a Class Number of the form 0bbbbbbb. Per [RFC2205], a node not supporting this extension will not recognize the new Class Number and should respond with an \"Unknown Object Class\" error. The error message will propagate to the ingress, which can then take action to avoid the incompatible node as a backup ingress or may simply terminate the session.",
      "ja": "この拡張機能は、[RFC2205]、[RFC3209]、[RFC4090]、および[RFC4875]で定義されているセマンティクスと手順を再利用および拡張して、進入保護をサポートします。進入保護を示すために定義された新しいオブジェクトは、0bbbbbbbという形式のクラス番号を持っています。 [RFC2205]によると、この拡張機能をサポートしていないノードは新しいクラス番号を認識せず、「不明なオブジェクトクラス」エラーで応答するはずです。エラーメッセージは入力に伝播し、バックアップの入力として互換性のないノードを回避するためのアクションを実行したり、単にセッションを終了したりできます。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no IANA actions.",
      "ja": "このドキュメントにはIANAアクションはありません。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10. 参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC2205] Braden, R., Ed., Zhang, L., Berson, S., Herzog, S., and S. Jamin, \"Resource ReSerVation Protocol (RSVP) -- Version 1 Functional Specification\", RFC 2205, DOI 10.17487/RFC2205, September 1997, <https://www.rfc-editor.org/info/rfc2205>.",
      "ja": "[RFC2205] Braden、R.、Ed。、Zhang、L.、Berson、S.、Herzog、S。、およびS. Jamin、「Resource ReSerVation Protocol（RSVP）-Version 1 Functional Specification」、RFC 2205、DOI 10.17487 / RFC2205、1997年9月、<https://www.rfc-editor.org/info/rfc2205>。"
    },
    {
      "indent": 3,
      "text": "[RFC3209] Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V., and G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP Tunnels\", RFC 3209, DOI 10.17487/RFC3209, December 2001, <https://www.rfc-editor.org/info/rfc3209>.",
      "ja": "[RFC3209] Awduche、D.、Berger、L.、Gan、D.、Li、T.、Srinivasan、V。、およびG. Swallow、「RSVP-TE：Extensions for RSVP for LSP Tunnels」、RFC 3209、DOI 10.17487 / RFC3209、2001年12月、<https://www.rfc-editor.org/info/rfc3209>。"
    },
    {
      "indent": 3,
      "text": "[RFC3936] Kompella, K. and J. Lang, \"Procedures for Modifying the Resource reSerVation Protocol (RSVP)\", BCP 96, RFC 3936, DOI 10.17487/RFC3936, October 2004, <https://www.rfc-editor.org/info/rfc3936>.",
      "ja": "[RFC3936] Kompella、K。およびJ. Lang、「Resource reSerVation Protocol（RSVP）を変更するための手順」、BCP 96、RFC 3936、DOI 10.17487 / RFC3936、2004年10月、<https：//www.rfc-editor。 org / info / rfc3936>。"
    },
    {
      "indent": 3,
      "text": "[RFC4090] Pan, P., Ed., Swallow, G., Ed., and A. Atlas, Ed., \"Fast Reroute Extensions to RSVP-TE for LSP Tunnels\", RFC 4090, DOI 10.17487/RFC4090, May 2005, <https://www.rfc-editor.org/info/rfc4090>.",
      "ja": "[RFC4090] Pan、P。、編、Swallow、G。、編、A。Atlas、編、「LSPトンネル用のRSVP-TEへの高速リルート拡張」、RFC 4090、DOI 10.17487 / RFC4090、2005年5月、<https://www.rfc-editor.org/info/rfc4090>。"
    },
    {
      "indent": 3,
      "text": "[RFC4875] Aggarwal, R., Ed., Papadimitriou, D., Ed., and S. Yasukawa, Ed., \"Extensions to Resource Reservation Protocol - Traffic Engineering (RSVP-TE) for Point-to-Multipoint TE Label Switched Paths (LSPs)\", RFC 4875, DOI 10.17487/RFC4875, May 2007, <https://www.rfc-editor.org/info/rfc4875>.",
      "ja": "[RFC4875] Aggarwal、R.、Ed。、Papadimitriou、D.、Ed。、and S. Yasukawa、Ed。、 \"Extensions to Resource Reservation Protocol-Traffic Engineering（RSVP-TE）for Point-to-Multipoint TE Label Switchedパス（LSP）」、RFC 4875、DOI 10.17487 / RFC4875、2007年5月、<https://www.rfc-editor.org/info/rfc4875>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B。、「RFC 2119キーワードの大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC6378] Weingarten, Y., Ed., Bryant, S., Osborne, E., Sprecher, N., and A. Fulignoli, Ed., \"MPLS Transport Profile (MPLS-TP) Linear Protection\", RFC 6378, DOI 10.17487/RFC6378, October 2011, <https://www.rfc-editor.org/info/rfc6378>.",
      "ja": "[RFC6378] Weingarten、Y。、編、Bryant、S.、Osborne、E.、Sprecher、N。、およびA. Fulignoli、編、「MPLS Transport Profile（MPLS-TP）Linear Protection」、RFC 6378、 DOI 10.17487 / RFC6378、2011年10月、<https://www.rfc-editor.org/info/rfc6378>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Nobo Akiya, Rahul Aggarwal, Eric Osborne, Ross Callon, Loa Andersson, Daniel King, Michael Yue, Alia Atlas, Olufemi Komolafe, Rob Rennison, Neil Harrison, Kannan Sampath, Gregory Mirsky, and Ronhazli Adam for their valuable comments and suggestions on this document.",
      "ja": "著者は、Nobo Akiya、Rahul Aggarwal、Eric Osborne、Ros Andonson、Loa Andersson、Daniel King、Michael Yue、Alia Atlas、Olufemi Komolafe、Rob Rennison、Neil Harrison、Kannan Sampath、Gregory Mirsky、およびRonhazli Adamに感謝します。このドキュメントに関する貴重なコメントと提案。"
    },
    {
      "indent": 0,
      "text": "Contributors",
      "ja": "貢献者"
    },
    {
      "indent": 3,
      "text": "The following people contributed significantly to the content of this document and should be considered coauthors:",
      "ja": "次の人々はこの文書の内容に大きく貢献し、共著者と見なされるべきです："
    },
    {
      "indent": 12,
      "text": "Autumn Liu Ciena United States of America Email: hliu@ciena.com",
      "ja": "Autumn Liu Cienaアメリカ合衆国メール：hliu@ciena.com"
    },
    {
      "indent": 12,
      "text": "Zhenbin Li Huawei Technologies Email: zhenbin.li@huawei.com",
      "ja": "Zは非常にビンですl IH UAはテクノロジーメールです：Zhen Bin。Li@Huawei.com"
    },
    {
      "indent": 12,
      "text": "Yimin Shen Juniper Networks 10 Technology Park Drive Westford, MA 01886 United States of America Email: yshen@juniper.net",
      "ja": "Yimin Shen Juniper Networks 10 Technology Park Drive Westford、MA 01886アメリカ合衆国メール：yshen@juniper.net"
    },
    {
      "indent": 12,
      "text": "Tarek Saad Cisco Systems Email: tsaad@cisco.com",
      "ja": "Saad Cisco Systemsのメールを追跡：tussaudsisco.com"
    },
    {
      "indent": 12,
      "text": "Fengman Xu Verizon 2400 N. Glenville Dr Richardson, TX 75082 United States of America Email: fengman.xu@verizon.com",
      "ja": "Fengman Xu Verizon 2400 N. Glenville Dr Richardson、TX 75082アメリカメール：fengman.xu@verizon.com"
    },
    {
      "indent": 3,
      "text": "The following people also contributed to the content of this document:",
      "ja": "次の人々もこのドキュメントの内容に貢献しました："
    },
    {
      "indent": 11,
      "text": "Ning So Tata Communications 2613 Fairbourne Cir. Plano, TX 75082 United States of America Email: ningso01@gmail.com",
      "ja": "Ning So Tata Communications 2613フェアボーンサー​​。 Plano、TX 75082アメリカ合衆国メール：ningso01@gmail.com"
    },
    {
      "indent": 11,
      "text": "Mehmet Toy Verizon United States of America Email: mehmet.toy@verizon.com",
      "ja": "Mehmet Toy Verizonアメリカ合衆国メール：mehmet.toy@verizon.com"
    },
    {
      "indent": 11,
      "text": "Lei Liu United States of America Email: liulei.kddi@gmail.com",
      "ja": "Lei Liuアメリカ合衆国メール：liulei.kddi@gmail.com"
    },
    {
      "indent": 11,
      "text": "Renwei Li Huawei Technologies 2330 Central Expressway Santa Clara, CA 95050 United States of America Email: renwei.li@huawei.com",
      "ja": "Re n is l IH UAはテクノロジー2330中央高速道路Santa Clara、CA 95050アメリカ合衆国メール：think。Lee @华华.com"
    },
    {
      "indent": 11,
      "text": "Quintin Zhao Huawei Technologies Boston, MA United States of America Email: quintin.zhao@huawei.com",
      "ja": "Quintin Zhao Huawei Technologiesボストン、マサチューセッツアメリカ合衆国メール：quintin.zhao@huawei.com"
    },
    {
      "indent": 11,
      "text": "Boris Zhang Telus Communications 200 Consilium Pl Floor 15 Toronto, ON M1H 3J3 Canada Email: Boris.Zhang@telus.com",
      "ja": "Boris Zhang Telus Communications 200 Consilium Pl Floor 15トロント、ON M1H 3J3 Canadaメール：Boris.Zhang@telus.com"
    },
    {
      "indent": 11,
      "text": "Markus Jork Juniper Networks 10 Technology Park Drive Westford, MA 01886 United States of America Email: mjork@juniper.net",
      "ja": "Markus Jork Juniper Networks 10 Technology Park Drive Westford、MA 01886アメリカ合衆国メール：mjork@juniper.net"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Huaimo Chen (editor) Huawei Technologies Boston, MA United States of America",
      "ja": "ふあいも ちぇん （えぢとｒ） ふあうぇい てｃｈのぉぎえｓ ぼｓとん、 ま うにてｄ Ｓたてｓ おｆ あめりか"
    },
    {
      "indent": 3,
      "text": "Email: huaimo.chen@huawei.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Raveendra Torvi (editor) Juniper Networks 10 Technology Park Drive Westford, MA 01886 United States of America",
      "ja": "Raveendra Torvi（編集者）Juniper Networks 10 Technology Park Drive Westford、MA 01886アメリカ合衆国"
    },
    {
      "indent": 3,
      "text": "Email: rtorvi@juniper.net",
      "raw": true,
      "ja": ""
    }
  ]
}