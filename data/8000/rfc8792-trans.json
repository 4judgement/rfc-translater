{
  "title": {
    "text": "RFC 8792 - Handling Long Lines in Content of Internet-Drafts and RFCs",
    "ja": "RFC 8792 - インターネットドラフトおよびRFCのコンテンツの長い行の処理"
  },
  "number": 8792,
  "created_at": "2020-07-12 18:49:57.723538+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         K. Watsen\nRequest for Comments: 8792                               Watsen Networks\nCategory: Informational                                     E. Auerswald\nISSN: 2070-1721                                   Individual Contributor\n                                                               A. Farrel\n                                                      Old Dog Consulting\n                                                                   Q. Wu\n                                                     Huawei Technologies\n                                                               June 2020",
      "raw": true
    },
    {
      "indent": 7,
      "text": "Handling Long Lines in Content of Internet-Drafts and RFCs",
      "ja": "インターネットドラフトおよびRFCのコンテンツの長い行の処理"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the \"single backslash\" strategy, is based on the historical use of a single backslash ('\\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the \"double backslash\" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.",
      "ja": "このドキュメントでは、幅が制限されたテキストコンテンツで長い行を処理するための2つの戦略を定義しています。 \"単一のバックスラッシュ\"戦略と呼ばれる1つの戦略は、単一のバックスラッシュ（ '\\'）文字の歴史的な使用に基づいており、行の折りたたみが発生した場所を示し、継続はスペース文字ではない最初の文字で発生します。 （ ''）次の行に。 2番目の戦略は「ダブルバックスラッシュ」戦略と呼ばれ、2番目のバックスラッシュ文字を追加して最初の戦略を拡張し、継続が始まる場所を識別します。これにより、最初の戦略でサポートされないケースを処理できます。 どちらの方法でも、元のコンテンツの自動再構成を可能にする自己記述型ヘッダーを使用します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントはInternet Standards Trackの仕様ではありません。 情報提供を目的として公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are candidates for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。 これは、IETFコミュニティのコンセンサスを表しています。 これは公開レビューを受けており、Internet Engineering Steering Group（IESG）による公開が承認されています。 IESGによって承認されたすべてのドキュメントが、あらゆるレベルのインターネット標準の候補であるとは限りません。 RFC 7841のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8792.",
      "ja": "このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、https：//www.rfc-editor.org/info/rfc8792で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2020 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（c）2020 IETFトラストおよび文書の作成者として識別された人物。 全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です。 これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。 このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction 2. Applicability Statement 3. Requirements Language 4. Goals 4.1. Automated Folding of Long Lines in Text Content 4.2. Automated Reconstitution of the Original Text Content 5. Limitations 5.1. Not Recommended for Graphical Artwork 5.2. Doesn't Work as Well as Format-Specific Options 6. Two Folding Strategies 6.1. Comparison 6.2. Recommendation 7. The Single Backslash Strategy ('\\') 7.1. Folded Structure 7.1.1. Header 7.1.2. Body 7.2. Algorithm 7.2.1. Folding 7.2.2. Unfolding 8. The Double Backslash Strategy ('\\\\') 8.1. Folded Structure 8.1.1. Header 8.1.2. Body 8.2. Algorithm 8.2.1. Folding 8.2.2. Unfolding 9. Examples 9.1. Example Showing Boundary Conditions 9.1.1. Using '\\' 9.1.2. Using '\\\\' 9.2. Example Showing Multiple Wraps of a Single Line 9.2.1. Using '\\' 9.2.2. Using '\\\\' 9.3. Example Showing \"Smart\" Folding 9.3.1. Using '\\' 9.3.2. Using '\\\\' 9.4. Example Showing \"Forced\" Folding 9.4.1. Using '\\' 9.4.2. Using '\\\\' 10. Security Considerations 11. IANA Considerations 12. References 12.1. Normative References 12.2. Informative References Appendix A. Bash Shell Script: rfcfold Acknowledgements Authors' Addresses",
      "ja": "1. はじめに2.適用性ステートメント3.要件言語4.目標4.1。テキストコンテンツでの長い行の自動折り畳み4.2。元のテキストコンテンツの自動再構成5.制限事項5.1。グラフィカルアートワーク5.2には推奨されません。形式固有のオプションと同様に機能しません6. 2つの折りたたみ戦略6.1。比較6.2。推奨7.単一のバックスラッシュ戦略（ '\\'）7.1。折りたたみ構造7.1.1。ヘッダー7.1.2。ボディ7.2。アルゴリズム7.2.1。折りたたみ7.2.2。展開8.ダブルバックスラッシュ戦略（ '\\\\'）8.1。折りたたみ構造8.1.1。ヘッダー8.1.2。ボディ8.2。アルゴリズム8.2.1。折りたたみ8.2.2。展開9.例9.1。境界条件を示す例9.1.1。 '\\'を使用する9.1.2。 '\\\\'の使用9.2。単一行の複数の折り返しを示す例9.2.1。 '\\'の使用9.2.2。 '\\\\'の使用9.3。 「スマート」フォールディングを示す例9.3.1。 '\\'を使用する9.3.2。 '\\\\'の使用9.4。 「強制」フォールディングを示す例9.4.1。 '\\'の使用9.4.2。 '\\\\'の使用10.セキュリティに関する考慮事項11. IANAに関する考慮事項12.参考資料12.1規範的な参照12.2。参考資料付録A. Bashシェルスクリプト：rfcfold謝辞作者のアドレス"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "[RFC7994] sets out the requirements for plain-text RFCs and states that each line of an RFC (and hence of an Internet-Draft) must be limited to 72 characters followed by the character sequence that denotes an end-of-line (EOL).",
      "ja": "[RFC7994]は、プレーンテキストRFCの要件を示し、RFC（したがって、インターネットドラフト）の各行は72文字に制限され、その後に行末（EOL）を示す文字シーケンスが続く必要があると述べています。 ）。"
    },
    {
      "indent": 3,
      "text": "Internet-Drafts and RFCs often include example text or code fragments. Many times, the example text or code exceeds the 72-character line-length limit. The 'xml2rfc' utility [xml2rfc], at the time of this document's publication, does not attempt to wrap the content of such inclusions, simply issuing a warning whenever lines exceed 69 characters. Historically, there has been no convention recommended by the RFC Editor in place for how to handle long lines in such inclusions, other than advising authors to clearly indicate what manipulation has occurred.",
      "ja": "多くの場合、インターネットドラフトとRFCには、サンプルテキストまたはコードフラグメントが含まれています。 多くの場合、サンプルのテキストまたはコードは、72文字の行の長さ制限を超えています。 このドキュメントの公開時点での「xml2rfc」ユーティリティ[xml2rfc]は、そのようなインクルードのコンテンツをラップしようとせず、行が69文字を超えると警告を発するだけです。 歴史的に、どのような操作が行われたかを著者に明確に示すように著者に助言することを除いて、そのようなインクルージョンで長い行を処理する方法について、RFCエディターが推奨する慣例はありませんでした。"
    },
    {
      "indent": 3,
      "text": "This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the \"single backslash\" strategy, is based on the historical use of a single backslash ('\\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the \"double backslash\" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.",
      "ja": "このドキュメントでは、幅が制限されたテキストコンテンツで長い行を処理するための2つの戦略を定義しています。 \"単一のバックスラッシュ\"戦略と呼ばれる1つの戦略は、単一のバックスラッシュ（ '\\'）文字の歴史的な使用に基づいており、行の折りたたみが発生した場所を示し、継続はスペース文字ではない最初の文字で発生します。 （ ''）次の行に。 2番目の戦略は「ダブルバックスラッシュ」戦略と呼ばれ、2番目のバックスラッシュ文字を追加して最初の戦略を拡張し、継続が始まる場所を識別します。これにより、最初の戦略でサポートされないケースを処理できます。 どちらの方法でも、元のコンテンツの自動再構成を可能にする自己記述型ヘッダーを使用します。"
    },
    {
      "indent": 3,
      "text": "The strategies defined in this document work on any text content but are primarily intended for a structured sequence of lines, such as would be referenced by the <sourcecode> element defined in Section 2.48 of [RFC7991], rather than for two-dimensional imagery, such as would be referenced by the <artwork> element defined in Section 2.5 of [RFC7991].",
      "ja": "このドキュメントで定義されている戦略はあらゆるテキストコンテンツで機能しますが、主に、2次元画像ではなく、[RFC7991]のセクション2.48で定義されている<sourcecode>要素によって参照されるような、構造化された一連の行を対象としています。 [RFC7991]のセクション2.5で定義された<artwork>要素によって参照されるものなど。"
    },
    {
      "indent": 3,
      "text": "Note that text files are represented as lines having their first character in column 1, and a line length of N where the last character is in the Nth column and is immediately followed by an end-of-line character sequence.",
      "ja": "テキストファイルは、列1に最初の文字があり、行の長さがNで、最後の文字がN番目の列にあり、直後に行末文字シーケンスが続く行として表されることに注意してください。"
    },
    {
      "indent": 0,
      "text": "2. Applicability Statement",
      "section_title": true,
      "ja": "2. 適用性ステートメント"
    },
    {
      "indent": 3,
      "text": "The formats and algorithms defined in this document may be used in any context, whether for IETF documents or in other situations where structured folding is desired.",
      "ja": "このドキュメントで定義されているフォーマットとアルゴリズムは、IETFドキュメントの場合でも、構造化された折りたたみが必要な他の状況でも、どのような状況でも使用できます。"
    },
    {
      "indent": 3,
      "text": "Within the IETF, this work primarily targets the xml2rfc v3 <sourcecode> element (Section 2.48 of [RFC7991]) and the xml2rfc v2 <artwork> element (Section 2.5 of [RFC7749]), which, for lack of a better option, is used in xml2rfc v2 for both source code and artwork. This work may also be used for the xml2rfc v3 <artwork> element (Section 2.5 of [RFC7991]), but as described in Section 5.1, it is generally not recommended.",
      "ja": "IETF内では、この作業は主にxml2rfc v3 <sourcecode>要素（[RFC7991]のセクション2.48）およびxml2rfc v2 <artwork>要素（[RFC7749]のセクション2.5））を対象としています。 ソースコードとアートワークの両方でxml2rfc v2で使用されます。 この作品はxml2rfc v3 <artwork>要素（[RFC7991]のセクション2.5）にも使用できますが、セクション5.1で説明されているように、一般的には推奨されません。"
    },
    {
      "indent": 0,
      "text": "3. Requirements Language",
      "section_title": true,
      "ja": "3. 要件言語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 0,
      "text": "4. Goals",
      "section_title": true,
      "ja": "4. ゴール"
    },
    {
      "indent": 0,
      "text": "4.1. Automated Folding of Long Lines in Text Content",
      "section_title": true,
      "ja": "4.1. テキストコンテンツの長い行の自動折りたたみ"
    },
    {
      "indent": 3,
      "text": "Automated folding of long lines is needed in order to support documents that are dynamically compiled to include content with potentially unconstrained line lengths. For instance, the build process may wish to include content from other local files or content that is dynamically generated by some external process. Both of these cases are discussed next.",
      "ja": "潜在的に制約のない行の長さを持つコンテンツを含めるように動的にコンパイルされるドキュメントをサポートするには、長い行の自動折りたたみが必要です。 たとえば、ビルドプロセスでは、他のローカルファイルのコンテンツや、外部プロセスによって動的に生成されたコンテンツを含めることができます。 これらのケースの両方について次に説明します。"
    },
    {
      "indent": 3,
      "text": "Many documents need to include the content from local files (e.g., XML, JSON, ABNF, ASN.1). Prior to including a file's content, the build process SHOULD first validate these source files using format-specific validators. In order for such tooling to be able to process the files, the files must be in their original/natural state, which may entail them having some long lines. Thus, these source files need to be folded before inclusion into the XML document, in order to satisfy 'xml2rfc' line-length limits.",
      "ja": "多くのドキュメントには、ローカルファイル（XML、JSON、ABNF、ASN.1など）のコンテンツを含める必要があります。 ビルドプロセスは、ファイルのコンテンツを含める前に、まずフォーマット固有のバリデーターを使用してこれらのソースファイルを検証する必要があります。 このようなツールがファイルを処理できるようにするには、ファイルが元の自然な状態である必要があり、長い行が必要になる場合があります。 したがって、これらのソースファイルは、「xml2rfc」の行の長さ制限を満たすために、XMLドキュメントに含める前に折りたたむ必要があります。"
    },
    {
      "indent": 3,
      "text": "Similarly, documents sometimes contain dynamically generated output, typically from an external process operating on the same source files discussed in the previous paragraph. For instance, such processes may translate the input format to another format, or they may render a report on, or a view of, the input file. In some cases, the dynamically generated output may contain lines exceeding the 'xml2rfc' line-length limits.",
      "ja": "同様に、ドキュメントには、動的に生成された出力が含まれる場合があります。通常、前の段落で説明した同じソースファイルで動作する外部プロセスからの出力です。 たとえば、このようなプロセスは、入力形式を別の形式に変換したり、入力ファイルに関するレポートやビューを表示したりする場合があります。 場合によっては、動的に生成された出力に、「xml2rfc」の行の長さの制限を超える行が含まれることがあります。"
    },
    {
      "indent": 3,
      "text": "In both cases, folding is required and SHOULD be automated to reduce effort and errors resulting from manual processing.",
      "ja": "どちらの場合も、折りたたみが必要であり、手動処理による労力とエラーを減らすために自動化する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.2. Automated Reconstitution of the Original Text Content",
      "section_title": true,
      "ja": "4.2. 元のテキストコンテンツの自動再構成"
    },
    {
      "indent": 3,
      "text": "Automated reconstitution of the exact original text content is needed to support validation of text-based content extracted from documents.",
      "ja": "ドキュメントから抽出されたテキストベースのコンテンツの検証をサポートするには、正確な元のテキストコンテンツの自動再構成が必要です。"
    },
    {
      "indent": 3,
      "text": "For instance, YANG modules [RFC7950] are already extracted from Internet-Drafts and validated as part of the submission process. Additionally, the desire to validate instance examples (i.e., XML/ JSON documents) contained within Internet-Drafts has been discussed [yang-doctors-thread].",
      "ja": "たとえば、YANGモジュール[RFC7950]は、インターネットドラフトから既に抽出され、送信プロセスの一部として検証されています。 さらに、Internet-Draftsに含まれているインスタンスの例（つまり、XML / JSONドキュメント）を検証したいという要望が議論されています[yang-doctors-thread]。"
    },
    {
      "indent": 0,
      "text": "5. Limitations",
      "section_title": true,
      "ja": "5. 制限事項"
    },
    {
      "indent": 0,
      "text": "5.1. Not Recommended for Graphical Artwork",
      "section_title": true,
      "ja": "5.1. グラフィカルなアートワークには推奨されません"
    },
    {
      "indent": 3,
      "text": "While the solution presented in this document works on any kind of text-based content, it is most useful on content that represents source code (XML, JSON, etc.) or, more generally, on content that has not been laid out in two dimensions (e.g., diagrams).",
      "ja": "このドキュメントで紹介するソリューションは、あらゆる種類のテキストベースのコンテンツで機能しますが、ソースコード（XML、JSONなど）を表すコンテンツ、またはより一般的には、2つにレイアウトされていないコンテンツで最も役立ちます。 寸法（図など）。"
    },
    {
      "indent": 3,
      "text": "Fundamentally, the issue is whether the text content remains readable once folded. Text content that is unpredictable is especially susceptible to looking bad when folded; falling into this category are most Unified Modeling Language (UML) diagrams, YANG tree diagrams, and ASCII art in general.",
      "ja": "基本的に、問題はテキストのコンテンツが折りたたまれても読みやすいかどうかです。 予測できないテキストコンテンツは、折りたたむと見栄えが悪くなります。 このカテゴリに分類されるのは、ほとんどの統一モデリング言語（UML）図、YANGツリー図、および一般的なASCIIアートです。"
    },
    {
      "indent": 3,
      "text": "It is NOT RECOMMENDED to use the solution presented in this document on graphical artwork.",
      "ja": "このドキュメントで提示されているソリューションをグラフィックアートワークで使用することはお勧めしません。"
    },
    {
      "indent": 0,
      "text": "5.2. Doesn't Work as Well as Format-Specific Options",
      "section_title": true,
      "ja": "5.2. 形式固有のオプションと同様に機能しない"
    },
    {
      "indent": 3,
      "text": "The solution presented in this document works generically for all text-based content, as it only views content as plain text. However, various formats sometimes have built-in mechanisms that are better suited to prevent long lines.",
      "ja": "このドキュメントで紹介するソリューションは、コンテンツをプレーンテキストとして表示するだけなので、すべてのテキストベースのコンテンツに対して一般的に機能します。 ただし、さまざまなフォーマットには、長い行を防ぐのに適したメカニズムが組み込まれている場合があります。"
    },
    {
      "indent": 3,
      "text": "For instance, both the 'pyang' and 'yanglint' utilities [pyang] [yanglint] have the command-line option \"tree-line-length\", which can be used to indicate a desired maximum line length when generating YANG tree diagrams [RFC8340].",
      "ja": "たとえば、「pyang」と「yanglint」の両方のユーティリティ[pyang] [yanglint]には、コマンドラインオプション「tree-line-length」があります。これは、YANGツリー図を生成するときに、目的の最大ライン長を示すために使用できます。 RFC8340]。"
    },
    {
      "indent": 3,
      "text": "In another example, some source formats (e.g., YANG [RFC7950]) allow any quoted string to be broken up into substrings separated by a concatenation character (e.g., '+'), any of which can be on a different line.",
      "ja": "別の例では、いくつかのソース形式（たとえば、YANG [RFC7950]）では、引用符で囲まれた文字列を、連結文字（たとえば、「+」）で区切られた部分文字列に分割できます。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that authors do as much as possible within the selected format to avoid long lines.",
      "ja": "長い行を避けるために、作成者は選択した形式内でできるだけ多くのことを行うことをお勧めします。"
    },
    {
      "indent": 0,
      "text": "6. Two Folding Strategies",
      "section_title": true,
      "ja": "6. 2つの折りたたみ戦略"
    },
    {
      "indent": 3,
      "text": "This document defines two nearly identical strategies for folding text-based content.",
      "ja": "このドキュメントでは、テキストベースのコンテンツを折りたたむためのほぼ同じ2つの戦略を定義しています。"
    },
    {
      "indent": 3,
      "text": "The Single Backslash Strategy ('\\'): Uses a backslash ('\\') character at the end of the line where folding occurs, and assumes that the continuation begins at the first character that is not a space character (' ') on the following line.",
      "ja": "単一のバックスラッシュ戦略（ '\\'）：折り返しが発生する行の終わりにバックスラッシュ（ '\\'）文字を使用し、スペース文字（ ''）ではない最初の文字から継続が始まると想定します 次の行。"
    },
    {
      "indent": 3,
      "text": "The Double Backslash Strategy ('\\\\'): Uses a backslash ('\\') character at the end of the line where folding occurs, and assumes that the continuation begins after a second backslash ('\\') character on the following line.",
      "ja": "二重バックスラッシュ戦略（ '\\\\'）：折り返しが発生する行の終わりにバックスラッシュ（ '\\'）文字を使用し、継続が次の行の2番目のバックスラッシュ（ '\\'）文字の後に始まると想定します 。"
    },
    {
      "indent": 0,
      "text": "6.1. Comparison",
      "section_title": true,
      "ja": "6.1. 比較"
    },
    {
      "indent": 3,
      "text": "The first strategy produces output that is more readable. However, (1) it is significantly more likely to encounter unfoldable input (e.g., a long line containing only space characters), and (2) for long lines that can be folded, automation implementations may encounter scenarios that, without special care, will produce errors.",
      "ja": "最初の戦略は、より読みやすい出力を生成します。 ただし、（1）展開できない入力（スペース文字のみを含む長い行など）に遭遇する可能性が大幅に高くなります。（2）折りたたみ可能な長い行の場合、自動化の実装では、特別な注意なしに、 エラーが発生します。"
    },
    {
      "indent": 3,
      "text": "The second strategy produces output that is less readable, but it is unlikely to encounter unfoldable input, there are no long lines that cannot be folded, and no special care is required when folding a long line.",
      "ja": "2番目の方法では、読みにくくなる出力が生成されますが、展開できない入力に遭遇する可能性は低く、折りたたむことができない長い行はなく、長い行を折りたたむときに特別な注意は必要ありません。"
    },
    {
      "indent": 0,
      "text": "6.2. Recommendation",
      "section_title": true,
      "ja": "6.2. 勧告"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that implementations first attempt to fold content using the single backslash strategy and, only in the unlikely event that it cannot fold the input or the folding logic is unable to cope with a contingency occurring on the desired folding column, then fall back to the double backslash strategy.",
      "ja": "実装は、最初に単一のバックスラッシュ戦略を使用してコンテンツを折りたたむことを試み、入力を折りたたむことができない、または折りたたみロジックが目的の折りたたみ列で発生する偶発事象に対処できない場合にのみフォールバックすることをお勧めします。 ダブルバックスラッシュ戦略。"
    },
    {
      "indent": 0,
      "text": "7. The Single Backslash Strategy ('\\')",
      "section_title": true,
      "ja": "7. 単一のバックスラッシュ戦略（ '\\'）"
    },
    {
      "indent": 0,
      "text": "7.1. Folded Structure",
      "section_title": true,
      "ja": "7.1. 折りたたみ構造"
    },
    {
      "indent": 3,
      "text": "Text content that has been folded as specified by this strategy MUST adhere to the following structure.",
      "ja": "この戦略で指定されたとおりに折りたたまれたテキストコンテンツは、次の構造に準拠している必要があります。"
    },
    {
      "indent": 0,
      "text": "7.1.1. Header",
      "section_title": true,
      "ja": "7.1.1. ヘッダ"
    },
    {
      "indent": 3,
      "text": "The header is two lines long.",
      "ja": "ヘッダーは2行です。"
    },
    {
      "indent": 3,
      "text": "The first line is the following 36-character string; this string MAY be surrounded by any number of printable characters. This first line cannot itself be folded.",
      "ja": "最初の行は、次の36文字の文字列です。 この文字列は、任意の数の印刷可能な文字で囲まれる場合があります。 この最初の行自体を折り返すことはできません。"
    },
    {
      "indent": 3,
      "text": "NOTE: '\\' line wrapping per RFC 8792",
      "ja": "注：RFC 8792に基づく '\\'行の折り返し"
    },
    {
      "indent": 3,
      "text": "The second line is an empty line, containing only the end-of-line character sequence. This line provides visual separation for readability.",
      "ja": "2行目は空行で、行末文字シーケンスのみが含まれています。 この線は、読みやすくするために視覚的に分離されています。"
    },
    {
      "indent": 0,
      "text": "7.1.2. Body",
      "section_title": true,
      "ja": "7.1.2. 体"
    },
    {
      "indent": 3,
      "text": "The character encoding is the same as the encoding described in Section 2 of [RFC7994], except that, per [RFC7991], tab characters are prohibited.",
      "ja": "文字エンコードは[RFC7994]のセクション2で説明されているエンコードと同じですが、[RFC7991]に従ってタブ文字が禁止されている点が異なります。"
    },
    {
      "indent": 3,
      "text": "Lines that have a backslash ('\\') occurring as the last character in a line are considered \"folded\".",
      "ja": "行の最後の文字としてバックスラッシュ（ '\\'）が含まれている行は、「折りたたまれている」と見なされます。"
    },
    {
      "indent": 3,
      "text": "Exceptionally long lines MAY be folded multiple times.",
      "ja": "非常に長い行は、複数回折りたたむことができます。"
    },
    {
      "indent": 0,
      "text": "7.2. Algorithm",
      "section_title": true,
      "ja": "7.2. アルゴリズム"
    },
    {
      "indent": 3,
      "text": "This section describes a process for folding and unfolding long lines when they are encountered in text content.",
      "ja": "このセクションでは、テキストコンテンツで長い行が検出された場合に、長い行を折りたたんだり展開したりするプロセスについて説明します。"
    },
    {
      "indent": 3,
      "text": "The steps are complete, but implementations MAY achieve the same result in other ways.",
      "ja": "手順は完了していますが、実装は他の方法でも同じ結果を達成できます（MAY）。"
    },
    {
      "indent": 3,
      "text": "When a larger document contains multiple instances of text content that may need to be folded or unfolded, another process must insert/extract the individual text content instances to/from the larger document prior to utilizing the algorithms described in this section. For example, the 'xiax' utility [xiax] does this.",
      "ja": "大きなドキュメントに折りたたんだり展開したりする必要があるテキストコンテンツの複数のインスタンスが含まれている場合、このセクションで説明するアルゴリズムを利用する前に、別のプロセスで個々のテキストコンテンツインスタンスを大きなドキュメントに挿入または抽出する必要があります。 たとえば、「xiax」ユーティリティ[xiax]がこれを行います。"
    },
    {
      "indent": 0,
      "text": "7.2.1. Folding",
      "section_title": true,
      "ja": "7.2.1. 折りたたみ"
    },
    {
      "indent": 3,
      "text": "Determine the desired maximum line length from input to the line-wrapping process, such as from a command-line parameter. If no value is explicitly specified, the value \"69\" SHOULD be used.",
      "ja": "コマンド行パラメーターなどから、入力から行折り返しプロセスまでの望ましい最大行長を決定します。 値が明示的に指定されていない場合は、値 \"69\"を使用する必要があります（SHOULD）。"
    },
    {
      "indent": 3,
      "text": "Ensure that the desired maximum line length is not less than the minimum header, which is 36 characters. If the desired maximum line length is less than this minimum, exit (this text-based content cannot be folded).",
      "ja": "必要な最大行長が最小ヘッダー（36文字）を下回らないようにしてください。 必要な最大行長がこの最小値より短い場合は、終了します（このテキストベースのコンテンツは折りたたむことができません）。"
    },
    {
      "indent": 3,
      "text": "Scan the text content for horizontal tab characters. If any horizontal tab characters appear, either resolve them to space characters or exit, forcing the input provider to convert them to space characters themselves first.",
      "ja": "水平タブ文字のテキストコンテンツをスキャンします。 水平タブ文字が表示された場合は、それらをスペース文字に解決するか終了して、入力プロバイダーに最初にスペース文字自体を変換させる。"
    },
    {
      "indent": 3,
      "text": "Scan the text content to ensure that at least one line exceeds the desired maximum. If no line exceeds the desired maximum, exit (this text content does not need to be folded).",
      "ja": "テキストコンテンツをスキャンして、少なくとも1行が目的の最大値を超えていることを確認します。 希望する最大値を超える行がない場合は、終了します（このテキストコンテンツを折りたたむ必要はありません）。"
    },
    {
      "indent": 3,
      "text": "Scan the text content to ensure that no existing lines already end with a backslash ('\\') character, as this could lead to an ambiguous result. If such a line is found, and its width is less than the desired maximum, then it SHOULD be flagged for \"forced\" folding (folding even though unnecessary). If the folding implementation doesn't support forced foldings, it MUST exit.",
      "ja": "テキストコンテンツをスキャンして、既存の行がバックスラッシュ（ '\\'）文字で終わっていないことを確認します。これにより、あいまいな結果が生じる可能性があります。 そのような線が見つかり、その幅が望ましい最大値よりも小さい場合、「強制」折りたたみ（不必要でも折りたたみ）のフラグを立てる必要があります（SHOULD）。 フォールディング実装が強制フォールディングをサポートしていない場合は、終了する必要があります。"
    },
    {
      "indent": 3,
      "text": "If this text content needs to, and can, be folded, insert the header described in Section 7.1.1, ensuring that any additional printable characters surrounding the header do not result in a line exceeding the desired maximum.",
      "ja": "このテキストコンテンツを折りたたむ必要があり、折りたたむことができる場合は、セクション7.1.1で説明されているヘッダーを挿入して、ヘッダーを囲む追加の印刷可能な文字によって、行が目的の最大値を超えないようにします。"
    },
    {
      "indent": 3,
      "text": "For each line in the text content, from top to bottom, if the line exceeds the desired maximum or requires a forced folding, then fold the line by performing the following steps:",
      "ja": "テキストコンテンツの各行について、上から下へ、行が目的の最大値を超えるか、強制折りたたみが必要な場合は、次の手順を実行して行を折りたたみます。"
    },
    {
      "indent": 3,
      "text": "1. Determine where the fold will occur. This location MUST be before or at the desired maximum column and MUST NOT be chosen such that the character immediately after the fold is a space (' ') character. For forced foldings, the location is between the '\\' and the end-of-line sequence. If no such location can be found, then exit (this text content cannot be folded).",
      "ja": "1. 折り目が発生する場所を決定します。 この場所は、目的の最大列の前または最大でなければならず、折りたたみの直後の文字がスペース（ ''）文字になるように選択してはなりません。 強制折りたたみの場合、場所は「\\」と行末シーケンスの間にあります。 そのような場所が見つからない場合は、終了します（このテキストコンテンツは折りたたむことができません）。"
    },
    {
      "indent": 3,
      "text": "2. At the location where the fold is to occur, insert a backslash ('\\') character followed by the end-of-line character sequence.",
      "ja": "2. 折り返しが発生する場所に、バックスラッシュ（ '\\'）文字を挿入し、その後に行末文字シーケンスを挿入します。"
    },
    {
      "indent": 3,
      "text": "3. On the following line, insert any number of space (' ') characters, provided that the resulting line does not exceed the desired maximum.",
      "ja": "3. 結果の行が希望の最大値を超えないことを条件として、次の行に任意の数のスペース（ ''）文字を挿入します。"
    },
    {
      "indent": 3,
      "text": "The result of the previous operation is that the next line starts with an arbitrary number of space (' ') characters, followed by the character that was previously occupying the position where the fold occurred.",
      "ja": "前の操作の結果は、次の行が任意の数のスペース（ ''）文字で始まり、その後に折りたたみが発生した位置を以前に占めていた文字が続くことです。"
    },
    {
      "indent": 3,
      "text": "Continue in this manner until reaching the end of the text content. Note that this algorithm naturally addresses the case where the remainder of a folded line is still longer than the desired maximum and, hence, needs to be folded again, ad infinitum.",
      "ja": "この方法で、テキストコンテンツの最後に到達するまで続けます。 このアルゴリズムは、折りたたまれた線の残りの部分が望ましい最大値よりも長い場合に当然対処するため、無限に再度折りたたむ必要があることに注意してください。"
    },
    {
      "indent": 3,
      "text": "The process described in this section is illustrated by the \"fold_it_1()\" function in Appendix A.",
      "ja": "このセクションで説明するプロセスは、付録Aの「fold_it_1（）」関数によって示されています。"
    },
    {
      "indent": 0,
      "text": "7.2.2. Unfolding",
      "section_title": true,
      "ja": "7.2.2. 展開"
    },
    {
      "indent": 3,
      "text": "Scan the beginning of the text content for the header described in Section 7.1.1. If the header is not present, exit (this text content does not need to be unfolded).",
      "ja": "セクション7.1.1で説明されているヘッダーのテキストコンテンツの先頭をスキャンします。 ヘッダーが存在しない場合は終了します（このテキストコンテンツを展開する必要はありません）。"
    },
    {
      "indent": 3,
      "text": "Remove the two-line header from the text content.",
      "ja": "テキストコンテンツから2行のヘッダーを削除します。"
    },
    {
      "indent": 3,
      "text": "For each line in the text content, from top to bottom, if the line has a backslash ('\\') character immediately followed by the end-of-line character sequence, then the line can be unfolded. Remove the backslash ('\\') character, the end-of-line character sequence, and any leading space (' ') characters, which will bring up the next line. Then continue to scan each line in the text content starting with the current line (in case it was multiply folded).",
      "ja": "テキストコンテンツの各行について、上から下に、バックスラッシュ（ '\\'）文字の直後に行末文字シーケンスが続く場合、その行を展開できます。 次の行を表示するバックスラッシュ（ '\\'）文字、行末文字シーケンス、および先行スペース（ ''）文字を削除します。 次に、現在の行から始まるテキストコンテンツの各行のスキャンを続けます（複数折りたたまれた場合）。"
    },
    {
      "indent": 3,
      "text": "Continue in this manner until reaching the end of the text content.",
      "ja": "この方法で、テキストコンテンツの最後に到達するまで続けます。"
    },
    {
      "indent": 3,
      "text": "The process described in this section is illustrated by the \"unfold_it_1()\" function in Appendix A.",
      "ja": "このセクションで説明するプロセスは、付録Aの「unfold_it_1（）」関数によって示されています。"
    },
    {
      "indent": 0,
      "text": "8. The Double Backslash Strategy ('\\\\')",
      "section_title": true,
      "ja": "8. ダブルバックスラッシュ戦略（ '\\\\'）"
    },
    {
      "indent": 0,
      "text": "8.1. Folded Structure",
      "section_title": true,
      "ja": "8.1. 折りたたみ構造"
    },
    {
      "indent": 3,
      "text": "Text content that has been folded as specified by this strategy MUST adhere to the following structure.",
      "ja": "この戦略で指定されたとおりに折りたたまれたテキストコンテンツは、次の構造に準拠している必要があります。"
    },
    {
      "indent": 0,
      "text": "8.1.1. Header",
      "section_title": true,
      "ja": "8.1.1. ヘッダ"
    },
    {
      "indent": 3,
      "text": "The header is two lines long.",
      "ja": "ヘッダーは2行です。"
    },
    {
      "indent": 3,
      "text": "The first line is the following 37-character string; this string MAY be surrounded by any number of printable characters. This first line cannot itself be folded.",
      "ja": "最初の行は、次の37文字の文字列です。 この文字列は、任意の数の印刷可能な文字で囲まれる場合があります。 この最初の行自体を折り返すことはできません。"
    },
    {
      "indent": 3,
      "text": "NOTE: '\\\\' line wrapping per RFC 8792",
      "ja": "注：RFC 8792に基づく '\\\\'行の折り返し"
    },
    {
      "indent": 3,
      "text": "The second line is an empty line, containing only the end-of-line character sequence. This line provides visual separation for readability.",
      "ja": "2行目は空行で、行末文字シーケンスのみが含まれています。 この線は、読みやすくするために視覚的に分離されています。"
    },
    {
      "indent": 0,
      "text": "8.1.2. Body",
      "section_title": true,
      "ja": "8.1.2. 体"
    },
    {
      "indent": 3,
      "text": "The character encoding is the same as the encoding described in Section 2 of [RFC7994], except that, per [RFC7991], tab characters are prohibited.",
      "ja": "文字エンコードは[RFC7994]のセクション2で説明されているエンコードと同じですが、[RFC7991]に従ってタブ文字が禁止されている点が異なります。"
    },
    {
      "indent": 3,
      "text": "Lines that have a backslash ('\\') occurring as the last character in a line immediately followed by the end-of-line character sequence, when the subsequent line starts with a backslash ('\\') as the first character that is not a space character (' '), are considered \"folded\".",
      "ja": "行の最後の文字としてバックスラッシュ（ '\\'）があり、直後に行末の文字シーケンスが続く行。次の行が最初の文字ではないバックスラッシュ（ '\\'）で始まる場合 スペース文字（ ''）は「折りたたまれた」と見なされます。"
    },
    {
      "indent": 3,
      "text": "Exceptionally long lines MAY be folded multiple times.",
      "ja": "非常に長い行は、複数回折りたたむことができます。"
    },
    {
      "indent": 0,
      "text": "8.2. Algorithm",
      "section_title": true,
      "ja": "8.2. アルゴリズム"
    },
    {
      "indent": 3,
      "text": "This section describes a process for folding and unfolding long lines when they are encountered in text content.",
      "ja": "このセクションでは、テキストコンテンツで長い行が検出された場合に、長い行を折りたたんだり展開したりするプロセスについて説明します。"
    },
    {
      "indent": 3,
      "text": "The steps are complete, but implementations MAY achieve the same result in other ways.",
      "ja": "手順は完了していますが、実装は他の方法でも同じ結果を達成できます（MAY）。"
    },
    {
      "indent": 3,
      "text": "When a larger document contains multiple instances of text content that may need to be folded or unfolded, another process must insert/extract the individual text content instances to/from the larger document prior to utilizing the algorithms described in this section. For example, the 'xiax' utility [xiax] does this.",
      "ja": "大きなドキュメントに折りたたんだり展開したりする必要があるテキストコンテンツの複数のインスタンスが含まれている場合、このセクションで説明するアルゴリズムを利用する前に、別のプロセスで個々のテキストコンテンツインスタンスを大きなドキュメントに挿入または抽出する必要があります。 たとえば、「xiax」ユーティリティ[xiax]がこれを行います。"
    },
    {
      "indent": 0,
      "text": "8.2.1. Folding",
      "section_title": true,
      "ja": "8.2.1. 折りたたみ"
    },
    {
      "indent": 3,
      "text": "Determine the desired maximum line length from input to the line-wrapping process, such as from a command-line parameter. If no value is explicitly specified, the value \"69\" SHOULD be used.",
      "ja": "コマンド行パラメーターなどから、入力から行折り返しプロセスまでの望ましい最大行長を決定します。 値が明示的に指定されていない場合は、値 \"69\"を使用する必要があります（SHOULD）。"
    },
    {
      "indent": 3,
      "text": "Ensure that the desired maximum line length is not less than the minimum header, which is 37 characters. If the desired maximum line length is less than this minimum, exit (this text-based content cannot be folded).",
      "ja": "必要な最大行長が最小ヘッダー（37文字）以上であることを確認してください。 必要な最大行長がこの最小値より短い場合は、終了します（このテキストベースのコンテンツは折りたたむことができません）。"
    },
    {
      "indent": 3,
      "text": "Scan the text content for horizontal tab characters. If any horizontal tab characters appear, either resolve them to space characters or exit, forcing the input provider to convert them to space characters themselves first.",
      "ja": "水平タブ文字のテキストコンテンツをスキャンします。 水平タブ文字が表示された場合は、それらをスペース文字に解決するか終了して、入力プロバイダーに最初にスペース文字自体を変換させる。"
    },
    {
      "indent": 3,
      "text": "Scan the text content to see if any line exceeds the desired maximum. If no line exceeds the desired maximum, exit (this text content does not need to be folded).",
      "ja": "テキストコンテンツをスキャンして、目的の最大値を超える行がないか確認します。 希望する最大値を超える行がない場合は、終了します（このテキストコンテンツを折りたたむ必要はありません）。"
    },
    {
      "indent": 3,
      "text": "Scan the text content to ensure that no existing lines already end with a backslash ('\\') character while the subsequent line starts with a backslash ('\\') character as the first character that is not a space character (' '), as this could lead to an ambiguous result. If such a line is found and its width is less than the desired maximum, then it SHOULD be flagged for forced folding (folding even though unnecessary). If the folding implementation doesn't support forced foldings, it MUST exit.",
      "ja": "テキストコンテンツをスキャンして、既存の行がバックスラッシュ（ '\\'）文字で既に終了していないことを確認します。次の行は、スペース文字（ ''）ではない最初の文字としてバックスラッシュ（ '\\'）文字で始まります。 これはあいまいな結果につながる可能性があるため。 そのような線が見つかり、その幅が望ましい最大値よりも小さい場合は、強制折りたたみ（不必要でも折りたたみ）のフラグを設定する必要があります（SHOULD）。 フォールディング実装が強制フォールディングをサポートしていない場合は、終了する必要があります。"
    },
    {
      "indent": 3,
      "text": "If this text content needs to, and can, be folded, insert the header described in Section 8.1.1, ensuring that any additional printable characters surrounding the header do not result in a line exceeding the desired maximum.",
      "ja": "このテキストコンテンツを折りたたむ必要があり、折りたたむことができる場合は、セクション8.1.1で説明されているヘッダーを挿入し、ヘッダーを囲む追加の印刷可能な文字によって行が目的の最大値を超えないようにします。"
    },
    {
      "indent": 3,
      "text": "For each line in the text content, from top to bottom, if the line exceeds the desired maximum or requires a forced folding, then fold the line by performing the following steps:",
      "ja": "テキストコンテンツの各行について、上から下へ、行が目的の最大値を超えるか、強制折りたたみが必要な場合は、次の手順を実行して行を折りたたみます。"
    },
    {
      "indent": 3,
      "text": "1. Determine where the fold will occur. This location MUST be before or at the desired maximum column. For forced foldings, the location is between the '\\' and the end-of-line sequence on the first line.",
      "ja": "1. 折り目が発生する場所を決定します。 この場所は、目的の最大列の前か、またはそれでなければなりません。 強制折りたたみの場合、位置は「\\」と最初の行の行末シーケンスの間にあります。"
    },
    {
      "indent": 3,
      "text": "2. At the location where the fold is to occur, insert a first backslash ('\\') character followed by the end-of-line character sequence.",
      "ja": "2. 折り返しが発生する場所に、最初の円記号（ '\\'）文字を挿入し、その後に行末文字シーケンスを挿入します。"
    },
    {
      "indent": 3,
      "text": "3. On the following line, insert any number of space (' ') characters, provided that the resulting line does not exceed the desired maximum, followed by a second backslash ('\\') character.",
      "ja": "3. 次の行に、結果の行が目的の最大値を超えない限り、任意の数のスペース（ ''）文字を挿入し、その後に2番目の円記号（ '\\'）文字を続けます。"
    },
    {
      "indent": 3,
      "text": "The result of the previous operation is that the next line starts with an arbitrary number of space (' ') characters, followed by a backslash ('\\') character, immediately followed by the character that was previously occupying the position where the fold occurred.",
      "ja": "前の操作の結果は、次の行が任意の数のスペース（ ''）文字で始まり、その後にバックスラッシュ（ '\\'）文字が続き、直後に折りたたみが発生した位置を占めていた文字が続きます。 。"
    },
    {
      "indent": 3,
      "text": "Continue in this manner until reaching the end of the text content. Note that this algorithm naturally addresses the case where the remainder of a folded line is still longer than the desired maximum and, hence, needs to be folded again, ad infinitum.",
      "ja": "この方法で、テキストコンテンツの最後に到達するまで続けます。 このアルゴリズムは、折りたたまれた線の残りの部分が望ましい最大値よりも長い場合に当然対処するため、無限に再度折りたたむ必要があることに注意してください。"
    },
    {
      "indent": 3,
      "text": "The process described in this section is illustrated by the \"fold_it_2()\" function in Appendix A.",
      "ja": "このセクションで説明するプロセスは、付録Aの「fold_it_2（）」関数で示されています。"
    },
    {
      "indent": 0,
      "text": "8.2.2. Unfolding",
      "section_title": true,
      "ja": "8.2.2. 展開"
    },
    {
      "indent": 3,
      "text": "Scan the beginning of the text content for the header described in Section 8.1.1. If the header is not present, exit (this text content does not need to be unfolded).",
      "ja": "セクション8.1.1で説明されているヘッダーのテキストコンテンツの先頭をスキャンします。 ヘッダーが存在しない場合は終了します（このテキストコンテンツを展開する必要はありません）。"
    },
    {
      "indent": 3,
      "text": "Remove the two-line header from the text content.",
      "ja": "テキストコンテンツから2行のヘッダーを削除します。"
    },
    {
      "indent": 3,
      "text": "For each line in the text content, from top to bottom, if the line has a backslash ('\\') character immediately followed by the end-of-line character sequence and if the next line has a backslash ('\\') character as the first character that is not a space character (' '), then the lines can be unfolded. Remove the first backslash ('\\') character, the end-of-line character sequence, any leading space (' ') characters, and the second backslash ('\\') character, which will bring up the next line. Then, continue to scan each line in the text content starting with the current line (in case it was multiply folded).",
      "ja": "テキストコンテンツの各行について、上から下へ、その行にバックスラッシュ（ '\\'）文字の直後に行末文字シーケンスが続き、次の行にバックスラッシュ（ '\\'）文字がある場合 スペース文字（ ''）ではない最初の文字として、行を展開できます。 最初のバックスラッシュ（ '\\'）文字、行末文字シーケンス、先行スペース（ ''）文字、および次の行を表示する2番目のバックスラッシュ（ '\\'）文字を削除します。 次に、現在の行から始まるテキストコンテンツの各行をスキャンし続けます（複数折りたたまれた場合）。"
    },
    {
      "indent": 3,
      "text": "Continue in this manner until reaching the end of the text content.",
      "ja": "この方法で、テキストコンテンツの最後に到達するまで続けます。"
    },
    {
      "indent": 3,
      "text": "The process described in this section is illustrated by the \"unfold_it_2()\" function in Appendix A.",
      "ja": "このセクションで説明するプロセスは、付録Aの「unfold_it_2（）」関数で示されています。"
    },
    {
      "indent": 0,
      "text": "9. Examples",
      "section_title": true,
      "ja": "9. 例"
    },
    {
      "indent": 3,
      "text": "The following self-documenting examples illustrate folded text-based content.",
      "ja": "次の自己文書化の例は、折りたたまれたテキストベースのコンテンツを示しています。"
    },
    {
      "indent": 3,
      "text": "The source text content cannot be presented here, as it would again be folded. Alas, only the results can be provided.",
      "ja": "ソーステキストのコンテンツは、再び折りたたまれるため、ここに表示できません。 残念ながら、結果のみを提供できます。"
    },
    {
      "indent": 0,
      "text": "9.1. Example Showing Boundary Conditions",
      "section_title": true,
      "ja": "9.1. 境界条件を示す例"
    },
    {
      "indent": 3,
      "text": "This example illustrates boundary conditions. The input contains seven lines, each line one character longer than the previous line. Numbers are used for counting purposes. The default desired maximum column value \"69\" is used.",
      "ja": "この例は、境界条件を示しています。 入力には7行が含まれ、各行は前の行よりも1文字長くなっています。 数値はカウントの目的で使用されます。 デフォルトの望ましい最大列値「69」が使用されます。"
    },
    {
      "indent": 0,
      "text": "9.1.1. Using '\\'",
      "section_title": true,
      "ja": "9.1.1. 「\\」の使用"
    },
    {
      "indent": 3,
      "text": "========== NOTE: '\\' line wrapping per RFC 8792 ===========",
      "raw": true
    },
    {
      "indent": 3,
      "text": "123456789012345678901234567890123456789012345678901234567890123456 1234567890123456789012345678901234567890123456789012345678901234567 12345678901234567890123456789012345678901234567890123456789012345678 123456789012345678901234567890123456789012345678901234567890123456789 12345678901234567890123456789012345678901234567890123456789012345678\\ 90 12345678901234567890123456789012345678901234567890123456789012345678\\ 901 12345678901234567890123456789012345678901234567890123456789012345678\\ 9012",
      "ja": "\\9012345678901234567890123456789012345678901234567890123456789012345678\\90112345678901234567890123456789012345678901234567890123456789012345678\\901212345678901234567890123456789012345678901234567890123456789012345612345678901234567890123456789012345678901234567890123456789012345671234567890123456789012345678901234567890123456789012345678901234567812345678901234567890123456789012345678901234567890123456789012345678912345678901234567890123456789012345678901234567890123456789012345678"
    },
    {
      "indent": 0,
      "text": "9.1.2. Using '\\\\'",
      "section_title": true,
      "ja": "9.1.2. '\\\\'の使用"
    },
    {
      "indent": 3,
      "text": "========== NOTE: '\\\\' line wrapping per RFC 8792 ==========",
      "raw": true
    },
    {
      "indent": 3,
      "text
      "ja": "12345678901234567890123456789012345678901234567890123456789012345612345678901234567890123456789012345678901234567890123456789012345671234567890123456789012345678901234567890123456789012345678901234567812345678901234567890123456789012345678901234567890123456789012345678912345678901234567890123456789012345678901234567890123456789012345678\\\\9012345678901234567890123456789012345678901234567890123456789012345678\\\\90112345678901234567890123456789012345678901234567890123456789012345678\\\\9012"
    },
    {
      "indent": 0,
      "text": "9.2. Example Showing Multiple Wraps of a Single Line",
      "section_title": true,
      "ja": "9.2. 単一行の複数の折り返しを示す例"
    },
    {
      "indent": 3,
      "text": "This example illustrates what happens when a very long line needs to be folded multiple times. The input contains one line containing 280 characters. Numbers are used for counting purposes. The default desired maximum column value \"69\" is used.",
      "ja": "この例は、非常に長い線を複数回折り畳む必要がある場合に何が起こるかを示しています。 入力には、280文字を含む1行が含まれています。 数値はカウントの目的で使用されます。 デフォルトの望ましい最大列値「69」が使用されます。"
    },
    {
      "indent": 0,
      "text": "9.2.1. Using '\\'",
      "section_title": true,
      "ja": "9.2.1. 「\\」の使用"
    },
    {
      "indent": 3,
      "text": "========== NOTE: '\\' line wrapping per RFC 8792 ===========",
      "raw": true
    },
    {
      "indent": 3,
      "text": "12345678901234567890123456789012345678901234567890123456789012345678\\ 90123456789012345678901234567890123456789012345678901234567890123456\\ 78901234567890123456789012345678901234567890123456789012345678901234\\ 56789012345678901234567890123456789012345678901234567890123456789012\\ 34567890",
      "ja": "12345678901234567890123456789012345678901234567890123456789012345678 \\ 90123456789012345678901234567890123456789012345678901234567890123456 \\ 78901234567890123456789012345678901234567890123456789012345678901234 \\ 567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567"
    },
    {
      "indent": 0,
      "text": "9.2.2. Using '\\\\'",
      "section_title": true,
      "ja": "9.2.2. '\\\\'の使用"
    },
    {
      "indent": 3,
      "text": "========== NOTE: '\\\\' line wrapping per RFC 8792 ==========",
      "raw": true
    },
    {
      "indent": 3,
      "text": "12345678901234567890123456789012345678901234567890123456789012345678\\ \\9012345678901234567890123456789012345678901234567890123456789012345\\ \\6789012345678901234567890123456789012345678901234567890123456789012\\ \\3456789012345678901234567890123456789012345678901234567890123456789\\ \\01234567890",
      "ja": "12345678901234567890123456789012345678901234567890123456789012345678 \\ \\ 9012345678901234567890123456789012345678901234567890123456789012345 \\ \\ 6789012345678901234567890123456789012345678901234567890123456789012 \\ \\ 34567890123456789012345678901234567890123456789123234890789234234890890234567890123234789789234567"
    },
    {
      "indent": 0,
      "text": "9.3. Example Showing \"Smart\" Folding",
      "section_title": true,
      "ja": "9.3. 「スマート」フォールディングを示す例"
    },
    {
      "indent": 3,
      "text": "This example illustrates how readability can be improved via \"smart\" folding, whereby folding occurs at format-specific locations and format-specific indentations are used.",
      "ja": "この例は、「スマート」折りたたみによって可読性を向上させる方法を示しています。折りたたみは、フォーマット固有の場所で行われ、フォーマット固有のインデントが使用されます。"
    },
    {
      "indent": 3,
      "text": "The text content was manually folded, since the script in Appendix A does not implement smart folding.",
      "ja": "付録Aのスクリプトはスマートフォールディングを実装していないため、テキストコンテンツは手動でフォールドされました。"
    },
    {
      "indent": 3,
      "text": "Note that the headers are surrounded by different printable characters than those shown in the script-generated examples.",
      "ja": "ヘッダーは、スクリプトで生成された例に示されているものとは異なる印刷可能な文字で囲まれていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "9.3.1. Using '\\'",
      "section_title": true,
      "ja": "9.3.1. 「\\」の使用"
    },
    {
      "indent": 3,
      "text": "[NOTE: '\\' line wrapping per RFC 8792]",
      "ja": "[注：RFC 8792による '\\'行の折り返し]"
    },
    {
      "indent": 3,
      "text": "<yang-library\n    xmlns=\"urn:ietf:params:xml:ns:yang:ietf-yang-library\"\n    xmlns:ds=\"urn:ietf:params:xml:ns:yang:ietf-datastores\">",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  <module-set>\n    <name>config-modules</name>\n    <module>\n      <name>ietf-interfaces</name>\n      <revision>2018-02-20</revision>\n      <namespace>\\\n        urn:ietf:params:xml:ns:yang:ietf-interfaces\\\n      </namespace>\n    </module>\n    ...\n  </module-set>\n  ...\n</yang-library>",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Below is the equivalent of the above, but it was folded using the script in Appendix A.",
      "ja": "以下は上記と同じですが、付録Aのスクリプトを使用して折りたたまれています。"
    },
    {
      "indent": 3,
      "text": "========== NOTE: '\\' line wrapping per RFC 8792 ===========",
      "raw": true
    },
    {
      "indent": 3,
      "text": "<yang-library\n    xmlns=\"urn:ietf:params:xml:ns:yang:ietf-yang-library\"\n    xmlns:ds=\"urn:ietf:params:xml:ns:yang:ietf-datastores\">",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  <module-set>\n    <name>config-modules</name>\n    <module>\n      <name>ietf-interfaces</name>\n      <revision>2018-02-20</revision>\n      <namespace>urn:ietf:params:xml:ns:yang:ietf-interfaces</namesp\\\nace>\n    </module>\n    ...\n  </module-set>\n  ...\n</yang-library>",
      "raw": true
    },
    {
      "indent": 0,
      "text": "9.3.2. Using '\\\\'",
      "section_title": true,
      "ja": "9.3.2. '\\\\'の使用"
    },
    {
      "indent": 3,
      "text": "[NOTE: '\\\\' line wrapping per RFC 8792]",
      "ja": "[注：RFC 8792による '\\\\'行の折り返し]"
    },
    {
      "indent": 3,
      "text": "<yang-library\n    xmlns=\"urn:ietf:params:xml:ns:yang:ietf-yang-library\"\n    xmlns:ds=\"urn:ietf:params:xml:ns:yang:ietf-datastores\">",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  <module-set>\n    <name>config-modules</name>\n    <module>\n      <name>ietf-interfaces</name>\n      <revision>2018-02-20</revision>\n      <namespace>\\\n        \\urn:ietf:params:xml:ns:yang:ietf-interfaces\\\n      \\</namespace>\n    </module>\n    ...\n  </module-set>\n  ...\n</yang-library>",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Below is the equivalent of the above, but it was folded using the script in Appendix A.",
      "ja": "以下は上記と同じですが、付録Aのスクリプトを使用して折りたたまれています。"
    },
    {
      "indent": 3,
      "text": "========== NOTE: '\\\\' line wrapping per RFC 8792 ==========",
      "raw": true
    },
    {
      "indent": 3,
      "text": "<yang-library\n    xmlns=\"urn:ietf:params:xml:ns:yang:ietf-yang-library\"\n    xmlns:ds=\"urn:ietf:params:xml:ns:yang:ietf-datastores\">",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  <module-set>\n    <name>config-modules</name>\n    <module>\n      <name>ietf-interfaces</name>\n      <revision>2018-02-20</revision>\n      <namespace>urn:ietf:params:xml:ns:yang:ietf-interfaces</namesp\\\n\\ace>\n    </module>\n    ...\n  </module-set>\n  ...\n</yang-library>",
      "raw": true
    },
    {
      "indent": 0,
      "text": "9.4. Example Showing \"Forced\" Folding",
      "section_title": true,
      "ja": "9.4. 「強制」折りたたみを示す例"
    },
    {
      "indent": 3,
      "text": "This example illustrates how invalid sequences in lines that do not have to be folded can be handled via forced folding, whereby the folding occurs even though unnecessary.",
      "ja": "この例は、折りたたむ必要のない行の無効なシーケンスが、強制折りたたみによってどのように処理できるかを示しています。これにより、不必要でも折りたたみが発生します。"
    },
    {
      "indent": 3,
      "text": "The following line exceeds a 68-char max and, thus, demands folding:\n123456789012345678901234567890123456789012345678901234567890123456789",
      "raw": true
    },
    {
      "indent": 3,
      "text": "This line ends with a backslash \\",
      "ja": "この行はバックスラッシュ\\で終わります"
    },
    {
      "indent": 3,
      "text": "This line ends with a backslash \\ \\ This line begins with a backslash",
      "ja": "この行はバックスラッシュで終わります\\ \\この行はバックスラッシュで始まります"
    },
    {
      "indent": 3,
      "text": "The following is an indented 3x3 block of backslashes: \\\\\\ \\\\\\ \\\\\\",
      "ja": "以下は、バックスラッシュのインデントされた3x3ブロックです：\\\\\\ \\\\\\ \\\\\\"
    },
    {
      "indent": 3,
      "text": "The samples below were manually folded, since the script in the appendix does not implement forced folding.",
      "ja": "付録のスクリプトは強制折りたたみを実装していないため、以下のサンプルは手動で折りたたまれています。"
    },
    {
      "indent": 3,
      "text": "Note that the headers are prefixed by a pound ('#') character, rather than surrounded by 'equals' ('=') characters as shown in the script-generated examples.",
      "ja": "スクリプトで生成された例に示すように、ヘッダーの前には「等しい」（「=」）文字ではなく、ポンド（「＃」）文字が付いていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "9.4.1. Using '\\'",
      "section_title": true,
      "ja": "9.4.1. 「\\」の使用"
    },
    {
      "indent": 3,
      "text": "# NOTE: '\\' line wrapping per RFC 8792",
      "ja": "＃注：RFC 8792に基づく '\\'行の折り返し"
    },
    {
      "indent": 3,
      "text": "The following line exceeds a 68-char max and, thus, demands folding: 1234567890123456789012345678901234567890123456789012345678901234567\\ 89",
      "ja": "次の行は最大68文字を超えているため、折りたたみを要求しています。1234567890123456789012345678901234567890123456789012345678901234567 \\ 89"
    },
    {
      "indent": 3,
      "text": "This line ends with a backslash \\\\",
      "ja": "この行はバックスラッシュ\\\\で終わります"
    },
    {
      "indent": 3,
      "text": "This line ends with a backslash \\\\",
      "ja": "この行はバックスラッシュ\\\\で終わります"
    },
    {
      "indent": 3,
      "text": "\\ This line begins with a backslash",
      "ja": "\\この行はバックスラッシュで始まります"
    },
    {
      "indent": 3,
      "text": "The following is an indented 3x3 block of backslashes: \\\\\\\\",
      "ja": "以下は、バックスラッシュのインデントされた3x3ブロックです：\\\\\\\\"
    },
    {
      "indent": 6,
      "text": "\\\\\\\\",
      "ja": "\\\\\\\\"
    },
    {
      "indent": 6,
      "text": "\\\\\\",
      "ja": "\\\\\\"
    },
    {
      "indent": 0,
      "text": "9.4.2. Using '\\\\'",
      "section_title": true,
      "ja": "9.4.2. '\\\\'の使用"
    },
    {
      "indent": 3,
      "text": "# NOTE: '\\\\' line wrapping per RFC 8792",
      "ja": "＃注：RFC 8792に基づく '\\\\'行の折り返し"
    },
    {
      "indent": 3,
      "text": "The following line exceeds a 68-char max and, thus, demands folding: 1234567890123456789012345678901234567890123456789012345678901234567\\ \\89",
      "ja": "次の行は最大68文字を超えているため、折りたたみを要求しています。1234567890123456789012345678901234567890123456789012345678901234567\\ \\ 89"
    },
    {
      "indent": 3,
      "text": "This line ends with a backslash \\",
      "ja": "この行はバックスラッシュ\\で終わります"
    },
    {
      "indent": 3,
      "text": "This line ends with a backslash \\\\ \\ \\ This line begins with a backslash",
      "ja": "この行はバックスラッシュで終了します\\\\ \\ \\この行はバックスラッシュで始まります"
    },
    {
      "indent": 3,
      "text": "The following is an indented 3x3 block of backslashes: \\\\\\\\ \\ \\\\\\\\ \\ \\\\\\",
      "ja": "以下は、バックスラッシュのインデントされた3x3ブロックです：\\\\\\\\ \\ \\\\\\\\ \\ \\\\\\"
    },
    {
      "indent": 0,
      "text": "10. Security Considerations",
      "section_title": true,
      "ja": "10. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no security considerations.",
      "ja": "このドキュメントにはセキュリティに関する考慮事項はありません。"
    },
    {
      "indent": 0,
      "text": "11. IANA Considerations",
      "section_title": true,
      "ja": "11. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no IANA actions.",
      "ja": "このドキュメントにはIANAアクションはありません。"
    },
    {
      "indent": 0,
      "text": "12. References",
      "section_title": true,
      "ja": "12. 参考文献"
    },
    {
      "indent": 0,
      "text": "12.1. Normative References",
      "section_title": true,
      "ja": "12.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC7991] Hoffman, P., \"The \"xml2rfc\" Version 3 Vocabulary\", RFC 7991, DOI 10.17487/RFC7991, December 2016, <https://www.rfc-editor.org/info/rfc7991>.",
      "ja": "[RFC7991] Hoffman、P。、「The \"xml2rfc\" Version 3 Vocabulary」、RFC 7991、DOI 10.17487 / RFC7991、2016年12月、<https://www.rfc-editor.org/info/rfc7991>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B。、「RFC 2119キーワードの大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>。"
    },
    {
      "indent": 0,
      "text": "12.2. Informative References",
      "section_title": true,
      "ja": "12.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[bash] \"GNU Bash Manual\", <https://www.gnu.org/software/bash/manual>.",
      "ja": "[bash]「GNU Bashマニュアル」、<https://www.gnu.org/software/bash/manual>。"
    },
    {
      "indent": 3,
      "text": "[pyang] \"pyang\", <https://pypi.org/project/pyang/>.",
      "ja": "[pyang]「pyang」、<https://pypi.org/project/pyang/>。"
    },
    {
      "indent": 3,
      "text": "[RFC7749] Reschke, J., \"The \"xml2rfc\" Version 2 Vocabulary\", RFC 7749, DOI 10.17487/RFC7749, February 2016, <https://www.rfc-editor.org/info/rfc7749>.",
      "ja": "[RFC7749] Reschke、J。、「The \"xml2rfc\" Version 2 Vocabulary」、RFC 7749、DOI 10.17487 / RFC7749、2016年2月、<https://www.rfc-editor.org/info/rfc7749>。"
    },
    {
      "indent": 3,
      "text": "[RFC7950] Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\", RFC 7950, DOI 10.17487/RFC7950, August 2016, <https://www.rfc-editor.org/info/rfc7950>.",
      "ja": "[RFC7950] Bjorklund、M。、編、「The YANG 1.1 Data Modeling Language」、RFC 7950、DOI 10.17487 / RFC7950、2016年8月、<https://www.rfc-editor.org/info/rfc7950>。"
    },
    {
      "indent": 3,
      "text": "[RFC7994] Flanagan, H., \"Requirements for Plain-Text RFCs\", RFC 7994, DOI 10.17487/RFC7994, December 2016, <https://www.rfc-editor.org/info/rfc7994>.",
      "ja": "[RFC7994] Flanagan、H。、「Requires for Plain-Text RFCs」、RFC 7994、DOI 10.17487 / RFC7994、2016年12月、<https://www.rfc-editor.org/info/rfc7994>。"
    },
    {
      "indent": 3,
      "text": "[RFC8340] Bjorklund, M. and L. Berger, Ed., \"YANG Tree Diagrams\", BCP 215, RFC 8340, DOI 10.17487/RFC8340, March 2018, <https://www.rfc-editor.org/info/rfc8340>.",
      "ja": "[RFC8340] Bjorklund、M。およびL. Berger、編、「YANG Tree Diagrams」、BCP 215、RFC 8340、DOI 10.17487 / RFC8340、2018年3月、<https://www.rfc-editor.org/info/ rfc8340>。"
    },
    {
      "indent": 3,
      "text": "[xiax] \"The 'xiax' Python Package\", <https://pypi.org/project/xiax/>.",
      "ja": "[xiax]「 'xiax' Pythonパッケージ」、<https://pypi.org/project/xiax/>。"
    },
    {
      "indent": 3,
      "text": "[xml2rfc] \"xml2rfc\", <https://pypi.org/project/xml2rfc/>.",
      "ja": "[xml2rfc] \"xml2rfc\"、<https://pypi.org/project/xml2rfc/>。"
    },
    {
      "indent": 3,
      "text": "[yang-doctors-thread] Watsen, K., \"[yang-doctors] automating yang doctor reviews\", message to the yang-doctors mailing list, 18 April 2018, <https://mailarchive.ietf.org/arch/msg/yang-doctors/DCfBqgfZPAD7afzeDFlQ1Xm2X3g>.",
      "ja": "[yang-doctors-thread] Watsen、K。、「[yang-doctors] automatingヤンドクターレビュー」、ヤンドクターメーリングリストへのメッセージ、2018年4月18日、<https://mailarchive.ietf.org/arch/ msg / yang-doctors / DCfBqgfZPAD7afzeDFlQ1Xm2X3g>。"
    },
    {
      "indent": 3,
      "text": "[yanglint] \"yanglint\", commit 1b7d73d, February 2020, <https://github.com/CESNET/libyang#yanglint>.",
      "ja": "[yanglint]「yanglint」、コミット1b7d73d、2020年2月、<https://github.com/CESNET/libyang#yanglint>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Bash Shell Script: rfcfold",
      "section_title": true,
      "ja": "付録A. Bashシェルスクリプト：rfcfold"
    },
    {
      "indent": 3,
      "text": "This non-normative appendix includes a Bash shell script [bash] that can both fold and unfold text content using both the single and double backslash strategies described in Sections 7 and 8, respectively. This shell script, called 'rfcfold', is maintained at <https://github.com/ietf-tools/rfcfold>.",
      "ja": "この非規範的な付録には、セクション7と8でそれぞれ説明されているシングルバックスラッシュとダブルバックスラッシュの両方を使用してテキストコンテンツを折りたたんだり展開したりできるBashシェルスクリプト[bash]が含まれています。 「rfcfold」と呼ばれるこのシェルスクリプトは、<https://github.com/ietf-tools/rfcfold>で管理されています。"
    },
    {
      "indent": 3,
      "text": "This script is intended to be applied to a single text content instance. If it is desired to fold or unfold text content instances within a larger document (e.g., an Internet-Draft or RFC), then another tool must be used to extract the content from the larger document before utilizing this script.",
      "ja": "このスクリプトは、単一のテキストコンテンツインスタンスに適用することを目的としています。 大きなドキュメント（インターネットドラフトやRFCなど）内のテキストコンテンツインスタンスを折りたたんだり展開したりしたい場合は、このスクリプトを利用する前に、別のツールを使用して大きなドキュメントからコンテンツを抽出する必要があります。"
    },
    {
      "indent": 3,
      "text": "For readability purposes, this script forces the minimum supported line length to be eight characters longer than the raw header text defined in Sections 7.1.1 and 8.1.1 so as to ensure that the header can be wrapped by a space (' ') character and three 'equals' ('=') characters on each side of the raw header text.",
      "ja": "読みやすくするために、このスクリプトでは、サポートされる最小の行の長さをセクション7.1.1および8.1.1で定義された未加工のヘッダーテキストよりも8文字長くして、ヘッダーをスペース（ ''）文字でラップできるようにします 生のヘッダーテキストの両側に3つの「等しい」（「=」）文字。"
    },
    {
      "indent": 3,
      "text": "When a tab character is detected in the input file, this script exits with the following error message:",
      "ja": "入力ファイルでタブ文字が検出されると、このスクリプトは次のエラーメッセージで終了します。"
    },
    {
      "indent": 6,
      "text": "Error: infile contains a tab character, which is not allowed.",
      "ja": "エラー：infileにタブ文字が含まれていますが、これは許可されていません。"
    },
    {
      "indent": 3,
      "text": "This script tests for the availability of GNU awk (gawk), in order to test for ASCII-based control characters and non-ASCII characters in the input file (see below). Note that testing revealed flaws in the default version of 'awk' on some platforms. As this script uses 'gawk' only to issue warning messages, if 'gawk' is not found, this script issues the following debug message:",
      "ja": "このスクリプトは、入力ファイル内のASCIIベースの制御文字と非ASCII文字をテストするために、GNU awk（gawk）の可用性をテストします（以下を参照）。 一部のプラットフォームでは、テストによってデフォルトバージョンの「awk」に欠陥が見つかったことに注意してください。 このスクリプトは「gawk」を使用して警告メッセージを発行するだけなので、「gawk」が見つからない場合、このスクリプトは次のデバッグメッセージを発行します。"
    },
    {
      "indent": 6,
      "text": "Debug: no GNU awk; skipping checks for special characters.",
      "ja": "デバッグ：GNU awkなし; 特殊文字のチェックをスキップします。"
    },
    {
      "indent": 3,
      "text": "When 'gawk' is available (see above) and ASCII-based control characters are detected in the input file, this script issues the following warning message:",
      "ja": "「gawk」が利用可能であり（上記を参照）、ASCIIベースの制御文字が入力ファイルで検出されると、このスクリプトは次の警告メッセージを発行します。"
    },
    {
      "indent": 6,
      "text": "Warning: infile contains ASCII control characters (unsupported).",
      "ja": "警告：infileにはASCII制御文字が含まれています（サポートされていません）。"
    },
    {
      "indent": 3,
      "text": "When 'gawk' is available (see above) and non-ASCII characters are detected in the input file, this script issues the following warning message:",
      "ja": "「gawk」が利用可能であり（上記を参照）、入力ファイルで非ASCII文字が検出された場合、このスクリプトは次の警告メッセージを発行します。"
    },
    {
      "indent": 6,
      "text": "Warning: infile contains non-ASCII characters (unsupported).",
      "ja": "警告：infileに非ASCII文字が含まれています（サポートされていません）。"
    },
    {
      "indent": 3,
      "text": "This script does not implement the whitespace-avoidance logic described in Section 7.2.1. In such a case, the script will exit with the following error message:",
      "ja": "このスクリプトは、セクション7.2.1で説明されている空白回避ロジックを実装していません。 このような場合、スクリプトは次のエラーメッセージで終了します。"
    },
    {
      "indent": 6,
      "text": "Error: infile has a space character occurring on the folding column. This file cannot be folded using the '\\' strategy.",
      "ja": "エラー：infileには折りたたみ列でスペース文字が含まれています。 このファイルは「\\」戦略を使用して折りたたむことはできません。"
    },
    {
      "indent": 3,
      "text": "While this script can unfold input that contains forced foldings, it is unable to fold files that would require forced foldings. Forced folding is described in Sections 7.2.1 and 8.2.1. When being asked to fold a file that would require forced folding, the script will instead exit with one of the following error messages:",
      "ja": "このスクリプトは強制折りたたみを含む入力を展開できますが、強制折りたたみが必要なファイルを折りたたむことはできません。 強制折りたたみについては、セクション7.2.1および8.2.1で説明します。 強制的に折りたたむ必要があるファイルを折りたたむように求められた場合、スクリプトは代わりに次のエラーメッセージのいずれかで終了します。"
    },
    {
      "indent": 3,
      "text": "For '\\':",
      "ja": "ために '\\'："
    },
    {
      "indent": 6,
      "text": "Error: infile has a line ending with a '\\' character. This file cannot be folded using the '\\' strategy without there being false positives produced in the unfolding (i.e., this script does not force-fold such lines, as described in RFC 8792).",
      "ja": "エラー：infileに '\\'文字で終了する行があります。 このファイルは、展開で偽陽性が発生しない限り、「\\」戦略を使用して折りたたむことはできません（つまり、このスクリプトは、RFC 8792で説明されているように、このような行を強制的に折りたたみません）。"
    },
    {
      "indent": 3,
      "text": "For '\\\\':",
      "ja": "ために '\\\\'："
    },
    {
      "indent": 6,
      "text": "Error: infile has a line ending with a '\\' character followed by a '\\' character as the first non-space character on the next line. This script cannot fold this file using the '\\\\' strategy without there being false positives produced in the unfolding (i.e., this script does not force-fold such lines, as described in RFC 8792).",
      "ja": "エラー：infileには、次の行の最初の非スペース文字として「\\」文字の後に「\\」文字が続く行があります。 このスクリプトは、展開で偽陽性が発生しない限り、「\\\\」戦略を使用してこのファイルを折りたたむことはできません（つまり、このスクリプトは、RFC 8792で説明されているように、そのような行を強制的に折りたたみません）。"
    },
    {
      "indent": 3,
      "text": "Shell-level end-of-line backslash ('\\') characters have been purposely added to the script so as to ensure that the script is itself not folded in this document, thus simplifying the ability to copy/paste the script for local use. As should be evident by the lack of the mandatory header described in Section 7.1.1, these backslashes do not designate a folded line (e.g., as described in Section 7).",
      "ja": "シェルレベルの行末のバックスラッシュ（ '\\'）文字が意図的にスクリプトに追加され、スクリプト自体がこのドキュメントで折りたたまれないようにして、ローカルで使用するためにスクリプトをコピー/貼り付けする機能を簡素化します 。 セクション7.1.1で説明されている必須のヘッダーがないことから明らかなように、これらのバックスラッシュは折り返し線を示していません（たとえば、セクション7で説明されているように）。"
    },
    {
      "indent": 3,
      "text": "<CODE BEGINS> file \"rfcfold\"\n#!/bin/bash --posix",
      "raw": true
    },
    {
      "indent": 3,
      "text": "# This script may need some adjustments to work on a given system. # For instance, the utility 'gsed' may need to be installed. # Also, please be advised that 'bash' (not 'sh') must be used.",
      "ja": "＃このスクリプトは、特定のシステムで動作するようにいくつかの調整が必要になる場合があります。 ＃たとえば、「gsed」ユーティリティをインストールする必要がある場合があります。 ＃また、「bash」（「sh」ではない）を使用する必要があることに注意してください。"
    },
    {
      "indent": 3,
      "text": "# Copyright (c) 2020 IETF Trust, Kent Watsen, and Erik Auerswald. # All rights reserved. # # Redistribution and use in source and binary forms, with or without # modification, are permitted provided that the following conditions # are met: # # * Redistributions of source code must retain the above copyright # notice, this list of conditions and the following disclaimer. # # * Redistributions in binary form must reproduce the above # copyright notice, this list of conditions and the following # disclaimer in the documentation and/or other materials # provided with the distribution. # # * Neither the name of Internet Society, IETF or IETF Trust, nor # the names of specific contributors, may be used to endorse or # promote products derived from this software without specific # prior written permission. # # THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS # \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT # LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS # FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE # COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, # INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES # (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR # SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) # HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, # STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) # ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF # ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
      "ja": "＃Copyright（c）2020 IETF Trust、Kent Watsen、およびErik Auerswald。 ＃ 全著作権所有。 ＃＃ソースフォームとバイナリフォームでの再配布と使用は、変更の有無にかかわらず、次の条件が満たされている場合に許可されます＃＃＃*ソースコードの再配布は、上記の著作権情報を保持する必要があります。免責事項。 ＃＃*バイナリ形式の再配布では、上記の著作権情報、この条件のリスト、および次の免責事項を＃配布物とともに提供されるドキュメントおよび/またはその他の資料に複製する必要があります。 ＃＃*インターネットソサイエティ、IETFまたはIETFトラストの名前、および特定の貢献者の名前のいずれも、特定の事前の書面による許可なしに、このソフトウェアから派生した製品を推奨または宣伝するために使用することはできません。 ＃＃このソフトウェアは、著作権者および寄稿者によって「現状有姿」で提供され、明示的または黙示的な保証は一切含まれませんが、商品性および特定の目的に対する適合性の黙示の保証が含まれます。いかなる場合も、＃著作権所有者または寄稿者は、直接的、間接的、偶発的、特別、例示的、または結果的な損害＃（代替商品または＃サービスの購入を含むが、これらに限定されない）の責任を負わないものとします。 、または利益、またはビジネスの中断）＃責任の理論に基づいて、契約にかかわらず、＃責任を負うか、または不法行為（過失またはその他の場合を含む）＃＃いずれかの方法で発生した場合そのような損傷の可能性についてアドバイスしました。"
    },
    {
      "indent": 3,
      "text": "print_usage() {\n  printf \"\\n\"\n  printf \"Folds or unfolds the input text file according to\"\n  printf \" RFC 8792.\\n\"\n  printf \"\\n\"\n  printf \"Usage: rfcfold [-h] [-d] [-q] [-s <strategy>] [-c <col>]\"\n  printf \" [-r] -i <infile> -o <outfile>\\n\"\n  printf \"\\n\"\n  printf \"  -s: strategy to use, '1' or '2' (default: try 1,\"\n  printf \" else 2)\\n\"\n  printf \"  -c: column to fold on (default: 69)\\n\"\n  printf \"  -r: reverses the operation\\n\"\n  printf \"  -i: the input filename\\n\"\n  printf \"  -o: the output filename\\n\"\n  printf \"  -d: show debug messages (unless -q is given)\\n\"\n  printf \"  -q: quiet (suppress error and debug messages)\\n\"\n  printf \"  -h: show this message\\n\"\n  printf \"\\n\"\n  printf \"Exit status code: 1 on error, 0 on success, 255 on no-op.\"\n  printf \"\\n\\n\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "# global vars, do not edit\nstrategy=0 # auto\ndebug=0\nquiet=0\nreversed=0\ninfile=\"\"\noutfile=\"\"\nmaxcol=69  # default, may be overridden by param\ncol_gvn=0  # maxcol overridden?\nhdr_txt_1=\"NOTE: '\\\\' line wrapping per RFC 8792\"\nhdr_txt_2=\"NOTE: '\\\\\\\\' line wrapping per RFC 8792\"\nequal_chars=\"=======================================================\"\nspace_chars=\"                                                       \"\ntemp_dir=\"\"\nprog_name='rfcfold'",
      "raw": true
    },
    {
      "indent": 3,
      "text": "# functions for diagnostic messages\nprog_msg() {\n  if [[ \"$quiet\" -eq 0 ]]; then\n    format_string=\"${prog_name}: $1: %s\\n\"\n    shift\n    printf -- \"$format_string\" \"$*\" >&2\n  fi\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "err() {\n  prog_msg 'Error' \"$@\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "warn() {\n  prog_msg 'Warning' \"$@\"\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "dbg() {\n  if [[ \"$debug\" -eq 1 ]]; then\n    prog_msg 'Debug' \"$@\"\n  fi\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "# determine name of [g]sed binary\ntype gsed > /dev/null 2>&1 && SED=gsed || SED=sed",
      "raw": true
    },
    {
      "indent": 3,
      "text": "# warn if a non-GNU sed utility is used\n\"$SED\" --version < /dev/null 2> /dev/null | grep -q GNU || \\\nwarn 'not using GNU `sed` (likely cause if an error occurs).'",
      "raw": true
    },
    {
      "indent": 3,
      "text": "cleanup() {\n  rm -rf \"$temp_dir\"\n}\ntrap 'cleanup' EXIT",
      "raw": true
    },
    {
      "indent": 3,
      "text": "fold_it_1() {\n  # ensure input file doesn't contain the fold-sequence already\n  if [[ -n \"$(\"$SED\" -n '/\\\\$/p' \"$infile\")\" ]]; then\n    err \"infile '$infile' has a line ending with a '\\\\' character.\"\\\n        \"This script cannot fold this file using the '\\\\' strategy\"\\\n        \"without there being false positives produced in the\"\\\n        \"unfolding.\"\n    return 1\n  fi",
      "raw": true
    },
    {
      "indent": 5,
      "text": "# where to fold\nfoldcol=$(expr \"$maxcol\" - 1) # for the inserted '\\' char",
      "raw": true
    },
    {
      "indent": 5,
      "text": "# ensure input file doesn't contain whitespace on the fold column\ngrep -q \"^\\(.\\{$foldcol\\}\\)\\{1,\\} \" \"$infile\"\nif [[ $? -eq 0 ]]; then\n  err \"infile '$infile' has a space character occurring on the\"\\\n      \"folding column.  This file cannot be folded using the\"\\\n      \"'\\\\' strategy.\"\n  return 1\nfi",
      "raw": true
    },
    {
      "indent": 5,
      "text": "# center header text\nlength=$(expr ${#hdr_txt_1} + 2)\nleft_sp=$(expr \\( \"$maxcol\" - \"$length\" \\) / 2)\nright_sp=$(expr \"$maxcol\" - \"$length\" - \"$left_sp\")\nheader=$(printf \"%.*s %s %.*s\" \"$left_sp\" \"$equal_chars\"\\\n                 \"$hdr_txt_1\" \"$right_sp\" \"$equal_chars\")",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  # generate outfile\n  echo \"$header\" > \"$outfile\"\n  echo \"\" >> \"$outfile\"\n  \"$SED\" 's/\\(.\\{'\"$foldcol\"'\\}\\)\\(..\\)/\\1\\\\\\n\\2/;t M;b;:M;P;D;'\\\n    < \"$infile\" >> \"$outfile\" 2> /dev/null\n  if [[ $? -ne 0 ]]; then\n    return 1\n  fi\n  return 0\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "fold_it_2() {\n  # where to fold\n  foldcol=$(expr \"$maxcol\" - 1) # for the inserted '\\' char",
      "raw": true
    },
    {
      "indent": 5,
      "text": "# ensure input file doesn't contain the fold-sequence already\nif [[ -n \"$(\"$SED\" -n '/\\\\$/{N;s/\\\\\\n[ ]*\\\\/&/p;D}' \"$infile\")\" ]]\nthen\n  err \"infile '$infile' has a line ending with a '\\\\' character\"\\\n      \"followed by a '\\\\' character as the first non-space\"\\\n      \"character on the next line.  This script cannot fold\"\\\n      \"this file using the '\\\\\\\\' strategy without there being\"\\\n      \"false positives produced in the unfolding.\"\n  return 1\nfi",
      "raw": true
    },
    {
      "indent": 5,
      "text": "# center header text\nlength=$(expr ${#hdr_txt_2} + 2)\nleft_sp=$(expr \\( \"$maxcol\" - \"$length\" \\) / 2)\nright_sp=$(expr \"$maxcol\" - \"$length\" - \"$left_sp\")\nheader=$(printf \"%.*s %s %.*s\" \"$left_sp\" \"$equal_chars\"\\\n                 \"$hdr_txt_2\" \"$right_sp\" \"$equal_chars\")",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  # generate outfile\n  echo \"$header\" > \"$outfile\"\n  echo \"\" >> \"$outfile\"\n  \"$SED\" 's/\\(.\\{'\"$foldcol\"'\\}\\)\\(..\\)/\\1\\\\\\n\\\\\\2/;t M;b;:M;P;D;'\\\n    < \"$infile\" >> \"$outfile\" 2> /dev/null\n  if [[ $? -ne 0 ]]; then\n    return 1\n  fi\n  return 0\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "fold_it() { # ensure input file doesn't contain a tab grep -q $'\\t' \"$infile\" if [[ $? -eq 0 ]]; then err \"infile '$infile' contains a tab character, which is not\"\\ \"allowed.\" return 1 fi",
      "ja": "fold_it（）{＃入力ファイルにタブgrep -q $ '\\ t' \"$ infile\" if [[$？ -eq 0]]; 次に、「infile '$ infile'にタブ文字が含まれていますが、これは許可されていません」\\ 1 fiを返す"
    },
    {
      "indent": 5,
      "text": "# folding of input containing ASCII control or non-ASCII characters\n# may result in a wrong folding column and is not supported\nif type gawk > /dev/null 2>&1; then\n  env LC_ALL=C gawk '/[\\000-\\014\\016-\\037\\177]/{exit 1}' \"$infile\"\\\n  || warn \"infile '$infile' contains ASCII control characters\"\\\n          \"(unsupported).\"\n  env LC_ALL=C gawk '/[^\\000-\\177]/{exit 1}' \"$infile\"\\\n  || warn \"infile '$infile' contains non-ASCII characters\"\\\n          \"(unsupported).\"\nelse\n  dbg \"no GNU awk; skipping checks for special characters.\"\nfi",
      "raw": true
    },
    {
      "indent": 5,
      "text": "# check if file needs folding\ntestcol=$(expr \"$maxcol\" + 1)\ngrep -q \".\\{$testcol\\}\" \"$infile\"\nif [[ $? -ne 0 ]]; then\n  dbg \"nothing to do; copying infile to outfile.\"\n  cp \"$infile\" \"$outfile\"\n  return 255\nfi",
      "raw": true
    },
    {
      "indent": 3,
      "text": " if [[ \"$strategy\" -eq 1 ]]; then fold_it_1 return $? fi if [[ \"$strategy\" -eq 2 ]]; then fold_it_2 return $? fi quiet_sav=\"$quiet\" quiet=1 fold_it_1 result=$? quiet=\"$quiet_sav\" if [[ \"$result\" -ne 0 ]]; then dbg \"Folding strategy '1' didn't succeed; trying strategy '2'...\" fold_it_2 return $? fi return 0 }",
      "ja": "if [[\"$ strategy\" -eq 1]]; その後、fold_it_1は$を返しますか？ fi if [[\"$ strategy\" -eq 2]]; その後、fold_it_2は$を返しますか？ fi quiet_sav = \"$ quiet\" quiet = 1 fold_it_1 result = $？ quiet = \"$ quiet_sav\" if [[\"$ result\" -ne 0]]; 次に、dbg「戦略1の折りたたみは成功しませんでした。戦略2を試行しています...」fold_it_2は$？を返しますか？ fi return 0}"
    },
    {
      "indent": 3,
      "text": "unfold_it_1() {\n  temp_dir=$(mktemp -d)",
      "raw": true
    },
    {
      "indent": 5,
      "text": "# output all but the first two lines (the header) to wip file\nawk \"NR>2\" \"$infile\" > \"$temp_dir/wip\"",
      "raw": true
    },
    {
      "indent": 5,
      "text": "# unfold wip file\n\"$SED\" '{H;$!d};x;s/^\\n//;s/\\\\\\n *//g' \"$temp_dir/wip\" > \"$outfile\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": " return 0 }",
      "ja": "0を返す}"
    },
    {
      "indent": 3,
      "text": "unfold_it_2() {\n  temp_dir=$(mktemp -d)",
      "raw": true
    },
    {
      "indent": 5,
      "text": "# output all but the first two lines (the header) to wip file\nawk \"NR>2\" \"$infile\" > \"$temp_dir/wip\"",
      "raw": true
    },
    {
      "indent": 5,
      "text": "# unfold wip file\n\"$SED\" '{H;$!d};x;s/^\\n//;s/\\\\\\n *\\\\//g' \"$temp_dir/wip\"\\\n  > \"$outfile\"",
      "raw": true
    },
    {
      "indent": 3,
      "text": " return 0 }",
      "ja": "0を返す}"
    },
    {
      "indent": 3,
      "text": "unfold_it() {\n  # check if file needs unfolding\n  line=$(head -n 1 \"$infile\")\n  line2=$(\"$SED\" -n '2p' \"$infile\")\n  result=$(echo \"$line\" | fgrep \"$hdr_txt_1\")\n  if [[ $? -eq 0 ]]; then\n    if [[ -n \"$line2\" ]]; then\n      err \"the second line in '$infile' is not empty.\"\n      return 1\n    fi\n    unfold_it_1\n    return $?\n  fi\n  result=$(echo \"$line\" | fgrep \"$hdr_txt_2\")\n  if [[ $? -eq 0 ]]; then\n    if [[ -n \"$line2\" ]]; then\n      err \"the second line in '$infile' is not empty.\"\n      return 1\n    fi\n    unfold_it_2\n    return $?\n  fi\n  dbg \"nothing to do; copying infile to outfile.\"\n  cp \"$infile\" \"$outfile\"\n  return 255\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "process_input() {\n  while [[ \"$1\" != \"\" ]]; do\n    if [[ \"$1\" == \"-h\" ]] || [[ \"$1\" == \"--help\" ]]; then\n      print_usage\n      exit 0\n    elif [[ \"$1\" == \"-d\" ]]; then\n      debug=1\n    elif [[ \"$1\" == \"-q\" ]]; then\n      quiet=1\n    elif [[ \"$1\" == \"-s\" ]]; then\n      if [[ \"$#\" -eq \"1\" ]]; then\n        err \"option '-s' needs an argument (use -h for help).\"\n        exit 1\n      fi\n      strategy=\"$2\"\n      shift\n    elif [[ \"$1\" == \"-c\" ]]; then\n      if [[ \"$#\" -eq \"1\" ]]; then\n        err \"option '-c' needs an argument (use -h for help).\"\n        exit 1\n      fi\n      col_gvn=1\n      maxcol=\"$2\"\n      shift\n    elif [[ \"$1\" == \"-r\" ]]; then\n      reversed=1\n    elif [[ \"$1\" == \"-i\" ]]; then\n      if [[ \"$#\" -eq \"1\" ]]; then\n        err \"option '-i' needs an argument (use -h for help).\"\n        exit 1\n      fi\n      infile=\"$2\"\n      shift\n    elif [[ \"$1\" == \"-o\" ]]; then\n      if [[ \"$#\" -eq \"1\" ]]; then\n        err \"option '-o' needs an argument (use -h for help).\"\n        exit 1\n      fi\n      outfile=\"$2\"\n      shift\n    else\n      warn \"ignoring unknown option '$1'.\"\n    fi\n    shift\n  done",
      "raw": true
    },
    {
      "indent": 5,
      "text": "if [[ -z \"$infile\" ]]; then err \"infile parameter missing (use -h for help).\" exit 1 fi",
      "ja": "if [[-z \"$ infile\"]]; 次に、「infileパラメータがありません（ヘルプには-hを使用してください）。」 1 fiを終了"
    },
    {
      "indent": 5,
      "text": "if [[ -z \"$outfile\" ]]; then err \"outfile parameter missing (use -h for help).\" exit 1 fi",
      "ja": "if [[-z \"$ outfile\"]]; 次に、「outfileパラメータがありません（ヘルプには-hを使用してください）。」 1 fiを終了"
    },
    {
      "indent": 5,
      "text": "if [[ ! -f \"$infile\" ]]; then err \"specified file '$infile' does not exist.\" exit 1 fi",
      "ja": "[[！ -f \"$ infile\"]]; 次に、「指定されたファイル '$ infile'は存在しません。」 1 fiを終了"
    },
    {
      "indent": 5,
      "text": "if [[ \"$col_gvn\" -eq 1 ]] && [[ \"$reversed\" -eq 1 ]]; then warn \"'-c' option ignored when unfolding (option '-r').\" fi",
      "ja": "if [[\"$ col_gvn\" -eq 1]] && [[\"$ reversed -eq 1]]; 次に、「展開時に「-c」オプションが無視されることを警告します（オプション '-r'）」。 fi"
    },
    {
      "indent": 5,
      "text": "if [[ \"$strategy\" -eq 0 ]] || [[ \"$strategy\" -eq 2 ]]; then\n  min_supported=$(expr ${#hdr_txt_2} + 8)\nelse\n  min_supported=$(expr ${#hdr_txt_1} + 8)\nfi\nif [[ \"$maxcol\" -lt \"$min_supported\" ]]; then\n  err \"the folding column cannot be less than $min_supported.\"\n  exit 1\nfi",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  # this is only because the code otherwise runs out of equal_chars\n  max_supported=$(expr ${#equal_chars} + 1 + ${#hdr_txt_1} + 1\\\n       + ${#equal_chars})\n  if [[ \"$maxcol\" -gt \"$max_supported\" ]]; then\n    err \"the folding column cannot be more than $max_supported.\"\n    exit 1\n  fi\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "main() { if [[ \"$#\" -eq \"0\" ]]; then print_usage exit 1 fi",
      "ja": "main（）{if [[\"$＃\" -eq \"0\"]]; その後、print_usage exit 1 fi"
    },
    {
      "indent": 5,
      "text": "process_input \"$@\"",
      "ja": "process_input \"$ @\""
    },
    {
      "indent": 3,
      "text": " if [[ \"$reversed\" -eq 0 ]]; then fold_it code=$? else unfold_it code=$? fi exit \"$code\" }",
      "ja": "if [[\"$ reversed\" -eq 0]]; その後、fold_it code = $？ それ以外はunfold_it code = $？ fi exit \"$ code\"}"
    },
    {
      "indent": 3,
      "text": "main \"$@\" <CODE ENDS>",
      "ja": "メインの「$ @」<コード終了>"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors thank the RFC Editor for confirming that there was previously no set convention, at the time of this document's publication, for handling long lines in source code inclusions, thus instigating this work.",
      "ja": "このドキュメントの公開時に、ソースコードのインクルードの長い行を処理するための設定規則が以前になかったことを確認し、この作業を扇動したRFC Editorに感謝します。"
    },
    {
      "indent": 3,
      "text": "The authors thank the following folks for their various contributions while producing this document (sorted by first name): Ben Kaduk, Benoit Claise, Gianmarco Bruno, Italo Busi, Joel Jaeggli, Jonathan Hansford, Lou Berger, Martin Bjorklund, and Rob Wilton.",
      "ja": "著者は、このドキュメントを作成する際にさまざまな貢献をしてくれた以下の人々に感謝します（ファーストネーム順）。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Kent Watsen Watsen Networks",
      "ja": "Kent Watsen Watsen Networks"
    },
    {
      "indent": 3,
      "text": "Email: kent+ietf@watsen.net",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Erik Auerswald Individual Contributor",
      "ja": "Erik Auerswald個人貢献者"
    },
    {
      "indent": 3,
      "text": "Email: auerswal@unix-ag.uni-kl.de",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Adrian Farrel Old Dog Consulting",
      "ja": "エイドリアンファレルオールドドッグコンサルティング"
    },
    {
      "indent": 3,
      "text": "Email: adrian@olddog.co.uk",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Qin Wu Huawei Technologies",
      "ja": "Qin Wu Huawei Technologies"
    },
    {
      "indent": 3,
      "text": "Email: bill.wu@huawei.com",
      "raw": true
    }
  ]
}