{
  "title": {
    "text": "RFC 8968 - Babel Routing Protocol over Datagram Transport Layer Security",
    "ja": "RFC 8968 - データグラムトランスポートレイヤセキュリティ上のBabelルーティングプロトコル"
  },
  "number": 8968,
  "created_at": "2021-04-17 13:00:04.780221+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         A. Décimo\nRequest for Comments: 8968             IRIF, University of Paris-Diderot\nCategory: Standards Track                                    D. Schinazi\nISSN: 2070-1721                                               Google LLC\n                                                           J. Chroboczek\n                                       IRIF, University of Paris-Diderot\n                                                            January 2021",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Babel Routing Protocol over Datagram Transport Layer Security",
      "ja": "データグラムトランスポートレイヤセキュリティ上のBabelルーティングプロトコル"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "The Babel Routing Protocol does not contain any means to authenticate neighbours or provide integrity or confidentiality for messages sent between them. This document specifies a mechanism to ensure these properties using Datagram Transport Layer Security (DTLS).",
      "ja": "Babelルーティングプロトコルには、ネイバーを認証するための任意の手段を含まないか、それらの間で送信されたメッセージに対して完全性または機密性を提供します。このドキュメントは、データグラムトランスポートレイヤセキュリティ（DTLS）を使用してこれらのプロパティを確保するためのメカニズムを指定します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはインターネット規格のトラック文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "この文書は、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表します。それは公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による出版の承認を受けました。インターネット規格に関する詳細情報は、RFC 7841のセクション2で利用できます。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8968.",
      "ja": "この文書の現在のステータス、任意のエラータ、およびフィードバックを提供する方法は、https://www.rfc-editor.org/info/rfc8968で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2021 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2021 IETF信頼と文書著者として識別された人。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "このドキュメントは、このドキュメントの発行日に有効なBCP 78およびIETFドキュメントに関連するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象となります。 これらのドキュメントは、このドキュメントに関するお客様の権利と制限について説明しているため、注意深く確認してください。 このドキュメントから抽出されたコードコンポーネントには、Trust LegalProvisionsのセクション4.eで説明されているSimplifiedBSD Licenseテキストが含まれている必要があり、Simplified BSDLicenseで説明されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n  1.1.  Specification of Requirements\n  1.2.  Applicability\n2.  Operation of the Protocol\n  2.1.  DTLS Connection Initiation\n  2.2.  Protocol Encoding\n  2.3.  Transmission\n  2.4.  Reception\n  2.5.  Neighbour Table Entry\n  2.6.  Simultaneous Operation of Babel over DTLS and Unprotected\n        Babel on a Node\n  2.7.  Simultaneous Operation of Babel over DTLS and Unprotected\n        Babel on a Network\n3.  Interface Maximum Transmission Unit Issues\n4.  IANA Considerations\n5.  Security Considerations\n6.  References\n  6.1.  Normative References\n  6.2.  Informative References\nAppendix A.  Performance Considerations\nAcknowledgments\nAuthors' Addresses",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The Babel routing protocol [RFC8966] does not contain any means to authenticate neighbours or protect messages sent between them. Because of this, an attacker is able to send maliciously crafted Babel messages that could lead a network to route traffic to an attacker or to an under-resourced target, causing denial of service. This document specifies a mechanism to prevent such attacks using Datagram Transport Layer Security (DTLS) [RFC6347].",
      "ja": "Babelルーティングプロトコル[RFC8966]には、ネイバーを認証するための任意の手段を含まないか、それらの間で送信されたメッセージを保護します。このため、攻撃者は、ネットワークをリードしてトラフィックを攻撃者にルーティングすることができる、またはサービス拒否を引き起こす可能性がある悪意をもって作成されたBabelメッセージを送信することができます。このドキュメントは、データグラムトランスポートレイヤセキュリティ（DTLS）[RFC6347]を使用して、そのような攻撃を防ぐためのメカニズムを指定します。"
    },
    {
      "indent": 0,
      "text": "1.1. Specification of Requirements",
      "section_title": true,
      "ja": "1.1. 要件の指定"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 0,
      "text": "1.2. Applicability",
      "section_title": true,
      "ja": "1.2. 適用可能性"
    },
    {
      "indent": 3,
      "text": "The protocol described in this document protects Babel packets with DTLS. As such, it inherits the features offered by DTLS, notably authentication, integrity, optional replay protection, confidentiality, and asymmetric keying. It is therefore expected to be applicable in a wide range of environments.",
      "ja": "この文書に記載されているプロトコルは、BabelパケットをDTLSで保護します。そのように、それはDTLSによって提供される機能、特に認証、整合性、オプションの再生保護、機密性、および非対称のキーイングによって提供される機能を継承します。したがって、広範囲の環境で適用可能であると予想されます。"
    },
    {
      "indent": 3,
      "text": "There exists another mechanism for securing Babel, namely Message Authentication Code (MAC) authentication for Babel (Babel-MAC) [RFC8967]. Babel-MAC only offers basic features, namely authentication, integrity, and replay protection with a small number of symmetric keys. A comparison of Babel security mechanisms and their applicability can be found in [RFC8966].",
      "ja": "Babel（Babel-Mac）のメッセージ認証コード（MAC）認証（RFC8967]のメッセージ認証コード（MAC）認証を保護するための別のメカニズムが存在します。Babel-Macは、基本的な機能、すなわち認証、整合性、および少数の対称キーを持つ再生保護のみを提供します。Babelのセキュリティメカニズムとその適用性の比較は[RFC8966]にあります。"
    },
    {
      "indent": 3,
      "text": "Note that Babel over DTLS provides a single authentication domain, meaning that all nodes that have the right credentials can convey any and all routing information.",
      "ja": "DTLS上のBABELは単一の認証ドメインを提供します。つまり、正しい認証情報を持つすべてのノードは、すべてのルーティング情報を伝えることができます。"
    },
    {
      "indent": 3,
      "text": "DTLS supports several mechanisms by which nodes can identify themselves and prove possession of secrets tied to these identities. This document does not prescribe which of these mechanisms to use; details of identity management are left to deployment profiles of Babel over DTLS.",
      "ja": "DTLSは、ノードが自分自身を識別し、これらのIDに関連した秘密の所有を証明できるいくつかのメカニズムをサポートしています。この文書は、これらのメカニズムのどれを使用するかを規定していません。アイデンティティ管理の詳細は、DTLSを介してBabelの展開プロファイルに残されています。"
    },
    {
      "indent": 0,
      "text": "2. Operation of the Protocol",
      "section_title": true,
      "ja": "2. プロトコルの操作"
    },
    {
      "indent": 3,
      "text": "Babel over DTLS requires some changes to how Babel operates. First, DTLS is a client-server protocol, while Babel is a peer-to-peer protocol. Second, DTLS can only protect unicast communication, while Babel packets can be sent to both unicast and multicast destinations.",
      "ja": "DTLS上のBabelは、Babelがどのように動作するかにいくつかの変更を必要とします。まず、DTLSはクライアントサーバープロトコルですが、Babelはピアツーピアプロトコルです。第二に、DTLはユニキャスト通信しか保護できず、ベイビルパケットはユニキャストとマルチキャスト宛先の両方に送信できます。"
    },
    {
      "indent": 0,
      "text": "2.1. DTLS Connection Initiation",
      "section_title": true,
      "ja": "2.1. DTLS接続の開始"
    },
    {
      "indent": 3,
      "text": "Babel over DTLS operates on a different port than unencrypted Babel. All Babel over DTLS nodes MUST act as DTLS servers on a given UDP port and MUST listen for unencrypted Babel traffic on another UDP port, which MUST be distinct from the first one. The default port for Babel over DTLS is registered with IANA as the \"babel-dtls\" port (UDP port 6699, see Section 4), and the port exchanging unencrypted Babel traffic is registered as the \"babel\" port (UDP port 6696, see Section 5 of [RFC8966]).",
      "ja": "DTLS上のBabelは、暗号化されていないBabelとは異なるポートで動作します。DTLSノードを介したすべてのBabel over DTLSサーバーとして機能する必要があり、別のUDPポートで暗号化されていないBabelトラフィックをリスンする必要があります。これは最初のUDPポートとは異なる必要があります。「Babel-DTLS」ポート（UDPポート6699、セクション4を参照）としてIANAに登録されており、未暗号化されていないBabelトラフィックを交換するポートが「Babel」ポートとして登録されている（UDPポート6696）。[RFC8966]のセクション5）。"
    },
    {
      "indent": 3,
      "text": "When a Babel node discovers a new neighbour (generally by receiving an unencrypted multicast Babel packet), it compares the neighbour's IP address with its own, using network byte ordering. If a node's address is lower than the recently discovered neighbour's address, it acts as a client and connects to the neighbour. In other words, the node with the lowest address is the DTLS client for this pairwise relationship. As an example, fe80::1:2 is considered lower than fe80::2:1.",
      "ja": "Babelノードが新しいネイバーを検出すると（一般的に暗号化されていないマルチキャストBable Packetを受信することによって）、ネットワークバイトの順序付けを使用して、ネイバーのIPアドレスを独自に比較します。ノードのアドレスが最近発見されたネイバーのアドレスより低い場合は、クライアントとして機能し、ネイバーに接続します。言い換えれば、最も低いアドレスを持つノードは、このペアワイズ関係のためのDTLSクライアントです。例として、Fe80 :: 1：2はFe80 :: 2：1より低いと見なされます。"
    },
    {
      "indent": 3,
      "text": "The node acting as DTLS client initiates its DTLS connection from an ephemeral UDP port. Nodes SHOULD ensure that new client DTLS connections use different ephemeral ports from recently used connections to allow servers to differentiate between the new and old DTLS connections. Alternatively, nodes could use DTLS connection identifiers [DTLS-CID] as a higher-entropy mechanism to distinguish between connections.",
      "ja": "DTLSクライアントとして機能するノードは、エフェメラルUDPポートからのDTLS接続を開始します。ノードは、新しいクライアントDTLS接続が最近使用された接続から異なるエフェメラ語ポートを使用して、サーバーと古いDTLS接続を区別できるようにする必要があります。あるいは、ノードは、接続を区別するために、より高いエントロピーメカニズムとしてDTLS接続識別子[DTLS-CID]を使用できます。"
    },
    {
      "indent": 3,
      "text": "When a node receives a new DTLS connection, it MUST verify that the source IP address is either an IPv6 link-local address or an IPv4 address belonging to the local network; if it is neither, it MUST reject the connection. Nodes use mutual authentication (authenticating both client and server); clients MUST authenticate servers and servers MUST authenticate clients. Implementations MUST support authenticating peers against a local store of credentials. If either node fails to authenticate its peer against its local policy, it MUST abort the DTLS handshake. The guidance given in [BCP195] MUST be followed to avoid attacks on DTLS. Additionally, nodes MUST only negotiate DTLS version 1.2 or higher. Nodes MUST use DTLS replay protection to prevent attackers from replaying stale information. Nodes SHOULD drop packets that have been reordered by more than two IHU (I Heard You) intervals, to avoid letting attackers make stale information last longer. If a node receives a new DTLS connection from a neighbour to whom it already has a connection, the node MUST NOT discard the older connection until it has completed the handshake of the new one and validated the identity of the peer.",
      "ja": "ノードが新しいDTLS接続を受信すると、ソースIPアドレスがローカルネットワークに属するIPv6リンクローカルアドレスまたはIPv4アドレスであることを確認する必要があります。どちらでもない場合は、接続を拒否する必要があります。ノードは相互認証を使用します（クライアントとサーバーの両方の認証）。クライアントはサーバーを認証し、サーバーはクライアントを認証する必要があります。実装は、信任状のローカルストアに対するピアの認証をサポートしなければなりません。いずれかのノードがそのローカルポリシーに対してピアを認証できない場合は、DTLSハンドシェイクを中止する必要があります。 DTLSに対する攻撃を回避するために[BCP195]に記載されているガイダンスを続ける必要があります。さらに、ノードはDTLSバージョン1.2以降をネゴシエートするだけです。攻撃者が古い情報を再生するのを防ぐために、ノードはDTLS再生保護を使用する必要があります。ノードは、攻撃者が古い情報を長持ちさせるのを避けるために、2つ以上のIHU（私は聞いた）間隔で並べ替えられたパケットを落とすべきです。ノードが接続がすでに接続されているネイバーから新しいDTLS接続を受信した場合、ノードは新しい接続を完了し、ピアのIDを検証したまで、古い接続を破棄してはいけません。"
    },
    {
      "indent": 0,
      "text": "2.2. Protocol Encoding",
      "section_title": true,
      "ja": "2.2. プロトコルエンコーディング"
    },
    {
      "indent": 3,
      "text": "Babel over DTLS sends all unicast Babel packets protected by DTLS. The entire Babel packet, from the Magic byte at the start of the Babel header to the last byte of the Babel packet trailer, is sent protected by DTLS.",
      "ja": "DTLS上のBabelは、DTLSによって保護されているすべてのユニキャストベイブパケットを送信します。Babelヘッダーの開始時のマジックバイトからBabel Packet Trailerの最後のバイトへのマジックバイトからBabelパケット全体がDTLSによって保護されています。"
    },
    {
      "indent": 0,
      "text": "2.3. Transmission",
      "section_title": true,
      "ja": "2.3. 伝染;感染"
    },
    {
      "indent": 3,
      "text": "When sending packets, Babel over DTLS nodes MUST NOT send any TLVs over the unprotected \"babel\" port, with the exception of Hello TLVs without the Unicast flag set. Babel over DTLS nodes MUST NOT send any unprotected unicast packets. This ensures the confidentiality of the information sent in Babel packets (e.g., the network topology) by only sending it encrypted by DTLS. Unless some out-of-band neighbour discovery mechanism is available, nodes SHOULD periodically send unprotected Multicast Hellos to ensure discovery of new neighbours. In order to maintain bidirectional reachability, nodes can either rely entirely on unprotected Multicast Hellos, or send protected Unicast Hellos in addition to the Multicast Hellos.",
      "ja": "パケットを送信するとき、Babel over DTLSノードは、Unicastフラグを設定していないHello TLVを除いて、保護されていない「Babel」ポートを介してTLVを送信してはいけません。DTLSの上のBabelは、保護されていないユニキャストパケットを送信してはいけません。これにより、DTLSによって暗号化された送信を送信することによって、Babelパケット（例えば、ネットワークトポロジ）で送信された情報の機密性が保証されます。いくつかの帯域外の近隣探索メカニズムが利用可能でない限り、ノードは新しい隣人の発見を確実にするために保護されていないマルチキャストHellosを定期的に送信する必要があります。双方向の到達可能性を維持するために、ノードは完全に保護されていないマルチキャストHellosに頼るか、マルチキャストHellosに加えて保護されたユニキャストHellosを送信することができます。"
    },
    {
      "indent": 3,
      "text": "Since Babel over DTLS only protects unicast packets, implementors may implement Babel over DTLS by modifying an implementation of Babel without DTLS support and replacing any TLV previously sent over multicast with a separate TLV sent over unicast for each neighbour. TLVs previously sent over multicast can be replaced with the same contents over unicast, with the exception of Hellos as described above. Some implementations could also change the contents of IHU TLVs when converting to unicast in order to remove redundant information.",
      "ja": "DTLS上のBABELはユニキャストパケットを保護しているため、DTLSがサポートされていないBABELの実装を変更し、各隣接で送信された別のTLVに以前に送信されたTLVを置き換えることで、DTLSを介してBABELを実装することができます。マルチキャストを介して送信されたTLVは、上記のようなhellosを除いて、ユニキャストを介して同じ内容に置き換えることができます。いくつかの実装は、冗長な情報を削除するためにユニキャストに変換するときにIHU TLVの内容を変更することもできます。"
    },
    {
      "indent": 0,
      "text": "2.4. Reception",
      "section_title": true,
      "ja": "2.4. 受信"
    },
    {
      "indent": 3,
      "text": "Babel over DTLS nodes can receive Babel packets either protected over a DTLS connection or unprotected directly over the \"babel\" port. To ensure the security properties of this mechanism, unprotected packets are treated differently. Nodes MUST silently ignore any unprotected packet sent over unicast. When parsing an unprotected packet, a node MUST silently ignore all TLVs that are not of type Hello. Nodes MUST also silently ignore any unprotected Hello with the Unicast flag set. Note that receiving an unprotected packet can still be used to discover new neighbours, even when all TLVs in that packet are silently ignored.",
      "ja": "DTLSノード上のBabelは、DTLS接続を介して保護されているか、「Babel」ポートを通して直接保護されていないBabelパケットを受信できます。このメカニズムのセキュリティプロパティを確保するために、保護されていないパケットは異なる方法で扱われます。ノードは、ユニキャストを介して送信された保護されていないパケットを黙って無視する必要があります。保護されていないパケットを解析するとき、ノードはこんにちはタイプのものではないすべてのTLVを無視する必要があります。ノードは、ユニキャストフラグセットで保護されていないhelloを黙って無視する必要があります。保護されていないパケットを受信することは、そのパケット内のすべてのTLVが静かに無視されている場合でも、新しい隣接者を検出するために使用できます。"
    },
    {
      "indent": 0,
      "text": "2.5. Neighbour Table Entry",
      "section_title": true,
      "ja": "2.5. ネイバーテーブルエントリ"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED for nodes to associate the state of their DTLS connection with their neighbour table. When a neighbour entry is flushed from the neighbour table (Appendix A of [RFC8966]), its associated DTLS state SHOULD be discarded. The node SHOULD send a DTLS close_notify alert to the neighbour if it believes the link is still viable.",
      "ja": "DTLS接続の状態を隣接テーブルと関連付けるためにノードに推奨されます。ネイバーエントリがネイバーテーブルからフラッシュされている場合（[RFC8966]の付録A）、その関連DTLS状態は破棄されるべきです。リンクがまだ実行可能であると考えている場合、ノードはDTLS Close_Notifyアラートをネイバーに送信する必要があります。"
    },
    {
      "indent": 0,
      "text": "2.6. Simultaneous Operation of Babel over DTLS and Unprotected Babel on a Node",
      "ja": "2.6. ノード上のDTLと保護されていないバベルの上のBABELの同時操作"
    },
    {
      "indent": 3,
      "text": "Implementations MAY implement both Babel over DTLS and unprotected Babel. Additionally, a node MAY simultaneously run both Babel over DTLS and unprotected Babel. However, a node running both MUST ensure that it runs them on separate interfaces, as the security properties of Babel over DTLS rely on ignoring unprotected Babel packets (other than Multicast Hellos). An implementation MAY offer configuration options to allow unprotected Babel on some interfaces but not others, which effectively gives nodes on that interface the same access as authenticated nodes; however, this SHOULD NOT be done unless that interface has a mechanism to authenticate nodes at a lower layer (e.g., IPsec).",
      "ja": "実装は、DTLS上でBabelの両方を実装することができ、保護されていないBabel。さらに、ノードは同時にDTLS上でBabelの両方を実行することができ、保護されていないベイベル。ただし、DTLを介したBABELのセキュリティプロパティは、保護されていないBable Packets（マルチキャストhellos以外）を無視することに依存しているため、両方のノードが別々のインターフェイスで実行されることを確認する必要があります。実装は、一部のインタフェースで保護されていないBabelを使用できるように構成オプションを提供することができますが、そのインターフェイスに認証済みノードと同じアクセスが有効になります。しかしながら、このインターフェースが下位レイヤ（例えば、IPSec）でノードを認証するためのメカニズムを有する限り、これは行われるべきではない。"
    },
    {
      "indent": 0,
      "text": "2.7. Simultaneous Operation of Babel over DTLS and Unprotected Babel on a Network",
      "ja": "2.7. ネットワーク上のDTLと保護されていないバベルの上のBABELの同時操作"
    },
    {
      "indent": 3,
      "text": "If Babel over DTLS and unprotected Babel are both operated on the same network, the Babel over DTLS implementation will receive unprotected Multicast Hellos and attempt to initiate a DTLS connection. These connection attempts can be sent to nodes that only run unprotected Babel, who will not respond. Babel over DTLS implementations SHOULD therefore rate-limit their DTLS connection attempts to avoid causing undue load on the network.",
      "ja": "DTLS上のBABELと保護されていないBabelが両方とも同じネットワーク上で操作されている場合、DTLS実装上のBabelは保護されていないマルチキャストHellosを受け取り、DTLS接続を開始しようとします。これらの接続試行は、対処しないBabelのみを実行するノードに送信できます。したがって、DTLSの実装上のBabelは、ネットワーク上で過度の負荷を払うことを避けるためにDTLS接続の試みをレート制限する必要があります。"
    },
    {
      "indent": 0,
      "text": "3. Interface Maximum Transmission Unit Issues",
      "section_title": true,
      "ja": "3. インターフェース最大伝送単位の問題"
    },
    {
      "indent": 3,
      "text": "Compared to unprotected Babel, DTLS adds header, authentication tag, and possibly block-size padding overhead to every packet. This reduces the size of the Babel payload that can be carried. This document does not relax the packet size requirements in Section 4 of [RFC8966] but recommends that DTLS overhead be taken into account when computing maximum packet size.",
      "ja": "保護されていないBabelと比較して、DTLSはヘッダー、認証タグ、およびおそらくすべてのパケットにブロックサイズのパディングオーバーヘッドを追加します。これにより、キャリングできるベイベルペイロードのサイズが縮小されます。この文書では、[RFC8966]のセクション4のパケットサイズの要件を緩和することはできませんが、最大パケットサイズを計算するときにDTLSオーバーヘッドを考慮に入れることをお勧めします。"
    },
    {
      "indent": 3,
      "text": "More precisely, nodes SHOULD compute the overhead of DTLS depending on the ciphersuites in use and SHOULD NOT send Babel packets larger than the interface maximum transmission unit (MTU) minus the overhead of IP, UDP, and DTLS. Nodes MUST NOT send Babel packets larger than the attached interface's MTU adjusted for known lower-layer headers (at least UDP and IP) or 512 octets, whichever is larger, but not exceeding 2^(16) - 1 adjusted for lower-layer headers. Every Babel speaker MUST be able to receive packets that are as large as any attached interface's MTU adjusted for UDP and IP headers or 512 octets, whichever is larger. Note that this requirement on reception does not take into account the overhead of DTLS because the peer may not have the ability to compute the overhead of DTLS, and the packet may be fragmented by lower layers.",
      "ja": "より正確には、ノードは使用中の暗号スイートに応じてDTLSのオーバーヘッドを計算する必要があり、インタフェース最大伝送ユニット（MTU）からIP、UDP、およびDTLのオーバーヘッドをマイナスしているBabelパケットを送信しないでください。ノードは、既知の下位レイヤーのヘッダ（少なくともUDPとIP）または512オクテットの方が調整された添付のインタフェースのMTUよりも大きいBabelパケットを送信してはいけません。。すべてのBabelスピーカーは、UDPおよびIPヘッダーまたは512オクテットのどちらか大きい方の添付のインタフェースのMTUのようなパケットを受け取ることができなければなりません。ピアはDTLSのオーバーヘッドを計算することができず、パケットが下位層で断片化されていれば、受信時のこの要件はDTLSのオーバーヘッドを考慮に入れていないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "Note that distinct DTLS connections can use different ciphers, which can have different amounts of per-packet overhead. Therefore, the MTU to one neighbour can be different from the MTU to another neighbour on the same link.",
      "ja": "異なるDTLS接続は、パケットごとのオーバーヘッドが異なる可能性があるさまざまな暗号を使用できます。したがって、MTUから1つの隣接が同じリンク上のMTUとは異なる可能性があります。"
    },
    {
      "indent": 0,
      "text": "4. IANA Considerations",
      "section_title": true,
      "ja": "4. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has registered a UDP port number, called \"babel-dtls\", for use by Babel over DTLS:",
      "ja": "IANAは、「BABEL-DTLS」と呼ばれるUDPポート番号を登録しています。"
    },
    {
      "indent": 6,
      "text": "Service Name: babel-dtls",
      "ja": "サービス名：Babel-DTLS"
    },
    {
      "indent": 6,
      "text": "Port Number: 6699",
      "ja": "ポート番号：6699"
    },
    {
      "indent": 6,
      "text": "Transport Protocols: UDP only",
      "ja": "トランスポートプロトコル：UDPのみ"
    },
    {
      "indent": 6,
      "text": "Description: Babel Routing Protocol over DTLS",
      "ja": "説明：DTLS上のBabelルーティングプロトコル"
    },
    {
      "indent": 6,
      "text": "Assignee: IESG, iesg@ietf.org",
      "ja": "譲受人：IESG、iesg@ietf.org"
    },
    {
      "indent": 6,
      "text": "Contact: IETF Chair, chair@ietf.org",
      "ja": "連絡先：IETFチェア、議長@ ietf.org"
    },
    {
      "indent": 6,
      "text": "Reference: RFC 8968",
      "ja": "参照：RFC 8968"
    },
    {
      "indent": 6,
      "text": "Service Code: None",
      "ja": "サービスコード：なし"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "A malicious client might attempt to perform a high number of DTLS handshakes with a server. As the clients are not uniquely identified by the protocol until the handshake completes and can be obfuscated with IPv6 temporary addresses, a server needs to mitigate the impact of such an attack. Note that attackers might attempt to keep in-progress handshakes open for as long as possible by using variants on the attack commonly known as Slowloris [SLOWLORIS]. Mitigating these attacks might involve limiting the rate of handshakes from a given subnet or more advanced denial of service avoidance techniques beyond the scope of this document.",
      "ja": "悪意のあるクライアントは、サーバーを持つ多数のDTLSハンドシェイクを実行しようとする可能性があります。ハンドシェイクが完了し、IPv6の一時アドレスで難読化するまでクライアントがプロトコルによって一意に識別されないため、サーバーはそのような攻撃の影響を軽減する必要があります。攻撃者は、Slylorlis [Slowloris]として一般的に知られている攻撃に対してバリアントを使用することで、できるだけ進行中のハンドシェイクを開放しようとする可能性があります。これらの攻撃を軽減することは、この文書の範囲を超えて、特定のサブネットまたはより高度なサービス拒否回避技術からのハンドシェイクの率を制限することを含み得る。"
    },
    {
      "indent": 3,
      "text": "Babel over DTLS allows sending Multicast Hellos unprotected; attackers can therefore tamper with them. For example, an attacker could send erroneous values for the Seqno and Interval fields, causing bidirectional reachability detection to fail. While implementations MAY use Multicast Hellos for link quality estimation, they SHOULD also emit protected Unicast Hellos to prevent this class of denial-of-service attack.",
      "ja": "DTLS上のBabelは、保護されていないマルチキャストHellosの送信を可能にします。それゆえ攻撃者はそれらを改ざんすることができます。たとえば、攻撃者はSeqnoおよびIntervalフィールドに誤った値を送信し、双方向到達可能性検出を失敗させる可能性があります。実装はリンク品質推定に対してマルチキャストHelloを使用することができますが、これらのクラスのサービス拒否攻撃を防ぐために保護されたユニキャストHelloも発信する必要があります。"
    },
    {
      "indent": 3,
      "text": "While DTLS provides protection against an attacker that replays valid packets, DTLS is not able to detect when an active on-path attacker intercepts valid packets and resends them at a later time. This attack could be used to make a node believe it has bidirectional reachability to a neighbour even though that neighbour has disconnected from the network. To prevent this attack, nodes MUST discard the DTLS state associated with a neighbour after a finite time of not receiving valid DTLS packets. This can be implemented by, for example, discarding a neighbour's DTLS state when its associated IHU timer fires. Note that relying solely on the receipt of Hellos is not sufficient as Multicast Hellos are sent unprotected. Additionally, an attacker could save some packets and replay them later in hopes of propagating stale routing information at a later time. This can be mitigated by discarding received packets that have been reordered by more than two IHU intervals.",
      "ja": "DTLSは有効なパケットを再生する攻撃者に対して保護を提供しますが、DTLはアクティブなオンパス攻撃者が有効なパケットを傍受して後でそれらを再送信することができません。この攻撃は、ネイバーがネットワークから切断されていても、隣接に双方向の到達可能性があると考えられるノードを作るために使用できます。この攻撃を防ぐために、ノードは有効なDTLSパケットを受信しないという有限時間の後にネイバーに関連付けられているDTLS状態を破棄する必要があります。これは、例えば、関連するIHUタイマーが発火したときに隣接のDTLS状態を破棄することによって実装することができる。Multicast Hellosが保護されていないように、Hellosの受信にのみ頼っていないことに注意してください。さらに、攻撃者は後で古いルーティング情報を伝播することを期待して後でいくつかのパケットを節約し、それらを再生することができます。これは、2つ以上のIHU間隔で並べ替えられた受信パケットを破棄することによって軽減できます。"
    },
    {
      "indent": 0,
      "text": "6. References",
      "section_title": true,
      "ja": "6. 参考文献"
    },
    {
      "indent": 0,
      "text": "6.1. Normative References",
      "section_title": true,
      "ja": "6.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[BCP195] Sheffer, Y., Holz, R., and P. Saint-Andre, \"Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)\", BCP 195, RFC 7525, May 2015, <https://www.rfc-editor.org/info/bcp195>.",
      "ja": "[BCP195] Sheffer、Y.、Holz、R.およびP.Saint-Andre、「トランスポート層セキュリティ（TLS）およびデータグラムトランスポート層セキュリティ（DTLS）およびBCP 195、RFC 7525、2015年5月の推奨事項<https：//www.rfc-editor.org/info/bcp195>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] BRADNER、S、「RFCSで使用するためのキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https：//www.rfc-editor.org/info/RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC6347] Rescorla, E. and N. Modadugu, \"Datagram Transport Layer Security Version 1.2\", RFC 6347, DOI 10.17487/RFC6347, January 2012, <https://www.rfc-editor.org/info/rfc6347>.",
      "ja": "[RFC6347] RESCORLA、E.およびN. MODADUGU、「データグラムトランスポートレイヤセキュリティバージョン1.2」、RFC 6347、DOI 10.17487 / RFC6347、2012年1月、<https：//www.rfc-editor.org/info/rfc6347>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B、「RFC 2119キーワードの大文字の曖昧さ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https：//www.rfc-editor.org/info/RFC8174>。"
    },
    {
      "indent": 3,
      "text": "[RFC8966] Chroboczek, J. and D. Schinazi, \"The Babel Routing Protocol\", RFC 8966, DOI 10.17487/RFC8966, January 2021, <https://www.rfc-editor.org/info/rfc8966>.",
      "ja": "[RFC8966] Chroboczek、J.およびD.Schinazi、「The Babel Routing Protocol」、RFC 8966、DOI 10.17487 / RFC8966、2021年1月、<https：//www.rfc-editor.org/info/rfc8966>。"
    },
    {
      "indent": 0,
      "text": "6.2. Informative References",
      "section_title": true,
      "ja": "6.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[DTLS-CID] Rescorla, E., Tschofenig, H., and T. Fossati, \"Connection Identifiers for DTLS 1.2\", Work in Progress, Internet-Draft, draft-ietf-tls-dtls-connection-id-08, 2 November 2020, <https://tools.ietf.org/html/draft-ietf-tls-dtls-connection-id-08>.",
      "ja": "[DTLS-CID] Rescorla、E.、Tschofenig、H.、およびT.Fossati、「DTLSの接続識別子1.2」、進行中の作業、インターネットドラフト、Draft-IETF-TLS-DTLS-Connection-ID-082020年11月2日、<https://tools.ietf.org/html/draft-ietf-tls-dtls-Connection-ID-08>。"
    },
    {
      "indent": 3,
      "text": "[RFC7250] Wouters, P., Ed., Tschofenig, H., Ed., Gilmore, J., Weiler, S., and T. Kivinen, \"Using Raw Public Keys in Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)\", RFC 7250, DOI 10.17487/RFC7250, June 2014, <https://www.rfc-editor.org/info/rfc7250>.",
      "ja": "[RFC7250] Wouters、P.、ED、Tschofenig、H.、ED。、Gilmore、J.、Weiler、S.、T.Kivinen、「トランスポート層セキュリティ（TLS）およびデータグラムトランスポート層での生の公開鍵を使用する」セキュリティ（DTLS） \"、RFC 7250、DOI 10.17487 / RFC7250、2014年6月、<https://www.rfc-editor.org/info/rfc7250>。"
    },
    {
      "indent": 3,
      "text": "[RFC7918] Langley, A., Modadugu, N., and B. Moeller, \"Transport Layer Security (TLS) False Start\", RFC 7918, DOI 10.17487/RFC7918, August 2016, <https://www.rfc-editor.org/info/rfc7918>.",
      "ja": "[RFC7918] Langley、A。、Modadugu、N.、B. Moeller、「トランスポート層セキュリティ（TLS）偽のスタート」、RFC 7918、DOI 10.17487 / RFC7918、2016年8月、<https：//www.rfc-編集者.ORG / INFO / RFC7918>。"
    },
    {
      "indent": 3,
      "text": "[RFC7924] Santesson, S. and H. Tschofenig, \"Transport Layer Security (TLS) Cached Information Extension\", RFC 7924, DOI 10.17487/RFC7924, July 2016, <https://www.rfc-editor.org/info/rfc7924>.",
      "ja": "[RFC7924] Santesson、S.およびH.Tschofenig、「トランスポート層セキュリティ（TLSキャッシュ情報拡張」、RFC 7924、DOI 10.17487 / RFC7924、2016年7月、<https：//www.rfc-editor.org/info/RFC7924>。"
    },
    {
      "indent": 3,
      "text": "[RFC8094] Reddy, T., Wing, D., and P. Patil, \"DNS over Datagram Transport Layer Security (DTLS)\", RFC 8094, DOI 10.17487/RFC8094, February 2017, <https://www.rfc-editor.org/info/rfc8094>.",
      "ja": "[RFC8094] Reddy、T.、Wing、D.、およびP. Aptil、「DNS overデータグラムトランスポート層セキュリティ（DNS）、RFC 8094、DOI 10.17487 / RFC8094、2017年2月、<https：///www.rfc-editor.org/info/rfc8094>。"
    },
    {
      "indent": 3,
      "text": "[RFC8967] Dô, C., Kolodziejak, W., and J. Chroboczek, \"MAC Authentication for the Babel Routing Protocol\", RFC 8967, DOI 10.17487/RFC8967, January 2021, <https://www.rfc-editor.org/info/rfc8967>.",
      "ja": "[RFC8967]Dô、C.、Kolodziejak、W.およびJ.Chroboczek、「BabelルーティングプロトコルのMAC認証」、RFC 8967、DOI 10.17487 / RFC8967、2021年1月、<https：//www.rfc-編集者。ORG / INFO / RFC8967>。"
    },
    {
      "indent": 3,
      "text": "[SLOWLORIS] Hansen, R., \"Slowloris HTTP DoS\", June 2009, <https://web.archive.org/web/20150315054838/ http://ha.ckers.org/slowloris/>.",
      "ja": "[Slowloris] Hansen、R.、 \"Slowloris HTTP DOS\"、2009年6月、<https://web.archive.org/web/20150315054838/ http://ha.ckers.org/slowloris/>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Performance Considerations",
      "section_title": true,
      "ja": "付録Aパフォーマンスに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "To reduce the number of octets taken by the DTLS handshake, especially the size of the certificate in the ServerHello (which can be several kilobytes), Babel peers can use raw public keys [RFC7250] or the Cached Information Extension [RFC7924]. The Cached Information Extension avoids transmitting the server's certificate and certificate chain if the client has cached that information from a previous TLS handshake. TLS False Start [RFC7918] can reduce round trips by allowing the TLS second flight of messages (ChangeCipherSpec) to also contain the (encrypted) Babel packet.",
      "ja": "DTLSハンドシェイク、特にServerHello（これは数キロバイトにすることができる）の証明書のサイズを縮小するために、Babel PeersはRAW Public Keys [RFC7250]またはキャッシュされた情報拡張[RFC7924]を使用できます。キャッシュされた情報拡張は、クライアントが以前のTLSハンドシェイクからその情報をキャッシュした場合、サーバーの証明書および証明書チェーンの送信を回避します。TLS False Start [RFC7918]は、メッセージのTLSの2番目のフライト（ChangeCipherspec）を（暗号化された）Babelパケットを含むことを許可することで、往復を減らすことができます。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Roman Danyliw, Donald Eastlake, Thomas Fossati, Benjamin Kaduk, Gabriel Kerneis, Mirja Kühlewind, Antoni Przygienda, Henning Rogge, Dan Romascanu, Barbara Stark, Markus Stenberg, Dave Taht, Martin Thomson, Sean Turner, and Martin Vigoureux for their input and contributions. The performance considerations in this document were inspired from the ones for DNS over DTLS [RFC8094].",
      "ja": "著者らは、Roman Danyliw、Donald Eastlake、Thomas Fossati、Benjamin Kaduk、GabrielKühleis、GabrielKühlewind、MirjaKühlewind、Antoni Przygienda、Henning Rogge、Dan Romascanu、Barbara Stark、Martin Thomson、Sean Turner、Martin彼らの入力と貢献のためのVigoueux。この文書のパフォーマンス上の考慮事項は、DNS上のDNS上のDNSの場合[RFC8094]から触発されました。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者の住所"
    },
    {
      "indent": 3,
      "text": "Antonin Décimo IRIF, University of Paris-Diderot Paris France",
      "ja": "パリ大学パリフランス大学、AntoninDécimoIrif"
    },
    {
      "indent": 3,
      "text": "Email: antonin.decimo@gmail.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "David Schinazi Google LLC 1600 Amphitheatre Parkway Mountain View, CA 94043 United States of America",
      "ja": "David Schinazi Google LLC 1600 Amphitheater Parkway Mountain View、CA 94043アメリカ合衆国"
    },
    {
      "indent": 3,
      "text": "Email: dschinazi.ietf@gmail.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Juliusz Chroboczek IRIF, University of Paris-Diderot Case 7014 75205 Paris CEDEX 13 France",
      "ja": "Juliusz Chroboczek IRIF、パリ大学ケース7014 75205 Paris Cedex 13フランス"
    },
    {
      "indent": 3,
      "text": "Email: jch@irif.fr",
      "raw": true,
      "ja": ""
    }
  ]
}