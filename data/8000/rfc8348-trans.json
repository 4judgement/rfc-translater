{
  "title": {
    "text": "RFC 8348 - A YANG Data Model for Hardware Management",
    "ja": "RFC 8348 - ハードウェア管理のためのYANGデータモデル"
  },
  "number": 8348,
  "created_at": "2020-08-23 16:36:06.855146+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        A. Bierman\nRequest for Comments: 8348                                     YumaWorks\nCategory: Standards Track                                   M. Bjorklund\nISSN: 2070-1721                                           Tail-f Systems\n                                                                 J. Dong\n                                                     Huawei Technologies\n                                                            D. Romascanu\n                                                              March 2018",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "A YANG Data Model for Hardware Management",
      "ja": "ハードウェア管理のためのYANGデータモデル"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document defines a YANG data model for the management of hardware on a single server.",
      "ja": "このドキュメントでは、単一サーバー上のハードウェアを管理するためのYANGデータモデルを定義しています。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 7841のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8348.",
      "ja": "このドキュメントの現在のステータス、正誤表、およびフィードバックの提供方法に関する情報は、https：//www.rfc-editor.org/info/rfc8348で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2018 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Terminology ................................................3\n   1.2. Tree Diagrams ..............................................3\n2. Objectives ......................................................4\n3. Hardware Data Model .............................................4\n   3.1. The Components Lists .......................................5\n4. Relationship to ENTITY-MIB ......................................6\n5. Relationship to ENTITY-SENSOR-MIB ...............................8\n6. Relationship to ENTITY-STATE-MIB ................................8\n7. Hardware YANG Modules ...........................................9\n   7.1. \"ietf-hardware\" Module .....................................9\n   7.2. \"iana-hardware\" Module ....................................34\n8. IANA Considerations ............................................38\n   8.1. URI Registrations .........................................38\n   8.2. YANG Module Registrations .................................39\n9. Security Considerations ........................................39\n10. References ....................................................40\n   10.1. Normative References .....................................40\n   10.2. Informative References ...................................41\nAppendix A.  Hardware State Data Model ............................42\n  A.1.  Hardware State YANG Module ................................43\nAcknowledgments ...................................................60\nAuthors' Addresses ................................................60",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document defines a YANG data model [RFC7950] for the management of hardware on a single server.",
      "ja": "このドキュメントでは、単一サーバー上のハードウェア管理用のYANGデータモデル[RFC7950]を定義しています。"
    },
    {
      "indent": 3,
      "text": "The data model includes configuration and system state (status information and counters for the collection of statistics).",
      "ja": "データモデルには、構成とシステム状態（ステータス情報と統計収集用のカウンター）が含まれます。"
    },
    {
      "indent": 3,
      "text": "The data model in this document is designed to be compliant with the Network Management Datastore Architecture (NMDA) [RFC8342]. For implementations that do not yet support NMDA, a temporary module with system state data only is defined in Appendix A.",
      "ja": "このドキュメントのデータモデルは、ネットワーク管理データストアアーキテクチャ（NMDA）[RFC8342]に準拠するように設計されています。 NMDAをまだサポートしていない実装では、システム状態データのみを含む一時モジュールが付録Aで定義されています。"
    },
    {
      "indent": 0,
      "text": "1.1. Terminology",
      "section_title": true,
      "ja": "1.1. 用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "キーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「NOT RECOMMENDED」、「MAY」、「OPTIONALこのドキュメントの「」は、BCP 14 [RFC2119] [RFC8174]で説明されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "The following terms are defined in [RFC8342] and are not redefined here:",
      "ja": "以下の用語は[RFC8342]で定義されており、ここでは再定義されません。"
    },
    {
      "indent": 3,
      "text": "o client",
      "ja": "o クライアント"
    },
    {
      "indent": 3,
      "text": "o server",
      "ja": "o サーバ"
    },
    {
      "indent": 3,
      "text": "o configuration",
      "ja": "o 構成"
    },
    {
      "indent": 3,
      "text": "o system state",
      "ja": "o システム状態"
    },
    {
      "indent": 3,
      "text": "o operational state",
      "ja": "o 稼働状態"
    },
    {
      "indent": 3,
      "text": "o intended configuration",
      "ja": "o 意図した構成"
    },
    {
      "indent": 0,
      "text": "1.2. Tree Diagrams",
      "section_title": true,
      "ja": "1.2. ツリー図"
    },
    {
      "indent": 3,
      "text": "Tree diagrams used in this document follow the notation defined in [RFC8340].",
      "ja": "このドキュメントで使用されるツリー図は、[RFC8340]で定義された表記に従います。"
    },
    {
      "indent": 0,
      "text": "2. Objectives",
      "section_title": true,
      "ja": "2. 目的"
    },
    {
      "indent": 3,
      "text": "This section describes some of the design objectives for the hardware data model.",
      "ja": "このセクションでは、ハードウェアデータモデルの設計目標の一部について説明します。"
    },
    {
      "indent": 3,
      "text": "o The hardware data model needs to support many common properties used to identify hardware components.",
      "ja": "o ハードウェアデータモデルは、ハードウェアコンポーネントを識別するために使用される多くの一般的なプロパティをサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "o Important information and states about hardware components need to be collected from devices that support the hardware data model.",
      "ja": "o ハードウェアコンポーネントに関する重要な情報と状態は、ハードウェアデータモデルをサポートするデバイスから収集する必要があります。"
    },
    {
      "indent": 3,
      "text": "o The hardware data model should be suitable for new implementations to use as is.",
      "ja": "o ハードウェアデータモデルは、新しい実装をそのまま使用するのに適している必要があります。"
    },
    {
      "indent": 3,
      "text": "o The hardware data model defined in this document can be implemented on a system that also implements ENTITY-MIB; thus, the mapping between the hardware data model and ENTITY-MIB should be clear.",
      "ja": "o このドキュメントで定義されているハードウェアデータモデルは、ENTITY-MIBも実装するシステムに実装できます。したがって、ハードウェアデータモデルとENTITY-MIBの間のマッピングは明確である必要があります。"
    },
    {
      "indent": 3,
      "text": "o The data model should support pre-provisioning of hardware components.",
      "ja": "o データモデルは、ハードウェアコンポーネントの事前プロビジョニングをサポートする必要があります。"
    },
    {
      "indent": 0,
      "text": "3. Hardware Data Model",
      "section_title": true,
      "ja": "3. ハードウェアデータモデル"
    },
    {
      "indent": 3,
      "text": "This document defines the YANG module \"ietf-hardware\", which has the following structure:",
      "ja": "このドキュメントでは、次の構造を持つYANGモジュール「ietf-hardware」を定義しています。"
    },
    {
      "indent": 3,
      "text": "module: ietf-hardware\n  +--rw hardware\n     +--ro last-change?   yang:date-and-time\n     +--rw component* [name]\n        +--rw name              string\n        +--rw class             identityref\n        +--ro physical-index?   int32 {entity-mib}?\n        +--ro description?      string\n        +--rw parent?           -> ../../component/name\n        +--rw parent-rel-pos?   int32\n        +--ro contains-child*   -> ../../component/name\n        +--ro hardware-rev?     string\n        +--ro firmware-rev?     string\n        +--ro software-rev?     string\n        +--ro serial-num?       string\n        +--ro mfg-name?         string\n        +--ro model-name?       string\n        +--rw alias?            string\n        +--rw asset-id?         string\n        +--ro is-fru?           boolean\n        +--ro mfg-date?         yang:date-and-time",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "+--rw uri*              inet:uri\n+--ro uuid?             yang:uuid\n+--rw state {hardware-state}?\n|  +--ro state-last-changed?   yang:date-and-time\n|  +--rw admin-state?          admin-state\n|  +--ro oper-state?           oper-state\n|  +--ro usage-state?          usage-state\n|  +--ro alarm-state?          alarm-state\n|  +--ro standby-state?        standby-state\n+--ro sensor-data {hardware-sensor}?\n   +--ro value?               sensor-value\n   +--ro value-type?          sensor-value-type\n   +--ro value-scale?         sensor-value-scale\n   +--ro value-precision?     sensor-value-precision\n   +--ro oper-status?         sensor-status\n   +--ro units-display?       string\n   +--ro value-timestamp?     yang:date-and-time\n   +--ro value-update-rate?   uint32",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "notifications:\n  +---n hardware-state-change\n  +---n hardware-state-oper-enabled {hardware-state}?\n  |  +--ro name?          -> /hardware/component/name\n  |  +--ro admin-state?   -> /hardware/component/state/admin-state\n  |  +--ro alarm-state?   -> /hardware/component/state/alarm-state\n  +---n hardware-state-oper-disabled {hardware-state}?\n     +--ro name?          -> /hardware/component/name\n     +--ro admin-state?   -> /hardware/component/state/admin-state\n     +--ro alarm-state?   -> /hardware/component/state/alarm-state",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3.1. The Components Lists",
      "section_title": true,
      "ja": "3.1. コンポーネントリスト"
    },
    {
      "indent": 3,
      "text": "The data model for hardware presented in this document uses a flat list of components. Each component in the list is identified by its name. Furthermore, each component has a mandatory \"class\" leaf.",
      "ja": "このドキュメントで説明するハードウェアのデータモデルでは、コンポーネントのフラットリストを使用しています。リスト内の各コンポーネントは、その名前で識別されます。さらに、各コンポーネントには必須の「クラス」リーフがあります。"
    },
    {
      "indent": 3,
      "text": "The \"iana-hardware\" module defines YANG identities for the hardware types in the IANA-maintained \"IANA-ENTITY-MIB\" registry.",
      "ja": "「iana-hardware」モジュールは、IANAが保守する「IANA-ENTITY-MIB」レジストリ内のハードウェアタイプのYANG IDを定義します。"
    },
    {
      "indent": 3,
      "text": "The \"class\" leaf is a YANG identity that describes the type of the hardware. Vendors are encouraged to either directly use one of the common IANA-defined identities or derive a more specific identity from one of them.",
      "ja": "「クラス」リーフは、ハードウェアのタイプを説明するYANG IDです。ベンダーは、一般的なIANA定義のIDの1つを直接使用するか、それらの1つからより具体的なIDを派生させることをお勧めします。"
    },
    {
      "indent": 0,
      "text": "4. Relationship to ENTITY-MIB",
      "section_title": true,
      "ja": "4. ENTITY-MIBとの関係"
    },
    {
      "indent": 3,
      "text": "If the device implements the ENTITY-MIB [RFC6933], each entry in the \"/hardware/component\" list in the operational state is mapped to one EntPhysicalEntry. Objects that are writable in the MIB are mapped to \"config true\" nodes in the \"/hardware/component\" list, except entPhysicalSerialNum, which is writable in the MIB but \"config false\" in the YANG module.",
      "ja": "デバイスがENTITY-MIB [RFC6933]を実装している場合、動作状態の「/ hardware / component」リストの各エントリは、1つのEntPhysicalEntryにマッピングされます。 MIBで書き込み可能であるが、YANGモジュールでは「config false」であるentPhysicalSerialNumを除き、MIBで書き込み可能なオブジェクトは、「/ hardware / component」リストの「config true」ノードにマップされます。"
    },
    {
      "indent": 3,
      "text": "The \"physical-index\" leaf MUST contain the value of the corresponding entPhysicalEntry's entPhysicalIndex.",
      "ja": "「physical-index」リーフには、対応するentPhysicalEntryのentPhysicalIndexの値を含める必要があります。"
    },
    {
      "indent": 3,
      "text": "The \"class\" leaf is mapped to both entPhysicalClass and entPhysicalVendorType. If the value of the \"class\" leaf is an identity that either is derived from or is one of the identities in the \"iana-hardware\" module, then entPhysicalClass contains the corresponding IANAPhysicalClass enumeration value. Otherwise, entPhysicalClass contains the IANAPhysicalClass value \"other(1)\". Vendors are encouraged to define an identity (derived from an identity in \"iana-hardware\" if possible) for each enterprise-specific registration identifier used for entPhysicalVendorType and use that identity for the \"class\" leaf.",
      "ja": "「クラス」リーフは、entPhysicalClassとentPhysicalVendorTypeの両方にマップされます。 「クラス」リーフの値が、「iana-hardware」モジュールのIDの1つから派生した、またはそのIDである場合、entPhysicalClassには、対応するIANAPhysicalClass列挙値が含まれます。それ以外の場合、entPhysicalClassにはIANAPhysicalClass値「other（1）」が含まれます。ベンダーは、entPhysicalVendorTypeに使用される企業固有の登録IDごとに（可能であれば「iana-hardware」のIDから派生した）IDを定義し、そのIDを「クラス」リーフに使用することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "The following table lists the YANG data nodes with corresponding objects in the ENTITY-MIB.",
      "ja": "次の表に、ENTITY-MIB内の対応するオブジェクトを含むYANGデータノードを示します。"
    },
    {
      "indent": 3,
      "text": "+--------------------------------+----------------------------------+\n| YANG data node in              | ENTITY-MIB object                |\n| /hardware/component            |                                  |\n+--------------------------------+----------------------------------+\n| name                           | entPhysicalName                  |\n| class                          | entPhysicalClass                 |\n|                                | entPhysicalVendorType            |\n| physical-index                 | entPhysicalIndex                 |\n| description                    | entPhysicalDescr                 |\n| parent                         | entPhysicalContainedIn           |\n| parent-rel-pos                 | entPhysicalParentRelPos          |\n| contains-child                 | entPhysicalChildIndex            |\n| hardware-rev                   | entPhysicalHardwareRev           |\n| firmware-rev                   | entPhysicalFirmwareRev           |\n| software-rev                   | entPhysicalSoftwareRev           |\n| serial-num                     | entPhysicalSerialNum             |\n| mfg-name                       | entPhysicalMfgName               |\n| model-name                     | entPhysicalModelName             |\n| alias                          | entPhysicalAlias                 |\n| asset-id                       | entPhysicalAssetID               |\n| is-fru                         | entPhysicalIsFRU                 |\n| mfg-date                       | entPhysicalMfgDate               |\n| uri                            | entPhysicalUris                  |\n| uuid                           | entPhysicalUUID                  |\n+--------------------------------+----------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "YANG Data Nodes and Related ENTITY-MIB Objects",
      "ja": "YANGデータノードと関連するENTITY-MIBオブジェクト"
    },
    {
      "indent": 0,
      "text": "5. Relationship to ENTITY-SENSOR-MIB",
      "section_title": true,
      "ja": "5. ENTITY-SENSOR-MIBとの関係"
    },
    {
      "indent": 3,
      "text": "If the device implements the ENTITY-SENSOR-MIB [RFC3433], each entry in the \"/hardware/component\" list where the container \"sensor-data\" exists is mapped to one EntPhySensorEntry.",
      "ja": "デバイスがENTITY-SENSOR-MIB [RFC3433]を実装している場合、コンテナ「sensor-data」が存在する「/ hardware / component」リストの各エントリは、1つのEntPhySensorEntryにマッピングされます。"
    },
    {
      "indent": 3,
      "text": "The following table lists the YANG data nodes with corresponding objects in the ENTITY-SENSOR-MIB.",
      "ja": "次の表に、ENTITY-SENSOR-MIB内の対応するオブジェクトを含むYANGデータノードを示します。"
    },
    {
      "indent": 3,
      "text": "+-------------------------------------+-----------------------------+\n| YANG data node in                   | ENTITY-SENSOR-MIB object    |\n| /hardware/component/sensor-data     |                             |\n+-------------------------------------+-----------------------------+\n| value                               | entPhySensorValue           |\n| value-type                          | entPhySensorType            |\n| value-scale                         | entPhySensorScale           |\n| value-precision                     | entPhySensorPrecision       |\n| oper-status                         | entPhySensorOperStatus      |\n| units-display                       | entPhySensorUnitsDisplay    |\n| value-timestamp                     | entPhySensorValueTimeStamp  |\n| value-update-rate                   | entPhySensorValueUpdateRate |\n+-------------------------------------+-----------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "YANG Data Nodes and Related ENTITY-SENSOR-MIB Objects",
      "ja": "YANGデータノードと関連するENTITY-SENSOR-MIBオブジェクト"
    },
    {
      "indent": 0,
      "text": "6. Relationship to ENTITY-STATE-MIB",
      "section_title": true,
      "ja": "6. ENTITY-STATE-MIBとの関係"
    },
    {
      "indent": 3,
      "text": "If the device implements the ENTITY-STATE-MIB [RFC4268], each entry in the \"/hardware/component\" list where the container \"state\" exists is mapped to one EntStateEntry.",
      "ja": "デバイスがENTITY-STATE-MIB [RFC4268]を実装している場合、コンテナ「state」が存在する「/ hardware / component」リストの各エントリは、1つのEntStateEntryにマップされます。"
    },
    {
      "indent": 3,
      "text": "The following table lists the YANG data nodes with corresponding objects in the ENTITY-STATE-MIB.",
      "ja": "次の表に、ENTITY-STATE-MIBの対応するオブジェクトを含むYANGデータノードを示します。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------+------------------------+\n| YANG data node in                        | ENTITY-STATE-MIB       |\n| /hardware/component/state                | object                 |\n+------------------------------------------+------------------------+\n| state-last-changed                       | entStateLastChanged    |\n| admin-state                              | entStateAdmin          |\n| oper-state                               | entStateOper           |\n| usage-state                              | entStateUsage          |\n| alarm-state                              | entStateAlarm          |\n| standby-state                            | entStateStandby        |\n+------------------------------------------+------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "YANG Data Nodes and Related ENTITY-SENSOR-MIB Objects",
      "ja": "YANGデータノードと関連するENTITY-SENSOR-MIBオブジェクト"
    },
    {
      "indent": 0,
      "text": "7. Hardware YANG Modules",
      "section_title": true,
      "ja": "7. ハードウェアYANGモジュール"
    },
    {
      "indent": 0,
      "text": "7.1. \"ietf-hardware\" Module",
      "section_title": true,
      "ja": "7.1. 「ietf-hardware」モジュール"
    },
    {
      "indent": 3,
      "text": "This YANG module imports typedefs from [RFC6991].",
      "ja": "このYANGモジュールは、[RFC6991]からtypedefをインポートします。"
    },
    {
      "indent": 3,
      "text": "<CODE BEGINS> file \"ietf-hardware@2018-03-13.yang\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "module ietf-hardware {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-hardware\";\n  prefix hw;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "import ietf-inet-types {\n  prefix inet;\n}\nimport ietf-yang-types {\n  prefix yang;\n}\nimport iana-hardware {\n  prefix ianahw;\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "organization \"IETF NETMOD (Network Modeling) Working Group\";",
      "ja": "組織「IETF NETMOD（ネットワークモデリング）ワーキンググループ」;"
    },
    {
      "indent": 4,
      "text": "contact\n  \"WG Web:   <https://datatracker.ietf.org/wg/netmod/>\n   WG List:  <mailto:netmod@ietf.org>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "Editor:   Andy Bierman\n          <mailto:andy@yumaworks.com>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "Editor:   Martin Bjorklund\n          <mailto:mbj@tail-f.com>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "Editor:   Jie Dong\n          <mailto:jie.dong@huawei.com>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "Editor:   Dan Romascanu\n          <mailto:dromasca@gmail.com>\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "description \"This module contains a collection of YANG definitions for managing hardware.",
      "ja": "説明「このモジュールには、ハードウェアを管理するためのYANG定義のコレクションが含まれています。"
    },
    {
      "indent": 7,
      "text": "This data model is designed for the Network Management Datastore Architecture (NMDA) defined in RFC 8342.",
      "ja": "このデータモデルは、RFC 8342で定義されているネットワーク管理データストアアーキテクチャ（NMDA）用に設計されています。"
    },
    {
      "indent": 7,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "ja": "Copyright（c）2018 IETF Trustおよびコードの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 7,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info).",
      "ja": "ソースおよびバイナリ形式での再配布および使用は、変更の有無にかかわらず、IETF文書に関連するIETFトラストの法的規定のセクション4.cに記載されているSimplified BSD Licenseに従い、それに含まれるライセンス条項に従って許可されます（ https://trustee.ietf.org/license-info）。"
    },
    {
      "indent": 7,
      "text": "This version of this YANG module is part of RFC 8348; see the RFC itself for full legal notices.\";",
      "ja": "このYANGモジュールのこのバージョンはRFC 8348の一部です。完全な法的通知については、RFC自体を参照してください。 \";"
    },
    {
      "indent": 4,
      "text": "revision 2018-03-13 {\n  description\n    \"Initial revision.\";\n  reference\n    \"RFC 8348: A YANG Data Model for Hardware Management\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "/*\n * Features\n */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "feature entity-mib {\n  description\n    \"This feature indicates that the device implements\n     the ENTITY-MIB.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4)\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "feature hardware-state {\n  description\n    \"Indicates that ENTITY-STATE-MIB objects are supported\";\n  reference\n    \"RFC 4268: Entity State MIB\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "feature hardware-sensor {\n  description\n    \"Indicates that ENTITY-SENSOR-MIB objects are supported\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "/*\n * Typedefs",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "*/",
      "ja": "＊／"
    },
    {
      "indent": 4,
      "text": "typedef admin-state {\n  type enumeration {\n    enum unknown {\n      value 1;\n      description\n        \"The resource is unable to report administrative state.\";\n    }\n    enum locked {\n      value 2;\n      description\n        \"The resource is administratively prohibited from use.\";\n    }\n    enum shutting-down {\n      value 3;\n      description\n        \"The resource usage is administratively limited to current\n         instances of use.\";\n    }\n    enum unlocked {\n      value 4;\n      description\n        \"The resource is not administratively prohibited from\n         use.\";\n    }\n  }\n  description\n    \"Represents the various possible administrative states.\";\n  reference\n    \"RFC 4268: Entity State MIB - EntityAdminState\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "typedef oper-state {\n  type enumeration {\n    enum unknown {\n      value 1;\n      description\n        \"The resource is unable to report its operational state.\";\n    }\n    enum disabled {\n      value 2;\n      description\n        \"The resource is totally inoperable.\";\n    }\n    enum enabled {\n      value 3;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "      description\n        \"The resource is partially or fully operable.\";\n    }\n    enum testing {\n      value 4;\n      description\n        \"The resource is currently being tested and cannot\n         therefore report whether or not it is operational.\";\n    }\n  }\n  description\n    \"Represents the possible values of operational states.\";\n  reference\n    \"RFC 4268: Entity State MIB - EntityOperState\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "typedef usage-state {\n  type enumeration {\n    enum unknown {\n      value 1;\n      description\n        \"The resource is unable to report usage state.\";\n    }\n    enum idle {\n      value 2;\n      description\n        \"The resource is servicing no users.\";\n    }\n    enum active {\n      value 3;\n      description\n        \"The resource is currently in use, and it has sufficient\n         spare capacity to provide for additional users.\";\n    }\n    enum busy {\n      value 4;\n      description\n        \"The resource is currently in use, but it currently has no\n         spare capacity to provide for additional users.\";\n    }\n  }\n  description\n    \"Represents the possible values of usage states.\";\n  reference\n    \"RFC 4268: Entity State MIB -  EntityUsageState\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "typedef alarm-state {",
      "ja": "typedefアラーム状態{"
    },
    {
      "indent": 6,
      "text": "type bits {\n  bit unknown {\n    position 0;\n    description\n      \"The resource is unable to report alarm state.\";\n  }\n  bit under-repair {\n    position 1;\n    description\n      \"The resource is currently being repaired, which, depending\n       on the implementation, may make the other values in this\n       bit string not meaningful.\";\n  }\n  bit critical {\n    position 2;\n    description\n      \"One or more critical alarms are active against the\n       resource.\";\n  }\n  bit major {\n    position 3;\n    description\n      \"One or more major alarms are active against the\n       resource.\";\n  }\n  bit minor {\n    position 4;\n    description\n      \"One or more minor alarms are active against the\n       resource.\";\n  }\n  bit warning {\n    position 5;\n    description\n      \"One or more warning alarms are active against the\n       resource.\";\n  }\n  bit indeterminate {\n    position 6;\n    description\n      \"One or more alarms of whose perceived severity cannot be\n       determined are active against this resource.\";\n  }\n}\ndescription\n  \"Represents the possible values of alarm states.  An alarm is a\n   persistent indication of an error or warning condition.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "     When no bits of this attribute are set, then no active alarms\n     are known against this component and it is not under repair.\";\n  reference\n    \"RFC 4268: Entity State MIB - EntityAlarmStatus\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "typedef standby-state {\n  type enumeration {\n    enum unknown {\n      value 1;\n      description\n        \"The resource is unable to report standby state.\";\n    }\n    enum hot-standby {\n      value 2;\n      description\n        \"The resource is not providing service, but it will be\n         immediately able to take over the role of the resource to\n         be backed up, without the need for initialization\n         activity, and will contain the same information as the\n         resource to be backed up.\";\n    }\n    enum cold-standby {\n      value 3;\n      description\n        \"The resource is to back up another resource, but it will\n         not be immediately able to take over the role of a\n         resource to be backed up and will require some\n         initialization activity.\";\n    }\n    enum providing-service {\n      value 4;\n      description\n        \"The resource is providing service.\";\n    }\n  }\n  description\n    \"Represents the possible values of standby states.\";\n  reference\n    \"RFC 4268: Entity State MIB - EntityStandbyStatus\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "typedef sensor-value-type {\n  type enumeration {\n    enum other {\n      value 1;\n      description\n        \"A measure other than those listed below.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "}\nenum unknown {\n  value 2;\n  description\n    \"An unknown measurement or arbitrary, relative numbers\";\n}\nenum volts-AC {\n  value 3;\n  description\n    \"A measure of electric potential (alternating current).\";\n}\nenum volts-DC {\n  value 4;\n  description\n    \"A measure of electric potential (direct current).\";\n}\nenum amperes {\n  value 5;\n  description\n    \"A measure of electric current.\";\n}\nenum watts {\n  value 6;\n  description\n    \"A measure of power.\";\n}\nenum hertz {\n  value 7;\n  description\n    \"A measure of frequency.\";\n}\nenum celsius {\n  value 8;\n  description\n    \"A measure of temperature.\";\n}\nenum percent-RH {\n  value 9;\n  description\n    \"A measure of percent relative humidity.\";\n}\nenum rpm {\n  value 10;\n  description\n    \"A measure of shaft revolutions per minute.\";\n}\nenum cmm {\n  value 11;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "    description\n      \"A measure of cubic meters per minute (airflow).\";\n  }\n  enum truth-value {\n    value 12;\n    description\n      \"Value is one of 1 (true) or 2 (false)\";\n  }\n}\ndescription\n  \"A node using this data type represents the sensor measurement\n   data type associated with a physical sensor value.  The actual\n   data units are determined by examining a node of this type\n   together with the associated sensor-value-scale node.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "     A node of this type SHOULD be defined together with nodes of\n     type sensor-value-scale and type sensor-value-precision.\n     These three types are used to identify the semantics of a node\n     of type sensor-value.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               EntitySensorDataType\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "typedef sensor-value-scale {\n  type enumeration {\n    enum yocto {\n      value 1;\n      description\n        \"Data scaling factor of 10^-24.\";\n    }\n    enum zepto {\n      value 2;\n      description\n        \"Data scaling factor of 10^-21.\";\n    }\n    enum atto {\n      value 3;\n      description\n        \"Data scaling factor of 10^-18.\";\n    }\n    enum femto {\n      value 4;\n      description\n        \"Data scaling factor of 10^-15.\";\n    }\n    enum pico {\n      value 5;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "          description\n            \"Data scaling factor of 10^-12.\";\n        }\n        enum nano {\n          value 6;\n          description\n            \"Data scaling factor of 10^-9.\";\n        }\n        enum micro {\n          value 7;\n          description\n            \"Data scaling factor of 10^-6.\";\n        }\n        enum milli {\n          value 8;\n          description\n            \"Data scaling factor of 10^-3.\";\n        }\n        enum units {\n          value 9;\n          description\n            \"Data scaling factor of 10^0.\";\n        }\n        enum kilo {\n          value 10;\n          description\n            \"Data scaling factor of 10^3.\";\n        }\n        enum mega {\n          value 11;\n          description\n            \"Data scaling factor of 10^6.\";\n        }\n        enum giga {\n          value 12;\n          description\n            \"Data scaling factor of 10^9.\";\n        }\n        enum tera {\n          value 13;\n          description\n            \"Data scaling factor of 10^12.\";\n        }\n        enum peta {\n          value 14;\n          description\n            \"Data scaling factor of 10^15.\";\n        }\n        enum exa {\n          value 15;\n          description\n            \"Data scaling factor of 10^18.\";\n        }\n        enum zetta {\n          value 16;\n          description\n            \"Data scaling factor of 10^21.\";\n        }\n        enum yotta {\n          value 17;\n          description\n            \"Data scaling factor of 10^24.\";\n        }\n      }\n      description\n        \"A node using this data type represents a data scaling factor,\n         represented with an International System of Units (SI) prefix.\n         The actual data units are determined by examining a node of\n         this type together with the associated sensor-value-type.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "     A node of this type SHOULD be defined together with nodes of\n     type sensor-value-type and type sensor-value-precision.\n     Together, associated nodes of these three types are used to\n     identify the semantics of a node of type sensor-value.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               EntitySensorDataScale\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "typedef sensor-value-precision {\n  type int8 {\n    range \"-8 .. 9\";\n  }\n  description\n    \"A node using this data type represents a sensor value\n     precision range.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "A node of this type SHOULD be defined together with nodes of type sensor-value-type and type sensor-value-scale. Together, associated nodes of these three types are used to identify the semantics of a node of type sensor-value.",
      "ja": "このタイプのノードは、タイプsensor-value-typeおよびタイプsensor-value-scaleのノードと一緒に定義する必要があります（SHOULD）。一緒に、これら3つのタイプの関連ノードを使用して、センサー値タイプのノードのセマンティクスを識別します。"
    },
    {
      "indent": 9,
      "text": "If a node of this type contains a value in the range 1 to 9, it represents the number of decimal places in the fractional part of an associated sensor-value fixed-point number.",
      "ja": "このタイプのノードに1から9の範囲の値が含まれる場合、関連するセンサー値の固定小数点数の小数部の小数点以下の桁数を表します。"
    },
    {
      "indent": 9,
      "text": "If a node of this type contains a value in the range -8 to -1, it represents the number of accurate digits in the associated sensor-value fixed-point number.",
      "ja": "このタイプのノードに-8〜-1の範囲の値が含まれている場合、これは、関連付けられているセンサー値の固定小数点数の正確な桁数を表します。"
    },
    {
      "indent": 9,
      "text": "The value zero indicates the associated sensor-value node is not a fixed-point number.",
      "ja": "値0は、関連付けられたセンサー値ノードが固定小数点数ではないことを示します。"
    },
    {
      "indent": 9,
      "text": "Server implementers must choose a value for the associated sensor-value-precision node so that the precision and accuracy of the associated sensor-value node is correctly indicated.",
      "ja": "サーバーの実装者は、関連付けられているセンサー値ノードの精度と精度が正しく示されるように、関連付けられているセンサー値精度ノードの値を選択する必要があります。"
    },
    {
      "indent": 4,
      "text": "     For example, a component representing a temperature sensor\n     that can measure 0 to 100 degrees C in 0.1 degree\n     increments, +/- 0.05 degrees, would have a\n     sensor-value-precision value of '1', a sensor-value-scale\n     value of 'units', and a sensor-value ranging from '0' to\n     '1000'.  The sensor-value would be interpreted as\n     'degrees C * 10'.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               EntitySensorPrecision\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "typedef sensor-value {\n  type int32 {\n    range \"-1000000000 .. 1000000000\";\n  }\n  description\n   \"A node using this data type represents a sensor value.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "A node of this type SHOULD be defined together with nodes of type sensor-value-type, type sensor-value-scale, and type sensor-value-precision. Together, associated nodes of those three types are used to identify the semantics of a node of this data type.",
      "ja": "このタイプのノードは、タイプsensor-value-type、タイプsensor-value-scale、およびタイプsensor-value-precisionのノードと一緒に定義する必要があります（SHOULD）。これら3つのタイプの関連ノードを一緒に使用して、このデータタイプのノードのセマンティクスを識別します。"
    },
    {
      "indent": 8,
      "text": "The semantics of a node using this data type are determined by the value of the associated sensor-value-type node.",
      "ja": "このデータ型を使用するノードのセマンティクスは、関連付けられているセンサー値タイプのノードの値によって決まります。"
    },
    {
      "indent": 8,
      "text": "If the associated sensor-value-type node is equal to 'voltsAC', 'voltsDC', 'amperes', 'watts', 'hertz', 'celsius', or 'cmm', then a node of this type MUST contain a fixed-point number ranging from -999,999,999 to +999,999,999. The value -1000000000 indicates an underflow error. The value +1000000000 indicates an overflow error. The sensor-value-precision indicates how many fractional digits are represented in the associated sensor-value node.",
      "ja": "関連するセンサー値タイプのノードが「voltsAC」、「voltsDC」、「アンペア」、「ワット」、「ヘルツ」、「摂氏」、または「cmm」に等しい場合、このタイプのノードには、 -999,999,999〜+999,999,999の範囲の固定小数点数。値-1000000000は、アンダーフローエラーを示します。値+1000000000は、オーバーフローエラーを示します。センサー値精度は、関連付けられたセンサー値ノードで表現される小数桁数を示します。"
    },
    {
      "indent": 8,
      "text": "If the associated sensor-value-type node is equal to 'percentRH', then a node of this type MUST contain a number ranging from 0 to 100.",
      "ja": "関連するセンサー値タイプのノードが「percentRH」に等しい場合、このタイプのノードには0〜100の範囲の数値が含まれている必要があります。"
    },
    {
      "indent": 8,
      "text": "If the associated sensor-value-type node is equal to 'rpm', then a node of this type MUST contain a number ranging from -999,999,999 to +999,999,999.",
      "ja": "関連するセンサー値タイプのノードが「rpm」に等しい場合、このタイプのノードには-999,999,999から+999,999,999の範囲の数値が含まれている必要があります。"
    },
    {
      "indent": 8,
      "text": "If the associated sensor-value-type node is equal to 'truth-value', then a node of this type MUST contain either the value 1 (true) or the value 2 (false).",
      "ja": "関連するセンサー値タイプのノードが「真値」に等しい場合、このタイプのノードは値1（true）または値2（false）のいずれかを含んでいる必要があります。"
    },
    {
      "indent": 4,
      "text": "    If the associated sensor-value-type node is equal to 'other' or\n    'unknown', then a node of this type MUST contain a number\n    ranging from -1000000000 to 1000000000.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               EntitySensorValue\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "typedef sensor-status {\n  type enumeration {\n    enum ok {\n      value 1;\n      description\n        \"Indicates that the server can obtain the sensor value.\";\n    }\n    enum unavailable {\n      value 2;\n      description\n        \"Indicates that the server presently cannot obtain the\n         sensor value.\";\n    }\n    enum nonoperational {\n      value 3;\n      description\n        \"Indicates that the server believes the sensor is broken.\n         The sensor could have a hard failure (disconnected wire)\n         or a soft failure such as out-of-range, jittery, or wildly\n         fluctuating readings.\";\n    }\n  }\n  description\n    \"A node using this data type represents the operational status\n     of a physical sensor.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               EntitySensorStatus\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "}",
      "ja": "｝"
    },
    {
      "indent": 4,
      "text": "/*\n * Data nodes\n */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "container hardware { description \"Data nodes representing components.",
      "ja": "コンテナハードウェア{説明 \"コンポーネントを表すデータノード。"
    },
    {
      "indent": 9,
      "text": "If the server supports configuration of hardware components, then this data model is instantiated in the configuration datastores supported by the server. The leaf-list 'datastore' for the module 'ietf-hardware' in the YANG library provides this information.\";",
      "ja": "サーバーがハードウェアコンポーネントの構成をサポートする場合、このデータモデルはサーバーがサポートする構成データストアにインスタンス化されます。 YANGライブラリーのモジュール「ietf-hardware」のリーフリスト「データストア」がこの情報を提供します。 \";"
    },
    {
      "indent": 6,
      "text": "leaf last-change {\n  type yang:date-and-time;\n  config false;\n  description\n    \"The time the '/hardware/component' list changed in the\n     operational state.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "list component {\n  key name;\n  description\n    \"List of components.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "When the server detects a new hardware component, it initializes a list entry in the operational state.",
      "ja": "サーバーは新しいハードウェアコンポーネントを検出すると、動作状態のリストエントリを初期化します。"
    },
    {
      "indent": 11,
      "text": "If the server does not support configuration of hardware components, list entries in the operational state are initialized with values for all nodes as detected by the implementation.",
      "ja": "サーバーがハードウェアコンポーネントの構成をサポートしていない場合、動作状態のリストエントリは、実装によって検出されたすべてのノードの値で初期化されます。"
    },
    {
      "indent": 11,
      "text": "Otherwise, this procedure is followed:",
      "ja": "それ以外の場合は、次の手順に従います。"
    },
    {
      "indent": 13,
      "text": "1. If there is an entry in the '/hardware/component' list in the intended configuration with values for the nodes 'class', 'parent', and 'parent-rel-pos' that are equal to the detected values, then the list entry in the operational state is initialized with the configured values, including the 'name'.",
      "ja": "1. 意図された構成の「/ hardware / component」リストに、検出された値と等しいノード「class」、「parent」、および「parent-rel-pos」の値を持つエントリがある場合、リスト動作状態のエントリは、「名前」を含む構成された値で初期化されます。"
    },
    {
      "indent": 13,
      "text": "2. Otherwise (i.e., there is no matching configuration entry), the list entry in the operational state is initialized with values for all nodes as detected by the implementation.",
      "ja": "2. それ以外の場合（つまり、一致する構成エントリがない場合）、動作状態のリストエントリは、実装によって検出されたすべてのノードの値で初期化されます。"
    },
    {
      "indent": 8,
      "text": "   If the '/hardware/component' list in the intended\n   configuration is modified, then the system MUST behave as if\n   it re-initializes itself and follow the procedure in (1).\";\nreference\n  \"RFC 6933: Entity MIB (Version 4) - entPhysicalEntry\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf name {\n  type string;\n  description\n    \"The name assigned to this component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "     This name is not required to be the same as\n     entPhysicalName.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf class {\n  type identityref {\n    base ianahw:hardware-class;\n  }\n  mandatory true;\n  description\n    \"An indication of the general hardware type of the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalClass\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf physical-index {\n  if-feature entity-mib;\n  type int32 {\n    range \"1..2147483647\";\n  }\n  config false;\n  description\n    \"The entPhysicalIndex for the entPhysicalEntry represented\n     by this list entry.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalIndex\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf description {\n  type string;\n  config false;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "  description\n    \"A textual description of the component.  This node should\n     contain a string that identifies the manufacturer's name\n     for the component and should be set to a distinct value\n     for each version or model of the component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalDescr\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf parent {\n  type leafref {\n    path \"../../component/name\";\n    require-instance false;\n  }\n  description\n    \"The name of the component that physically contains this\n     component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "If this leaf is not instantiated, it indicates that this component is not contained in any other component.",
      "ja": "このリーフがインスタンス化されていない場合は、このコンポーネントが他のコンポーネントに含まれていないことを示しています。"
    },
    {
      "indent": 8,
      "text": "     In the event that a physical component is contained by\n     more than one physical component (e.g., double-wide\n     modules), this node contains the name of one of these\n     components.  An implementation MUST use the same name\n     every time this node is instantiated.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalContainedIn\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf parent-rel-pos {\n  type int32 {\n    range \"0 .. 2147483647\";\n  }\n  description\n    \"An indication of the relative position of this child\n     component among all its sibling components.  Sibling\n     components are defined as components that:",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "o share the same value of the 'parent' node and",
      "ja": "o 「親」ノードと同じ値を共有し、"
    },
    {
      "indent": 15,
      "text": "o share a common base identity for the 'class' node.",
      "ja": "o 「クラス」ノードの共通ベースIDを共有します。"
    },
    {
      "indent": 0,
      "text": " Note that the last rule gives implementations flexibility in how components are numbered. For example, some implementations might have a single number series for all components derived from 'ianahw:port', while some others might have different number series for different components with identities derived from 'ianahw:port' (for example, one for registered jack 45 (RJ45) and one for small form-factor pluggable (SFP)).\";",
      "ja": "最後のルールは、コンポーネントの番号付け方法に実装の柔軟性を与えることに注意してください。たとえば、一部の実装では、「ianahw：port」から派生したすべてのコンポーネントに単一の番号シリーズがあり、「ianahw：port」から派生したIDを持つコンポーネントごとに異なる番号シリーズを持つものもあります（たとえば、登録されたジャック用の1つ） 45（RJ45）および1つはスモールフォームファクタプラガブル（SFP）用です。 \";"
    },
    {
      "indent": 8,
      "text": "  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalParentRelPos\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf-list contains-child {\n  type leafref {\n    path \"../../component/name\";\n  }\n  config false;\n  description\n    \"The name of the contained component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalChildIndex\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf hardware-rev {\n  type string;\n  config false;\n  description\n    \"The vendor-specific hardware revision string for the\n     component.  The preferred value is the hardware revision\n     identifier actually printed on the component itself (if\n     present).\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalHardwareRev\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf firmware-rev {\n  type string;\n  config false;\n  description\n    \"The vendor-specific firmware revision string for the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalFirmwareRev\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf software-rev {\n  type string;\n  config false;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "  description\n    \"The vendor-specific software revision string for the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalSoftwareRev\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf serial-num {\n  type string;\n  config false;\n  description\n    \"The vendor-specific serial number string for the\n     component.  The preferred value is the serial number\n     string actually printed on the component itself (if\n     present).\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalSerialNum\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf mfg-name {\n  type string;\n  config false;\n  description\n    \"The name of the manufacturer of this physical component.\n     The preferred value is the manufacturer name string\n     actually printed on the component itself (if present).",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Note that comparisons between instances of the 'model-name', 'firmware-rev', 'software-rev', and 'serial-num' nodes are only meaningful amongst components with the same value of 'mfg-name'.",
      "ja": "「model-name」、「firmware-rev」、「software-rev」、および「serial-num」ノードのインスタンス間の比較は、「mfg-name」の同じ値を持つコンポーネント間でのみ意味があることに注意してください。"
    },
    {
      "indent": 8,
      "text": "     If the manufacturer name string associated with the\n     physical component is unknown to the server, then this\n     node is not instantiated.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalMfgName\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf model-name {\n  type string;\n  config false;\n  description\n    \"The vendor-specific model name identifier string\n     associated with this physical component.  The preferred\n     value is the customer-visible part number, which may be\n     printed on the component itself.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "     If the model name string associated with the physical\n     component is unknown to the server, then this node is not\n     instantiated.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalModelName\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf alias {\n  type string;\n  description\n    \"An 'alias' name for the component, as specified by a\n     network manager, that provides a non-volatile 'handle' for\n     the component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "If no configured value exists, the server MAY set the value of this node to a locally unique value in the operational state.",
      "ja": "構成された値が存在しない場合、サーバーはこのノードの値を操作状態でローカルに一意の値に設定できます（MAY）。"
    },
    {
      "indent": 8,
      "text": "     A server implementation MAY map this leaf to the\n     entPhysicalAlias MIB object.  Such an implementation needs\n     to use some mechanism to handle the differences in size\n     and characters allowed between this leaf and\n     entPhysicalAlias.  The definition of such a mechanism is\n     outside the scope of this document.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalAlias\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf asset-id {\n  type string;\n  description\n    \"This node is a user-assigned asset tracking identifier for\n     the component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "     A server implementation MAY map this leaf to the\n     entPhysicalAssetID MIB object.  Such an implementation\n     needs to use some mechanism to handle the differences in\n     size and characters allowed between this leaf and\n     entPhysicalAssetID.  The definition of such a mechanism is\n     outside the scope of this document.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalAssetID\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf is-fru {\n  type boolean;\n  config false;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "  description\n    \"This node indicates whether or not this component is\n     considered a 'field-replaceable unit' by the vendor.  If\n     this node contains the value 'true', then this component\n     identifies a field-replaceable unit.  For all components\n     that are permanently contained within a field-replaceable\n     unit, the value 'false' should be returned for this\n     node.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalIsFRU\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf mfg-date {\n  type yang:date-and-time;\n  config false;\n  description\n    \"The date of manufacturing of the managed component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalMfgDate\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf-list uri {\n  type inet:uri;\n  description\n    \"This node contains identification information about the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalUris\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "leaf uuid {\n  type yang:uuid;\n  config false;\n  description\n    \"A Universally Unique Identifier of the component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalUUID\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "container state {\n  if-feature hardware-state;\n  description\n    \"State-related nodes\";\n  reference\n    \"RFC 4268: Entity State MIB\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "leaf state-last-changed {\n  type yang:date-and-time;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "config false; description \"The date and time when the value of any of the admin-state, oper-state, usage-state, alarm-state, or standby-state changed for this component.",
      "ja": "config false;説明 \"admin-state、oper-state、usage-state、alarm-state、standby-stateのいずれかの値がこのコンポーネントで変更された日時。"
    },
    {
      "indent": 10,
      "text": "     If there has been no change since the last\n     re-initialization of the local system, this node\n     contains the date and time of local system\n     initialization.  If there has been no change since the\n     component was added to the local system, this node\n     contains the date and time of the insertion.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateLastChanged\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "leaf admin-state {\n  type admin-state;\n  description\n    \"The administrative state for this component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "This node refers to a component's administrative permission to service both other components within its containment hierarchy as well other users of its services defined by means outside the scope of this module.",
      "ja": "このノードは、包含階層内の他のコンポーネントと、このモジュールのスコープ外で定義されたサービスの他のユーザーの両方にサービスを提供するためのコンポーネントの管理権限を指します。"
    },
    {
      "indent": 10,
      "text": "     Some components exhibit only a subset of the remaining\n     administrative state values.  Some components cannot be\n     locked; hence, this node exhibits only the 'unlocked'\n     state.  Other components cannot be shut down gracefully;\n     hence, this node does not exhibit the 'shutting-down'\n     state.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateAdmin\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "leaf oper-state {\n  type oper-state;\n  config false;\n  description\n    \"The operational state for this component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "Note that this node does not follow the administrative state. An administrative state of 'down' does not predict an operational state of 'disabled'.",
      "ja": "このノードは管理状態に従っていないことに注意してください。 「ダウン」の管理状態は、「無効」の動作状態を予測しません。"
    },
    {
      "indent": 10,
      "text": "     Note that some implementations may not be able to\n     accurately report oper-state while the admin-state node\n     has a value other than 'unlocked'.  In these cases, this\n     node MUST have a value of 'unknown'.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateOper\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "leaf usage-state {\n  type usage-state;\n  config false;\n  description\n    \"The usage state for this component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "This node refers to a component's ability to service more components in a containment hierarchy.",
      "ja": "このノードは、包含階層内のより多くのコンポーネントにサービスを提供するコンポーネントの機能を指します。"
    },
    {
      "indent": 10,
      "text": "     Some components will exhibit only a subset of the usage\n     state values.  Components that are unable to ever\n     service any components within a containment hierarchy\n     will always have a usage state of 'busy'.  In some\n     cases, a component will be able to support only one\n     other component within its containment hierarchy and\n     will therefore only exhibit values of 'idle' and\n     'busy'.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateUsage\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "leaf alarm-state {\n  type alarm-state;\n  config false;\n  description\n    \"The alarm state for this component.  It does not\n     include the alarms raised on child components within its\n     containment hierarchy.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateAlarm\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "leaf standby-state {\n  type standby-state;\n  config false;\n  description\n    \"The standby state for this component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "       Some components will exhibit only a subset of the\n       remaining standby state values.  If this component\n       cannot operate in a standby role, the value of this node\n       will always be 'providing-service'.\";\n    reference\n      \"RFC 4268: Entity State MIB - entStateStandby\";\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "container sensor-data {\n  when 'derived-from-or-self(../class,\n                             \"ianahw:sensor\")' {\n    description\n      \"Sensor data nodes present for any component of type\n       'sensor'\";\n  }\n  if-feature hardware-sensor;\n  config false;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "description\n  \"Sensor-related nodes.\";\nreference\n  \"RFC 3433: Entity Sensor Management Information Base\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "leaf value {\n  type sensor-value;\n  description\n    \"The most recent measurement obtained by the server\n     for this sensor.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "     A client that periodically fetches this node should also\n     fetch the nodes 'value-type', 'value-scale', and\n     'value-precision', since they may change when the value\n     is changed.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorValue\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "          leaf value-type {\n            type sensor-value-type;\n            description\n              \"The type of data units associated with the\n               sensor value\";\n            reference\n              \"RFC 3433: Entity Sensor Management Information Base -\n                         entPhySensorType\";\n          }\n          leaf value-scale {\n            type sensor-value-scale;\n            description\n              \"The (power of 10) scaling factor associated\n               with the sensor value\";\n            reference\n              \"RFC 3433: Entity Sensor Management Information Base -\n                         entPhySensorScale\";\n          }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "leaf value-precision {\n  type sensor-value-precision;\n  description\n    \"The number of decimal places of precision\n     associated with the sensor value\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorPrecision\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "leaf oper-status {\n  type sensor-status;\n  description\n    \"The operational status of the sensor.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorOperStatus\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "leaf units-display {\n  type string;\n  description\n    \"A textual description of the data units that should be\n     used in the display of the sensor value.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorUnitsDisplay\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "          leaf value-timestamp {\n            type yang:date-and-time;\n            description\n              \"The time the status and/or value of this sensor was last\n               obtained by the server.\";\n            reference\n              \"RFC 3433: Entity Sensor Management Information Base -\n                         entPhySensorValueTimeStamp\";\n          }\n          leaf value-update-rate {\n            type uint32;\n            units \"milliseconds\";\n            description\n              \"An indication of the frequency that the server updates\n               the associated 'value' node, represented in\n               milliseconds.  The value zero indicates:",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "- the sensor value is updated on demand (e.g., when polled by the server for a get-request),",
      "ja": "- センサーの値はオンデマンドで更新されます（たとえば、get要求のためにサーバーによってポーリングされた場合）。"
    },
    {
      "indent": 16,
      "text": "- the sensor value is updated when the sensor value changes (event-driven), or",
      "ja": "- センサーの値が変化したときにセンサーの値が更新される（イベント駆動型）、または"
    },
    {
      "indent": 4,
      "text": "            - the server does not know the update rate.\";\n        reference\n          \"RFC 3433: Entity Sensor Management Information Base -\n                     entPhySensorValueUpdateRate\";\n      }\n    }\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "/*\n * Notifications\n */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "notification hardware-state-change {\n  description\n    \"A hardware-state-change notification is generated when the\n     value of /hardware/last-change changes in the operational\n     state.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entConfigChange\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "notification hardware-state-oper-enabled {\n  if-feature hardware-state;\n  description\n    \"A hardware-state-oper-enabled notification signifies that a\n     component has transitioned into the 'enabled' state.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "      leaf name {\n        type leafref {\n          path \"/hardware/component/name\";\n        }\n        description\n          \"The name of the component that has transitioned into the\n           'enabled' state.\";\n      }\n      leaf admin-state {\n        type leafref {\n          path \"/hardware/component/state/admin-state\";\n        }\n        description\n          \"The administrative state for the component.\";\n      }\n      leaf alarm-state {\n        type leafref {\n          path \"/hardware/component/state/alarm-state\";\n        }\n        description\n          \"The alarm state for the component.\";\n      }\n      reference\n        \"RFC 4268: Entity State MIB - entStateOperEnabled\";\n    }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "notification hardware-state-oper-disabled {\n  if-feature hardware-state;\n  description\n    \"A hardware-state-oper-disabled notification signifies that a\n     component has transitioned into the 'disabled' state.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "      leaf name {\n        type leafref {\n          path \"/hardware/component/name\";\n        }\n        description\n          \"The name of the component that has transitioned into the\n           'disabled' state.\";\n      }\n      leaf admin-state {\n        type leafref {\n          path \"/hardware/component/state/admin-state\";\n        }\n        description\n          \"The administrative state for the component.\";\n      }\n      leaf alarm-state {\n        type leafref {\n          path \"/hardware/component/state/alarm-state\";\n        }\n        description\n          \"The alarm state for the component.\";\n      }\n      reference\n        \"RFC 4268: Entity State MIB - entStateOperDisabled\";\n    }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "}",
      "ja": "｝"
    },
    {
      "indent": 3,
      "text": "<CODE ENDS>",
      "ja": "<コード終了>"
    },
    {
      "indent": 0,
      "text": "7.2. \"iana-hardware\" Module",
      "section_title": true,
      "ja": "7.2. 「iana-hardware」モジュール"
    },
    {
      "indent": 3,
      "text": "<CODE BEGINS> file \"iana-hardware@2018-03-13.yang\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "module iana-hardware {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:iana-hardware\";\n  prefix ianahw;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "organization \"IANA\"; contact \" Internet Assigned Numbers Authority",
      "ja": "組織「IANA」;連絡先 \"Internet Assigned Numbers Authority"
    },
    {
      "indent": 8,
      "text": "Postal: ICANN 12025 Waterfront Drive, Suite 300 Los Angeles, CA 90094-2536 United States of America",
      "ja": "郵便番号：ICANN 12025 Waterfront Drive、Suite 300 Los Angeles、CA 90094-2536 United States of America"
    },
    {
      "indent": 8,
      "text": "Tel:    +1 310 301 5800\nE-Mail: iana@iana.org>\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "description \"IANA-defined identities for hardware class.",
      "ja": "説明「ハードウェアクラスのIANA定義のID。"
    },
    {
      "indent": 8,
      "text": "The latest revision of this YANG module can be obtained from the IANA website.",
      "ja": "このYANGモジュールの最新リビジョンは、IANA Webサイトから入手できます。"
    },
    {
      "indent": 8,
      "text": "Requests for new values should be made to IANA via email (iana@iana.org).",
      "ja": "新しい値のリクエストは、電子メール（iana@iana.org）経由でIANAに行う必要があります。"
    },
    {
      "indent": 8,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "ja": "Copyright（c）2018 IETF Trustおよびコードの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 0,
      "text": " Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info).",
      "ja": "ソースおよびバイナリ形式での再配布および使用は、変更の有無にかかわらず、IETF文書に関連するIETFトラストの法的規定のセクション4.cに記載されているSimplified BSD Licenseに従い、それに含まれるライセンス条項に従って許可されます（ https://trustee.ietf.org/license-info）。"
    },
    {
      "indent": 5,
      "text": "   The initial version of this YANG module is part of RFC 8348;\n   see the RFC itself for full legal notices.\";\nreference\n  \"https://www.iana.org/assignments/yang-parameters\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "revision 2018-03-13 {\n  description\n    \"Initial revision.\";\n  reference\n    \"RFC 8348: A YANG Data Model for Hardware Management\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "/*\n * Identities\n */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "identity hardware-class {\n  description\n    \"This identity is the base for all hardware class\n     identifiers.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "identity unknown {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is unknown\n     to the server.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "identity chassis {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is an\n     overall container for networking equipment.  Any class of\n     physical component, except a stack, may be contained within a\n     chassis; a chassis may only be contained within a stack.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "     identity backplane {\n       base ianahw:hardware-class;\n       description\n         \"This identity is applicable if the hardware class is some sort\n          of device for aggregating and forwarding networking traffic,\n          such as a shared backplane in a modular ethernet switch.  Note\n          that an implementation may model a backplane as a single\n          physical component, which is actually implemented as multiple\n          discrete physical components (within a chassis or stack).\";\n     }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "identity container {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is capable\n     of containing one or more removable physical entities,\n     possibly of different types.  For example, each (empty or\n     full) slot in a chassis will be modeled as a container.  Note\n     that all removable physical components should be modeled\n     within a container component, such as field-replaceable\n     modules, fans, or power supplies.  Note that all known\n     containers should be modeled by the agent, including empty\n     containers.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "identity power-supply {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is a\n     power-supplying component.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "identity fan {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is a fan or\n     other heat-reduction component.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "identity sensor {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is some sort\n     of sensor, such as a temperature sensor within a router\n     chassis.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "     identity module {\n       base ianahw:hardware-class;\n       description\n         \"This identity is applicable if the hardware class is some sort\n          of self-contained sub-system.  If a module component is\n          removable, then it should be modeled within a container\n          component; otherwise, it should be modeled directly within\n          another physical component (e.g., a chassis or another\n          module).\";\n     }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "identity port {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is some sort\n     of networking port capable of receiving and/or transmitting\n     networking traffic.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "identity stack {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is some sort\n     of super-container (possibly virtual) intended to group\n     together multiple chassis entities.  A stack may be realized\n     by a virtual cable, a real interconnect cable attached to\n     multiple chassis, or multiple interconnect cables.  A stack\n     should not be modeled within any other physical components,\n     but a stack may be contained within another stack.  Only\n     chassis components should be contained within a stack.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "identity cpu {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is some sort\n     of central processing unit.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "identity energy-object {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is some sort\n     of energy object, i.e., it is a piece of equipment that is\n     part of or attached to a communications network that is\n     monitored, it is controlled, or it aids in the management of\n     another device for Energy Management.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "identity battery {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is some sort\n     of battery.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "}",
      "ja": "｝"
    },
    {
      "indent": 3,
      "text": "  identity storage-drive {\n    base ianahw:hardware-class;\n    description\n      \"This identity is applicable if the hardware class is some sort\n       of component with data storage capability as its main\n       functionality, e.g., hard disk drive (HDD), solid-state device\n       (SSD), solid-state hybrid drive (SSHD), object storage device\n       (OSD), or other.\";\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<CODE ENDS>",
      "ja": "<コード終了>"
    },
    {
      "indent": 0,
      "text": "8. IANA Considerations",
      "section_title": true,
      "ja": "8. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document defines the initial version of the IANA-maintained \"iana-hardware\" YANG module.",
      "ja": "このドキュメントは、IANAが保守する「iana-hardware」YANGモジュールの初期バージョンを定義しています。"
    },
    {
      "indent": 3,
      "text": "The \"iana-hardware\" YANG module is intended to reflect the \"IANA-ENTITY-MIB\" MIB module so that if a new enumeration is added to the \"IANAPhysicalClass\" textual convention, the same class is added as an identity derived from \"ianahw:hardware-class\".",
      "ja": "「iana-hardware」YANGモジュールは、「IANA-ENTITY-MIB」MIBモジュールを反映することを目的としているため、「IANAPhysicalClass」テキスト表記に新しい列挙が追加されると、「ianahw」から派生したIDとして同じクラスが追加されます。 ：hardware-class」。"
    },
    {
      "indent": 3,
      "text": "When the \"iana-hardware\" YANG module is updated, a new \"revision\" statement must be added in front of the existing revision statements.",
      "ja": "「iana-hardware」YANGモジュールが更新されると、既存のリビジョンステートメントの前に新しい「リビジョン」ステートメントを追加する必要があります。"
    },
    {
      "indent": 0,
      "text": "8.1. URI Registrations",
      "section_title": true,
      "ja": "8.1. うり れぎｓｔらちおんｓ"
    },
    {
      "indent": 3,
      "text": "This document registers three URIs in the \"IETF XML Registry\" [RFC3688]. Per the format in RFC 3688, the following registrations have been made.",
      "ja": "このドキュメントは、「IETF XMLレジストリ」[RFC3688]に3つのURIを登録します。 RFC 3688のフォーマットに従って、次の登録が行われました。"
    },
    {
      "indent": 5,
      "text": "URI: urn:ietf:params:xml:ns:yang:iana-hardware Registrant Contact: The IESG. XML: N/A, the requested URI is an XML namespace.",
      "ja": "URI：urn：ietf：params：xml：ns：yang：iana-hardware登録者の連絡先：IESG。 XML：N / A、要求されたURIはXML名前空間です。"
    },
    {
      "indent": 5,
      "text": "URI: urn:ietf:params:xml:ns:yang:ietf-hardware Registrant Contact: The IESG. XML: N/A, the requested URI is an XML namespace.",
      "ja": "URI：urn：ietf：params：xml：ns：yang：ietf-hardware登録者の連絡先：IESG。 XML：N / A、要求されたURIはXML名前空間です。"
    },
    {
      "indent": 5,
      "text": "URI: urn:ietf:params:xml:ns:yang:ietf-hardware-state Registrant Contact: The IESG. XML: N/A, the requested URI is an XML namespace.",
      "ja": "URI：urn：ietf：params：xml：ns：yang：ietf-hardware-state登録者の連絡先：IESG。 XML：N / A、要求されたURIはXML名前空間です。"
    },
    {
      "indent": 0,
      "text": "8.2. YANG Module Registrations",
      "section_title": true,
      "ja": "8.2. YANGモジュール登録"
    },
    {
      "indent": 3,
      "text": "This document registers three YANG modules in the \"YANG Module Names\" registry [RFC6020].",
      "ja": "このドキュメントは、「YANG Module Names」レジストリ[RFC6020]に3つのYANGモジュールを登録します。"
    },
    {
      "indent": 5,
      "text": "name:         iana-hardware\nnamespace:    urn:ietf:params:xml:ns:yang:iana-hardware\nprefix:       ianahw\nreference:    RFC 8348",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "name:         ietf-hardware\nnamespace:    urn:ietf:params:xml:ns:yang:ietf-hardware\nprefix:       hw\nreference:    RFC 8348",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "name:         ietf-hardware-state\nnamespace:    urn:ietf:params:xml:ns:yang:ietf-hardware-state\nprefix:       hw-state\nreference:    RFC 8348",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "ja": "9. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The YANG modules specified in this document define a schema for data that is designed to be accessed via network management protocols such as NETCONF [RFC6241] or RESTCONF [RFC8040]. The lowest NETCONF layer is the secure transport layer, and the mandatory-to-implement secure transport is Secure Shell (SSH) [RFC6242]. The lowest RESTCONF layer is HTTPS, and the mandatory-to-implement secure transport is TLS [RFC5246].",
      "ja": "このドキュメントで指定されているYANGモジュールは、NETCONF [RFC6241]やRESTCONF [RFC8040]などのネットワーク管理プロトコルを介してアクセスするように設計されたデータのスキーマを定義します。最下位のNETCONFレイヤーはセキュアなトランスポートレイヤーであり、実装に必須のセキュアなトランスポートはセキュアシェル（SSH）です[RFC6242]。最も低いRESTCONF層はHTTPSであり、実装に必須のセキュアなトランスポートはTLS [RFC5246]です。"
    },
    {
      "indent": 3,
      "text": "The NETCONF access control model [RFC8341] provides the means to restrict access for particular NETCONF or RESTCONF users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.",
      "ja": "NETCONFアクセス制御モデル[RFC8341]は、特定のNETCONFまたはRESTCONFユーザーのアクセスを、利用可能なすべてのNETCONFまたはRESTCONFプロトコル操作およびコンテンツの事前構成されたサブセットに制限する手段を提供します。"
    },
    {
      "indent": 3,
      "text": "There are a number of data nodes defined in the YANG module \"ietf-hardware\" that are writable/creatable/deletable (i.e., config true, which is the default). These data nodes may be considered sensitive or vulnerable in some network environments. Write operations (e.g., edit-config) to these data nodes without proper protection can have a negative effect on network operations. These are the subtrees and data nodes and their sensitivity/vulnerability:",
      "ja": "YANGモジュール \"ietf-hardware\"で定義されている、書き込み可能/作成可能/削除可能なデータノードがいくつかあります（つまり、config true、デフォルトです）。これらのデータノードは、一部のネットワーク環境では機密または脆弱であると見なされる場合があります。適切な保護なしにこれらのデータノードに書き込み操作（edit-configなど）を行うと、ネットワーク操作に悪影響を与える可能性があります。これらは、サブツリーとデータノード、およびそれらの機密性/脆弱性です。"
    },
    {
      "indent": 3,
      "text": "/hardware/component/admin-state: Setting this node to 'locked' or 'shutting-down' can cause disruption of services ranging from those running on a port to those on an entire device, depending on the type of component.",
      "ja": "/ hardware / component / admin-state：このノードを「ロック」または「シャットダウン」に設定すると、コンポーネントのタイプに応じて、ポートで実行されているサービスからデバイス全体のサービスまで、さまざまなサービスが中断される可能性があります。"
    },
    {
      "indent": 3,
      "text": "Some of the readable data nodes in these YANG modules may be considered sensitive or vulnerable in some network environments. It is thus important to control read access (e.g., via get, get-config, or notification) to these data nodes. These are the subtrees and data nodes and their sensitivity/vulnerability:",
      "ja": "これらのYANGモジュールの一部の読み取り可能なデータノードは、一部のネットワーク環境では機密または脆弱であると見なされる場合があります。したがって、これらのデータノードへの読み取りアクセスを制御することが重要です（たとえば、get、get-config、または通知を介して）。これらは、サブツリーとデータノード、およびそれらの機密性/脆弱性です。"
    },
    {
      "indent": 3,
      "text": "/hardware/component: The leafs in this list expose information about the physical components in a device, which may be used to identify the vendor, model, version, and specific device-identification information of each system component.",
      "ja": "/ hardware / component：このリストのリーフは、デバイスの物理コンポーネントに関する情報を公開します。これは、各システムコンポーネントのベンダー、モデル、バージョン、および特定のデバイス識別情報を識別するために使用できます。"
    },
    {
      "indent": 3,
      "text": "/hardware/component/sensor-data/value: This node may expose the values of particular physical sensors in a device.",
      "ja": "/ hardware / component / sensor-data / value：このノードは、デバイス内の特定の物理センサーの値を公開する場合があります。"
    },
    {
      "indent": 3,
      "text": "/hardware/component/state: Access to this node allows one to figure out what the active and standby resources in a device are.",
      "ja": "/ hardware / component / state：このノードへのアクセスにより、デバイスのアクティブリソースとスタンバイリソースが何であるかを把握できます。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10. 参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3433] Bierman, A., Romascanu, D., and K. Norseth, \"Entity Sensor Management Information Base\", RFC 3433, DOI 10.17487/RFC3433, December 2002, <https://www.rfc-editor.org/info/rfc3433>.",
      "ja": "[RFC3433] Bierman、A.、Romascanu、D。、およびK. Norseth、「エンティティセンサー管理情報ベース」、RFC 3433、DOI 10.17487 / RFC3433、2002年12月、<https://www.rfc-editor.org/ info / rfc3433>。"
    },
    {
      "indent": 3,
      "text": "[RFC3688] Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688, DOI 10.17487/RFC3688, January 2004, <https://www.rfc-editor.org/info/rfc3688>.",
      "ja": "[RFC3688] Mealling、M。、「The IETF XML Registry」、BCP 81、RFC 3688、DOI 10.17487 / RFC3688、2004年1月、<https://www.rfc-editor.org/info/rfc3688>。"
    },
    {
      "indent": 3,
      "text": "[RFC4268] Chisholm, S. and D. Perkins, \"Entity State MIB\", RFC 4268, DOI 10.17487/RFC4268, November 2005, <https://www.rfc-editor.org/info/rfc4268>.",
      "ja": "[RFC4268] Chisholm、S。およびD. Perkins、「Entity State MIB」、RFC 4268、DOI 10.17487 / RFC4268、2005年11月、<https://www.rfc-editor.org/info/rfc4268>。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, DOI 10.17487/RFC5246, August 2008, <https://www.rfc-editor.org/info/rfc5246>.",
      "ja": "[RFC5246] Dierks、T。およびE. Rescorla、「The Transport Layer Security（TLS）Protocol Version 1.2」、RFC 5246、DOI 10.17487 / RFC5246、2008年8月、<https://www.rfc-editor.org/info / rfc5246>。"
    },
    {
      "indent": 3,
      "text": "[RFC6020] Bjorklund, M., Ed., \"YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)\", RFC 6020, DOI 10.17487/RFC6020, October 2010, <https://www.rfc-editor.org/info/rfc6020>.",
      "ja": "[RFC6020] Bjorklund、M。、編、「YANG-ネットワーク構成プロトコル（NETCONF）のデータモデリング言語」、RFC 6020、DOI 10.17487 / RFC6020、2010年10月、<https：//www.rfc-editor。 org / info / rfc6020>。"
    },
    {
      "indent": 3,
      "text": "[RFC6241] Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed., and A. Bierman, Ed., \"Network Configuration Protocol (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011, <https://www.rfc-editor.org/info/rfc6241>.",
      "ja": "[RFC6241] Enns、R。、編、Bjorklund、M。、編、Schoenwaelder、J。、編、およびA. Bierman、編、「Network Configuration Protocol（NETCONF）」、RFC 6241、DOI 10.17487 / RFC6241、2011年6月、<https://www.rfc-editor.org/info/rfc6241>。"
    },
    {
      "indent": 3,
      "text": "[RFC6242] Wasserman, M., \"Using the NETCONF Protocol over Secure Shell (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011, <https://www.rfc-editor.org/info/rfc6242>.",
      "ja": "[RFC6242] Wasserman、M。、「Using the NETCONF Protocol over Secure Shell（SSH）」、RFC 6242、DOI 10.17487 / RFC6242、2011年6月、<https://www.rfc-editor.org/info/rfc6242>。"
    },
    {
      "indent": 3,
      "text": "[RFC6933] Bierman, A., Romascanu, D., Quittek, J., and M. Chandramouli, \"Entity MIB (Version 4)\", RFC 6933, DOI 10.17487/RFC6933, May 2013, <https://www.rfc-editor.org/info/rfc6933>.",
      "ja": "[RFC6933] Bierman、A.、Romascanu、D.、Quittek、J。、およびM. Chandramouli、「Entity MIB（Version 4）」、RFC 6933、DOI 10.17487 / RFC6933、2013年5月、<https：// www。 rfc-editor.org/info/rfc6933>。"
    },
    {
      "indent": 3,
      "text": "[RFC6991] Schoenwaelder, J., Ed., \"Common YANG Data Types\", RFC 6991, DOI 10.17487/RFC6991, July 2013, <https://www.rfc-editor.org/info/rfc6991>.",
      "ja": "[RFC6991] Schoenwaelder, J., Ed., \"Common YANG Data Types\", RFC 6991, DOI 10.17487/RFC6991, July 2013, <https://www.rfc-editor.org/info/rfc6991>."
    },
    {
      "indent": 3,
      "text": "[RFC7950] Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\", RFC 7950, DOI 10.17487/RFC7950, August 2016, <https://www.rfc-editor.org/info/rfc7950>.",
      "ja": "[RFC7950] Bjorklund、M。、編、「The YANG 1.1 Data Modeling Language」、RFC 7950、DOI 10.17487 / RFC7950、2016年8月、<https://www.rfc-editor.org/info/rfc7950>。"
    },
    {
      "indent": 3,
      "text": "[RFC8040] Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF Protocol\", RFC 8040, DOI 10.17487/RFC8040, January 2017, <https://www.rfc-editor.org/info/rfc8040>.",
      "ja": "[RFC8040] Bierman、A.、Bjorklund、M。、およびK. Watsen、「RESTCONFプロトコル」、RFC 8040、DOI 10.17487 / RFC8040、2017年1月、<https://www.rfc-editor.org/info/rfc8040 >。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>."
    },
    {
      "indent": 3,
      "text": "[RFC8341] Bierman, A. and M. Bjorklund, \"Network Configuration Access Control Model\", STD 91, RFC 8341, DOI 10.17487/RFC8341, March 2018, <https://www.rfc-editor.org/info/rfc8341>.",
      "ja": "[RFC8341] Bierman、A。およびM. Bjorklund、「Network Configuration Access Control Model」、STD 91、RFC 8341、DOI 10.17487 / RFC8341、2018年3月、<https://www.rfc-editor.org/info/rfc8341 >。"
    },
    {
      "indent": 3,
      "text": "[RFC8342] Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K., and R. Wilton, \"Network Management Datastore Architecture (NMDA)\", RFC 8342, DOI 10.17487/RFC8342, March 2018, <https://www.rfc-editor.org/info/rfc8342>.",
      "ja": "[RFC8342] Bjorklund、M.、Schoenwaelder、J.、Shafer、P.、Watsen、K。、およびR. Wilton、「Network Management Datastore Architecture（NMDA）」、RFC 8342、DOI 10.17487 / RFC8342、2018年3月、< https://www.rfc-editor.org/info/rfc8342>。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC8340] Bjorklund, M. and L. Berger, Ed., \"YANG Tree Diagrams\", BCP 215, RFC 8340, DOI 10.17487/RFC8340, March 2018, <https://www.rfc-editor.org/info/rfc8340>.",
      "ja": "[RFC8340] Bjorklund、M。およびL. Berger、編、「YANG Tree Diagrams」、BCP 215、RFC 8340、DOI 10.17487 / RFC8340、2018年3月、<https://www.rfc-editor.org/info/ rfc8340>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Hardware State Data Model",
      "section_title": true,
      "ja": "付録A.ハードウェア状態データモデル"
    },
    {
      "indent": 3,
      "text": "This non-normative appendix contains a data model designed as a temporary solution for implementations that do not yet support the Network Management Datastore Architecture (NMDA) defined in [RFC8342]. It has the following structure:",
      "ja": "この非規範的な付録には、[RFC8342]で定義されているNetwork Management Datastore Architecture（NMDA）をまだサポートしていない実装の一時的なソリューションとして設計されたデータモデルが含まれています。次のような構造になっています。"
    },
    {
      "indent": 3,
      "text": "module: ietf-hardware-state\n  x--ro hardware\n     x--ro last-change?   yang:date-and-time\n     x--ro component* [name]\n        x--ro name              string\n        x--ro class             identityref\n        x--ro physical-index?   int32 {entity-mib}?\n        x--ro description?      string\n        x--ro parent?           -> ../../component/name\n        x--ro parent-rel-pos?   int32\n        x--ro contains-child*   -> ../../component/name\n        x--ro hardware-rev?     string\n        x--ro firmware-rev?     string\n        x--ro software-rev?     string\n        x--ro serial-num?       string\n        x--ro mfg-name?         string\n        x--ro model-name?       string\n        x--ro alias?            string\n        x--ro asset-id?         string\n        x--ro is-fru?           boolean\n        x--ro mfg-date?         yang:date-and-time\n        x--ro uri*              inet:uri\n        x--ro uuid?             yang:uuid\n        x--ro state {hardware-state}?\n        |  x--ro state-last-changed?   yang:date-and-time\n        |  x--ro admin-state?          hw:admin-state\n        |  x--ro oper-state?           hw:oper-state\n        |  x--ro usage-state?          hw:usage-state\n        |  x--ro alarm-state?          hw:alarm-state\n        |  x--ro standby-state?        hw:standby-state\n        x--ro sensor-data {hardware-sensor}?\n           x--ro value?               hw:sensor-value\n           x--ro value-type?          hw:sensor-value-type\n           x--ro value-scale?         hw:sensor-value-scale\n           x--ro value-precision?     hw:sensor-value-precision\n           x--ro oper-status?         hw:sensor-status\n           x--ro units-display?       string\n           x--ro value-timestamp?     yang:date-and-time\n           x--ro value-update-rate?   uint32",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "notifications:\n  x---n hardware-state-change\n  x---n hardware-state-oper-enabled {hardware-state}?\n  |  x--ro name?          -> /hardware/component/name\n  |  x--ro admin-state?   -> /hardware/component/state/admin-state\n  |  x--ro alarm-state?   -> /hardware/component/state/alarm-state\n  x---n hardware-state-oper-disabled {hardware-state}?\n     x--ro name?          -> /hardware/component/name\n     x--ro admin-state?   -> /hardware/component/state/admin-state\n     x--ro alarm-state?   -> /hardware/component/state/alarm-state",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1. Hardware State YANG Module",
      "section_title": true,
      "ja": "A.1. ハードウェア状態YANGモジュール"
    },
    {
      "indent": 3,
      "text": "<CODE BEGINS> file \"ietf-hardware-state@2018-03-13.yang\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "module ietf-hardware-state {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-hardware-state\";\n  prefix hw-state;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "import ietf-inet-types {\n  prefix inet;\n}\nimport ietf-yang-types {\n  prefix yang;\n}\nimport iana-hardware {\n  prefix ianahw;\n}\nimport ietf-hardware {\n  prefix hw;\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "organization \"IETF NETMOD (Network Modeling) Working Group\";",
      "ja": "組織「IETF NETMOD（ネットワークモデリング）ワーキンググループ」;"
    },
    {
      "indent": 5,
      "text": "contact\n  \"WG Web:   <https://datatracker.ietf.org/wg/netmod/>\n   WG List:  <mailto:netmod@ietf.org>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Editor:   Andy Bierman\n          <mailto:andy@yumaworks.com>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Editor:   Martin Bjorklund\n          <mailto:mbj@tail-f.com>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Editor:   Jie Dong\n          <mailto:jie.dong@huawei.com>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Editor:   Dan Romascanu\n          <mailto:dromasca@gmail.com>\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "description \"This module contains a collection of YANG definitions for monitoring hardware.",
      "ja": "description \"This module contains a collection of YANG definitions for monitoring hardware."
    },
    {
      "indent": 8,
      "text": "This data model is designed as a temporary solution for implementations that do not yet support the Network Management Datastore Architecture (NMDA) defined in RFC 8342. Such an implementation cannot implement the module 'ietf-hardware' properly, since without NMDA support, it is not possible to distinguish between instances of nodes in the running configuration and operational states.",
      "ja": "This data model is designed as a temporary solution for implementations that do not yet support the Network Management Datastore Architecture (NMDA) defined in RFC 8342. Such an implementation cannot implement the module 'ietf-hardware' properly, since without NMDA support, it is not possible to distinguish between instances of nodes in the running configuration and operational states."
    },
    {
      "indent": 8,
      "text": "The data model in this module is the same as the data model in 'ietf-hardware', except all nodes are marked as 'config false'.",
      "ja": "このモジュールのデータモデルは、すべてのノードが「config false」としてマークされていることを除いて、「ietf-hardware」のデータモデルと同じです。"
    },
    {
      "indent": 8,
      "text": "If a server that implements this module but doesn't support NMDA also supports configuration of hardware components, it SHOULD also implement the module 'ietf-hardware' in the configuration datastores. The corresponding state data is found in the '/hw-state:hardware' subtree.",
      "ja": "If a server that implements this module but doesn't support NMDA also supports configuration of hardware components, it SHOULD also implement the module 'ietf-hardware' in the configuration datastores. The corresponding state data is found in the '/hw-state:hardware' subtree."
    },
    {
      "indent": 8,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "ja": "Copyright（c）2018 IETF Trustおよびコードの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 8,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info).",
      "ja": "ソースおよびバイナリ形式での再配布および使用は、変更の有無にかかわらず、IETF文書に関連するIETFトラストの法的規定のセクション4.cに記載されているSimplified BSD Licenseに従い、それに含まれるライセンス条項に従って許可されます（ https://trustee.ietf.org/license-info）。"
    },
    {
      "indent": 8,
      "text": "This version of this YANG module is part of RFC 8348; see the RFC itself for full legal notices.\";",
      "ja": "このYANGモジュールのこのバージョンはRFC 8348の一部です。完全な法的通知については、RFC自体を参照してください。 \";"
    },
    {
      "indent": 5,
      "text": "revision 2018-03-13 {\n  description\n    \"Initial revision.\";\n  reference\n    \"RFC 8348: A YANG Data Model for Hardware Management\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "/*\n * Features\n */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "feature entity-mib {\n  status deprecated;\n  description\n    \"This feature indicates that the device implements\n     the ENTITY-MIB.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4)\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "feature hardware-state {\n  status deprecated;\n  description\n    \"Indicates that ENTITY-STATE-MIB objects are supported\";\n  reference\n    \"RFC 4268: Entity State MIB\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "feature hardware-sensor {\n  status deprecated;\n  description\n    \"Indicates that ENTITY-SENSOR-MIB objects are supported\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "/*\n * Data nodes\n */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "container hardware {\n  config false;\n  status deprecated;\n  description\n    \"Data nodes representing components.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "leaf last-change {\n  type yang:date-and-time;\n  status deprecated;\n  description\n    \"The time the '/hardware/component' list changed in the\n     operational state.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "list component {\n  key name;\n  status deprecated;\n  description\n    \"List of components.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "When the server detects a new hardware component, it initializes a list entry in the operational state.",
      "ja": "サーバーは新しいハードウェアコンポーネントを検出すると、動作状態のリストエントリを初期化します。"
    },
    {
      "indent": 12,
      "text": "If the server does not support configuration of hardware components, list entries in the operational state are initialized with values for all nodes as detected by the implementation.",
      "ja": "サーバーがハードウェアコンポーネントの構成をサポートしていない場合、動作状態のリストエントリは、実装によって検出されたすべてのノードの値で初期化されます。"
    },
    {
      "indent": 12,
      "text": "Otherwise, this procedure is followed:",
      "ja": "それ以外の場合は、次の手順に従います。"
    },
    {
      "indent": 14,
      "text": "1. If there is an entry in the '/hardware/component' list in the intended configuration with values for the nodes 'class', 'parent', and 'parent-rel-pos' that are equal to the detected values, then:",
      "ja": "1. If there is an entry in the '/hardware/component' list in the intended configuration with values for the nodes 'class', 'parent', and 'parent-rel-pos' that are equal to the detected values, then:"
    },
    {
      "indent": 14,
      "text": "1a. If the configured entry has a value for 'mfg-name' that is equal to the detected value or if the 'mfg-name' value cannot be detected, then the list entry in the operational state is initialized with the configured values for all configured nodes, including the 'name'.",
      "ja": "1a. If the configured entry has a value for 'mfg-name' that is equal to the detected value or if the 'mfg-name' value cannot be detected, then the list entry in the operational state is initialized with the configured values for all configured nodes, including the 'name'."
    },
    {
      "indent": 18,
      "text": "Otherwise, the list entry in the operational state is initialized with values for all nodes as detected by the implementation. The implementation may raise an alarm that informs about the 'mfg-name' mismatch condition. How this is done is outside the scope of this document.",
      "ja": "Otherwise, the list entry in the operational state is initialized with values for all nodes as detected by the implementation. The implementation may raise an alarm that informs about the 'mfg-name' mismatch condition. How this is done is outside the scope of this document."
    },
    {
      "indent": 14,
      "text": "1b. Otherwise (i.e., there is no matching configuration entry), the list entry in the operational state is initialized with values for all nodes as detected by the implementation.",
      "ja": "1b。それ以外の場合（つまり、一致する構成エントリがない場合）、動作状態のリストエントリは、実装によって検出されたすべてのノードの値で初期化されます。"
    },
    {
      "indent": 9,
      "text": "   If the '/hardware/component' list in the intended\n   configuration is modified, then the system MUST behave as if\n   it re-initializes itself and follow the procedure in (1).\";\nreference\n  \"RFC 6933: Entity MIB (Version 4) - entPhysicalEntry\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf name {\n  type string;\n  status deprecated;\n  description\n    \"The name assigned to this component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "This name is not required to be the same as entPhysicalName.\";",
      "ja": "この名前は、entPhysicalNameと同じである必要はありません。 \";"
    },
    {
      "indent": 9,
      "text": "}",
      "ja": "｝"
    },
    {
      "indent": 9,
      "text": "leaf class {\n  type identityref {\n    base ianahw:hardware-class;\n  }\n  mandatory true;\n  status deprecated;\n  description\n    \"An indication of the general hardware type of the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalClass\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf physical-index {\n  if-feature entity-mib;\n  type int32 {\n    range \"1..2147483647\";\n  }\n  status deprecated;\n  description\n    \"The entPhysicalIndex for the entPhysicalEntry represented\n     by this list entry.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalIndex\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf description {\n  type string;\n  status deprecated;\n  description\n    \"A textual description of the component.  This node should\n     contain a string that identifies the manufacturer's name\n     for the component and should be set to a distinct value\n     for each version or model of the component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalDescr\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf parent {\n  type leafref {\n    path \"../../component/name\";\n    require-instance false;\n  }\n  status deprecated;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "description \"The name of the component that physically contains this component.",
      "ja": "description \"このコンポーネントを物理的に含むコンポーネントの名前。"
    },
    {
      "indent": 14,
      "text": "If this leaf is not instantiated, it indicates that this component is not contained in any other component.",
      "ja": "If this leaf is not instantiated, it indicates that this component is not contained in any other component."
    },
    {
      "indent": 9,
      "text": "     In the event that a physical component is contained by\n     more than one physical component (e.g., double-wide\n     modules), this node contains the name of one of these\n     components.  An implementation MUST use the same name\n     every time this node is instantiated.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalContainedIn\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf parent-rel-pos {\n  type int32 {\n    range \"0 .. 2147483647\";\n  }\n  status deprecated;\n  description\n    \"An indication of the relative position of this child\n     component among all its sibling components.  Sibling\n     components are defined as components that:",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "o share the same value of the 'parent' node and",
      "ja": "o 「親」ノードと同じ値を共有し、"
    },
    {
      "indent": 16,
      "text": "o share a common base identity for the 'class' node.",
      "ja": "o 「クラス」ノードの共通ベースIDを共有します。"
    },
    {
      "indent": 14,
      "text": "Note that the last rule gives implementations flexibility in how components are numbered. For example, some implementations might have a single number series for all components derived from 'ianahw:port', while some others might have different number series for different components with identities derived from 'ianahw:port' (for example, one for RJ45 and one for SFP).\";",
      "ja": "最後のルールは、コンポーネントの番号付け方法に実装の柔軟性を与えることに注意してください。たとえば、一部の実装では、「ianahw：port」から派生したすべてのコンポーネントに単一の数値系列があり、「ianahw：port」から派生したIDを持つコンポーネントごとに異なる数値系列を持つものもあります（たとえば、RJ45およびSFPの1つ）」;"
    },
    {
      "indent": 9,
      "text": "  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalParentRelPos\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "         leaf-list contains-child {\n           type leafref {\n             path \"../../component/name\";\n           }\n           status deprecated;\n           description\n             \"The name of the contained component.\";\n           reference\n             \"RFC 6933: Entity MIB (Version 4) - entPhysicalChildIndex\";\n         }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf hardware-rev {\n  type string;\n  status deprecated;\n  description\n    \"The vendor-specific hardware revision string for the\n     component.  The preferred value is the hardware revision\n     identifier actually printed on the component itself (if\n     present).\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalHardwareRev\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf firmware-rev {\n  type string;\n  status deprecated;\n  description\n    \"The vendor-specific firmware revision string for the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalFirmwareRev\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf software-rev {\n  type string;\n  status deprecated;\n  description\n    \"The vendor-specific software revision string for the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalSoftwareRev\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf serial-num {\n  type string;\n  status deprecated;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "  description\n    \"The vendor-specific serial number string for the\n     component.  The preferred value is the serial number\n     string actually printed on the component itself (if\n     present).\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalSerialNum\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf mfg-name {\n  type string;\n  status deprecated;\n  description\n    \"The name of the manufacturer of this physical component.\n     The preferred value is the manufacturer name string\n     actually printed on the component itself (if present).",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Note that comparisons between instances of the 'model-name', 'firmware-rev', 'software-rev', and 'serial-num' nodes are only meaningful amongst components with the same value of 'mfg-name'.",
      "ja": "Note that comparisons between instances of the 'model-name', 'firmware-rev', 'software-rev', and 'serial-num' nodes are only meaningful amongst components with the same value of 'mfg-name'."
    },
    {
      "indent": 9,
      "text": "     If the manufacturer name string associated with the\n     physical component is unknown to the server, then this\n     node is not instantiated.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalMfgName\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf model-name {\n  type string;\n  status deprecated;\n  description\n    \"The vendor-specific model name identifier string\n     associated with this physical component.  The preferred\n     value is the customer-visible part number, which may be\n     printed on the component itself.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "     If the model name string associated with the physical\n     component is unknown to the server, then this node is not\n     instantiated.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalModelName\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf alias {\n  type string;\n  status deprecated;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "description \"An 'alias' name for the component, as specified by a network manager, that provides a non-volatile 'handle' for the component.",
      "ja": "説明「ネットワークマネージャーによって指定された、コンポーネントの非揮発性の「ハンドル」を提供する、コンポーネントの「エイリアス」名。"
    },
    {
      "indent": 14,
      "text": "If no configured value exists, the server MAY set the value of this node to a locally unique value in the operational state.",
      "ja": "If no configured value exists, the server MAY set the value of this node to a locally unique value in the operational state."
    },
    {
      "indent": 9,
      "text": "     A server implementation MAY map this leaf to the\n     entPhysicalAlias MIB object.  Such an implementation needs\n     to use some mechanism to handle the differences in size\n     and characters allowed between this leaf and\n     entPhysicalAlias.  The definition of such a mechanism is\n     outside the scope of this document.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalAlias\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf asset-id {\n  type string;\n  status deprecated;\n  description\n    \"This node is a user-assigned asset tracking identifier for\n     the component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "     A server implementation MAY map this leaf to the\n     entPhysicalAssetID MIB object.  Such an implementation\n     needs to use some mechanism to handle the differences in\n     size and characters allowed between this leaf and\n     entPhysicalAssetID.  The definition of such a mechanism is\n     outside the scope of this document.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalAssetID\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf is-fru {\n  type boolean;\n  status deprecated;\n  description\n    \"This node indicates whether or not this component is\n     considered a 'field-replaceable unit' by the vendor.  If\n     this node contains the value 'true', then this component\n     identifies a field-replaceable unit.  For all components\n     that are permanently contained within a field-replaceable\n     unit, the value 'false' should be returned for this\n     node.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalIsFRU\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf mfg-date {\n  type yang:date-and-time;\n  status deprecated;\n  description\n    \"The date of manufacturing of the managed component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalMfgDate\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf-list uri {\n  type inet:uri;\n  status deprecated;\n  description\n    \"This node contains identification information about the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalUris\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf uuid {\n  type yang:uuid;\n  status deprecated;\n  description\n    \"A Universally Unique Identifier of the component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalUUID\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "container state {\n  if-feature hardware-state;\n  status deprecated;\n  description\n    \"State-related nodes\";\n  reference\n    \"RFC 4268: Entity State MIB\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "leaf state-last-changed {\n  type yang:date-and-time;\n  status deprecated;\n  description\n    \"The date and time when the value of any of the\n     admin-state, oper-state, usage-state, alarm-state, or\n     standby-state changed for this component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "     If there has been no change since the last\n     re-initialization of the local system, this node\n     contains the date and time of local system\n     initialization.  If there has been no change since the\n     component was added to the local system, this node\n     contains the date and time of the insertion.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateLastChanged\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "leaf admin-state {\n  type hw:admin-state;\n  status deprecated;\n  description\n    \"The administrative state for this component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "This node refers to a component's administrative permission to service both other components within its containment hierarchy as well as other users of its services defined by means outside the scope of this module.",
      "ja": "このノードは、包含階層内の他のコンポーネントと、このモジュールのスコープ外で定義されたサービスの他のユーザーの両方にサービスを提供するためのコンポーネントの管理権限を指します。"
    },
    {
      "indent": 11,
      "text": "     Some components exhibit only a subset of the remaining\n     administrative state values.  Some components cannot be\n     locked; hence, this node exhibits only the 'unlocked'\n     state.  Other components cannot be shut down gracefully;\n     hence, this node does not exhibit the 'shutting-down'\n     state.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateAdmin\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "leaf oper-state {\n  type hw:oper-state;\n  status deprecated;\n  description\n    \"The operational state for this component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Note that this node does not follow the administrative state. An administrative state of 'down' does not predict an operational state of 'disabled'.",
      "ja": "Note that this node does not follow the administrative state. An administrative state of 'down' does not predict an operational state of 'disabled'."
    },
    {
      "indent": 13,
      "text": "   Note that some implementations may not be able to\n   accurately report oper-state while the admin-state node\n   has a value other than 'unlocked'.  In these cases, this\n   node MUST have a value of 'unknown'.\";\nreference\n  \"RFC 4268: Entity State MIB - entStateOper\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "}",
      "ja": "}"
    },
    {
      "indent": 11,
      "text": "leaf usage-state {\n  type hw:usage-state;\n  status deprecated;\n  description\n    \"The usage state for this component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "This node refers to a component's ability to service more components in a containment hierarchy.",
      "ja": "このノードは、包含階層内のより多くのコンポーネントにサービスを提供するコンポーネントの機能を指します。"
    },
    {
      "indent": 11,
      "text": "     Some components will exhibit only a subset of the usage\n     state values.  Components that are unable to ever\n     service any components within a containment hierarchy\n     will always have a usage state of 'busy'.  In some\n     cases, a component will be able to support only one\n     other component within its containment hierarchy and\n     will therefore only exhibit values of 'idle' and\n     'busy'.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateUsage\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "leaf alarm-state {\n  type hw:alarm-state;\n  status deprecated;\n  description\n    \"The alarm state for this component.  It does not\n     include the alarms raised on child components within its\n     containment hierarchy.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateAlarm\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "leaf standby-state {\n  type hw:standby-state;\n  status deprecated;\n  description\n    \"The standby state for this component.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "                Some components will exhibit only a subset of the\n                remaining standby state values.  If this component\n                cannot operate in a standby role, the value of this node\n                will always be 'providing-service'.\";\n             reference\n               \"RFC 4268: Entity State MIB - entStateStandby\";\n           }\n         }\n         container sensor-data {\n           when 'derived-from-or-self(../class,\n                                      \"ianahw:sensor\")' {\n             description\n               \"Sensor data nodes present for any component of type\n                'sensor'\";\n           }\n           if-feature hardware-sensor;\n           status deprecated;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "description\n  \"Sensor-related nodes.\";\nreference\n  \"RFC 3433: Entity Sensor Management Information Base\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "leaf value {\n  type hw:sensor-value;\n  status deprecated;\n  description\n    \"The most recent measurement obtained by the server\n     for this sensor.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "     A client that periodically fetches this node should also\n     fetch the nodes 'value-type', 'value-scale', and\n     'value-precision', since they may change when the value\n     is changed.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorValue\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "leaf value-type {\n  type hw:sensor-value-type;\n  status deprecated;\n  description\n    \"The type of data units associated with the\n     sensor value\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorType\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "leaf value-scale {\n  type hw:sensor-value-scale;\n  status deprecated;\n  description\n    \"The (power of 10) scaling factor associated\n     with the sensor value\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorScale\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "leaf value-precision {\n  type hw:sensor-value-precision;\n  status deprecated;\n  description\n    \"The number of decimal places of precision\n     associated with the sensor value\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorPrecision\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "leaf oper-status {\n  type hw:sensor-status;\n  status deprecated;\n  description\n    \"The operational status of the sensor.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorOperStatus\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "leaf units-display {\n  type string;\n  status deprecated;\n  description\n    \"A textual description of the data units that should be\n     used in the display of the sensor value.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorUnitsDisplay\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "           leaf value-timestamp {\n             type yang:date-and-time;\n             status deprecated;\n             description\n               \"The time the status and/or value of this sensor was last\n                obtained by the server.\";\n             reference\n               \"RFC 3433: Entity Sensor Management Information Base -\n                          entPhySensorValueTimeStamp\";\n           }\n           leaf value-update-rate {\n             type uint32;\n             units \"milliseconds\";\n             status deprecated;\n             description\n               \"An indication of the frequency that the server updates\n                the associated 'value' node, represented in\n                milliseconds.  The value zero indicates:",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "- the sensor value is updated on demand (e.g., when polled by the server for a get-request),",
      "ja": "- the sensor value is updated on demand (e.g., when polled by the server for a get-request),"
    },
    {
      "indent": 17,
      "text": "- the sensor value is updated when the sensor value changes (event-driven), or",
      "ja": "- センサーの値が変化したときにセンサーの値が更新される（イベント駆動型）、または"
    },
    {
      "indent": 5,
      "text": "            - the server does not know the update rate.\";\n        reference\n          \"RFC 3433: Entity Sensor Management Information Base -\n                     entPhySensorValueUpdateRate\";\n      }\n    }\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "/*\n * Notifications\n */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "notification hardware-state-change {\n  status deprecated;\n  description\n    \"A hardware-state-change notification is generated when the\n     value of /hardware/last-change changes in the operational\n     state.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entConfigChange\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "notification hardware-state-oper-enabled {\n  if-feature hardware-state;\n  status deprecated;\n  description\n    \"A hardware-state-oper-enabled notification signifies that a\n     component has transitioned into the 'enabled' state.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "leaf name {\n  type leafref {\n    path \"/hardware/component/name\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "    }\n    status deprecated;\n    description\n      \"The name of the component that has transitioned into the\n       'enabled' state.\";\n  }\n  leaf admin-state {\n    type leafref {\n      path \"/hardware/component/state/admin-state\";\n    }\n    status deprecated;\n    description\n      \"The administrative state for the component.\";\n  }\n  leaf alarm-state {\n    type leafref {\n      path \"/hardware/component/state/alarm-state\";\n    }\n    status deprecated;\n    description\n      \"The alarm state for the component.\";\n  }\n  reference\n    \"RFC 4268: Entity State MIB - entStateOperEnabled\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "notification hardware-state-oper-disabled {\n  if-feature hardware-state;\n  status deprecated;\n  description\n    \"A hardware-state-oper-disabled notification signifies that a\n     component has transitioned into the 'disabled' state.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "leaf name {\n  type leafref {\n    path \"/hardware/component/name\";\n  }\n  status deprecated;\n  description\n    \"The name of the component that has transitioned into the\n     'disabled' state.\";\n}\nleaf admin-state {\n  type leafref {\n    path \"/hardware/component/state/admin-state\";\n  }\n  status deprecated;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "    description\n      \"The administrative state for the component.\";\n  }\n  leaf alarm-state {\n    type leafref {\n      path \"/hardware/component/state/alarm-state\";\n    }\n    status deprecated;\n    description\n      \"The alarm state for the component.\";\n  }\n  reference\n    \"RFC 4268: Entity State MIB - entStateOperDisabled\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "}",
      "ja": "｝"
    },
    {
      "indent": 3,
      "text": "<CODE ENDS>",
      "ja": "<CODE ENDS>"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors wish to thank the following individuals, who all provided helpful comments on various draft versions of this document: Bart Bogaert, Timothy Carey, William Lupton, and Juergen Schoenwaelder.",
      "ja": "このドキュメントのさまざまなドラフトバージョンについて有益なコメントを提供してくれた次の個人に感謝します。BartBogaert、Timothy Carey、William Lupton、およびJuergen Schoenwaelder。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "Authors' Addresses"
    },
    {
      "indent": 3,
      "text": "Andy Bierman YumaWorks",
      "ja": "アンディ・ビアマンYumaWorks"
    },
    {
      "indent": 3,
      "text": "Email: andy@yumaworks.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Martin Bjorklund Tail-f Systems",
      "ja": "Martin Bjorklund Tail-fシステム"
    },
    {
      "indent": 3,
      "text": "Email: mbj@tail-f.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Jie Dong Huawei Technologies",
      "ja": "Jie Dong Huawei Technologies"
    },
    {
      "indent": 3,
      "text": "Email: jie.dong@huawei.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Dan Romascanu",
      "ja": "Dan Romascanu"
    },
    {
      "indent": 3,
      "text": "Email: dromasca@gmail.com",
      "raw": true,
      "ja": ""
    }
  ]
}