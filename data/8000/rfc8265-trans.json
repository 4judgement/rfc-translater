{
  "title": {
    "text": "RFC 8265 - Preparation, Enforcement, and Comparison of Internationalized Strings Representing Usernames and Passwords",
    "ja": "RFC 8265 - ユーザー名とパスワードを表す国際化された文字列の準備、施行、比較"
  },
  "number": 8265,
  "created_at": "2020-08-25 18:35:30.234856+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                    P. Saint-Andre\nRequest for Comments: 8265                                    Jabber.org\nObsoletes: 7613                                              A. Melnikov\nCategory: Standards Track                                      Isode Ltd\nISSN: 2070-1721                                             October 2017",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "Preparation, Enforcement, and Comparison of Internationalized Strings Representing Usernames and Passwords",
      "ja": "ユーザー名とパスワードを表す国際化された文字列の準備、施行、比較"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document describes updated methods for handling Unicode strings representing usernames and passwords. The previous approach was known as SASLprep (RFC 4013) and was based on Stringprep (RFC 3454). The methods specified in this document provide a more sustainable approach to the handling of internationalized usernames and passwords. This document obsoletes RFC 7613.",
      "ja": "このドキュメントでは、ユーザー名とパスワードを表すUnicode文字列を処理するための更新されたメソッドについて説明します。以前のアプローチはSASLprep（RFC 4013）として知られており、Stringprep（RFC 3454）に基づいていました。このドキュメントで指定されている方法は、国際化されたユーザー名とパスワードの処理に対するより持続可能なアプローチを提供します。このドキュメントはRFC 7613を廃止します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 7841のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8265.",
      "ja": "このドキュメントの現在のステータス、エラッタ、およびフィードバックの提供方法に関する情報は、https：//www.rfc-editor.org/info/rfc8265で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2017 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2017 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です。これらのドキュメントは、このドキュメントに関するあなたの権利と制限について説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3\n2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   4\n3.  Usernames . . . . . . . . . . . . . . . . . . . . . . . . . .   5\n  3.1.  Definition  . . . . . . . . . . . . . . . . . . . . . . .   5\n  3.2.  Case Mapping vs. Case Preservation  . . . . . . . . . . .   6\n  3.3.  UsernameCaseMapped Profile  . . . . . . . . . . . . . . .   7\n    3.3.1.  Rules . . . . . . . . . . . . . . . . . . . . . . . .   7\n    3.3.2.  Preparation . . . . . . . . . . . . . . . . . . . . .   8\n    3.3.3.  Enforcement . . . . . . . . . . . . . . . . . . . . .   8\n    3.3.4.  Comparison  . . . . . . . . . . . . . . . . . . . . .   9\n  3.4.  UsernameCasePreserved Profile . . . . . . . . . . . . . .   9\n    3.4.1.  Rules . . . . . . . . . . . . . . . . . . . . . . . .   9\n    3.4.2.  Preparation . . . . . . . . . . . . . . . . . . . . .   9\n    3.4.3.  Enforcement . . . . . . . . . . . . . . . . . . . . .  10\n    3.4.4.  Comparison  . . . . . . . . . . . . . . . . . . . . .  10\n  3.5.  Application-Layer Constructs  . . . . . . . . . . . . . .  11\n  3.6.  Examples  . . . . . . . . . . . . . . . . . . . . . . . .  11\n4.  Passwords . . . . . . . . . . . . . . . . . . . . . . . . . .  13\n  4.1.  Definition  . . . . . . . . . . . . . . . . . . . . . . .  13\n  4.2.  OpaqueString Profile  . . . . . . . . . . . . . . . . . .  14\n    4.2.1.  Preparation . . . . . . . . . . . . . . . . . . . . .  14\n    4.2.2.  Enforcement . . . . . . . . . . . . . . . . . . . . .  14\n    4.2.3.  Comparison  . . . . . . . . . . . . . . . . . . . . .  15\n  4.3.  Examples  . . . . . . . . . . . . . . . . . . . . . . . .  15\n5.  Use in Application Protocols  . . . . . . . . . . . . . . . .  16\n6.  Migration . . . . . . . . . . . . . . . . . . . . . . . . . .  17\n  6.1.  Usernames . . . . . . . . . . . . . . . . . . . . . . . .  17\n  6.2.  Passwords . . . . . . . . . . . . . . . . . . . . . . . .  19\n7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  20\n  7.1.  UsernameCaseMapped Profile  . . . . . . . . . . . . . . .  20\n  7.2.  UsernameCasePreserved Profile . . . . . . . . . . . . . .  20\n  7.3.  OpaqueString Profile  . . . . . . . . . . . . . . . . . .  21\n  7.4.  Stringprep Profile  . . . . . . . . . . . . . . . . . . .  22\n8.  Security Considerations . . . . . . . . . . . . . . . . . . .  22\n  8.1.  Password/Passphrase Strength  . . . . . . . . . . . . . .  22\n  8.2.  Password/Passphrase Comparison  . . . . . . . . . . . . .  22\n  8.3.  Identifier Comparison . . . . . . . . . . . . . . . . . .  22\n  8.4.  Reuse of PRECIS . . . . . . . . . . . . . . . . . . . . .  22\n  8.5.  Reuse of Unicode  . . . . . . . . . . . . . . . . . . . .  22\n9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  23\n  9.1.  Normative References  . . . . . . . . . . . . . . . . . .  23\n  9.2.  Informative References  . . . . . . . . . . . . . . . . .  24\nAppendix A.  Changes from RFC 7613  . . . . . . . . . . . . . . .  25\nAcknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  26\nAuthors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  26",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Usernames and passwords are widely used for authentication and authorization on the Internet, either directly when provided in plaintext (as in the PLAIN Simple Authentication and Security Layer (SASL) mechanism [RFC4616] and the HTTP Basic scheme [RFC7617]) or indirectly when provided as the input to a cryptographic algorithm such as a hash function (as in the Salted Challenge Response Authentication Mechanism (SCRAM) SASL mechanism [RFC5802] and the HTTP Digest scheme [RFC7616]).",
      "ja": "ユーザー名とパスワードは、プレーンテキストで直接提供される場合（プレーンシンプル認証およびセキュリティレイヤー（SASL）メカニズム[RFC4616]およびHTTP基本スキーム[RFC7617]のように）に直接、または提供される場合に間接的に、インターネットでの認証および承認に広く使用されます。ハッシュ関数などの暗号化アルゴリズムへの入力として（ソルトチャレンジレスポンス認証メカニズム（SCRAM）SASLメカニズム[RFC5802]およびHTTPダイジェストスキーム[RFC7616]と同様）。"
    },
    {
      "indent": 3,
      "text": "To increase the likelihood that the input and comparison of usernames and passwords will work in ways that make sense for typical users throughout the world, this document defines rules for handling internationalized strings that represent usernames and passwords. Such strings consist of code points from the Unicode coded character set [Unicode], with special attention to code points outside the ASCII range [RFC20]. The rules for handling such strings are specified through profiles of the string classes defined in the preparation, enforcement, and comparison of internationalized strings (PRECIS) framework specification [RFC8264].",
      "ja": "ユーザー名とパスワードの入力と比較が世界中の一般的なユーザーにとって意味のある方法で機能する可能性を高めるために、このドキュメントでは、ユーザー名とパスワードを表す国際化された文字列を処理するためのルールを定義します。このような文字列は、ASCIIの範囲外のコードポイント[RFC20]に特別な注意を払って、Unicodeコード化文字セット[Unicode]のコードポイントで構成されています。そのような文字列を処理するためのルールは、国際化文字列の準備、施行、および比較（PRECIS）フレームワーク仕様[RFC8264]で定義された文字列クラスのプロファイルを通じて指定されます。"
    },
    {
      "indent": 3,
      "text": "Profiles of the PRECIS framework enable software to handle Unicode code points outside the ASCII range in an automated way, so that such code points are treated carefully and consistently in application protocols. In large measure, these profiles are designed to protect application developers from the potentially negative consequences of supporting the full range of Unicode code points. For instance, in almost all application protocols it would be dangerous to treat the Unicode code point \"¹\" (SUPERSCRIPT ONE, U+00B9) as equivalent to \"1\" (DIGIT ONE, U+0031), because that would result in false accepts during comparison, authentication, and authorization (e.g., an attacker could easily spoof an account \"user1@example.com\").",
      "ja": "PRECISフレームワークのプロファイルにより、ソフトウェアはASCII範囲外のUnicodeコードポイントを自動化された方法で処理できるため、そのようなコードポイントはアプリケーションプロトコルで注意深く一貫して扱われます。大まかに言えば、これらのプロファイルは、すべてのUnicodeコードポイントをサポートすることによる潜在的な悪影響からアプリケーション開発者を保護するように設計されています。たとえば、ほとんどすべてのアプリケーションプロトコルでは、Unicodeコードポイント \"¹\"（SUPERSCRIPT ONE、U + 00B9）を \"1\"（DIGIT ONE、U + 0031）と同等に扱うことは危険です。比較、認証、および承認中に受け入れます（たとえば、攻撃者はアカウント「user1@example.com」を簡単に偽装する可能性があります）。"
    },
    {
      "indent": 3,
      "text": "Whereas a naive use of Unicode would make such attacks trivially easy, the PRECIS profile defined here for usernames generally protects applications from inadvertently causing such problems. (Similar considerations apply to passwords, although here it is desirable to support a wider range of characters so as to maximize entropy for purposes of authentication.)",
      "ja": "Unicodeの素朴な使用はそのような攻撃を簡単に行うことができますが、ここでユーザー名用に定義されたPRECISプロファイルは、一般にアプリケーションを不注意でそのような問題を引き起こすことから保護します。 （同様の考慮事項がパスワードに適用されますが、認証の目的でエントロピーを最大化するために、ここではより広い範囲の文字をサポートすることが望ましいです。）"
    },
    {
      "indent": 3,
      "text": "The methods defined here might be applicable wherever usernames or passwords are used. However, the methods are not intended for use in preparing strings that are not usernames (e.g., Lightweight Directory Access Protocol (LDAP) distinguished names), nor in cases where identifiers or secrets are not strings (e.g., keys and certificates) or require specialized handling.",
      "ja": "ここで定義されている方法は、ユーザー名またはパスワードが使用されている場所に適用できます。ただし、このメソッドは、ユーザー名ではない文字列（ライトウェイトディレクトリアクセスプロトコル（LDAP）識別名など）を準備する場合や、識別子やシークレットが文字列ではない場合（キーや証明書など）や特殊化が必要な場合には使用できません。取り扱い。"
    },
    {
      "indent": 3,
      "text": "Although the historical predecessor of this document was the SASLprep profile of Stringprep [RFC3454]), the approach defined here can be used by technologies other than SASL [RFC4422], such as HTTP authentication as specified in [RFC7617] and [RFC7616].",
      "ja": "このドキュメントの歴史的な前身はStringprep [RFC3454]のSASLprepプロファイルでしたが、ここで定義されたアプローチは、[RFC7617]や[RFC7616]で指定されているHTTP認証など、SASL [RFC4422]以外のテクノロジーでも使用できます。"
    },
    {
      "indent": 3,
      "text": "This document does not modify the handling of internationalized strings in usernames and passwords as prescribed by existing application protocols that use SASLprep. If the community that uses such an application protocol wishes to modernize its handling of internationalized strings to use PRECIS instead of Stringprep, it needs to explicitly update the existing application protocol definition (one example is [RFC7622]). Non-coordinated updates to protocol implementations are discouraged because they can have a negative impact on interoperability and security.",
      "ja": "このドキュメントでは、SASLprepを使用する既存のアプリケーションプロトコルで規定されているように、ユーザー名とパスワードの国際化文字列の処理を変更しません。そのようなアプリケーションプロトコルを使用するコミュニティが、国際化された文字列の処理を近代化してStringprepの代わりにPRECISを使用する場合、既存のアプリケーションプロトコル定義を明示的に更新する必要があります（1つの例は[RFC7622]）。相互運用性とセキュリティに悪影響を与える可能性があるため、プロトコル実装の調整されていない更新は推奨されません。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2. 用語"
    },
    {
      "indent": 3,
      "text": "A \"username\" or \"user identifier\" is a string of characters designating an account on a computing device or system, often but not necessarily for use by a person. Although some devices and systems might allow a username to be part or all of a person's name and a person might want their account designator to be part or all of their name, because of the complexities involved, that outcome is not guaranteed for all human names on all computing devices or systems that follow the rules defined in this specification. Protocol designers and application developers who wish to allow a wider range of characters are encouraged to consider a separation between more restrictive account identifiers and more expressive display names or nicknames (see [RFC8266]).",
      "ja": "「ユーザー名」または「ユーザー識別子」は、コンピューティングデバイスまたはシステムのアカウントを指定する文字列であり、多くの場合、人が使用する必要はありません。一部のデバイスやシステムでは、ユーザー名を人の名前の一部またはすべてにしたり、アカウントの指定子を名前の一部またはすべてにしたりすることができますが、複雑なため、すべての人の名前についてその結果が保証されるわけではありませんこの仕様で定義されているルールに従うすべてのコンピューティングデバイスまたはシステム。より広い範囲の文字を許可したいプロトコル設計者およびアプリケーション開発者は、より限定的なアカウント識別子とより表現力のある表示名またはニックネームの分離を検討することをお勧めします（[RFC8266]を参照）。"
    },
    {
      "indent": 3,
      "text": "A \"password\" is a string of characters that allows access to a computing device or system, often associated with a particular username. A password is not literally limited to a word, because a password could be a passphrase consisting of more than one word, perhaps separated by spaces, punctuation, or other non-alphanumeric characters.",
      "ja": "「パスワード」は、コンピューティングデバイスまたはシステムへのアクセスを可能にする文字列で、多くの場合、特定のユーザー名に関連付けられています。パスワードは文字に単語に限定されません。パスワードは、スペース、句読点、またはその他の非英数字で区切られた複数の単語で構成されるパスフレーズである可能性があるためです。"
    },
    {
      "indent": 3,
      "text": "Some SASL mechanisms (e.g., CRAM-MD5, DIGEST-MD5, and SCRAM) specify that the authentication identity used in the context of such mechanisms is a \"simple username\" (see Section 2 of [RFC4422] as well as [RFC4013]). Various application technologies also assume that the identity of a user or account takes the form of a username (e.g., authentication for the Hypertext Transfer Protocol as specified in [RFC7617] and [RFC7616]), whether or not they use SASL. Note well that the exact form of a username in any particular SASL mechanism or application technology is a matter for implementation and deployment; note also that a username does not necessarily map to any particular application identifier.",
      "ja": "一部のSASLメカニズム（CRAM-MD5、DIGEST-MD5、SCRAMなど）は、そのようなメカニズムのコンテキストで使用される認証IDが「単純なユーザー名」であることを指定しています（[RFC4422]のセクション2および[RFC4013]を参照）。 。 SASLを使用するかどうかに関係なく、さまざまなアプリケーションテクノロジーでは、ユーザーまたはアカウントのIDがユーザー名の形式（[RFC7617]および[RFC7616]で指定されているハイパーテキスト転送プロトコルの認証など）であると想定しています。特定のSASLメカニズムまたはアプリケーションテクノロジでのユーザー名の正確な形式は、実装と展開の問題であることに注意してください。また、ユーザー名は必ずしも特定のアプリケーション識別子にマップされているわけではないことにも注意してください。"
    },
    {
      "indent": 3,
      "text": "Many important terms used in this document are defined in [RFC5890], [RFC6365], [RFC8264], and [Unicode]. The term \"non-ASCII space\" refers to any Unicode code point having a Unicode general category of \"Zs\", naturally with the exception of SPACE (U+0020).",
      "ja": "このドキュメントで使用される多くの重要な用語は、[RFC5890]、[RFC6365]、[RFC8264]、および[Unicode]で定義されています。 「非ASCIIスペース」という用語は、スペース（U + 0020）を除いて、「Z」のUnicode一般カテゴリを持つUnicodeコードポイントを指します。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "キーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「NOT RECOMMENDED」、「MAY」、「OPTIONALこのドキュメントの「」は、BCP 14 [RFC2119] [RFC8174]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Usernames",
      "section_title": true,
      "ja": "3. ユーザー名"
    },
    {
      "indent": 0,
      "text": "3.1. Definition",
      "section_title": true,
      "ja": "3.1. 定義"
    },
    {
      "indent": 3,
      "text": "This document specifies that a username is a string of Unicode code points [Unicode] that is structured as an ordered sequence of \"userparts\" and expressed in a standard Unicode Encoding Form (such as UTF-8 [RFC3629]). A userpart is allowed to contain only code points that are allowed by the PRECIS IdentifierClass defined in Section 4.2 of [RFC8264] and thus consists almost exclusively of letters and digits. A username can consist of a single userpart or a space-separated sequence of userparts.",
      "ja": "このドキュメントでは、ユーザー名が、「userparts」の順序付けされたシーケンスとして構造化され、標準のUnicodeエンコード形式（UTF-8 [RFC3629]など）で表現されたUnicodeコードポイント[Unicode]の文字列であることを規定しています。ユーザーパーツには、[RFC8264]のセクション4.2で定義されているPRECIS IdentifierClassで許可されているコードポイントのみを含めることが許可されているため、文字と数字のみで構成されています。ユーザー名は、単一のユーザーパートまたはスペースで区切られたユーザーパートのシーケンスで構成できます。"
    },
    {
      "indent": 3,
      "text": "The syntax for a username is defined as follows, using the Augmented Backus-Naur Form (ABNF) [RFC5234].",
      "ja": "ユーザー名の構文は、拡張バッカスナウアフォーム（ABNF）[RFC5234]を使用して、次のように定義されます。"
    },
    {
      "indent": 6,
      "text": "username   = userpart *(1*SP userpart)\nuserpart   = 1*(idpoint)\n             ;\n             ; an \"idpoint\" is a Unicode code point that\n             ; can be contained in a string conforming to\n             ; the PRECIS IdentifierClass\n             ;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "All code points and blocks not explicitly allowed in the PRECIS IdentifierClass are disallowed; this includes private-use code points, surrogate code points, and the other code points and blocks that were defined as \"Prohibited Output\" in Section 2.3 of [RFC4013] (when corrected per [Err1812]). In addition, common constructions such as \"user@example.com\" (e.g., the Network Access Identifier from [RFC7542]) are allowed as usernames under this specification, as they were under [RFC4013].",
      "ja": "PRECIS IdentifierClassで明示的に許可されていないすべてのコードポイントとブロックは許可されません。これには、[RFC4013]のセクション2.3で「禁止出力」として定義された、私用コードポイント、代理コードポイント、およびその他のコードポイントとブロックが含まれます（[Err1812]に従って修正した場合）。さらに、「user@example.com」などの一般的な構成（[RFC7542]のネットワークアクセス識別子など）は、[RFC4013]の場合と同様に、この仕様ではユーザー名として許可されています。"
    },
    {
      "indent": 0,
      "text": " Implementation Note: The username construct defined in this document does not necessarily match what all deployed applications might refer to as a \"username\" or \"userid\" but instead provides a relatively safe subset of Unicode code points that can be used in existing SASL mechanisms and in application protocols that use SASL, and even in most application protocols that do not currently use SASL.",
      "ja": "実装メモ：このドキュメントで定義されているユーザー名構成は、デプロイされたすべてのアプリケーションが「ユーザー名」または「ユーザーID」と呼ぶものと必ずしも一致するわけではなく、既存のSASLメカニズムで使用できる比較的安全なUnicodeコードポイントのサブセットを提供します。 SASLを使用するアプリケーションプロトコル、および現在SASLを使用していないほとんどのアプリケーションプロトコル。"
    },
    {
      "indent": 3,
      "text": "A username MUST NOT be zero bytes in length. This rule is to be enforced after any normalization and mapping of code points.",
      "ja": "ユーザー名の長さが0バイトであってはなりません。このルールは、コードポイントの正規化とマッピングの後に適用されます。"
    },
    {
      "indent": 3,
      "text": "This specification defines two profiles for usernames: the UsernameCaseMapped profile performs case mapping, and the UsernameCasePreserved performs case preservation (see further discussion under Section 3.2).",
      "ja": "この仕様は、ユーザー名の2つのプロファイルを定義します。UsernameCaseMappedプロファイルは大文字小文字のマッピングを実行し、UsernameCasePreservedは大文字小文字の保持を実行します（セクション3.2の詳細を参照）。"
    },
    {
      "indent": 3,
      "text": "In protocols that provide usernames as input to a cryptographic algorithm such as a hash function, the client will need to perform enforcement of the rules for the UsernameCaseMapped or UsernameCasePreserved profile before applying the algorithm.",
      "ja": "ハッシュ関数などの暗号化アルゴリズムへの入力としてユーザー名を提供するプロトコルでは、クライアントは、アルゴリズムを適用する前に、UsernameCaseMappedまたはUsernameCasePreservedプロファイルのルールを適用する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.2. Case Mapping vs. Case Preservation",
      "section_title": true,
      "ja": "3.2. ケースマッピングとケース保持"
    },
    {
      "indent": 3,
      "text": "In order to accommodate the widest range of username constructs in applications, this document defines two username profiles: UsernameCaseMapped and UsernameCasePreserved. These two profiles differ only in their use (or not) of the Case Mapping Rule and are otherwise identical.",
      "ja": "アプリケーションで幅広いユーザー名構成に対応するために、このドキュメントでは、UsernameCaseMappedとUsernameCasePreservedの2つのユーザー名プロファイルを定義しています。これら2つのプロファイルは、ケースマッピングルールの使用（または使用しない）のみが異なり、それ以外は同一です。"
    },
    {
      "indent": 3,
      "text": "Case mapping is a matter for the application protocol, protocol implementation, or end deployment. In general, this document suggests that it is preferable to apply the UsernameCaseMapped profile and therefore perform case mapping, because not doing so can lead to false accepts during authentication and authorization (as described in [RFC6943]) and can result in confusion among end users, given the prevalence of case mapping in many existing protocols and applications. However, there can be good reasons to apply the UsernameCasePreserved profile and thus not perform case mapping, such as backward compatibility with deployed infrastructure.",
      "ja": "ケースマッピングは、アプリケーションプロトコル、プロトコルの実装、または最終展開の問題です。一般に、このドキュメントは、UsernameCaseMappedプロファイルを適用してケースマッピングを実行することをお勧めします。そうしないと、認証および許可中に誤った受け入れが発生し（[RFC6943]で説明されているように）、エンドユーザー間で混乱が生じる可能性があるためです。 、多くの既存のプロトコルおよびアプリケーションでのケースマッピングの普及を考えると、ただし、デプロイされたインフラストラクチャとの下位互換性など、UsernameCasePreservedプロファイルを適用してケースマッピングを実行しないことには十分な理由がある場合があります。"
    },
    {
      "indent": 3,
      "text": "In particular:",
      "ja": "特に："
    },
    {
      "indent": 0,
      "text": " o SASL mechanisms that follow the recommendations in this document MUST specify whether and when case mapping is to be applied to authentication identifiers. Because case mapping results in information loss, in order to retain that information for as long as possible during processing, implementations SHOULD delay any case mapping to the last possible moment, such as when doing a lookup by username, performing username comparisons, or generating a cryptographic salt from a username (if the last possible moment happens on a server, then decisions about case mapping can be a matter of service deployment policy). In keeping with [RFC4422], SASL mechanisms are not to apply this or any other profile to authorization identifiers, only to authentication identifiers.",
      "ja": "oこのドキュメントの推奨事項に従うSASLメカニズムは、ケースマッピングが認証識別子に適用されるかどうか、いつ適用されるかを指定しなければなりません。ケースマッピングは情報の損失につながるため、処理中にその情報を可能な限り長く保持するために、実装では、ユーザー名によるルックアップ、ユーザー名の比較の実行、またはユーザー名からの暗号化ソルト（可能な最後の瞬間がサーバーで発生した場合、ケースマッピングに関する決定はサービスデプロイメントポリシーの問題になる可能性があります）。 [RFC4422]に準拠して、SASLメカニズムはこれまたはその他のプロファイルを承認識別子にのみ適用し、認証識別子にのみ適用します。"
    },
    {
      "indent": 3,
      "text": "o Application protocols that use SASL (such as IMAP [RFC3501] and the Extensible Messaging and Presence Protocol (XMPP) [RFC6120]) and that directly reuse this profile MUST specify whether or not case mapping is to be applied to authorization identifiers. Such \"SASL application protocols\" SHOULD delay any case mapping of authorization identifiers to the last possible moment, which happens to necessarily be on the server side (this enables decisions about case mapping to be a matter of service deployment policy). In keeping with [RFC4422], SASL application protocols are not to apply this or any other profile to authentication identifiers, only to authorization identifiers.",
      "ja": "o SASLを使用するアプリケーションプロトコル（IMAP [RFC3501]やExtensible Messaging and Presence Protocol（XMPP）[RFC6120]など）で、このプロファイルを直接再利用する場合は、認可識別子にケースマッピングを適用するかどうかを指定する必要があります。そのような「SASLアプリケーションプロトコル」は、承認識別子のケースマッピングを可能な限り最後の瞬間に遅らせる必要があります。 [RFC4422]に準拠して、SASLアプリケーションプロトコルはこれまたはその他のプロファイルを認証識別子にのみ適用し、承認識別子にのみ適用します。"
    },
    {
      "indent": 3,
      "text": "o Application protocols that do not use SASL (such as HTTP authentication with the HTTP Basic and Digest schemes as specified in [RFC7617] and [RFC7616]) but that directly reuse this profile MUST specify whether and when case mapping is to be applied to authentication identifiers or authorization identifiers, or both. Such \"non-SASL application protocols\" SHOULD delay any case mapping to the last possible moment, such as when doing a lookup by username, performing username comparisons, or generating a cryptographic salt from a username (if the last possible moment happens on the server, then decisions about case mapping can be a matter of service deployment policy).",
      "ja": "o SASLを使用しないアプリケーションプロトコル（[RFC7617]と[RFC7616]で指定されているHTTP BasicおよびDigestスキームを使用したHTTP認証など）で、このプロファイルを直接再利用する場合は、認証識別子にケースマッピングを適用するかどうか、いつ適用するかを指定する必要がありますまたは認可識別子、あるいはその両方。このような「非SASLアプリケーションプロトコル」は、ユーザー名によるルックアップ、ユーザー名の比較の実行、ユーザー名からの暗号ソルトの生成などの最後の可能な瞬間へのケースマッピングを遅らせるべきです（可能な最後の瞬間がサーバーで発生した場合）。 、その後、ケースマッピングに関する決定は、サービスデプロイメントポリシーの問題になる可能性があります）。"
    },
    {
      "indent": 3,
      "text": "If the specification for a SASL mechanism, SASL application protocol, or non-SASL application protocol uses the UsernameCaseMapped profile, it MUST clearly describe whether case mapping is to be applied at the level of the protocol itself, implementations thereof, or service deployments (each of these approaches can be legitimate, depending on the application in question).",
      "ja": "SASLメカニズム、SASLアプリケーションプロトコル、または非SASLアプリケーションプロトコルの仕様がUsernameCaseMappedプロファイルを使用する場合、ケースマッピングがプロトコル自体、その実装、またはサービスデプロイメント（それぞれのレベルで適用されるかどうかを明示する必要があります。問題のアプリケーションによっては、これらのアプローチのいずれかが正当な場合があります。"
    },
    {
      "indent": 0,
      "text": "3.3. UsernameCaseMapped Profile",
      "section_title": true,
      "ja": "3.3. UsernameCaseMappedプロファイル"
    },
    {
      "indent": 0,
      "text": "3.3.1. Rules",
      "section_title": true,
      "ja": "3.3.1. ルール"
    },
    {
      "indent": 3,
      "text": "The following rules are defined for use within the UsernameCaseMapped profile of the PRECIS IdentifierClass.",
      "ja": "次のルールは、PRECIS IdentifierClassのUsernameCaseMappedプロファイル内で使用するために定義されています。"
    },
    {
      "indent": 3,
      "text": "1. Width Mapping Rule: Map fullwidth and halfwidth code points to their decomposition mappings (see Unicode Standard Annex #11 [UAX11]).",
      "ja": "1. 幅マッピングルール：全幅と半幅のコードポイントを分解マッピングにマップします（Unicode Standard Annex＃11 [UAX11]を参照）。"
    },
    {
      "indent": 3,
      "text": "2. Additional Mapping Rule: There is no additional mapping rule.",
      "ja": "2. 追加のマッピングルール：追加のマッピングルールはありません。"
    },
    {
      "indent": 3,
      "text": "3. Case Mapping Rule: Map uppercase and titlecase code points to their lowercase equivalents, preferably using the Unicode toLowerCase() operation as defined in the Unicode Standard [Unicode]; see further discussion in Section 3.2.",
      "ja": "3. ケースマッピングルール：大文字とタイトルケースのコードポイントを同等の小文字にマップします。できれば、Unicode Standard [Unicode]で定義されているUnicode toLowerCase()オペレーションを使用してください。セクション3.2の詳細な説明を参照してください。"
    },
    {
      "indent": 3,
      "text": "4. Normalization Rule: Apply Unicode Normalization Form C (NFC) to all strings.",
      "ja": "4. 正規化ルール：すべての文字列にUnicode正規化フォームC（NFC）を適用します。"
    },
    {
      "indent": 3,
      "text": "5. Directionality Rule: Apply the \"Bidi Rule\" defined in [RFC5893] to strings that contain right-to-left code points (i.e., each of the six conditions of the Bidi Rule must be satisfied); for strings that do not contain right-to-left code points, there is no special processing for directionality.",
      "ja": "5. 方向性ルール：[RFC5893]で定義されている「Bidiルール」を、右から左へのコードポイントを含む文字列に適用します（つまり、Bidiルールの6つの条件のそれぞれが満たされている必要があります）;右から左へのコードポイントを含まない文字列の場合、方向性に関する特別な処理はありません。"
    },
    {
      "indent": 0,
      "text": "3.3.2. Preparation",
      "section_title": true,
      "ja": "3.3.2. 準備"
    },
    {
      "indent": 3,
      "text": "An entity that prepares an input string for subsequent enforcement according to this profile MUST proceed as follows (applying the steps in the order shown).",
      "ja": "このプロファイルに従って後続の実施のために入力文字列を準備するエンティティは、次のように進める必要があります（示されている順序で手順を適用）。"
    },
    {
      "indent": 3,
      "text": "1. Apply the width mapping rule specified in Section 3.3.1. It is necessary to apply the rule at this point because otherwise the PRECIS \"HasCompat\" category specified in Section 9.17 of [RFC8264] would forbid fullwidth and halfwidth code points.",
      "ja": "1. セクション3.3.1で指定された幅マッピングルールを適用します。そうでない場合は、[RFC8264]のセクション9.17で指定されているPRECISの「HasCompat」カテゴリが全角および半角のコードポイントを禁止するため、この時点でルールを適用する必要があります。"
    },
    {
      "indent": 3,
      "text": "2. Ensure that the string consists only of Unicode code points that are explicitly allowed by the PRECIS IdentifierClass defined in Section 4.2 of [RFC8264].",
      "ja": "2. [RFC8264]のセクション4.2で定義されているPRECIS IdentifierClassによって明示的に許可されているUnicodeコードポイントのみで文字列が構成されていることを確認してください。"
    },
    {
      "indent": 0,
      "text": "3.3.3. Enforcement",
      "section_title": true,
      "ja": "3.3.3. 執行"
    },
    {
      "indent": 3,
      "text": "An entity that performs enforcement according to this profile MUST prepare an input string as described in Section 3.3.2 and MUST also apply the following rules specified in Section 3.3.1 in the order shown:",
      "ja": "このプロファイルに従って施行を実行するエンティティは、セクション3.3.2で説明されているように入力文字列を準備する必要があり、セクション3.3.1で指定されている次のルールを示されている順序で適用する必要があります。"
    },
    {
      "indent": 3,
      "text": "1. Case Mapping Rule",
      "ja": "1. ケースマッピングルール"
    },
    {
      "indent": 3,
      "text": "2. Normalization Rule",
      "ja": "2. 正規化ルール"
    },
    {
      "indent": 3,
      "text": "3. Directionality Rule",
      "ja": "3. 方向性ルール"
    },
    {
      "indent": 3,
      "text": "After all of the foregoing rules have been enforced, the entity MUST ensure that the username is not zero bytes in length (this is done after enforcing the rules to prevent applications from mistakenly omitting a username entirely, because when internationalized strings are accepted, a non-empty sequence of characters can result in a zero-length username after canonicalization).",
      "ja": "前述のすべてのルールが適用された後、エンティティはユーザー名の長さが0バイトでないことを確認する必要があります（これは、アプリケーションがユーザー名を誤って完全に省略しないようにするルールを適用した後で行われます。 -空の文字シーケンスは、正規化後にゼロ長のユーザー名になる可能性があります）。"
    },
    {
      "indent": 3,
      "text": "The result of the foregoing operations is an output string that conforms to the UsernameCaseMapped profile. Until an implementation produces such an output string, it MUST NOT treat the string as conforming (in particular, it MUST NOT assume that an input string is conforming before the enforcement operation has been completed).",
      "ja": "前述の操作の結果は、UsernameCaseMappedプロファイルに準拠した出力文字列です。実装がそのような出力文字列を生成するまで、文字列を準拠しているものとして処理してはなりません（特に、強制操作が完了する前に入力文字列が準拠していると仮定してはなりません）。"
    },
    {
      "indent": 0,
      "text": "3.3.4. Comparison",
      "section_title": true,
      "ja": "3.3.4. 比較"
    },
    {
      "indent": 3,
      "text": "An entity that performs comparison of two strings according to this profile MUST prepare each string as specified in Section 3.3.2 and then MUST enforce the rules specified in Section 3.3.3. The two strings are to be considered equivalent if and only if they are an exact octet-for-octet match (sometimes called \"bit-string identity\").",
      "ja": "このプロファイルに従って2つの文字列の比較を実行するエンティティは、セクション3.3.2で指定されているように各文字列を準備しなければならず、次にセクション3.3.3で指定されているルールを適用しなければなりません（MUST）。 2つの文字列は、オクテットとオクテットが完全に一致する場合（「ビット文字列ID」と呼ばれることもある）に限り、同等と見なされます。"
    },
    {
      "indent": 3,
      "text": "Until an implementation determines whether two strings are to be considered equivalent, it MUST NOT treat them as equivalent (in particular, it MUST NOT assume that two input strings are equivalent before the comparison operation has been completed).",
      "ja": "実装が2つの文字列を同等と見なすかどうかを決定するまで、それらを同等と見なしてはなりません（特に、比較演算が完了する前に、2つの入力文字列が同等であると想定してはなりません）。"
    },
    {
      "indent": 0,
      "text": "3.4. UsernameCasePreserved Profile",
      "section_title": true,
      "ja": "3.4. UsernameCasePreservedプロファイル"
    },
    {
      "indent": 0,
      "text": "3.4.1. Rules",
      "section_title": true,
      "ja": "3.4.1. ルール"
    },
    {
      "indent": 3,
      "text": "The following rules are defined for use within the UsernameCasePreserved profile of the PRECIS IdentifierClass.",
      "ja": "次のルールは、PRECIS IdentifierClassのUsernameCasePreservedプロファイル内で使用するために定義されています。"
    },
    {
      "indent": 3,
      "text": "1. Width Mapping Rule: Map fullwidth and halfwidth code points to their decomposition mappings (see Unicode Standard Annex #11 [UAX11]).",
      "ja": "1. 幅マッピングルール：全幅と半幅のコードポイントを分解マッピングにマップします（Unicode Standard Annex＃11 [UAX11]を参照）。"
    },
    {
      "indent": 3,
      "text": "2. Additional Mapping Rule: There is no additional mapping rule.",
      "ja": "2. 追加のマッピングルール：追加のマッピングルールはありません。"
    },
    {
      "indent": 3,
      "text": "3. Case Mapping Rule: There is no case mapping rule.",
      "ja": "3. ケースマッピングルール：ケースマッピングルールはありません。"
    },
    {
      "indent": 3,
      "text": "4. Normalization Rule: Apply Unicode Normalization Form C (NFC) to all strings.",
      "ja": "4. 正規化ルール：すべての文字列にUnicode正規化フォームC（NFC）を適用します。"
    },
    {
      "indent": 3,
      "text": "5. Directionality Rule: Apply the \"Bidi Rule\" defined in [RFC5893] to strings that contain right-to-left code points (i.e., each of the six conditions of the Bidi Rule must be satisfied); for strings that do not contain right-to-left code points, there is no special processing for directionality.",
      "ja": "5. 方向性ルール：[RFC5893]で定義されている「Bidiルール」を、右から左へのコードポイントを含む文字列に適用します（つまり、Bidiルールの6つの条件のそれぞれが満たされている必要があります）;右から左へのコードポイントを含まない文字列の場合、方向性に関する特別な処理はありません。"
    },
    {
      "indent": 0,
      "text": "3.4.2. Preparation",
      "section_title": true,
      "ja": "3.4.2. 準備"
    },
    {
      "indent": 3,
      "text": "An entity that prepares a string for subsequent enforcement according to this profile MUST proceed as follows (applying the steps in the order shown).",
      "ja": "このプロファイルに従って後続の実施のために文字列を準備するエンティティは、次のように進める必要があります（示されている順序で手順を適用）。"
    },
    {
      "indent": 3,
      "text": "1. Apply the width mapping rule specified in Section 3.4.1. It is necessary to apply the rule at this point because otherwise the PRECIS \"HasCompat\" category specified in Section 9.17 of [RFC8264] would forbid fullwidth and halfwidth code points.",
      "ja": "1. セクション3.4.1で指定された幅マッピングルールを適用します。そうでない場合は、[RFC8264]のセクション9.17で指定されているPRECISの「HasCompat」カテゴリが全角および半角のコードポイントを禁止するため、この時点でルールを適用する必要があります。"
    },
    {
      "indent": 3,
      "text": "2. Ensure that the string consists only of Unicode code points that are explicitly allowed by the PRECIS IdentifierClass defined in Section 4.2 of [RFC8264].",
      "ja": "2. [RFC8264]のセクション4.2で定義されているPRECIS IdentifierClassによって明示的に許可されているUnicodeコードポイントのみで文字列が構成されていることを確認してください。"
    },
    {
      "indent": 0,
      "text": "3.4.3. Enforcement",
      "section_title": true,
      "ja": "3.4.3. 執行"
    },
    {
      "indent": 3,
      "text": "An entity that performs enforcement according to this profile MUST prepare a string as described in Section 3.4.2 and MUST also apply the following rules specified in Section 3.4.1 in the order shown:",
      "ja": "このプロファイルに従って施行を実行するエンティティは、セクション3.4.2で説明されているように文字列を準備しなければならず、また、セクション3.4.1で指定されている次のルールを示されている順序で適用する必要があります。"
    },
    {
      "indent": 3,
      "text": "1. Normalization Rule",
      "ja": "1. 正規化ルール"
    },
    {
      "indent": 3,
      "text": "2. Directionality Rule",
      "ja": "2. 方向性ルール"
    },
    {
      "indent": 3,
      "text": "After all of the foregoing rules have been enforced, the entity MUST ensure that the username is not zero bytes in length (this is done after enforcing the rules to prevent applications from mistakenly omitting a username entirely, because when internationalized strings are accepted, a non-empty sequence of characters can result in a zero-length username after canonicalization).",
      "ja": "前述のすべてのルールが適用された後、エンティティはユーザー名の長さが0バイトでないことを確認する必要があります（これは、アプリケーションがユーザー名を誤って完全に省略しないようにするルールを適用した後で行われます。 -空の文字シーケンスは、正規化後にゼロ長のユーザー名になる可能性があります）。"
    },
    {
      "indent": 3,
      "text": "The result of the foregoing operations is an output string that conforms to the UsernameCasePreserved profile. Until an implementation produces such an output string, it MUST NOT treat the string as conforming (in particular, it MUST NOT assume that an input string is conforming before the enforcement operation has been completed).",
      "ja": "前述の操作の結果は、UsernameCasePreservedプロファイルに準拠する出力文字列です。実装がそのような出力文字列を生成するまで、文字列を準拠しているものとして処理してはなりません（特に、強制操作が完了する前に入力文字列が準拠していると仮定してはなりません）。"
    },
    {
      "indent": 0,
      "text": "3.4.4. Comparison",
      "section_title": true,
      "ja": "3.4.4. 比較"
    },
    {
      "indent": 3,
      "text": "An entity that performs comparison of two strings according to this profile MUST prepare each string as specified in Section 3.4.2 and then MUST enforce the rules specified in Section 3.4.3. The two strings are to be considered equivalent if and only if they are an exact octet-for-octet match (sometimes called \"bit-string identity\").",
      "ja": "このプロファイルに従って2つの文字列の比較を実行するエンティティは、セクション3.4.2で指定されているように各文字列を準備してから、セクション3.4.3で指定されているルールを適用する必要があります。 2つの文字列は、オクテットとオクテットが完全に一致する場合（「ビット文字列ID」と呼ばれることもある）に限り、同等と見なされます。"
    },
    {
      "indent": 3,
      "text": "Until an implementation determines whether two strings are to be considered equivalent, it MUST NOT treat them as equivalent (in particular, it MUST NOT assume that two input strings are equivalent before the comparison operation has been completed).",
      "ja": "実装が2つの文字列を同等と見なすかどうかを決定するまで、それらを同等と見なしてはなりません（特に、比較演算が完了する前に、2つの入力文字列が同等であると想定してはなりません）。"
    },
    {
      "indent": 0,
      "text": "3.5. Application-Layer Constructs",
      "section_title": true,
      "ja": "3.5. アプリケーション層構成体"
    },
    {
      "indent": 3,
      "text": "Both the UsernameCaseMapped and UsernameCasePreserved profiles enable an application protocol, implementation, or deployment to create application-layer constructs such as a username that is a space-separated set of userparts like \"Firstname Middlename Lastname\". Such a construct is not a profile of the PRECIS IdentifierClass, because SPACE (U+0020) is not allowed in the IdentifierClass; however, it can be created at the application layer because SPACE (U+0020) can be used as a separator between instances of the PRECIS IdentifierClass (e.g., userparts as defined in this specification).",
      "ja": "UsernameCaseMappedプロファイルとUsernameCasePreservedプロファイルの両方を使用すると、アプリケーションプロトコル、実装、または展開で、「Firstname Middlename Lastname」などのユーザーパーツのスペース区切りのセットであるユーザー名などのアプリケーション層構成を作成できます。このような構造はPRECIS IdentifierClassのプロファイルではありません。IdentifierClassではスペース（U + 0020）が許可されないためです。ただし、スペース（U + 0020）はPRECIS IdentifierClassのインスタンス間の区切り文字として使用できるため（たとえば、この仕様で定義されているuserpartsなど）、アプリケーション層で作成できます。"
    },
    {
      "indent": 0,
      "text": "3.6. Examples",
      "section_title": true,
      "ja": "3.6. 例"
    },
    {
      "indent": 3,
      "text": "The following examples illustrate a small number of userparts (not usernames) that are consistent with the format defined above (note that the characters \"<\" and \">\" are used here to delineate the actual userparts and are not part of the userpart strings).",
      "ja": "次の例は、上記で定義されたフォーマットと一致する少数のユーザー名（ユーザー名ではない）を示しています（文字「<」と「>」は、実際のユーザー名を表すために使用され、ユーザー名文字列の一部ではないことに注意してください）。 。"
    },
    {
      "indent": 6,
      "text": "+--------------------------+---------------------------------+\n| # | Userpart             | Notes                           |\n+--------------------------+---------------------------------+\n| 1 | <juliet@example.com> | The \"at\" sign (\"@\") is allowed  |\n|   |                      | in the PRECIS IdentifierClass   |\n+--------------------------+---------------------------------+\n| 2 | <fussball>           |                                 |\n+--------------------------+---------------------------------+\n| 3 | <fußball>            | The third character is LATIN    |\n|   |                      | SMALL LETTER SHARP S (U+00DF)   |\n+--------------------------+---------------------------------+\n| 4 | <π>                  | A userpart of GREEK SMALL       |\n|   |                      | LETTER PI (U+03C0)              |\n+--------------------------+---------------------------------+\n| 5 | <Σ>                  | A userpart of GREEK CAPITAL     |\n|   |                      | LETTER SIGMA (U+03A3)           |\n+--------------------------+---------------------------------+\n| 6 | <σ>                  | A userpart of GREEK SMALL       |\n|   |                      | LETTER SIGMA (U+03C3)           |\n+--------------------------+---------------------------------+\n| 7 | <ς>                  | A userpart of GREEK SMALL       |\n|   |                      | LETTER FINAL SIGMA (U+03C2)     |\n+--------------------------+---------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Table 1: A Sample of Legal Userparts",
      "ja": "表1：法的ユーザーパートのサンプル"
    },
    {
      "indent": 0,
      "text": " Regarding examples 2 and 3: although in German writing the character eszett \"ß\" (LATIN SMALL LETTER SHARP S, U+00DF) can mostly be used interchangeably with the two characters \"ss\", the userparts in these examples are different and (if desired) a server would need to enforce a registration policy that disallows one of them if the other is registered.",
      "ja": "例2と3に関して：ドイツ語では、文字eszett \"ß\"（ラテン小文字S、U + 00DF）は2つの文字 \"ss\"とほとんど同じ意味で使用できますが、これらの例のユーザーパートは異なり、（if望ましい）サーバーは、もう一方が登録されている場合、一方を許可しない登録ポリシーを実施する必要があります。"
    },
    {
      "indent": 3,
      "text": "Regarding examples 5, 6, and 7: optional case mapping of \"Σ\" (GREEK CAPITAL LETTER SIGMA, U+03A3) to the lowercase character \"σ\" (GREEK SMALL LETTER SIGMA, U+03C3) during comparison would result in matching the userparts in examples 5 and 6; however, because the PRECIS mapping rules do not account for the special status of the character \"ς\" (GREEK SMALL LETTER FINAL SIGMA, U+03C2), the userparts in examples 5 and 7 or examples 6 and 7 would not be matched during comparison.",
      "ja": "例5、6、および7に関して：比較中の「Σ」（ギリシャ語の大文字のシグマ、U + 03A3）の小文字の「σ」（ギリシャ語の小文字のシグマ、U + 03C3）へのオプションの大文字と小文字のマッピングは、例5および6のuserparts。ただし、PRECISマッピングルールは文字「ς」の特殊なステータスを考慮しないため（ギリシャ語の小文字の最終シグマ、U + 03C2）、例5と7または例6と7のユーザーパーツは比較中に一致しません。 。"
    },
    {
      "indent": 3,
      "text": "The following examples illustrate strings that are not valid userparts (not usernames) because they violate the format defined above.",
      "ja": "次の例は、上記で定義された形式に違反しているため、有効なユーザーパートではない（ユーザー名ではない）文字列を示しています。"
    },
    {
      "indent": 6,
      "text": "+--------------------------+---------------------------------+\n| # | Non-Userpart String  | Notes                           |\n+--------------------------+---------------------------------+\n| 8 | <foo bar>            | SPACE (U+0020) is disallowed in |\n|   |                      | the userpart                    |\n+--------------------------+---------------------------------+\n| 9 | <>                   | Zero-length userpart            |\n+--------------------------+---------------------------------+\n| 10| <henryⅣ>            | The sixth character is ROMAN    |\n|   |                      | NUMERAL FOUR (U+2163)           |\n+--------------------------+---------------------------------+\n| 11| <∞>                  | A userpart of INFINITY (U+221E) |\n+--------------------------+---------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "Table 2: A Sample of Strings That Violate the Userpart Rules",
      "ja": "表2：Userpartルールに違反する文字列のサンプル"
    },
    {
      "indent": 3,
      "text": "Regarding example 8: although this is not a valid userpart, it is a valid username because it is a space-separated sequence of userparts.",
      "ja": "例8に関して：これは有効なユーザーパーツではありませんが、スペースで区切られたユーザーパーツのシーケンスであるため、有効なユーザー名です。"
    },
    {
      "indent": 3,
      "text": "Regarding example 10: the character \"Ⅳ\" (ROMAN NUMERAL FOUR, U+2163) has a compatibility equivalent of the characters \"I\" (LATIN CAPITAL LETTER I, U+0049) and \"V\" (LATIN CAPITAL LETTER V, U+0056), but code points with compatibility equivalents are not allowed in the PRECIS IdentifierClass.",
      "ja": "例10に関して：文字「Ⅳ」（ローマ数字4、U + 2163）は、文字「I」（ラテン大文字I、U + 0049）および「V」（ラテン大文字V、U +）と同等の互換性があります。 0056）ただし、同等の互換性を持つコードポイントはPRECIS IdentifierClassでは許可されていません。"
    },
    {
      "indent": 3,
      "text": "Regarding example 11: symbol characters such as \"∞\" (INFINITY, U+221E) are not allowed in the PRECIS IdentifierClass.",
      "ja": "例11について：「∞」（INFINITY、U + 221E）などの記号文字は、PRECIS IdentifierClassでは許可されていません。"
    },
    {
      "indent": 0,
      "text": "4. Passwords",
      "section_title": true,
      "ja": "4. パスワード"
    },
    {
      "indent": 0,
      "text": "4.1. Definition",
      "section_title": true,
      "ja": "4.1. 定義"
    },
    {
      "indent": 3,
      "text": "This document specifies that a password is a string of Unicode code points [Unicode] that is conformant to the OpaqueString profile (specified below) of the PRECIS FreeformClass defined in Section 4.3 of [RFC8264] and expressed in a standard Unicode Encoding Form (such as UTF-8 [RFC3629]).",
      "ja": "このドキュメントでは、パスワードが、[RFC8264]のセクション4.3で定義されたPRECIS FreeformClassのOpaqueStringプロファイル（下記で指定）に準拠し、標準のUnicodeエンコーディングフォーム（ UTF-8 [RFC3629]）。"
    },
    {
      "indent": 3,
      "text": "The syntax for a password is defined as follows, using the Augmented Backus-Naur Form (ABNF) [RFC5234].",
      "ja": "パスワードの構文は、拡張バッカスナウアフォーム（ABNF）[RFC5234]を使用して、次のように定義されます。"
    },
    {
      "indent": 6,
      "text": "password   = 1*(freepoint)\n             ;\n             ; a \"freepoint\" is a Unicode code point that\n             ; can be contained in a string conforming to\n             ; the PRECIS FreeformClass\n             ;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "All code points and blocks not explicitly allowed in the PRECIS FreeformClass are disallowed; this includes private-use code points, surrogate code points, and the other code points and blocks defined as \"Prohibited Output\" in Section 2.3 of [RFC4013] (when corrected per [Err1812]).",
      "ja": "PRECIS FreeformClassで明示的に許可されていないすべてのコードポイントとブロックは許可されません。これには、私的使用のコードポイント、代理コードポイント、および[RFC4013]のセクション2.3で「禁止出力」として定義されたその他のコードポイントとブロックが含まれます（[Err1812]に従って修正した場合）。"
    },
    {
      "indent": 3,
      "text": "A password MUST NOT be zero bytes in length. This rule is to be enforced after any normalization and mapping of code points.",
      "ja": "パスワードの長さがゼロバイトであってはなりません。このルールは、コードポイントの正規化とマッピングの後に適用されます。"
    },
    {
      "indent": 6,
      "text": "Note: Some existing systems allow an empty string in places where a password would be expected (e.g., command-line tools that might be called from an automated script, or servers that might need to be restarted without human intervention). From the perspective of this document (and RFC 4013 before it), these empty strings are not passwords but are workarounds for the practical difficulty of using passwords in certain scenarios.",
      "ja": "注：一部の既存のシステムでは、パスワードが予想される場所で空の文字列を使用できます（自動スクリプトから呼び出されるコマンドラインツール、または人の介入なしに再起動する必要があるサーバーなど）。このドキュメント（およびその前のRFC 4013）の観点から、これらの空の文字列はパスワードではありませんが、特定のシナリオでパスワードを使用することの実際的な困難さに対する回避策です。"
    },
    {
      "indent": 6,
      "text": "Note: The prohibition of zero-length passwords is not a recommendation regarding password strength (because a password of only one byte is highly insecure) but is meant to prevent applications from mistakenly omitting a password entirely; such an outcome is possible when internationalized strings are accepted, because a non-empty sequence of characters can result in a zero-length password after canonicalization.",
      "ja": "注：長さがゼロのパスワードを禁止することは、パスワードの強度に関する推奨事項ではありません（1バイトのみのパスワードは非常に安全ではないため）が、アプリケーションが誤ってパスワードを完全に省略しないようにすることを目的としています。このような結果は、国際化された文字列が受け入れられた場合に発生する可能性があります。これは、空でない一連の文字が正規化後に長さがゼロのパスワードになる可能性があるためです。"
    },
    {
      "indent": 0,
      "text": " In protocols that provide passwords as input to a cryptographic algorithm such as a hash function, the client will need to perform enforcement of the rules for the OpaqueString profile before applying the algorithm, because the password is not available to the server in plaintext form.",
      "ja": "パスワードをハッシュ関数などの暗号化アルゴリズムへの入力として提供するプロトコルでは、クライアントはアルゴリズムを適用する前にOpaqueStringプロファイルのルールの適用を実行する必要があります。これは、パスワードがプレーンテキスト形式でサーバーから利用できないためです。"
    },
    {
      "indent": 0,
      "text": "4.2. OpaqueString Profile",
      "section_title": true,
      "ja": "4.2. OpaqueStringプロファイル"
    },
    {
      "indent": 3,
      "text": "The definition of the OpaqueString profile is provided in the following sections, including detailed information about preparation, enforcement, and comparison (for details on the distinction between these actions, refer to [RFC8264]).",
      "ja": "OpaqueStringプロファイルの定義は、準備、実施、および比較に関する詳細情報を含め、次のセクションで提供されます（これらのアクションの違いの詳細については、[RFC8264]を参照してください）。"
    },
    {
      "indent": 0,
      "text": "4.2.1. Preparation",
      "section_title": true,
      "ja": "4.2.1. 準備"
    },
    {
      "indent": 3,
      "text": "An entity that prepares a string according to this profile MUST ensure that the string consists only of Unicode code points that are explicitly allowed by the FreeformClass string class defined in [RFC8264].",
      "ja": "このプロファイルに従って文字列を準備するエンティティは、文字列が[RFC8264]で定義されているFreeformClass文字列クラスによって明示的に許可されているUnicodeコードポイントのみで構成されることを保証しなければなりません（MUST）。"
    },
    {
      "indent": 0,
      "text": "4.2.2. Enforcement",
      "section_title": true,
      "ja": "4.2.2. 執行"
    },
    {
      "indent": 3,
      "text": "An entity that performs enforcement according to this profile MUST prepare a string as described in Section 4.2.1 and MUST also apply the rules specified below for the OpaqueString profile (these rules MUST be applied in the order shown):",
      "ja": "このプロファイルに従って適用を実行するエンティティは、セクション4.2.1で説明されているように文字列を準備する必要があり、また、OpaqueStringプロファイルに対して以下に指定されているルールを適用する必要があります（これらのルールは、表示されている順序で適用する必要があります）。"
    },
    {
      "indent": 3,
      "text": "1. Width Mapping Rule: Fullwidth and halfwidth code points MUST NOT be mapped to their decomposition mappings (see Unicode Standard Annex #11 [UAX11]).",
      "ja": "1. 幅マッピングルール：全幅および半幅のコードポイントを分解マッピングにマッピングしてはなりません（Unicode Standard Annex＃11 [UAX11]を参照）。"
    },
    {
      "indent": 3,
      "text": "2. Additional Mapping Rule: Any instances of non-ASCII space MUST be mapped to SPACE (U+0020); a non-ASCII space is any Unicode code point having a Unicode general category of \"Zs\", with the exception of SPACE (U+0020). As was the case in RFC 4013, the inclusion of only SPACE (U+0020) prevents confusion with various non-ASCII space code points, many of which are difficult to reproduce across different input methods.",
      "ja": "2. 追加のマッピング規則：非ASCIIスペースのインスタンスはすべて、スペース（U + 0020）にマップする必要があります。非ASCIIスペースは、スペース（U + 0020）を除いて、「Z」のUnicode一般カテゴリを持つ任意のUnicodeコードポイントです。 RFC 4013の場合と同様に、スペース（U + 0020）のみを含めることにより、さまざまな非ASCIIスペースコードポイントとの混乱を防ぐことができます。"
    },
    {
      "indent": 3,
      "text": "3. Case Mapping Rule: There is no case mapping rule (because mapping uppercase and titlecase code points to their lowercase equivalents would lead to false accepts and thus to reduced security).",
      "ja": "3. ケースマッピングルール：ケースマッピングルールはありません（大文字とタイトルケースのコードポイントを対応する小文字にマッピングすると、誤った受け入れが行われ、セキュリティが低下するため）。"
    },
    {
      "indent": 3,
      "text": "4. Normalization Rule: Unicode Normalization Form C (NFC) MUST be applied to all strings.",
      "ja": "4. 正規化ルール：Unicode正規化フォームC（NFC）をすべての文字列に適用する必要があります。"
    },
    {
      "indent": 0,
      "text": " 5. Directionality Rule: There is no directionality rule. The \"Bidi Rule\" (defined in [RFC5893]) and similar rules are unnecessary and inapplicable to passwords, because they can reduce the repertoire of characters that are allowed in a string and therefore reduce the amount of entropy that is possible in a password. Such rules are intended to minimize the possibility that the same string will be displayed differently on a layout system set for right-to-left display and a layout system set for left-to-right display; however, passwords are typically not displayed at all and are rarely meant to be interoperable across different layout systems in the way that non-secret strings like domain names and usernames are. Furthermore, it is perfectly acceptable for opaque strings other than passwords to be presented differently in different layout systems, as long as the presentation is consistent in any given layout system.",
      "ja": "5.方向性ルール：方向性ルールはありません。 「Bidiルール」（[RFC5893]で定義）および同様のルールは不要であり、パスワードに適用できません。これは、ストリングで許可される文字のレパートリーを減らし、パスワードで可能なエントロピーの量を減らすことができるためです。このような規則は、同じ文字列が右から左への表示用に設定されたレイアウトシステムと左から右への表示用に設定されたレイアウトシステムで異なって表示される可能性を最小限に抑えることを目的としています。ただし、パスワードは通常はまったく表示されず、ドメイン名やユーザー名などの非秘密の文字列と同じように、異なるレイアウトシステム間で相互運用できることはほとんどありません。さらに、特定のレイアウトシステムで一貫性のある表示である限り、パスワード以外の不透明な文字列が異なるレイアウトシステムで異なって表示されることは完全に許容されます。"
    },
    {
      "indent": 3,
      "text": "The result of the foregoing operations is an output string that conforms to the OpaqueString profile. Until an implementation produces such an output string, it MUST NOT treat the string as conforming (in particular, it MUST NOT assume that an input string is conforming before the enforcement operation has been completed).",
      "ja": "前述の操作の結果は、OpaqueStringプロファイルに準拠した出力文字列です。実装がそのような出力文字列を生成するまで、文字列を準拠しているものとして処理してはなりません（特に、強制操作が完了する前に入力文字列が準拠していると仮定してはなりません）。"
    },
    {
      "indent": 0,
      "text": "4.2.3. Comparison",
      "section_title": true,
      "ja": "4.2.3. 比較"
    },
    {
      "indent": 3,
      "text": "An entity that performs comparison of two strings according to this profile MUST prepare each string as specified in Section 4.2.1 and then MUST enforce the rules specified in Section 4.2.2. The two strings are to be considered equivalent if and only if they are an exact octet-for-octet match (sometimes called \"bit-string identity\").",
      "ja": "このプロファイルに従って2つの文字列の比較を実行するエンティティは、セクション4.2.1で指定されているように各文字列を準備してから、セクション4.2.2で指定されているルールを適用する必要があります。 2つの文字列は、オクテットとオクテットが完全に一致する場合（「ビット文字列ID」と呼ばれることもある）に限り、同等と見なされます。"
    },
    {
      "indent": 3,
      "text": "Until an implementation determines whether two strings are to be considered equivalent, it MUST NOT treat them as equivalent (in particular, it MUST NOT assume that two input strings are equivalent before the comparison operation has been completed).",
      "ja": "実装が2つの文字列を同等と見なすかどうかを決定するまで、それらを同等と見なしてはなりません（特に、比較演算が完了する前に、2つの入力文字列が同等であると想定してはなりません）。"
    },
    {
      "indent": 3,
      "text": "See Section 8.2 regarding comparison of passwords and passphrases.",
      "ja": "パスワードとパスフレーズの比較については、セクション8.2を参照してください。"
    },
    {
      "indent": 0,
      "text": "4.3. Examples",
      "section_title": true,
      "ja": "4.3. 例"
    },
    {
      "indent": 3,
      "text": "The following examples illustrate a small number of passwords that are consistent with the format defined above (note that the characters \"<\" and \">\" are used here to delineate the actual passwords and are not part of the password strings).",
      "ja": "次の例は、上記で定義された形式と一致する少数のパスワードを示しています（文字「<」および「>」は、実際のパスワードを表すために使用され、パスワード文字列の一部ではないことに注意してください）。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------+------------------------------+\n| # | Password                       | Notes                        |\n+------------------------------------+------------------------------+\n| 12| <correct horse battery staple> | SPACE (U+0020) is allowed    |\n+------------------------------------+------------------------------+\n| 13| <Correct Horse Battery Staple> | Differs by case from         |\n|   |                                | example 12                   |\n+------------------------------------+------------------------------+\n| 14| <πßå>                          | Non-ASCII letters are OK     |\n|   |                                | (e.g., GREEK SMALL LETTER    |\n|   |                                | PI (U+03C0))                 |\n+------------------------------------+------------------------------+\n| 15| <Jack of ♦s>                   | Symbols are OK (e.g., BLACK  |\n|   |                                | DIAMOND SUIT (U+2666))       |\n+------------------------------------+------------------------------+\n| 16| <foo bar>                      | OGHAM SPACE MARK (U+1680) is |\n|   |                                | mapped to SPACE (U+0020);    |\n|   |                                | thus, the full string is     |\n|   |                                | mapped to <foo bar>          |\n+------------------------------------+------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Table 3: A Sample of Legal Passwords",
      "ja": "表3：正当なパスワードの例"
    },
    {
      "indent": 3,
      "text": "The following examples illustrate strings that are not valid passwords because they violate the format defined above.",
      "ja": "次の例は、上記で定義された形式に違反しているために有効なパスワードではない文字列を示しています。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------+------------------------------+\n| # | Password                       | Notes                        |\n+------------------------------------+------------------------------+\n| 17| <>                             | Zero-length passwords are    |\n|   |                                | disallowed                   |\n+------------------------------------+------------------------------+\n| 18| <my cat is a &#x9;by>          | Control characters like TAB  |\n|   |                                | (U+0009) are disallowed      |\n+------------------------------------+------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "Table 4: A Sample of Strings That Violate the Password Rules",
      "ja": "表4：パスワードルールに違反する文字列のサンプル"
    },
    {
      "indent": 3,
      "text": "Note: Following the \"XML Notation\" used in [RFC3987], the character TAB (U+0009) in example 18 is represented as &#x9 because otherwise it could not be shown in running text.",
      "ja": "注：[RFC3987]で使用されている「XML表記」に従って、例18の文字TAB（U + 0009）は＆＃x9として表されます。"
    },
    {
      "indent": 0,
      "text": "5. Use in Application Protocols",
      "section_title": true,
      "ja": "5. アプリケーションプロトコルでの使用"
    },
    {
      "indent": 0,
      "text": " This specification defines only the PRECIS-based rules for the handling of strings conforming to the UsernameCaseMapped and UsernameCasePreserved profiles of the PRECIS IdentifierClass, and strings conforming to the OpaqueString profile of the PRECIS FreeformClass. It is the responsibility of an application protocol to specify the protocol slots in which such strings can appear, the entities that are expected to enforce the rules governing such strings, and at what points during protocol processing or interface handling the rules need to be enforced. See Section 6 of [RFC8264] for guidelines on using PRECIS profiles in applications.",
      "ja": "この仕様では、PRECIS IdentifierClassのUsernameCaseMappedおよびUsernameCasePreservedプロファイルに準拠する文字列と、PRECIS FreeformClassのOpaqueStringプロファイルに準拠する文字列を処理するためのPRECISベースのルールのみを定義しています。このような文字列が出現する可能性のあるプロトコルスロット、そのような文字列を管理するルールを適用することが期待されるエンティティ、プロトコル処理中のどの時点で、またはルールを処理するインターフェースを適用する必要があるかを指定するのは、アプリケーションプロトコルの責任です。アプリケーションでPRECISプロファイルを使用する際のガイドラインについては、[RFC8264]のセクション6を参照してください。"
    },
    {
      "indent": 3,
      "text": "Above and beyond the PRECIS-based rules specified here, application protocols can also define application-specific rules governing such strings (rules regarding minimum or maximum length, further restrictions on allowable code points or character ranges, safeguards to mitigate the effects of visually similar characters, etc.), application-layer constructs (see Section 3.5), and related matters.",
      "ja": "ここで指定されたPRECISベースのルールに加えて、アプリケーションプロトコルは、そのような文字列を管理するアプリケーション固有のルール（最小または最大の長さに関するルール、許容されるコードポイントまたは文字範囲に関するさらなる制限、視覚的に類似した文字の影響を軽減するための保護手段）を定義することもできます。など）、アプリケーション層構成体（セクション3.5を参照）、および関連事項。"
    },
    {
      "indent": 3,
      "text": "Some PRECIS profile definitions encourage entities that enforce the rules to be liberal in what they accept. However, for usernames and passwords such a policy can be problematic, because it can lead to false accepts. An in-depth discussion can be found in [RFC6943].",
      "ja": "一部のPRECISプロファイル定義では、ルールを施行するエンティティが受け入れるものに自由になるように奨励しています。ただし、ユーザー名とパスワードの場合、誤った受け入れにつながる可能性があるため、このようなポリシーは問題になる可能性があります。詳細な議論は[RFC6943]で見つけることができます。"
    },
    {
      "indent": 3,
      "text": "Applying the rules for any given PRECIS profile is not necessarily an idempotent procedure for all code points. Therefore, an implementation SHOULD apply the rules repeatedly until the output string is stable; if the output string does not stabilize after reapplying the rules three (3) additional times after the first application, the implementation SHOULD terminate application of the rules and reject the input string as invalid.",
      "ja": "特定のPRECISプロファイルにルールを適用することは、必ずしもすべてのコードポイントに対してべき等の手順であるとは限りません。したがって、実装は、出力文字列が安定するまでルールを繰り返し適用する必要があります（SHOULD）。最初の適用からさらに3回ルールを再適用しても出力文字列が安定しない場合、実装はルールの適用を終了し、入力文字列を無効として拒否する必要があります（SHOULD）。"
    },
    {
      "indent": 0,
      "text": "6. Migration",
      "section_title": true,
      "ja": "6. マイグレーション"
    },
    {
      "indent": 3,
      "text": "The rules defined in this specification differ slightly from those defined by the SASLprep specification [RFC4013] (but not from [RFC7613]). In order to smooth the process of migrating from SASLprep to the approach defined herein, the following sections describe these differences, along with their implications for migration, in more detail.",
      "ja": "この仕様で定義されている規則は、SASLprep仕様[RFC4013]で定義されている規則とは少し異なります（ただし[RFC7613]からは異なります）。 SASLprepからここで定義されたアプローチへの移行プロセスを円滑にするために、以下のセクションでは、これらの違いと、それらが移行に与える影響について詳しく説明します。"
    },
    {
      "indent": 0,
      "text": "6.1. Usernames",
      "section_title": true,
      "ja": "6.1. ユーザー名"
    },
    {
      "indent": 3,
      "text": "Deployments that currently use SASLprep for handling usernames might need to scrub existing data when they migrate to the rules defined in this specification. In particular:",
      "ja": "ユーザー名の処理に現在SASLprepを使用しているデプロイメントでは、この仕様で定義されているルールに移行するときに、既存のデータをスクラブする必要がある場合があります。特に："
    },
    {
      "indent": 0,
      "text": " o SASLprep specified the use of Unicode Normalization Form KC (NFKC), whereas the UsernameCaseMapped and UsernameCasePreserved profiles employ Unicode Normalization Form C (NFC). In practice, this change is unlikely to cause significant problems, because NFKC provides methods for mapping Unicode code points with compatibility equivalents to those equivalents, whereas the PRECIS IdentifierClass entirely disallows Unicode code points with compatibility equivalents (i.e., during comparison, NFKC is more \"aggressive\" about finding matches than NFC). A few examples might suffice to indicate the nature of the problem:",
      "ja": "o SASLprepはUnicode正規化形式KC（NFKC）の使用を指定しましたが、UsernameCaseMappedおよびUsernameCasePreservedプロファイルはUnicode正規化形式C（NFC）を使用します。実際には、NFKCは互換性のある同等のUnicodeコードポイントを同等のものにマッピングするメソッドを提供するため、この変更は重大な問題を引き起こす可能性はほとんどありません。 NFCよりも一致を見つけることについて積極的」）。問題の性質を示すには、いくつかの例で十分かもしれません。"
    },
    {
      "indent": 6,
      "text": "1. \"ſ\" (LATIN SMALL LETTER LONG S, U+017F) is compatibility equivalent to \"s\" (LATIN SMALL LETTER S, U+0073).",
      "ja": "1. 「ſ」（ラテン小文字L、U + 017F）は、「s」（ラテン小文字S、U + 0073）と同等の互換性があります。"
    },
    {
      "indent": 6,
      "text": "2. \"Ⅳ\" (ROMAN NUMERAL FOUR, U+2163) is compatibility equivalent to \"I\" (LATIN CAPITAL LETTER I, U+0049) and \"V\" (LATIN CAPITAL LETTER V, U+0056).",
      "ja": "2. 「Ⅳ」（ローマ数字4、U + 2163）は、「I」（ラテン大文字I、U + 0049）および「V」（ラテン大文字V、U + 0056）と同等の互換性があります。"
    },
    {
      "indent": 6,
      "text": "3. \"ﬁ\" (LATIN SMALL LIGATURE FI, U+FB01) is compatibility equivalent to \"f\" (LATIN SMALL LETTER F, U+0066) and \"i\" (LATIN SMALL LETTER I, U+0069).",
      "ja": "3. \"？\"（ラテン小文字合字FI、U + FB01）は、 \"f\"（ラテン小文字合字F、U + 0066）および \"i\"（ラテン小文字合字I、U + 0069）と同等の互換性があります。"
    },
    {
      "indent": 6,
      "text": "Under SASLprep, the use of NFKC also handled the mapping of fullwidth and halfwidth code points to their decomposition mappings.",
      "ja": "SASLprepでは、NFKCの使用により、全幅コードポイントと半幅コードポイントの分解マッピングへのマッピングも処理されました。"
    },
    {
      "indent": 6,
      "text": "For migration purposes, operators might want to search their database of usernames for names containing Unicode code points with compatibility equivalents and, where there is no conflict, map those code points to their equivalents. Naturally, it is possible that during this process the operator will discover conflicting usernames; for instance, \"HENRYIV\" with the last two code points being LATIN CAPITAL LETTER I (U+0049) and LATIN CAPITAL LETTER V (U+0056) as opposed to \"HENRYⅣ\" with the last character being \"Ⅳ\" (ROMAN NUMERAL FOUR, U+2163), which is compatibility equivalent to U+0049 and U+0056). In these cases, the operator will need to determine how to proceed, for instance, by disabling the account whose name contains a Unicode code point with a compatibility equivalent. Such cases are probably rare, but it is important for operators to be aware of them.",
      "ja": "移行の目的で、オペレーターは、互換性のある同等のUnicodeコードポイントを含む名前をユーザー名のデータベースで検索し、競合がない場合は、それらのコードポイントを同等のものにマップすることができます。当然のことながら、このプロセス中にオペレーターが競合するユーザー名を発見する可能性があります。たとえば、最後の2文字のコードポイントがラテン大文字I（U + 0049）とラテン大文字V（U + 0056）である「HENRYIV」は、最後の文字が「Ⅳ」である「HENRY（」（ローマ数字の4 、U + 2163）、これはU + 0049およびU + 0056と同等の互換性です。このような場合、オペレーターは、たとえば、対応する互換性のあるUnicodeコードポイントを名前に含むアカウントを無効にするなどして、続行方法を決定する必要があります。このようなケースはおそらくまれですが、オペレーターがそれらを認識することが重要です。"
    },
    {
      "indent": 3,
      "text": "o SASLprep mapped the \"characters commonly mapped to nothing\" (from Appendix B.1 of [RFC3454]) to nothing, whereas the PRECIS IdentifierClass entirely disallows most of these code points, which correspond to the code points from the PRECIS \"M\" category defined under Section 9.13 of [RFC8264]. For migration purposes, the operator might want to remove from usernames any code points contained in the PRECIS \"M\" category (e.g., SOFT HYPHEN (U+00AD)). Because these code points would have been \"mapped to nothing\" in Stringprep, in practice a user would not notice the difference if, upon migration to PRECIS, the code points are removed.",
      "ja": "o SASLprepは、「一般的に何にもマッピングされない文字」（[RFC3454]の付録B.1から）を何にもマッピングしませんでしたが、PRECIS IdentifierClassは、定義されたPRECIS「M」カテゴリのコードポイントに対応するこれらのコードポイントのほとんどを完全に許可しません。 [RFC8264]のセクション9.13。移行の目的で、オペレーターはPRECIS \"M\"カテゴリーに含まれるコードポイント（たとえば、SOFT HYPHEN（U + 00AD））をユーザー名から削除することができます。これらのコードポイントはStringprepで「何にもマッピングされない」ため、実際には、PRECISへの移行時にコードポイントが削除されても、ユーザーは違いに気付かないでしょう。"
    },
    {
      "indent": 0,
      "text": " o SASLprep allowed uppercase and titlecase code points, whereas the UsernameCaseMapped profile maps uppercase and titlecase code points to their lowercase equivalents (by contrast, the UsernameCasePreserved profile matches SASLprep in this regard). For migration purposes, the operator can use either the UsernameCaseMapped profile (thus losing the case information) or the UsernameCasePreserved profile (thus ignoring case difference when comparing usernames).",
      "ja": "SASLprepは大文字とタイトルケースのコードポイントを許可しましたが、UsernameCaseMappedプロファイルは大文字とタイトルケースのコードポイントを対応する小文字にマップします（対照的に、UsernameCasePreservedプロファイルはSASLprepと一致します）。移行の目的で、オペレーターはUsernameCaseMappedプロファイル（したがって、ケース情報を失う）またはUsernameCasePreservedプロファイル（したがって、ユーザー名を比較するときに大文字と小文字の違いを無視）を使用できます。"
    },
    {
      "indent": 0,
      "text": "6.2. Passwords",
      "section_title": true,
      "ja": "6.2. パスワード"
    },
    {
      "indent": 3,
      "text": "Depending on local service policy, migration from SASLprep to this specification might not involve any scrubbing of data (because passwords might not be stored in the clear anyway); however, service providers need to be aware of possible issues that might arise during migration. In particular:",
      "ja": "ローカルサービスポリシーによっては、SASLprepからこの仕様への移行にデータのスクラブが含まれない場合があります（とにかくパスワードがクリアテキストで保存されない場合があるため）。ただし、サービスプロバイダーは、移行中に発生する可能性のある問題を認識する必要があります。特に："
    },
    {
      "indent": 3,
      "text": "o SASLprep specified the use of Unicode Normalization Form KC (NFKC), whereas the OpaqueString profile employs Unicode Normalization Form C (NFC). Because NFKC is more aggressive about finding matches than NFC, in practice this change is unlikely to cause significant problems and indeed has the security benefit of probably resulting in fewer false accepts when comparing passwords. A few examples might suffice to indicate the nature of the problem:",
      "ja": "o SASLprepはUnicode正規化形式KC（NFKC）の使用を指定しましたが、OpaqueStringプロファイルはUnicode正規化形式C（NFC）を採用しています。 NFKCはNFCよりも一致の検索に積極的であるため、実際にはこの変更によって重大な問題が発生することはほとんどなく、実際にパスワードを比較するときに誤った受け入れが少なくなるというセキュリティ上の利点があります。問題の性質を示すには、いくつかの例で十分かもしれません。"
    },
    {
      "indent": 6,
      "text": "1. \"ſ\" (LATIN SMALL LETTER LONG S, U+017F) is compatibility equivalent to \"s\" (LATIN SMALL LETTER S, U+0073).",
      "ja": "1. 「ſ」（ラテン小文字L、U + 017F）は、「s」（ラテン小文字S、U + 0073）と同等の互換性があります。"
    },
    {
      "indent": 6,
      "text": "2. \"Ⅳ\" (ROMAN NUMERAL FOUR, U+2163) is compatibility equivalent to \"I\" (LATIN CAPITAL LETTER I, U+0049) and \"V\" (LATIN CAPITAL LETTER V, U+0056).",
      "ja": "2. 「Ⅳ」（ローマ数字4、U + 2163）は、「I」（ラテン大文字I、U + 0049）および「V」（ラテン大文字V、U + 0056）と同等の互換性があります。"
    },
    {
      "indent": 6,
      "text": "3. \"ﬁ\" (LATIN SMALL LIGATURE FI, U+FB01) is compatibility equivalent to \"f\" (LATIN SMALL LETTER F, U+0066) and \"i\" (LATIN SMALL LETTER I, U+0069).",
      "ja": "3. \"？\"（ラテン小文字合字FI、U + FB01）は、 \"f\"（ラテン小文字合字F、U + 0066）および \"i\"（ラテン小文字合字I、U + 0069）と同等の互換性があります。"
    },
    {
      "indent": 6,
      "text": "Under SASLprep, the use of NFKC also handled the mapping of fullwidth and halfwidth code points to their decomposition mappings. Although it is expected that code points with compatibility equivalents are rare in existing passwords, some passwords that matched when SASLprep was used might no longer work when the rules in this specification are applied.",
      "ja": "SASLprepでは、NFKCの使用により、全幅コードポイントと半幅コードポイントの分解マッピングへのマッピングも処理されました。既存のパスワードでは互換性のある同等のコードポイントはまれであると予想されますが、SASLprepが使用されたときに一致した一部のパスワードは、この仕様のルールが適用されると機能しなくなる可能性があります。"
    },
    {
      "indent": 0,
      "text": " o SASLprep mapped the \"characters commonly mapped to nothing\" (from Appendix B.1 of [RFC3454]) to nothing, whereas the PRECIS FreeformClass entirely disallows such code points, which correspond to the code points from the PRECIS \"M\" category defined under Section 9.13 of [RFC8264]. In practice, this change will probably have no effect on comparison, but user-oriented software might reject such code points instead of ignoring them during password preparation.",
      "ja": "o SASLprepは、「一般に何にもマッピングされない文字」（[RFC3454]の付録B.1から）を何にもマッピングしませんでしたが、PRECIS FreeformClassは、そのようなコードポイントを完全に禁止します。 [RFC8264]のセクション9.13。実際には、この変更は比較におそらく影響を与えませんが、ユーザー指向のソフトウェアは、パスワードの準備中にそれらを無視する代わりに、そのようなコードポイントを拒否する場合があります。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has made the updates described below.",
      "ja": "IANAは下記の更新を行いました。"
    },
    {
      "indent": 0,
      "text": "7.1. UsernameCaseMapped Profile",
      "section_title": true,
      "ja": "7.1. UsernameCaseMappedプロファイル"
    },
    {
      "indent": 3,
      "text": "IANA has added the following entry to the \"PRECIS Profiles\" registry.",
      "ja": "IANAは、「PRECISプロファイル」レジストリに次のエントリを追加しました。"
    },
    {
      "indent": 3,
      "text": "Name: UsernameCaseMapped.",
      "ja": "名前：UsernameCaseMapped。"
    },
    {
      "indent": 3,
      "text": "Base Class: IdentifierClass.",
      "ja": "基本クラス：IdentifierClass。"
    },
    {
      "indent": 3,
      "text": "Applicability: Usernames in security and application protocols.",
      "ja": "適用範囲：セキュリティおよびアプリケーションプロトコルのユーザー名。"
    },
    {
      "indent": 3,
      "text": "Replaces: The SASLprep profile of Stringprep.",
      "ja": "置き換え：StringprepのSASLprepプロファイル。"
    },
    {
      "indent": 3,
      "text": "Width Mapping Rule: Map fullwidth and halfwidth code points to their decomposition mappings.",
      "ja": "幅マッピングルール：全幅および半幅のコードポイントを分解マッピングにマップします。"
    },
    {
      "indent": 3,
      "text": "Additional Mapping Rule: None.",
      "ja": "追加のマッピング規則：なし。"
    },
    {
      "indent": 3,
      "text": "Case Mapping Rule: Map uppercase and titlecase code points to lowercase.",
      "ja": "ケースマッピングルール：大文字とタイトルケースのコードポイントを小文字にマッピングします。"
    },
    {
      "indent": 3,
      "text": "Normalization Rule: NFC.",
      "ja": "正規化ルール：NFC。"
    },
    {
      "indent": 3,
      "text": "Directionality Rule: The \"Bidi Rule\" defined in RFC 5893 applies.",
      "ja": "方向性ルール：RFC 5893で定義されている「Bidiルール」が適用されます。"
    },
    {
      "indent": 3,
      "text": "Enforcement: To be defined by security or application protocols that use this profile.",
      "ja": "実施：このプロファイルを使用するセキュリティまたはアプリケーションプロトコルによって定義されます。"
    },
    {
      "indent": 3,
      "text": "Specification: Section 3.3 of RFC 8265.",
      "ja": "仕様：RFC 8265のセクション3.3。"
    },
    {
      "indent": 0,
      "text": "7.2. UsernameCasePreserved Profile",
      "section_title": true,
      "ja": "7.2. UsernameCasePreservedプロファイル"
    },
    {
      "indent": 3,
      "text": "IANA has added the following entry to the \"PRECIS Profiles\" registry.",
      "ja": "IANAは、「PRECISプロファイル」レジストリに次のエントリを追加しました。"
    },
    {
      "indent": 3,
      "text": "Name: UsernameCasePreserved.",
      "ja": "名前：UsernameCasePreserved。"
    },
    {
      "indent": 3,
      "text": "Base Class: IdentifierClass.",
      "ja": "基本クラス：IdentifierClass。"
    },
    {
      "indent": 3,
      "text": "Applicability: Usernames in security and application protocols.",
      "ja": "適用範囲：セキュリティおよびアプリケーションプロトコルのユーザー名。"
    },
    {
      "indent": 3,
      "text": "Replaces: The SASLprep profile of Stringprep.",
      "ja": "置き換え：StringprepのSASLprepプロファイル。"
    },
    {
      "indent": 3,
      "text": "Width Mapping Rule: Map fullwidth and halfwidth code points to their decomposition mappings.",
      "ja": "幅マッピングルール：全幅および半幅のコードポイントを分解マッピングにマップします。"
    },
    {
      "indent": 3,
      "text": "Additional Mapping Rule: None.",
      "ja": "追加のマッピング規則：なし。"
    },
    {
      "indent": 3,
      "text": "Case Mapping Rule: None.",
      "ja": "ケースマッピングルール：なし。"
    },
    {
      "indent": 3,
      "text": "Normalization Rule: NFC.",
      "ja": "正規化ルール：NFC。"
    },
    {
      "indent": 3,
      "text": "Directionality Rule: The \"Bidi Rule\" defined in RFC 5893 applies.",
      "ja": "方向性ルール：RFC 5893で定義されている「Bidiルール」が適用されます。"
    },
    {
      "indent": 3,
      "text": "Enforcement: To be defined by security or application protocols that use this profile.",
      "ja": "実施：このプロファイルを使用するセキュリティまたはアプリケーションプロトコルによって定義されます。"
    },
    {
      "indent": 3,
      "text": "Specification: Section 3.4 of RFC 8265.",
      "ja": "仕様：RFC 8265のセクション3.4。"
    },
    {
      "indent": 0,
      "text": "7.3. OpaqueString Profile",
      "section_title": true,
      "ja": "7.3. OpaqueStringプロファイル"
    },
    {
      "indent": 3,
      "text": "IANA has added the following entry to the \"PRECIS Profiles\" registry.",
      "ja": "IANAは、「PRECISプロファイル」レジストリに次のエントリを追加しました。"
    },
    {
      "indent": 3,
      "text": "Name: OpaqueString.",
      "ja": "名前：OpaqueString。"
    },
    {
      "indent": 3,
      "text": "Base Class: FreeformClass.",
      "ja": "基本クラス：FreeformClass。"
    },
    {
      "indent": 3,
      "text": "Applicability: Passwords and other opaque strings in security and application protocols.",
      "ja": "適用範囲：セキュリティおよびアプリケーションプロトコルにおけるパスワードおよびその他の不透明な文字列。"
    },
    {
      "indent": 3,
      "text": "Replaces: The SASLprep profile of Stringprep.",
      "ja": "置き換え：StringprepのSASLprepプロファイル。"
    },
    {
      "indent": 3,
      "text": "Width Mapping Rule: None.",
      "ja": "幅マッピングルール：なし。"
    },
    {
      "indent": 3,
      "text": "Additional Mapping Rule: Map non-ASCII space code points to SPACE (U+0020).",
      "ja": "追加のマッピング規則：非ASCIIスペースコードポイントをSPACE（U + 0020）にマップします。"
    },
    {
      "indent": 3,
      "text": "Case Mapping Rule: None.",
      "ja": "ケースマッピングルール：なし。"
    },
    {
      "indent": 3,
      "text": "Normalization Rule: NFC.",
      "ja": "正規化ルール：NFC。"
    },
    {
      "indent": 3,
      "text": "Directionality Rule: None.",
      "ja": "方向性ルール：なし。"
    },
    {
      "indent": 3,
      "text": "Enforcement: To be defined by security or application protocols that use this profile.",
      "ja": "実施：このプロファイルを使用するセキュリティまたはアプリケーションプロトコルによって定義されます。"
    },
    {
      "indent": 3,
      "text": "Specification: Section 4.2 of RFC 8265.",
      "ja": "仕様：RFC 8265のセクション4.2。"
    },
    {
      "indent": 0,
      "text": "7.4. Stringprep Profile",
      "section_title": true,
      "ja": "7.4. Stringprepプロファイル"
    },
    {
      "indent": 3,
      "text": "The Stringprep specification [RFC3454] did not provide for entries in the \"Stringprep Profiles\" registry to have any state except \"Current\" or \"Not Current\". Because RFC 7613 obsoleted RFC 4013, which registered the SASLprep profile of Stringprep, IANA previously marked that profile as \"Not Current\" and cited RFC 7613 as an additional reference. IANA has modified the profile so that the current document is now cited as the additional reference.",
      "ja": "Stringprep仕様[RFC3454]では、 \"Stringprep Profiles\"レジストリのエントリに \"Current\"または \"Not Current\"以外の状態を提供していませんでした。 RFC7613は、StringprepのSASLprepプロファイルを登録したRFC 4013を廃止したため、IANAは以前にそのプロファイルを「Not Current」としてマークし、RFC 7613を追加の参照として引用しました。 IANAはプロファイルを変更し、現在のドキュメントが追加の参照として引用されるようになりました。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8. セキュリティに関する考慮事項"
    },
    {
      "indent": 0,
      "text": "8.1. Password/Passphrase Strength",
      "section_title": true,
      "ja": "8.1. パスワード/パスフレーズの強度"
    },
    {
      "indent": 3,
      "text": "The ability to include a wide range of characters in passwords and passphrases can increase the potential for creating a strong password with high entropy. However, in practice, the ability to include such characters ought to be weighed against the possible need to reproduce them on various devices using various input methods.",
      "ja": "パスワードとパスフレーズにさまざまな文字を含める機能により、エントロピーの高い強力なパスワードを作成できる可能性が高まります。ただし、実際には、そのような文字を含める機能は、さまざまな入力方法を使用してさまざまなデバイスでそれらを再現するために必要な可能性と比較検討する必要があります。"
    },
    {
      "indent": 0,
      "text": "8.2. Password/Passphrase Comparison",
      "section_title": true,
      "ja": "8.2. パスワード/パスフレーズの比較"
    },
    {
      "indent": 3,
      "text": "In systems that conform to modern best practices for security, verification of passwords during authentication will not use the comparison defined in Section 4.2.3. Instead, because the system performs cryptographic calculations to verify the password, it will prepare the password as defined in Section 4.2.1 and enforce the rules as defined in Section 4.2.2 before performing the relevant calculations.",
      "ja": "セキュリティに関する最新のベストプラクティスに準拠するシステムでは、認証中のパスワードの検証では、セクション4.2.3で定義された比較を使用しません。代わりに、システムはパスワードを検証するために暗号計算を実行するため、関連する計算を実行する前に、セクション4.2.1で定義されているパスワードを準備し、セクション4.2.2で定義されているルールを適用します。"
    },
    {
      "indent": 0,
      "text": "8.3. Identifier Comparison",
      "section_title": true,
      "ja": "8.3. 識別子の比較"
    },
    {
      "indent": 3,
      "text": "The process of comparing identifiers (such as SASL simple usernames, authentication identifiers, and authorization identifiers) can lead to either false rejects or false accepts, both of which have security implications. A more detailed discussion can be found in [RFC6943].",
      "ja": "識別子（SASLの単純なユーザー名、認証識別子、承認識別子など）を比較するプロセスは、誤った拒否または誤った受け入れにつながる可能性があり、どちらもセキュリティに影響します。より詳細な議論は[RFC6943]で見つけることができます。"
    },
    {
      "indent": 0,
      "text": "8.4. Reuse of PRECIS",
      "section_title": true,
      "ja": "8.4. PRECISの再利用"
    },
    {
      "indent": 3,
      "text": "The security considerations described in [RFC8264] apply to the IdentifierClass and FreeformClass string classes used in this document for usernames and passwords, respectively.",
      "ja": "[RFC8264]で説明されているセキュリティの考慮事項は、このドキュメントでユーザー名とパスワードにそれぞれ使用されているIdentifierClassおよびFreeformClass文字列クラスに適用されます。"
    },
    {
      "indent": 0,
      "text": "8.5. Reuse of Unicode",
      "section_title": true,
      "ja": "8.5. Unicodeの再利用"
    },
    {
      "indent": 3,
      "text": "The security considerations described in [UTS39] apply to the use of Unicode code points in usernames and passwords.",
      "ja": "[UTS39]で説明されているセキュリティの考慮事項は、ユーザー名とパスワードでのUnicodeコードポイントの使用に適用されます。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9. 参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3629] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", STD 63, RFC 3629, DOI 10.17487/RFC3629, November 2003, <https://www.rfc-editor.org/info/rfc3629>.",
      "ja": "[RFC3629] Yergeau、F。、「UTF-8、ISO 10646の変換フォーマット」、STD 63、RFC 3629、DOI 10.17487 / RFC3629、2003年11月、<https://www.rfc-editor.org/info/ rfc3629>。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, DOI 10.17487/RFC5234, January 2008, <https://www.rfc-editor.org/info/rfc5234>.",
      "ja": "[RFC5234]クロッカー、D。、エド。およびP. Overell、「構文仕様の拡張BNF：ABNF」、STD 68、RFC 5234、DOI 10.17487 / RFC5234、2008年1月、<https://www.rfc-editor.org/info/rfc5234>。"
    },
    {
      "indent": 3,
      "text": "[RFC5890] Klensin, J., \"Internationalized Domain Names for Applications (IDNA): Definitions and Document Framework\", RFC 5890, DOI 10.17487/RFC5890, August 2010, <https://www.rfc-editor.org/info/rfc5890>.",
      "ja": "[RFC5890] Klensin、J。、「Internationalized Domain Names for Applications（IDNA）：Definitions and Document Framework」、RFC 5890、DOI 10.17487 / RFC5890、2010年8月、<https://www.rfc-editor.org/info/ rfc5890>。"
    },
    {
      "indent": 3,
      "text": "[RFC6365] Hoffman, P. and J. Klensin, \"Terminology Used in Internationalization in the IETF\", BCP 166, RFC 6365, DOI 10.17487/RFC6365, September 2011, <https://www.rfc-editor.org/info/rfc6365>.",
      "ja": "[RFC6365] Hoffman、P。およびJ. Klensin、「IETFの国際化で使用される用語」、BCP 166、RFC 6365、DOI 10.17487 / RFC6365、2011年9月、<https://www.rfc-editor.org/info / rfc6365>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B。、「RFC 2119キーワードの大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>。"
    },
    {
      "indent": 3,
      "text": "[RFC8264] Saint-Andre, P. and M. Blanchet, \"PRECIS Framework: Preparation, Enforcement, and Comparison of Internationalized Strings in Application Protocols\", RFC 8264, DOI 10.17487/RFC8264, October 2017, <https://www.rfc-editor.org/info/rfc8264>.",
      "ja": "[RFC8264] Saint-Andre、P。およびM. Blanchet、「PRECIS Framework：Preparation、Enforcement、and Comparison of Internationalized Strings in Application Protocols」、RFC 8264、DOI 10.17487 / RFC8264、2017年10月、<https：// www。 rfc-editor.org/info/rfc8264>。"
    },
    {
      "indent": 3,
      "text": "[UAX11] Unicode Standard Annex #11, \"East Asian Width\", edited by Ken Lunde. An integral part of The Unicode Standard, <http://unicode.org/reports/tr11/>.",
      "ja": "[UAX11] Unicode標準付属書＃11、「東アジアの幅」、Ken Lundeによる編集。 Unicode標準の不可欠な部分である<http://unicode.org/reports/tr11/>。"
    },
    {
      "indent": 3,
      "text": "[Unicode] The Unicode Consortium, \"The Unicode Standard\", <http://www.unicode.org/versions/latest/>.",
      "ja": "[Unicode] Unicodeコンソーシアム、「The Unicode Standard」、<http://www.unicode.org/versions/latest/>。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[Err1812] RFC Errata, Erratum ID 1812, RFC 4013, <https://www.rfc-editor.org/errata/eid1812>.",
      "ja": "[Err1812] RFC Errata、Erratum ID 1812、RFC 4013、<https://www.rfc-editor.org/errata/eid1812>。"
    },
    {
      "indent": 3,
      "text": "[RFC20] Cerf, V., \"ASCII format for network interchange\", STD 80, RFC 20, DOI 10.17487/RFC0020, October 1969, <https://www.rfc-editor.org/info/rfc20>.",
      "ja": "[RFC20] Cerf、V。、「ネットワーク交換用のASCII形式」、STD 80、RFC 20、DOI 10.17487 / RFC0020、1969年10月、<https://www.rfc-editor.org/info/rfc20>。"
    },
    {
      "indent": 3,
      "text": "[RFC3454] Hoffman, P. and M. Blanchet, \"Preparation of Internationalized Strings (\"stringprep\")\", RFC 3454, DOI 10.17487/RFC3454, December 2002, <https://www.rfc-editor.org/info/rfc3454>.",
      "ja": "[RFC3454] Hoffman、P.およびM. Blanchet、「Preparation of Internationalized Strings（ \"stringprep\"）」、RFC 3454、DOI 10.17487 / RFC3454、2002年12月、<https://www.rfc-editor.org/info/ rfc3454>。"
    },
    {
      "indent": 3,
      "text": "[RFC3501] Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION 4rev1\", RFC 3501, DOI 10.17487/RFC3501, March 2003, <https://www.rfc-editor.org/info/rfc3501>.",
      "ja": "[RFC3501] Crispin、M。、「インターネットメッセージアクセスプロトコル-バージョン4rev1」、RFC 3501、DOI 10.17487 / RFC3501、2003年3月、<https://www.rfc-editor.org/info/rfc3501>。"
    },
    {
      "indent": 3,
      "text": "[RFC3987] Duerst, M. and M. Suignard, \"Internationalized Resource Identifiers (IRIs)\", RFC 3987, DOI 10.17487/RFC3987, January 2005, <https://www.rfc-editor.org/info/rfc3987>.",
      "ja": "[RFC3987] Duerst、M。およびM. Suignard、「Internationalized Resource Identifiers（IRIs）」、RFC 3987、DOI 10.17487 / RFC3987、2005年1月、<https://www.rfc-editor.org/info/rfc3987>。"
    },
    {
      "indent": 3,
      "text": "[RFC4013] Zeilenga, K., \"SASLprep: Stringprep Profile for User Names and Passwords\", RFC 4013, DOI 10.17487/RFC4013, February 2005, <https://www.rfc-editor.org/info/rfc4013>.",
      "ja": "[RFC4013] Zeilenga、K。、「SASLprep：Stringprep Profile for User Names and Passwords」、RFC 4013、DOI 10.17487 / RFC4013、2005年2月、<https://www.rfc-editor.org/info/rfc4013>。"
    },
    {
      "indent": 3,
      "text": "[RFC4422] Melnikov, A., Ed. and K. Zeilenga, Ed., \"Simple Authentication and Security Layer (SASL)\", RFC 4422, DOI 10.17487/RFC4422, June 2006, <https://www.rfc-editor.org/info/rfc4422>.",
      "ja": "[RFC4422]メルニコフ、A。、エド。 K. Zeilenga編、「Simple Authentication and Security Layer（SASL）」、RFC 4422、DOI 10.17487 / RFC4422、2006年6月、<https://www.rfc-editor.org/info/rfc4422>。"
    },
    {
      "indent": 3,
      "text": "[RFC4616] Zeilenga, K., Ed., \"The PLAIN Simple Authentication and Security Layer (SASL) Mechanism\", RFC 4616, DOI 10.17487/RFC4616, August 2006, <https://www.rfc-editor.org/info/rfc4616>.",
      "ja": "[RFC4616] Zeilenga、K。、編、「PLAIN Simple Authentication and Security Layer（SASL）Mechanism」、RFC 4616、DOI 10.17487 / RFC4616、2006年8月、<https://www.rfc-editor.org/info / rfc4616>。"
    },
    {
      "indent": 3,
      "text": "[RFC5802] Newman, C., Menon-Sen, A., Melnikov, A., and N. Williams, \"Salted Challenge Response Authentication Mechanism (SCRAM) SASL and GSS-API Mechanisms\", RFC 5802, DOI 10.17487/RFC5802, July 2010, <https://www.rfc-editor.org/info/rfc5802>.",
      "ja": "[RFC5802]ニューマン、C。、メノンセン、A。、メルニコフ、A。、およびN.ウィリアムズ、「ソルトチャレンジレスポンス認証メカニズム（SCRAM）SASLおよびGSS-APIメカニズム」、RFC 5802、DOI 10.17487 / RFC5802、 2010年7月、<https://www.rfc-editor.org/info/rfc5802>。"
    },
    {
      "indent": 3,
      "text": "[RFC5893] Alvestrand, H., Ed. and C. Karp, \"Right-to-Left Scripts for Internationalized Domain Names for Applications (IDNA)\", RFC 5893, DOI 10.17487/RFC5893, August 2010, <https://www.rfc-editor.org/info/rfc5893>.",
      "ja": "[RFC5893]アルベストランド、H。、エド。およびC. Karp、「Right-to-Left Scripts for Internationalized Domain Names for Applications（IDNA）」、RFC 5893、DOI 10.17487 / RFC5893、2010年8月、<https://www.rfc-editor.org/info/rfc5893 >。"
    },
    {
      "indent": 3,
      "text": "[RFC6120] Saint-Andre, P., \"Extensible Messaging and Presence Protocol (XMPP): Core\", RFC 6120, DOI 10.17487/RFC6120, March 2011, <https://www.rfc-editor.org/info/rfc6120>.",
      "ja": "[RFC6120] Saint-Andre、P。、「Extensible Messaging and Presence Protocol（XMPP）：Core」、RFC 6120、DOI 10.17487 / RFC6120、2011年3月、<https://www.rfc-editor.org/info/rfc6120 >。"
    },
    {
      "indent": 3,
      "text": "[RFC6943] Thaler, D., Ed., \"Issues in Identifier Comparison for Security Purposes\", RFC 6943, DOI 10.17487/RFC6943, May 2013, <https://www.rfc-editor.org/info/rfc6943>.",
      "ja": "[RFC6943] Thaler、D。、編、「セキュリティ上の目的での識別子比較の問題」、RFC 6943、DOI 10.17487 / RFC6943、2013年5月、<https://www.rfc-editor.org/info/rfc6943>。"
    },
    {
      "indent": 3,
      "text": "[RFC7542] DeKok, A., \"The Network Access Identifier\", RFC 7542, DOI 10.17487/RFC7542, May 2015, <https://www.rfc-editor.org/info/rfc7542>.",
      "ja": "[RFC7542] DeKok、A。、「The Network Access Identifier」、RFC 7542、DOI 10.17487 / RFC7542、2015年5月、<https://www.rfc-editor.org/info/rfc7542>。"
    },
    {
      "indent": 3,
      "text": "[RFC7613] Saint-Andre, P. and A. Melnikov, \"Preparation, Enforcement, and Comparison of Internationalized Strings Representing Usernames and Passwords\", RFC 7613, DOI 10.17487/RFC7613, August 2015, <https://www.rfc-editor.org/info/rfc7613>.",
      "ja": "[RFC7613] Saint-Andre、P。およびA. Melnikov、「ユーザー名とパスワードを表す国際化された文字列の準備、適用、比較」、RFC 7613、DOI 10.17487 / RFC7613、2015年8月、<https：//www.rfc- editor.org/info/rfc7613>。"
    },
    {
      "indent": 3,
      "text": "[RFC7616] Shekh-Yusef, R., Ed., Ahrens, D., and S. Bremer, \"HTTP Digest Access Authentication\", RFC 7616, DOI 10.17487/RFC7616, September 2015, <https://www.rfc-editor.org/info/rfc7616>.",
      "ja": "[RFC7616] Shekh-Yusef、R.、Ed。、Ahrens、D。、およびS. Bremer、「HTTP Digest Access Authentication」、RFC 7616、DOI 10.17487 / RFC7616、2015年9月、<https：//www.rfc- editor.org/info/rfc7616>。"
    },
    {
      "indent": 3,
      "text": "[RFC7617] Reschke, J., \"The 'Basic' HTTP Authentication Scheme\", RFC 7617, DOI 10.17487/RFC7617, September 2015, <https://www.rfc-editor.org/info/rfc7617>.",
      "ja": "[RFC7617] Reschke、J。、「The 'Basic' HTTP Authentication Scheme」、RFC 7617、DOI 10.17487 / RFC7617、2015年9月、<https://www.rfc-editor.org/info/rfc7617>。"
    },
    {
      "indent": 3,
      "text": "[RFC7622] Saint-Andre, P., \"Extensible Messaging and Presence Protocol (XMPP): Address Format\", RFC 7622, DOI 10.17487/RFC7622, September 2015, <https://www.rfc-editor.org/info/rfc7622>.",
      "ja": "[RFC7622] Saint-Andre、P。、「Extensible Messaging and Presence Protocol（XMPP）：Address Format」、RFC 7622、DOI 10.17487 / RFC7622、2015年9月、<https://www.rfc-editor.org/info/ rfc7622>。"
    },
    {
      "indent": 3,
      "text": "[RFC8266] Saint-Andre, P., \"Preparation, Enforcement, and Comparison of Internationalized Strings Representing Nicknames\", RFC 8266, DOI 10.17487/RFC8266, October 2017, <https://www.rfc-editor.org/info/rfc8266>.",
      "ja": "[RFC8266] Saint-Andre、P。、「ニックネームを表す国際化された文字列の準備、施行、比較」、RFC 8266、DOI 10.17487 / RFC8266、2017年10月、<https://www.rfc-editor.org/info/ rfc8266>。"
    },
    {
      "indent": 3,
      "text": "[UTS39] Unicode Technical Standard #39, \"Unicode Security Mechanisms\", edited by Mark Davis and Michel Suignard, <http://unicode.org/reports/tr39/>.",
      "ja": "[UTS39] Unicode技術標準＃39、「Unicode Security Mechanisms」、Mark DavisおよびMichel Suignardにより編集、<http://unicode.org/reports/tr39/>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Changes from RFC 7613",
      "section_title": true,
      "ja": "付録A. RFC 7613からの変更点"
    },
    {
      "indent": 3,
      "text": "The following changes were made from [RFC7613].",
      "ja": "[RFC7613]から次の変更が行われました。"
    },
    {
      "indent": 3,
      "text": "o Corrected the order of operations for the UsernameCaseMapped profile to ensure consistency with [RFC8264].",
      "ja": "o UsernameCaseMappedプロファイルの操作の順序を修正して、[RFC8264]との一貫性を確保しました。"
    },
    {
      "indent": 3,
      "text": "o In accordance with working group discussions and updates to [RFC8264], removed the use of the Unicode toCaseFold() operation in favor of the Unicode toLowerCase() operation.",
      "ja": "o ワーキンググループの議論と[RFC8264]の更新に従い、Unicode toLowerCase()操作を優先して、Unicode toCaseFold()操作の使用を削除しました。"
    },
    {
      "indent": 3,
      "text": "o Modified the presentation (but not the content) of the rules.",
      "ja": "o ルールの表示を変更しました（コンテンツは変更しません）。"
    },
    {
      "indent": 3,
      "text": "o Removed UTF-8 as a mandatory encoding, because that is a matter for the application.",
      "ja": "o UTF-8は必須のエンコーディングとして削除されました。これはアプリケーションの問題であるためです。"
    },
    {
      "indent": 3,
      "text": "o Clarified several editorial matters.",
      "ja": "o いくつかの編集上の問題を明確にしました。"
    },
    {
      "indent": 3,
      "text": "o Updated references.",
      "ja": "o 更新された参照。"
    },
    {
      "indent": 3,
      "text": "See [RFC7613] for a description of the differences from [RFC4013].",
      "ja": "[RFC4013]との違いの説明については[RFC7613]を参照してください。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to Christian Schudt and Sam Whited for their bug reports and feedback.",
      "ja": "バグレポートとフィードバックを提供してくれたChristian SchudtとSam Whitedに感謝します。"
    },
    {
      "indent": 3,
      "text": "See [RFC7613] for acknowledgements related to the specification that this document supersedes.",
      "ja": "このドキュメントが優先する仕様に関連する謝辞については、[RFC7613]を参照してください。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Peter Saint-Andre Jabber.org P.O. Box 787 Parker, CO 80134 United States of America",
      "ja": "Peter Saint-Andre Jabber.org P.O. Box 787 Parker、CO 80134アメリカ合衆国"
    },
    {
      "indent": 3,
      "text": "Phone: +1 720 256 6756\nEmail: stpeter@jabber.org\nURI:   https://www.jabber.org/",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Alexey Melnikov Isode Ltd 5 Castle Business Village 36 Station Road Hampton, Middlesex TW12 2BX United Kingdom",
      "ja": "Alexey Melnikov Isode Ltd 5 Castle Business Village 36 Station Road Hampton、Middlesex TW12 2BXイギリス"
    },
    {
      "indent": 3,
      "text": "Email: Alexey.Melnikov@isode.com",
      "raw": true,
      "ja": ""
    }
  ]
}