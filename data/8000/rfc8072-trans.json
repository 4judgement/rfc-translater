{
  "title": {
    "text": "RFC 8072 - YANG Patch Media Type",
    "ja": "RFC 8072 - YANGパッチメディアタイプ"
  },
  "number": 8072,
  "created_at": "2020-08-28 20:31:03.069870+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        A. Bierman\nRequest for Comments: 8072                                     YumaWorks\nCategory: Standards Track                                   M. Bjorklund\nISSN: 2070-1721                                           Tail-f Systems\n                                                               K. Watsen\n                                                        Juniper Networks\n                                                           February 2017",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 25,
      "text": "YANG Patch Media Type",
      "ja": "YANGパッチメディアタイプ"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document describes a method for applying patches to configuration datastores using data defined with the YANG data modeling language.",
      "ja": "このドキュメントでは、YANGデータモデリング言語で定義されたデータを使用して、構成データストアにパッチを適用する方法について説明します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 7841のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc8072.",
      "ja": "このドキュメントの現在のステータス、エラッタ、およびフィードバックの提供方法に関する情報は、http：//www.rfc-editor.org/info/rfc8072で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2017 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2017 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびこの文書の発行日に有効なIETF文書に関するIETFトラストの法的規定（http://trustee.ietf.org/license-info）の対象となります。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Terminology ................................................3\n        1.1.1. NETCONF .............................................3\n        1.1.2. HTTP ................................................4\n        1.1.3. YANG ................................................4\n        1.1.4. RESTCONF ............................................4\n        1.1.5. YANG Patch ..........................................5\n        1.1.6. Examples ............................................5\n        1.1.7. Tree Diagram Notations ..............................6\n2. YANG Patch ......................................................6\n   2.1. Target Resource ............................................7\n   2.2. yang-patch Request .........................................8\n   2.3. yang-patch-status Response .................................9\n   2.4. Target Data Node ..........................................10\n   2.5. Edit Operations ...........................................11\n   2.6. Successful Edit Response Handling .........................11\n   2.7. Error Handling ............................................12\n   2.8. \":yang-patch\" RESTCONF Capability .........................12\n3. YANG Module ....................................................13\n4. IANA Considerations ............................................22\n   4.1. Registrations for New URI and YANG Module .................22\n   4.2. Media Types ...............................................23\n        4.2.1. Media Type \"application/yang-patch+xml\" ............23\n        4.2.2. Media Type \"application/yang-patch+json\" ...........24\n   4.3. RESTCONF Capability URNs ..................................25\n5. Security Considerations ........................................25\n6. References .....................................................26\n   6.1. Normative References ......................................26\n   6.2. Informative References ....................................27\nAppendix A. Example YANG Module ...................................28\n  A.1. YANG Patch Examples ........................................29\n    A.1.1. Add Resources: Error ...................................29\n    A.1.2. Add Resources: Success .................................33\n    A.1.3. Insert List Entry ......................................35\n    A.1.4. Move List Entry ........................................36\n    A.1.5. Edit Datastore Resource ................................37\nAcknowledgements ..................................................39\nAuthors' Addresses ................................................39",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "There is a need for standard mechanisms to patch datastores defined in [RFC6241], which contain conceptual data that conforms to schema specified with YANG [RFC7950]. An \"ordered 'edit' list\" approach is needed to provide RESTCONF client developers with more precise RESTCONF client control of the edit procedure than the \"plain patch\" mechanism found in [RFC8040].",
      "ja": "YANG [RFC7950]で指定されたスキーマに準拠する概念データを含む、[RFC6241]で定義されたデータストアにパッチを適用する標準的なメカニズムが必要です。 [RFC8040]にある「単純なパッチ」メカニズムよりも正確なRESTCONFクライアント制御をRESTCONFクライアント開発者に提供するには、「順序付き「編集」リスト」アプローチが必要です。"
    },
    {
      "indent": 3,
      "text": "This document defines a media type for a YANG-based editing mechanism that can be used with the HTTP PATCH method [RFC5789]. YANG Patch is designed to support the RESTCONF protocol, defined in [RFC8040]. This document only specifies the use of the YANG Patch media type with the RESTCONF protocol.",
      "ja": "このドキュメントは、HTTP PATCHメソッド[RFC5789]で使用できるYANGベースの編集メカニズムのメディアタイプを定義しています。 YANGパッチは、[RFC8040]で定義されているRESTCONFプロトコルをサポートするように設計されています。このドキュメントでは、RESTCONFプロトコルでのYANGパッチメディアタイプの使用のみを指定しています。"
    },
    {
      "indent": 3,
      "text": "It may be possible to use YANG Patch with other protocols besides RESTCONF. This is outside the scope of this document. For any protocol that supports the YANG Patch media type, if the entire patch document cannot be successfully applied, then the server MUST NOT apply any of the changes. It may be possible to use YANG Patch with datastore types other than a configuration datastore. This is outside the scope of this document.",
      "ja": "RESTCONF以外のプロトコルでYANGパッチを使用できる場合があります。これはこのドキュメントの範囲外です。 YANGパッチメディアタイプをサポートするプロトコルでは、パッチドキュメント全体を正常に適用できない場合、サーバーは変更を適用してはなりません（MUST NOT）。構成データストア以外のデータストアタイプでYANGパッチを使用できる場合があります。これはこのドキュメントの範囲外です。"
    },
    {
      "indent": 0,
      "text": "1.1. Terminology",
      "section_title": true,
      "ja": "1.1. 用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は、 [RFC2119]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "1.1.1. NETCONF",
      "section_title": true,
      "ja": "1.1.1. NETCONF"
    },
    {
      "indent": 3,
      "text": "The following terms are defined in [RFC6241]:",
      "ja": "以下の用語は[RFC6241]で定義されています："
    },
    {
      "indent": 3,
      "text": "o configuration data",
      "ja": "o 設定データ"
    },
    {
      "indent": 3,
      "text": "o datastore",
      "ja": "o データストア"
    },
    {
      "indent": 3,
      "text": "o configuration datastore",
      "ja": "o 構成データストア"
    },
    {
      "indent": 3,
      "text": "o protocol operation",
      "ja": "o プロトコル操作"
    },
    {
      "indent": 3,
      "text": "o running configuration datastore",
      "ja": "o 実行構成データストア"
    },
    {
      "indent": 3,
      "text": "o state data",
      "ja": "o 状態データ"
    },
    {
      "indent": 3,
      "text": "o user",
      "ja": "o ユーザー"
    },
    {
      "indent": 0,
      "text": "1.1.2. HTTP",
      "section_title": true,
      "ja": "1.1.2. HTTP"
    },
    {
      "indent": 3,
      "text": "The following terms are defined in [RFC7230]:",
      "ja": "以下の用語は[RFC7230]で定義されています："
    },
    {
      "indent": 3,
      "text": "o header field",
      "ja": "o ヘッダーフィールド"
    },
    {
      "indent": 3,
      "text": "o message-body",
      "ja": "o メッセージ本文"
    },
    {
      "indent": 3,
      "text": "o query",
      "ja": "o クエリ"
    },
    {
      "indent": 3,
      "text": "o request URI",
      "ja": "o リクエストURI"
    },
    {
      "indent": 3,
      "text": "The following terms are defined in [RFC7231]:",
      "ja": "以下の用語は[RFC7231]で定義されています："
    },
    {
      "indent": 3,
      "text": "o method",
      "ja": "o 方法"
    },
    {
      "indent": 3,
      "text": "o request",
      "ja": "o リクエスト"
    },
    {
      "indent": 3,
      "text": "o resource",
      "ja": "o 資源"
    },
    {
      "indent": 0,
      "text": "1.1.3. YANG",
      "section_title": true,
      "ja": "1.1.3. それ"
    },
    {
      "indent": 3,
      "text": "The following terms are defined in [RFC7950]:",
      "ja": "以下の用語は[RFC7950]で定義されています："
    },
    {
      "indent": 3,
      "text": "o container",
      "ja": "o コンテナ"
    },
    {
      "indent": 3,
      "text": "o data node",
      "ja": "o だた ので"
    },
    {
      "indent": 3,
      "text": "o leaf",
      "ja": "o 葉"
    },
    {
      "indent": 3,
      "text": "o leaf-list",
      "ja": "o リーフリスト"
    },
    {
      "indent": 3,
      "text": "o list",
      "ja": "o リスト"
    },
    {
      "indent": 0,
      "text": "1.1.4. RESTCONF",
      "section_title": true,
      "ja": "1.1.4. RESTCONF"
    },
    {
      "indent": 3,
      "text": "The following terms are defined in [RFC8040]:",
      "ja": "以下の用語は[RFC8040]で定義されています："
    },
    {
      "indent": 3,
      "text": "o application/yang-data+xml",
      "ja": "o application / yang-data + xml"
    },
    {
      "indent": 3,
      "text": "o application/yang-data+json",
      "ja": "o application / yang-data + json"
    },
    {
      "indent": 3,
      "text": "o data resource",
      "ja": "o データリソース"
    },
    {
      "indent": 3,
      "text": "o datastore resource",
      "ja": "o データストアリソース"
    },
    {
      "indent": 0,
      "text": " o patch o RESTCONF capability",
      "ja": "oパッチo RESTCONF機能"
    },
    {
      "indent": 3,
      "text": "o target resource",
      "ja": "o ターゲットリソース"
    },
    {
      "indent": 3,
      "text": "o YANG data template",
      "ja": "o THATテンプレートデータ"
    },
    {
      "indent": 0,
      "text": "1.1.5. YANG Patch",
      "section_title": true,
      "ja": "1.1.5. ヤンパッチ"
    },
    {
      "indent": 3,
      "text": "The following terms are used within this document:",
      "ja": "このドキュメントでは、次の用語が使用されています。"
    },
    {
      "indent": 3,
      "text": "o RESTCONF client: a client that implements the RESTCONF protocol.",
      "ja": "o RESTCONFクライアント：RESTCONFプロトコルを実装するクライアント。"
    },
    {
      "indent": 3,
      "text": "o RESTCONF server: a server that implements the RESTCONF protocol.",
      "ja": "o RESTCONFサーバー：RESTCONFプロトコルを実装するサーバー。"
    },
    {
      "indent": 3,
      "text": "o YANG Patch: a conceptual edit request using the \"yang-patch\" YANG Patch template, defined in Section 3. In HTTP, refers to a PATCH method where a representation uses either the media type \"application/yang-patch+xml\" or \"application/yang-patch+json\".",
      "ja": "o YANGパッチ：セクション3で定義された「yang-patch」YANGパッチテンプレートを使用した概念的な編集要求。HTTPでは、表現がメディアタイプ「application / yang-patch + xml」または「 application / yang-patch + json」。"
    },
    {
      "indent": 3,
      "text": "o YANG Patch Status: a conceptual edit status response using the YANG \"yang-patch-status\" YANG data template, defined in Section 3. In HTTP, refers to a response message for a PATCH method, where it has a representation with either the media type \"application/yang-data+xml\" or \"application/yang-data+json\".",
      "ja": "o YANGパッチステータス：セクション3で定義されている、YANG \"yang-patch-status\" YANGデータテンプレートを使用した概念的な編集ステータス応答。HTTPでは、PATCHメソッドの応答メッセージを指し、メディアまたは「application / yang-data + xml」または「application / yang-data + json」と入力します。"
    },
    {
      "indent": 3,
      "text": "o YANG Patch template: similar to a YANG data template, except that it has a representation with the media type \"application/yang-patch+xml\" or \"application/yang-patch+json\".",
      "ja": "o YANGパッチテンプレート：メディアタイプ「application / yang-patch + xml」または「application / yang-patch + json」で表現されることを除いて、YANGデータテンプレートと同様です。"
    },
    {
      "indent": 0,
      "text": "1.1.6. Examples",
      "section_title": true,
      "ja": "1.1.6. 例"
    },
    {
      "indent": 3,
      "text": "Some protocol message lines within examples throughout this document are split into multiple lines for display purposes only. When a line ends with a backslash (\"\\\") as the last character, the line is wrapped for display purposes. It is to be considered to be joined to the next line by deleting the backslash, the following line break, and the leading whitespace of the next line.",
      "ja": "このドキュメントの例に含まれる一部のプロトコルメッセージ行は、表示のみを目的として複数の行に分割されています。行が最後の文字としてバックスラッシュ（ \"\\\"）で終わる場合、その行は表示のために折り返されます。バックスラッシュ、次の改行、および次の行の先頭の空白を削除することにより、次の行に結合されていると見なされます。"
    },
    {
      "indent": 0,
      "text": "1.1.7. Tree Diagram Notations",
      "section_title": true,
      "ja": "1.1.7. ツリー図の表記"
    },
    {
      "indent": 3,
      "text": "A simplified graphical representation of the data model is used in this document. The meanings of the symbols in these diagrams are as follows:",
      "ja": "このドキュメントでは、データモデルの簡略化されたグラフィカル表現を使用しています。これらの図の記号の意味は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o Brackets \"[\" and \"]\" enclose list keys.",
      "ja": "o 大括弧 \"[\"と \"]\"はリストキーを囲みます。"
    },
    {
      "indent": 3,
      "text": "o Abbreviations before data node names: \"rw\" means configuration data (read-write), \"ro\" means state data (read-only), and \"x\" means operation resource (executable).",
      "ja": "o データノード名の前の略語：「rw」は構成データ（読み取り/書き込み）を意味し、「ro」は状態データ（読み取り専用）を意味し、「x」は操作リソース（実行可能）を意味します。"
    },
    {
      "indent": 3,
      "text": "o Symbols after data node names: \"?\" means an optional node, and \"*\" denotes a \"list\" and \"leaf-list\".",
      "ja": "o データノード名の後の記号： \"？\"オプションのノードを意味し、「*」は「リスト」と「リーフリスト」を示します。"
    },
    {
      "indent": 3,
      "text": "o Parentheses enclose choice and case nodes, and case nodes are also marked with a colon (\":\").",
      "ja": "o 括弧は選択ノードとケースノードを囲み、ケースノードもコロン（ \"：\"）でマークされます。"
    },
    {
      "indent": 3,
      "text": "o Ellipsis (\"...\") stands for contents of subtrees that are not shown.",
      "ja": "o 省略記号（ \"...\"）は、表示されていないサブツリーのコンテンツを表します。"
    },
    {
      "indent": 0,
      "text": "2. YANG Patch",
      "section_title": true,
      "ja": "2. ヤンパッチ"
    },
    {
      "indent": 3,
      "text": "A \"YANG Patch\" is an ordered list of edits that are applied to the target datastore by the RESTCONF server. The specific fields are defined in the YANG module in Section 3.",
      "ja": "「YANGパッチ」は、RESTCONFサーバーによってターゲットデータストアに適用される編集の順序付きリストです。特定のフィールドは、セクション3のYANGモジュールで定義されています。"
    },
    {
      "indent": 3,
      "text": "The YANG Patch operation is invoked by the RESTCONF client by sending a PATCH method request with a representation using either the media type \"application/yang-patch+xml\" or \"application/yang-patch+json\". This message-body representing the YANG Patch input parameters MUST be present.",
      "ja": "YANGパッチ操作は、メディアタイプ「application / yang-patch + xml」または「application / yang-patch + json」のいずれかを使用した表現でPATCHメソッド要求を送信することにより、RESTCONFクライアントによって呼び出されます。 YANGパッチの入力パラメーターを表すこのメッセージ本文が存在する必要があります。"
    },
    {
      "indent": 3,
      "text": "YANG Patch has some features that are not possible with the \"plain-patch\" mechanism defined in RESTCONF [RFC8040]:",
      "ja": "YANGパッチには、RESTCONF [RFC8040]で定義されている「プレーンパッチ」メカニズムでは不可能ないくつかの機能があります。"
    },
    {
      "indent": 3,
      "text": "o YANG Patch allows multiple sub-resources to be edited within the same PATCH method.",
      "ja": "o YANGパッチを使用すると、同じPATCHメソッド内で複数のサブリソースを編集できます。"
    },
    {
      "indent": 3,
      "text": "o YANG Patch allows a more precise edit operation than the \"plain patch\" mechanism found in [RFC8040]. There are seven operations supported (\"create\", \"delete\", \"insert\", \"merge\", \"move\", \"replace\", and \"remove\").",
      "ja": "o YANGパッチは、[RFC8040]にある \"プレーンパッチ\"メカニズムよりも正確な編集操作を可能にします。 7つの操作がサポートされています（「作成」、「削除」、「挿入」、「マージ」、「移動」、「置換」、および「削除」）。"
    },
    {
      "indent": 3,
      "text": "o YANG Patch uses an \"edit\" list with an explicit processing order. The edits are processed in client-specified order, and error processing can be precise even when multiple errors occur in the same YANG Patch request.",
      "ja": "o YANGパッチは、明示的な処理順序で「編集」リストを使用します。編集はクライアント指定の順序で処理され、同じYANGパッチ要求で複数のエラーが発生した場合でも、エラー処理を正確にすることができます。"
    },
    {
      "indent": 3,
      "text": "The YANG Patch \"patch-id\" may be useful for debugging and SHOULD be present in any audit logging records generated by the RESTCONF server for a patch.",
      "ja": "YANGパッチ「patch-id」はデバッグに役立つ場合があり、パッチのRESTCONFサーバーによって生成される監査ログレコードに存在する必要があります。"
    },
    {
      "indent": 3,
      "text": "The RESTCONF server MUST return the \"Accept-Patch\" header field in an OPTIONS response, as specified in [RFC5789], which includes the media type for YANG Patch. This is needed by a client to determine the message-encoding formats supported by the server (e.g., XML, JSON, or both). The following is an example of an \"Accept-Patch\" header:",
      "ja": "RESTCONFサーバーは、[RFC5789]で指定されているように、YANGパッチのメディアタイプを含むOPTIONS応答で「Accept-Patch」ヘッダーフィールドを返す必要があります。これは、サーバーでサポートされているメッセージエンコード形式（XML、JSON、またはその両方など）を判別するためにクライアントで必要です。以下は、「Accept-Patch」ヘッダーの例です。"
    },
    {
      "indent": 4,
      "text": "Accept-Patch: application/yang-patch+xml,application/yang-patch+json",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Note that YANG Patch can only edit data resources. The PATCH method cannot be used to replace the datastore resource. Although the \"ietf-yang-patch\" YANG module is written using YANG version 1.1 [RFC7950], an implementation of YANG Patch can be used with content defined in YANG version 1 [RFC6020] as well.",
      "ja": "YANGパッチはデータリソースのみを編集できることに注意してください。 PATCHメソッドを使用してデータストアリソースを置き換えることはできません。 「ietf-yang-patch」YANGモジュールは、YANGバージョン1.1 [RFC7950]を使用して記述されていますが、YANGパッチの実装は、YANGバージョン1 [RFC6020]で定義されたコンテンツでも使用できます。"
    },
    {
      "indent": 3,
      "text": "A YANG Patch can be encoded in XML format according to [W3C.REC-xml-20081126]. It can also be encoded in JSON according to \"JSON Encoding of Data Modeled with YANG\" [RFC7951]. If any metadata needs to be sent in a JSON message, it is encoded according to \"Defining and Using Metadata with YANG\" [RFC7952].",
      "ja": "YANGパッチは、[W3C.REC-xml-20081126]に従ってXML形式でエンコードできます。 「YANGでモデル化されたデータのJSONエンコーディング」[RFC7951]に従ってJSONでエンコードすることもできます。 JSONメッセージでメタデータを送信する必要がある場合は、「YANGを使用したメタデータの定義と使用」[RFC7952]に従ってエンコードされます。"
    },
    {
      "indent": 0,
      "text": "2.1. Target Resource",
      "section_title": true,
      "ja": "2.1. ターゲットリソース"
    },
    {
      "indent": 3,
      "text": "The YANG Patch operation uses the RESTCONF target resource URI to identify the resource that will be patched. This can be the datastore resource itself, i.e., \"{+restconf}/data\", to edit top-level configuration data resources, or it can be a configuration data resource within the datastore resource, e.g., \"{+restconf}/data/ietf-interfaces:interfaces\", to edit sub-resources within a top-level configuration data resource.",
      "ja": "YANGパッチ操作では、RESTCONFターゲットリソースURIを使用して、パッチが適用されるリソースを識別します。これは、最上位の構成データリソースを編集するためのデータストアリソース自体、つまり「{+ restconf} / data」、またはデータストアリソース内の構成データリソース、たとえば「{+ restconf} / data」にすることができます。 / ietf-interfaces：interfaces \"、トップレベルの構成データリソース内のサブリソースを編集します。"
    },
    {
      "indent": 3,
      "text": "The target resource MUST identify exactly one resource instance. If more than one resource instance is identified, then the request MUST NOT be processed and a \"400 Bad Request\" error response MUST be sent by the server. If the target resource does not identify any existing resource instance, then the request MUST NOT be processed and a \"404 Not Found\" error response MUST be sent by the server.",
      "ja": "ターゲットリソースは、正確に1つのリソースインスタンスを識別する必要があります。複数のリソースインスタンスが識別された場合、リクエストは処理されてはならず（MUST NOT）、 \"400 Bad Request\"エラー応答がサーバーから送信されなければなりません（MUST）。ターゲットリソースが既存のリソースインスタンスを識別しない場合、要求は処理されてはならず（MUST NOT）、 \"404 Not Found\"エラー応答がサーバーから送信されなければなりません（MUST）。"
    },
    {
      "indent": 3,
      "text": "Each edit with a YANG Patch identifies a target data node for the associated edit. This is described in Section 2.4.",
      "ja": "YANGパッチを使用した各編集は、関連する編集のターゲットデータノードを識別します。これについてはセクション2.4で説明します。"
    },
    {
      "indent": 0,
      "text": "2.2. yang-patch Request",
      "section_title": true,
      "ja": "2.2. ヤンパッチリクエスト"
    },
    {
      "indent": 3,
      "text": "A YANG Patch is identified by a unique \"patch-id\", and it may have an optional comment. A patch is an ordered collection of edits. Each edit is identified by an \"edit-id\", and it has an edit operation (\"create\", \"delete\", \"insert\", \"merge\", \"move\", \"replace\", or \"remove\") that is applied to the target resource. Each edit can be applied to a sub-resource \"target\" within the target resource. If the operation is \"insert\" or \"move\", then the \"where\" parameter indicates how the node is inserted or moved. For values \"before\" and \"after\", the \"point\" parameter specifies the data node insertion point.",
      "ja": "YANGパッチは一意の「パッチID」で識別され、オプションでコメントを付けることができます。パッチは、編集の順序付けられたコレクションです。各編集は「edit-id」で識別され、編集操作（「作成」、「削除」、「挿入」、「マージ」、「移動」、「置換」、または「削除」）があります。ターゲットリソースに適用されます。各編集は、ターゲットリソース内のサブリソース「ターゲット」に適用できます。操作が「挿入」または「移動」の場合、「場所」パラメーターはノードの挿入または移動方法を示します。 「before」と「after」の値の場合、「point」パラメーターはデータノードの挿入ポイントを指定します。"
    },
    {
      "indent": 3,
      "text": "The \"merge\", \"replace\", \"create\", \"delete\", and \"remove\" edit operations have exactly the same meanings as those defined for the \"operation\" attribute described in Section 7.2 of [RFC6241].",
      "ja": "「マージ」、「置換」、「作成」、「削除」、および「削除」の編集操作は、[RFC6241]のセクション7.2で説明されている「操作」属性に定義されたものとまったく同じ意味です。"
    },
    {
      "indent": 3,
      "text": "Each edit within a YANG Patch MUST identify exactly one data resource instance. If an edit represents more than one resource instance, then the request MUST NOT be processed and a \"400 Bad Request\" error response MUST be sent by the server. If the edit does not identify any existing resource instance and the operation for the edit is not \"create\", then the request MUST NOT be processed and a \"404 Not Found\" error response MUST be sent by the server. A \"yang-patch-status\" response MUST be sent by the server identifying the edit or edits that are not valid.",
      "ja": "YANGパッチ内の各編集は、正確に1つのデータリソースインスタンスを識別する必要があります。編集が複数のリソースインスタンスを表す場合は、リクエストを処理してはならず（MUST NOT）、「400 Bad Request」エラーレスポンスをサーバーから送信する必要があります。編集が既存のリソースインスタンスを識別せず、編集の操作が「作成」でない場合は、リクエストを処理してはならず（MUST NOT）、「404 Not Found」エラー応答をサーバーから送信する必要があります。 「yang-patch-status」応答は、無効な編集を特定するサーバーから送信されなければなりません（MUST）。"
    },
    {
      "indent": 3,
      "text": "YANG Patch does not provide any access to specific datastores. How a server processes an edit if it is co-located with a Network Configuration Protocol (NETCONF) server that does provide access to individual datastores is left up to the implementation. A complete datastore cannot be replaced in the same manner as that provided by the <copy-config> operation defined in Section 7.3 of [RFC6241]. Only the specified nodes in a YANG Patch are affected.",
      "ja": "YANGパッチは特定のデータストアへのアクセスを提供しません。個々のデータストアへのアクセスを提供するネットワーク構成プロトコル（NETCONF）サーバーと同じ場所に配置されている場合、サーバーが編集を処理する方法は実装に任されています。 [RFC6241]のセクション7.3で定義されている<copy-config>操作で提供される方法と同じ方法で、完全なデータストアを置き換えることはできません。 YANGパッチで指定されたノードのみが影響を受けます。"
    },
    {
      "indent": 3,
      "text": "A message-body representing the YANG Patch is sent by the RESTCONF client to specify the edit operation request. When used with the HTTP PATCH method, this data is identified by the YANG Patch media type.",
      "ja": "YANGパッチを表すメッセージ本文は、編集操作要求を指定するためにRESTCONFクライアントによって送信されます。 HTTP PATCHメソッドで使用する場合、このデータはYANGパッチメディアタイプで識別されます。"
    },
    {
      "indent": 3,
      "text": "YANG tree diagram for \"yang-patch\" container:",
      "ja": "「yang-patch」コンテナのYANGツリー図："
    },
    {
      "indent": 5,
      "text": "+---- yang-patch\n      +---- patch-id    string\n      +---- comment?    string\n      +---- edit* [edit-id]\n         +---- edit-id      string\n         +---- operation    enumeration\n         +---- target       target-resource-offset\n         +---- point?       target-resource-offset\n         +---- where?       enumeration\n         +---- value?",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.3. yang-patch-status Response",
      "section_title": true,
      "ja": "2.3. yang-patch-status応答"
    },
    {
      "indent": 3,
      "text": "A message-body representing the YANG Patch Status is returned to the RESTCONF client to report the detailed status of the edit operation. When used with the HTTP PATCH method, this data is identified by the YANG Patch Status media type; the syntax specification is defined in Section 3.",
      "ja": "YANGパッチステータスを表すメッセージ本文がRESTCONFクライアントに返され、編集操作の詳細なステータスが報告されます。 HTTP PATCHメソッドで使用する場合、このデータはYANGパッチステータスメディアタイプで識別されます。構文の仕様はセクション3で定義されています。"
    },
    {
      "indent": 3,
      "text": "YANG tree diagram for \"yang-patch-status\" container:",
      "ja": "「yang-patch-status」コンテナのYANGツリー図："
    },
    {
      "indent": 5,
      "text": "+---- yang-patch-status\n      +---- patch-id       string\n      +---- (global-status)?\n      |  +--:(global-errors)\n      |  |  +---- errors\n      |  |     +---- error*\n      |  |        +---- error-type       enumeration\n      |  |        +---- error-tag        string\n      |  |        +---- error-app-tag?   string\n      |  |        +---- error-path?      instance-identifier\n      |  |        +---- error-message?   string\n      |  |        +---- error-info?\n      |  +--:(ok)\n      |     +---- ok?            empty\n      +---- edit-status\n         +---- edit* [edit-id]\n            +---- edit-id    string\n            +---- (edit-status-choice)?\n               +--:(ok)\n               |  +---- ok?        empty\n               +--:(errors)\n                  +---- errors\n                     +---- error*\n                        +---- error-type       enumeration\n                        +---- error-tag        string\n                        +---- error-app-tag?   string\n                        +---- error-path?      instance-identifier\n                        +---- error-message?   string\n                        +---- error-info?",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.4. Target Data Node",
      "section_title": true,
      "ja": "2.4. ターゲットデータノード"
    },
    {
      "indent": 3,
      "text": "The target data node for each edit operation is determined by the value of the target resource in the request and the \"target\" leaf within each \"edit\" entry.",
      "ja": "各編集操作のターゲットデータノードは、リクエスト内のターゲットリソースの値と、各「編集」エントリ内の「ターゲット」リーフによって決定されます。"
    },
    {
      "indent": 3,
      "text": "If the target resource specified in the request URI identifies a datastore resource, then the path string in the \"target\" leaf is treated as an absolute path expression identifying the target data node for the corresponding edit. The first node specified in the \"target\" leaf is a top-level data node defined within a YANG module. The \"target\" leaf MUST NOT contain a single forward slash (\"/\"), since this would identify the datastore resource, not a data resource.",
      "ja": "リクエストURIで指定されたターゲットリソースがデータストアリソースを識別する場合、「ターゲット」リーフのパス文字列は、対応する編集のターゲットデータノードを識別する絶対パス式として扱われます。 「ターゲット」リーフで指定された最初のノードは、YANGモジュール内で定義された最上位のデータノードです。 「ターゲット」リーフには、単一のスラッシュ（「/」）を含めてはなりません。これは、データリソースではなく、データストアリソースを識別するためです。"
    },
    {
      "indent": 3,
      "text": "If the target resource specified in the request URI identifies a configuration data resource, then the path string in the \"target\" leaf is treated as a relative path expression. The first node specified in the \"target\" leaf is a child configuration data node of the data node associated with the target resource. If the \"target\" leaf contains a single forward slash (\"/\"), then the target data node is the target resource data node.",
      "ja": "リクエストURIで指定されたターゲットリソースが構成データリソースを識別する場合、「ターゲット」リーフのパス文字列は相対パス式として扱われます。 「ターゲット」リーフで指定された最初のノードは、ターゲットリソースに関連付けられたデータノードの子構成データノードです。 「ターゲット」リーフに単一のスラッシュ（「/」）が含まれている場合、ターゲットデータノードはターゲットリソースデータノードです。"
    },
    {
      "indent": 0,
      "text": "2.5. Edit Operations",
      "section_title": true,
      "ja": "2.5. 操作を編集"
    },
    {
      "indent": 3,
      "text": "Each YANG Patch edit specifies one edit operation on the target data node. The set of operations is aligned with the NETCONF edit operations but also includes some new operations.",
      "ja": "YANGパッチの編集ごとに、ターゲットデータノードで1つの編集操作を指定します。一連の操作はNETCONF編集操作と整合していますが、いくつかの新しい操作も含まれています。"
    },
    {
      "indent": 3,
      "text": "+-----------+-------------------------------------------------------+\n| Operation | Description                                           |\n+-----------+-------------------------------------------------------+\n| create    | create a new data resource if it does not already     |\n|           | exist; if it already exists, return an error          |\n|           |                                                       |\n| delete    | delete a data resource if it already exists; if it    |\n|           | does not exist, return an error                       |\n|           |                                                       |\n| insert    | insert a new user-ordered data resource               |\n|           |                                                       |\n| merge     | merge the edit value with the target data resource;   |\n|           | create if it does not already exist                   |\n|           |                                                       |\n| move      | reorder the target data resource                      |\n|           |                                                       |\n| replace   | replace the target data resource with the edit value  |\n|           |                                                       |\n| remove    | remove a data resource if it already exists           |\n+-----------+-------------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 24,
      "text": "YANG Patch Edit Operations",
      "ja": "YANGパッチ編集操作"
    },
    {
      "indent": 0,
      "text": "2.6. Successful Edit Response Handling",
      "section_title": true,
      "ja": "2.6. 成功した編集応答処理"
    },
    {
      "indent": 3,
      "text": "If a YANG Patch is completed without errors, the RESTCONF server MUST return a \"yang-patch-status\" message with a \"global-status\" choice set to \"ok\".",
      "ja": "YANGパッチがエラーなしで完了した場合、RESTCONFサーバーは、「global-status」の選択肢が「ok」に設定された「yang-patch-status」メッセージを返す必要があります。"
    },
    {
      "indent": 3,
      "text": "Refer to Appendix A.1.2 for an example of a successful YANG Patch response.",
      "ja": "正常なYANGパッチ応答の例については、付録A.1.2を参照してください。"
    },
    {
      "indent": 0,
      "text": "2.7. Error Handling",
      "section_title": true,
      "ja": "2.7. エラー処理"
    },
    {
      "indent": 3,
      "text": "If a well-formed, schema-valid YANG Patch message is received, then the RESTCONF server will process the supplied edits in ascending order. The following error modes apply to the processing of this \"edit\" list:",
      "ja": "整形式のスキーマ有効なYANGパッチメッセージを受信した場合、RESTCONFサーバーは提供された編集を昇順で処理します。この「編集」リストの処理には、次のエラーモードが適用されます。"
    },
    {
      "indent": 3,
      "text": "If a YANG Patch is completed with errors, the RESTCONF server SHOULD return a \"yang-patch-status\" message. It is possible (e.g., within a distributed implementation) that an invalid request will be rejected before the YANG Patch edits are processed. In this case, the server MUST send the appropriate HTTP error response instead.",
      "ja": "YANGパッチがエラーで完了した場合、RESTCONFサーバーは「yang-patch-status」メッセージを返す必要があります（SHOULD）。 YANGパッチの編集が処理される前に、無効なリクエストが拒否される可能性があります（たとえば、分散実装内）。この場合、サーバーは適切なHTTPエラー応答を送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "Refer to Appendix A.1.1 for an example of an error YANG Patch response.",
      "ja": "エラーYANGパッチ応答の例については、付録A.1.1を参照してください。"
    },
    {
      "indent": 0,
      "text": "2.8. \":yang-patch\" RESTCONF Capability",
      "section_title": true,
      "ja": "2.8. \"：yang-patch\" RESTCONF機能"
    },
    {
      "indent": 3,
      "text": "A URI is defined to identify the YANG Patch extension to the base RESTCONF protocol. If the RESTCONF server supports the YANG Patch media type, then the \":yang-patch\" RESTCONF capability defined in Section 4.3 MUST be present in the \"capability\" leaf-list in the \"ietf-restconf-monitoring\" module defined in [RFC8040].",
      "ja": "URIは、基本RESTCONFプロトコルに対するYANGパッチ拡張を識別するために定義されています。 RESTCONFサーバーがYANGパッチメディアタイプをサポートする場合、セクション4.3で定義された「：yang-patch」RESTCONF機能は、[RFC8040で定義された「ietf-restconf-monitoring」モジュールの「機能」リーフリストに存在する必要があります。 ]。"
    },
    {
      "indent": 0,
      "text": "3. YANG Module",
      "section_title": true,
      "ja": "3. YANGモジュール"
    },
    {
      "indent": 3,
      "text": "The \"ietf-yang-patch\" module defines conceptual definitions with the \"yang-data\" extension statements, which are not meant to be implemented as datastore contents by a RESTCONF server.",
      "ja": "「ietf-yang-patch」モジュールは、「yang-data」拡張ステートメントを使用して概念的な定義を定義します。これは、RESTCONFサーバーによってデータストアコンテンツとして実装されることを意図していません。"
    },
    {
      "indent": 3,
      "text": "The \"ietf-restconf\" module from [RFC8040] is used by this module for the \"yang-data\" extension definition.",
      "ja": "[RFC8040]の「ietf-restconf」モジュールは、「yang-data」拡張定義のためにこのモジュールによって使用されます。"
    },
    {
      "indent": 3,
      "text": "<CODE BEGINS>",
      "ja": "<コード開始>"
    },
    {
      "indent": 3,
      "text": "file \"ietf-yang-patch@2017-02-22.yang\"",
      "ja": "ファイル「ietf-yang-patch@2017-02-22.yang」"
    },
    {
      "indent": 3,
      "text": "module ietf-yang-patch {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-yang-patch\";\n  prefix \"ypatch\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "import ietf-restconf { prefix rc; }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "organization \"IETF NETCONF (Network Configuration) Working Group\";",
      "ja": "組織「IETF NETCONF（ネットワーク構成）ワーキンググループ」;"
    },
    {
      "indent": 5,
      "text": "contact\n  \"WG Web:   <https://datatracker.ietf.org/wg/netconf/>\n   WG List:  <mailto:netconf@ietf.org>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Author:   Andy Bierman\n          <mailto:andy@yumaworks.com>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Author:   Martin Bjorklund\n          <mailto:mbj@tail-f.com>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "Author:   Kent Watsen\n          <mailto:kwatsen@juniper.net>\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "description \"This module contains conceptual YANG specifications for the YANG Patch and YANG Patch Status data structures.",
      "ja": "説明「このモジュールには、YANGパッチおよびYANGパッチステータスデータ構造の概念的なYANG仕様が含まれています。"
    },
    {
      "indent": 8,
      "text": "Note that the YANG definitions within this module do not represent configuration data of any kind. The YANG grouping statements provide a normative syntax for XML and JSON message-encoding purposes.",
      "ja": "このモジュール内のYANG定義は、いかなる種類の構成データも表していません。 YANGグループ化ステートメントは、XMLおよびJSONメッセージのエンコードを目的とした規範的な構文を提供します。"
    },
    {
      "indent": 8,
      "text": "Copyright (c) 2017 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "ja": "Copyright（c）2017 IETF Trustおよびコードの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 8,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info).",
      "ja": "ソースおよびバイナリ形式での再配布および使用は、変更の有無にかかわらず、IETFドキュメントに関連するIETFトラストの法的規定のセクション4.cに記載されているSimplified BSD Licenseに準拠し、それに含まれるライセンス条項に従って許可されます（ http://trustee.ietf.org/license-info）。"
    },
    {
      "indent": 8,
      "text": "This version of this YANG module is part of RFC 8072; see the RFC itself for full legal notices.\";",
      "ja": "このYANGモジュールのこのバージョンはRFC 8072の一部です。完全な法的通知については、RFC自体を参照してください。 \";"
    },
    {
      "indent": 5,
      "text": "revision 2017-02-22 {\n  description\n    \"Initial revision.\";\n  reference\n    \"RFC 8072: YANG Patch Media Type.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "typedef target-resource-offset {\n  type string;\n  description\n    \"Contains a data resource identifier string representing\n     a sub-resource within the target resource.\n     The document root for this expression is the\n     target resource that is specified in the\n     protocol operation (e.g., the URI for the PATCH request).",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "     This string is encoded according to the same rules as those\n     for a data resource identifier in a RESTCONF request URI.\";\n  reference\n     \"RFC 8040, Section 3.5.3.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "rc:yang-data \"yang-patch\" {\n  uses yang-patch;\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "     rc:yang-data \"yang-patch-status\" {\n       uses yang-patch-status;\n     }\n     grouping yang-patch {",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "description \"A grouping that contains a YANG container representing the syntax and semantics of a YANG Patch edit request message.\";",
      "ja": "説明 \"YANGパッチ編集リクエストメッセージの構文とセマンティクスを表すYANGコンテナを含むグループ。\";"
    },
    {
      "indent": 7,
      "text": "container yang-patch { description \"Represents a conceptual sequence of datastore edits, called a patch. Each patch is given a client-assigned patch identifier. Each edit MUST be applied in ascending order, and all edits MUST be applied. If any errors occur, then the target datastore MUST NOT be changed by the YANG Patch operation.",
      "ja": "container yang-patch {description \"パッチと呼ばれるデータストア編集の概念的なシーケンスを表します。各パッチにはクライアントが割り当てたパッチ識別子が与えられます。各編集は昇順で適用しなければならず、すべての編集を適用しなければなりません。エラーが発生した場合、ターゲットデータストアは、YANGパッチ操作によって変更してはなりません。"
    },
    {
      "indent": 12,
      "text": "It is possible for a datastore constraint violation to occur due to any node in the datastore, including nodes not included in the 'edit' list. Any validation errors MUST be reported in the reply message.\";",
      "ja": "「編集」リストに含まれていないノードを含む、データストア内のノードが原因で、データストア制約違反が発生する可能性があります。検証エラーはすべて返信メッセージで報告する必要があります。 \";"
    },
    {
      "indent": 9,
      "text": "reference \"RFC 7950, Section 8.3.\";",
      "ja": "「RFC 7950、セクション8.3」を参照してください。"
    },
    {
      "indent": 9,
      "text": "leaf patch-id {\n  type string;\n  mandatory true;\n  description\n    \"An arbitrary string provided by the client to identify\n     the entire patch.  Error messages returned by the server\n     that pertain to this patch will be identified by this\n     'patch-id' value.  A client SHOULD attempt to generate\n     unique 'patch-id' values to distinguish between\n     transactions from multiple clients in any audit logs\n     maintained by the server.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "         leaf comment {\n           type string;\n           description\n             \"An arbitrary string provided by the client to describe\n              the entire patch.  This value SHOULD be present in any\n              audit logging records generated by the server for the\n              patch.\";\n         }\n         list edit {\n           key edit-id;\n           ordered-by user;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "description \"Represents one edit within the YANG Patch request message. The 'edit' list is applied in the following manner:",
      "ja": "description \"YANGパッチリクエストメッセージ内の1つの編集を表します。「編集」リストは次のように適用されます："
    },
    {
      "indent": 16,
      "text": "- The first edit is conceptually applied to a copy of the existing target datastore, e.g., the running configuration datastore. - Each ascending edit is conceptually applied to the result of the previous edit(s). - After all edits have been successfully processed, the result is validated according to YANG constraints. - If successful, the server will attempt to apply the result to the target datastore.\";",
      "ja": "- 最初の編集は、既存のターゲットデータストア（実行中の構成データストアなど）のコピーに概念的に適用されます。 -それぞれの昇順の編集は、前の編集の結果に概念的に適用されます。 -すべての編集が正常に処理された後、結果はYANG制約に従って検証されます。 -成功した場合、サーバーは結果をターゲットデータストアに適用しようとします。 \";"
    },
    {
      "indent": 11,
      "text": "leaf edit-id {\n  type string;\n  description\n    \"Arbitrary string index for the edit.\n     Error messages returned by the server that pertain\n     to a specific edit will be identified by this value.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "           leaf operation {\n             type enumeration {\n               enum create {\n                 description\n                   \"The target data node is created using the supplied\n                    value, only if it does not already exist.  The\n                    'target' leaf identifies the data node to be\n                    created, not the parent data node.\";\n               }\n               enum delete {\n                 description\n                   \"Delete the target node, only if the data resource\n                    currently exists; otherwise, return an error.\";\n               }\n               enum insert {\n                 description\n                   \"Insert the supplied value into a user-ordered\n                    list or leaf-list entry.  The target node must\n                    represent a new data resource.  If the 'where'\n                    parameter is set to 'before' or 'after', then\n                    the 'point' parameter identifies the insertion\n                    point for the target node.\";\n               }\n               enum merge {\n                 description\n                   \"The supplied value is merged with the target data\n                    node.\";\n               }\n               enum move {\n                 description\n                   \"Move the target node.  Reorder a user-ordered\n                    list or leaf-list.  The target node must represent\n                    an existing data resource.  If the 'where' parameter\n                    is set to 'before' or 'after', then the 'point'\n                    parameter identifies the insertion point to move\n                    the target node.\";\n               }\n               enum replace {\n                 description\n                   \"The supplied value is used to replace the target\n                    data node.\";\n               }\n               enum remove {\n                 description\n                   \"Delete the target node if it currently exists.\";\n               }\n             }\n             mandatory true;\n             description\n               \"The datastore operation requested for the associated\n                'edit' entry.\";\n           }\n           leaf target {\n             type target-resource-offset;\n             mandatory true;\n             description\n               \"Identifies the target data node for the edit\n                operation.  If the target has the value '/', then\n                the target data node is the target resource.\n                The target node MUST identify a data resource,\n                not the datastore resource.\";\n           }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "leaf point {\n  when \"(../operation = 'insert' or ../operation = 'move')\"\n     + \"and (../where = 'before' or ../where = 'after')\" {\n    description\n      \"This leaf only applies for 'insert' or 'move'\n       operations, before or after an existing entry.\";\n  }\n  type target-resource-offset;\n  description\n    \"The absolute URL path for the data node that is being\n     used as the insertion point or move point for the\n     target of this 'edit' entry.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "           leaf where {\n             when \"../operation = 'insert' or ../operation = 'move'\" {\n               description\n                 \"This leaf only applies for 'insert' or 'move'\n                  operations.\";\n             }\n             type enumeration {\n               enum before {\n                 description\n                   \"Insert or move a data node before the data resource\n                    identified by the 'point' parameter.\";\n               }\n               enum after {\n                 description\n                   \"Insert or move a data node after the data resource\n                    identified by the 'point' parameter.\";\n               }\n               enum first {\n                 description\n                   \"Insert or move a data node so it becomes ordered\n                    as the first entry.\";\n               }\n               enum last {\n                 description\n                   \"Insert or move a data node so it becomes ordered\n                    as the last entry.\";\n               }\n             }\n             default last;\n             description\n               \"Identifies where a data resource will be inserted\n                or moved.  YANG only allows these operations for\n                list and leaf-list data nodes that are\n                'ordered-by user'.\";\n           }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "anydata value {\n  when \"../operation = 'create' \"\n     + \"or ../operation = 'merge' \"\n     + \"or ../operation = 'replace' \"\n     + \"or ../operation = 'insert'\" {\n    description\n      \"The anydata 'value' is only used for 'create',\n       'merge', 'replace', and 'insert' operations.\";\n  }\n  description\n    \"Value used for this edit operation.  The anydata 'value'\n     contains the target resource associated with the\n     'target' leaf.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "For example, suppose the target node is a YANG container named foo:",
      "ja": "たとえば、ターゲットノードがfooという名前のYANGコンテナであるとします。"
    },
    {
      "indent": 20,
      "text": "container foo {\n  leaf a { type string; }\n  leaf b { type int32; }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "The 'value' node contains one instance of foo:",
      "ja": "「値」ノードには、fooのインスタンスが1つ含まれています。"
    },
    {
      "indent": 7,
      "text": "             <value>\n                <foo xmlns='example-foo-namespace'>\n                   <a>some value</a>\n                   <b>42</b>\n                </foo>\n             </value>\n          \";\n    }\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "} // grouping yang-patch",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "grouping yang-patch-status {",
      "ja": "ヤンパッチステータスのグループ化{"
    },
    {
      "indent": 7,
      "text": "description \"A grouping that contains a YANG container representing the syntax and semantics of a YANG Patch Status response message.\";",
      "ja": "説明 \"YANGパッチステータス応答メッセージの構文とセマンティクスを表すYANGコンテナを含むグループ。\";"
    },
    {
      "indent": 7,
      "text": "container yang-patch-status {\n  description\n    \"A container representing the response message sent by the\n     server after a YANG Patch edit request message has been\n     processed.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "leaf patch-id {\n  type string;\n  mandatory true;\n  description\n    \"The 'patch-id' value used in the request.\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "choice global-status {\n  description\n    \"Report global errors or complete success.\n     If there is no case selected, then errors\n     are reported in the 'edit-status' container.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "  case global-errors {\n    uses rc:errors;\n    description\n      \"This container will be present if global errors that\n       are unrelated to a specific edit occurred.\";\n  }\n  leaf ok {\n    type empty;\n    description\n      \"This leaf will be present if the request succeeded\n       and there are no errors reported in the 'edit-status'\n       container.\";\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "container edit-status {\n  description\n    \"This container will be present if there are\n     edit-specific status responses to report.\n     If all edits succeeded and the 'global-status'\n     returned is 'ok', then a server MAY omit this\n     container.\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "list edit {\n  key edit-id;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "description \"Represents a list of status responses, corresponding to edits in the YANG Patch request message. If an 'edit' entry was skipped or not reached by the server, then this list will not contain a corresponding entry for that edit.\";",
      "ja": "説明 \"YANGパッチリクエストメッセージの編集に対応するステータスレスポンスのリストを表します。「編集」エントリがスキップされたか、サーバーに到達しなかった場合、このリストにはその編集に対応するエントリが含まれません。\";"
    },
    {
      "indent": 0,
      "text": "             leaf edit-id {\n               type string;\n                description\n                  \"Response status is for the 'edit' list entry\n                   with this 'edit-id' value.\";\n             }\n             choice edit-status-choice {\n               description\n                 \"A choice between different types of status\n                  responses for each 'edit' entry.\";\n               leaf ok {\n                 type empty;\n                 description\n                   \"This 'edit' entry was invoked without any\n                    errors detected by the server associated\n                    with this edit.\";\n               }\n               case errors {\n                 uses rc:errors;\n                 description\n                   \"The server detected errors associated with the\n                    edit identified by the same 'edit-id' value.\";\n               }\n             }\n           }\n         }\n       }\n     }  // grouping yang-patch-status",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "}",
      "ja": "｝"
    },
    {
      "indent": 3,
      "text": "<CODE ENDS>",
      "ja": "<コード終了>"
    },
    {
      "indent": 0,
      "text": "4. IANA Considerations",
      "section_title": true,
      "ja": "4. IANAに関する考慮事項"
    },
    {
      "indent": 0,
      "text": "4.1. Registrations for New URI and YANG Module",
      "section_title": true,
      "ja": "4.1. 新しいURIとYANGモジュールの登録"
    },
    {
      "indent": 3,
      "text": "This document registers one URI as a namespace in the \"IETF XML Registry\" [RFC3688]. It follows the format in RFC 3688.",
      "ja": "このドキュメントでは、「IETF XMLレジストリ」[RFC3688]に名前空間として1つのURIを登録しています。 RFC 3688の形式に従います。"
    },
    {
      "indent": 6,
      "text": "URI: urn:ietf:params:xml:ns:yang:ietf-yang-patch Registrant Contact: The IESG. XML: N/A; the requested URI is an XML namespace.",
      "ja": "URI：urn：ietf：params：xml：ns：yang：ietf-yang-patch登録者の連絡先：IESG。 XML：なし。要求されたURIはXML名前空間です。"
    },
    {
      "indent": 3,
      "text": "This document registers one YANG module in the \"YANG Module Names\" registry [RFC6020].",
      "ja": "このドキュメントでは、「YANGモジュール名」レジストリ[RFC6020]に1つのYANGモジュールを登録しています。"
    },
    {
      "indent": 6,
      "text": "name:         ietf-yang-patch\nnamespace:    urn:ietf:params:xml:ns:yang:ietf-yang-patch\nprefix:       ypatch\nreference:    RFC 8072",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.2. Media Types",
      "section_title": true,
      "ja": "4.2. メディアタイプ"
    },
    {
      "indent": 0,
      "text": "4.2.1. Media Type \"application/yang-patch+xml\"",
      "section_title": true,
      "ja": "4.2.1. メディアタイプ「application / yang-patch + xml」"
    },
    {
      "indent": 3,
      "text": "Type name: application",
      "ja": "タイプ名：アプリケーション"
    },
    {
      "indent": 3,
      "text": "Subtype name: yang-patch+xml",
      "ja": "サブタイプ名：yang-patch + xml"
    },
    {
      "indent": 3,
      "text": "Required parameters: None",
      "ja": "必須パラメーター：なし"
    },
    {
      "indent": 3,
      "text": "Optional parameters: None",
      "ja": "オプションのパラメーター：なし"
    },
    {
      "indent": 3,
      "text": "Encoding considerations: 8-bit The \"utf-8\" charset is always used for this type. Each conceptual YANG data node is encoded according to the XML Encoding Rules and Canonical Format for the specific YANG data node type defined in [RFC7950]. In addition, the \"yang-patch\" YANG Patch template found in RFC 8072 defines the structure of a YANG Patch request.",
      "ja": "エンコーディングに関する考慮事項：8ビットこのタイプには常に「utf-8」文字セットが使用されます。各概念的なYANGデータノードは、[RFC7950]で定義されている特定のYANGデータノードタイプのXMLエンコーディングルールと正規フォーマットに従ってエンコードされます。さらに、RFC 8072にある「yang-patch」YANGパッチテンプレートは、YANGパッチリクエストの構造を定義します。"
    },
    {
      "indent": 3,
      "text": "Security considerations: Security considerations related to the generation and consumption of RESTCONF messages are discussed in Section 5 of RFC 8072. Additional security considerations are specific to the semantics of particular YANG data models. Each YANG module is expected to specify security considerations for the YANG data defined in that module.",
      "ja": "セキュリティの考慮事項：RESTCONFメッセージの生成と消費に関連するセキュリティの考慮事項は、RFC 8072のセクション5で説明されています。追加のセキュリティの考慮事項は、特定のYANGデータモデルのセマンティクスに固有です。各YANGモジュールは、そのモジュールで定義されているYANGデータのセキュリティに関する考慮事項を指定することが期待されています。"
    },
    {
      "indent": 3,
      "text": "Interoperability considerations: RFC 8072 specifies the format of conforming messages and the interpretation thereof.",
      "ja": "相互運用性に関する考慮事項：RFC 8072は、適合メッセージの形式とその解釈を指定しています。"
    },
    {
      "indent": 3,
      "text": "Published specification: RFC 8072",
      "ja": "公開された仕様：RFC 8072"
    },
    {
      "indent": 3,
      "text": "Applications that use this media type: Instance document data parsers used within a protocol or automation tool that utilize the YANG Patch data structure.",
      "ja": "このメディアタイプを使用するアプリケーション：YANGパッチデータ構造を利用するプロトコルまたは自動化ツール内で使用されるインスタンスドキュメントデータパーサー。"
    },
    {
      "indent": 3,
      "text": "Fragment identifier considerations: The syntax and semantics of fragment identifiers are the same as the syntax and semantics specified for the \"application/xml\" media type.",
      "ja": "フラグメント識別子の考慮事項：フラグメント識別子の構文とセマンティクスは、「application / xml」メディアタイプに指定された構文とセマンティクスと同じです。"
    },
    {
      "indent": 3,
      "text": "Additional information:",
      "ja": "追加情報："
    },
    {
      "indent": 6,
      "text": "Deprecated alias names for this type: N/A\nMagic number(s): N/A\nFile extension(s): None\nMacintosh file type code(s): \"TEXT\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Person & email address to contact for further information: See the Authors' Addresses section of RFC 8072.",
      "ja": "詳細については、連絡先の個人と電子メールアドレス：RFC 8072の「作成者のアドレス」セクションを参照してください。"
    },
    {
      "indent": 3,
      "text": "Intended usage: COMMON",
      "ja": "使用目的：COMMON"
    },
    {
      "indent": 3,
      "text": "Restrictions on usage: N/A",
      "ja": "使用上の制限：N / A"
    },
    {
      "indent": 3,
      "text": "Author: See the Authors' Addresses section of RFC 8072.",
      "ja": "作成者：RFC 8072の「作成者のアドレス」セクションを参照してください。"
    },
    {
      "indent": 3,
      "text": "Change controller: Internet Engineering Task Force (mailto:iesg@ietf.org).",
      "ja": "変更管理者：Internet Engineering Task Force（mailto：iesg@ietf.org）。"
    },
    {
      "indent": 3,
      "text": "Provisional registration? (standards tree only): no",
      "ja": "仮登録？ （標準ツリーのみ）：いいえ"
    },
    {
      "indent": 0,
      "text": "4.2.2. Media Type \"application/yang-patch+json\"",
      "section_title": true,
      "ja": "4.2.2. メディアタイプ「application / yang-patch + json」"
    },
    {
      "indent": 3,
      "text": "Type name: application",
      "ja": "タイプ名：アプリケーション"
    },
    {
      "indent": 3,
      "text": "Subtype name: yang-patch+json",
      "ja": "サブタイプ名：yang-patch + json"
    },
    {
      "indent": 3,
      "text": "Required parameters: None",
      "ja": "必須パラメーター：なし"
    },
    {
      "indent": 3,
      "text": "Optional parameters: None",
      "ja": "オプションのパラメーター：なし"
    },
    {
      "indent": 3,
      "text": "Encoding considerations: 8-bit The \"utf-8\" charset is always used for this type. Each conceptual YANG data node is encoded according to RFC 7951. A metadata annotation is encoded according to RFC 7952. In addition, the \"yang-patch\" YANG Patch template found in RFC 8072 defines the structure of a YANG Patch request.",
      "ja": "エンコーディングに関する考慮事項：8ビットこのタイプには常に「utf-8」文字セットが使用されます。各概念的なYANGデータノードはRFC 7951に従ってエンコードされます。メタデータアノテーションはRFC 7952に従ってエンコードされます。さらに、RFC 8072にある「yang-patch」YANGパッチテンプレートは、YANGパッチリクエストの構造を定義します。"
    },
    {
      "indent": 3,
      "text": "Security considerations: Security considerations related to the generation and consumption of RESTCONF messages are discussed in Section 5 of RFC 8072. Additional security considerations are specific to the semantics of particular YANG data models. Each YANG module is expected to specify security considerations for the YANG data defined in that module.",
      "ja": "セキュリティの考慮事項：RESTCONFメッセージの生成と消費に関連するセキュリティの考慮事項は、RFC 8072のセクション5で説明されています。追加のセキュリティの考慮事項は、特定のYANGデータモデルのセマンティクスに固有です。各YANGモジュールは、そのモジュールで定義されているYANGデータのセキュリティに関する考慮事項を指定することが期待されています。"
    },
    {
      "indent": 3,
      "text": "Interoperability considerations: RFC 8072 specifies the format of conforming messages and the interpretation thereof.",
      "ja": "相互運用性に関する考慮事項：RFC 8072は、適合メッセージの形式とその解釈を指定しています。"
    },
    {
      "indent": 3,
      "text": "Published specification: RFC 8072",
      "ja": "公開された仕様：RFC 8072"
    },
    {
      "indent": 3,
      "text": "Applications that use this media type: Instance document data parsers used within a protocol or automation tool that utilize the YANG Patch data structure.",
      "ja": "このメディアタイプを使用するアプリケーション：YANGパッチデータ構造を利用するプロトコルまたは自動化ツール内で使用されるインスタンスドキュメントデータパーサー。"
    },
    {
      "indent": 3,
      "text": "Fragment identifier considerations: The syntax and semantics of fragment identifiers are the same as the syntax and semantics specified for the \"application/json\" media type.",
      "ja": "フラグメント識別子の考慮事項：フラグメント識別子の構文とセマンティクスは、「application / json」メディアタイプに指定された構文とセマンティクスと同じです。"
    },
    {
      "indent": 3,
      "text": "Additional information:",
      "ja": "追加情報："
    },
    {
      "indent": 6,
      "text": "Deprecated alias names for this type: N/A\nMagic number(s): N/A\nFile extension(s): None\nMacintosh file type code(s): \"TEXT\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Person & email address to contact for further information: See the Authors' Addresses section of RFC 8072.",
      "ja": "詳細については、連絡先の個人と電子メールアドレス：RFC 8072の「作成者のアドレス」セクションを参照してください。"
    },
    {
      "indent": 3,
      "text": "Intended usage: COMMON",
      "ja": "使用目的：COMMON"
    },
    {
      "indent": 3,
      "text": "Restrictions on usage: N/A",
      "ja": "使用上の制限：N / A"
    },
    {
      "indent": 3,
      "text": "Author: See the Authors' Addresses section of RFC 8072.",
      "ja": "作成者：RFC 8072の「作成者のアドレス」セクションを参照してください。"
    },
    {
      "indent": 3,
      "text": "Change controller: Internet Engineering Task Force (mailto:iesg@ietf.org).",
      "ja": "変更管理者：Internet Engineering Task Force（mailto：iesg@ietf.org）。"
    },
    {
      "indent": 3,
      "text": "Provisional registration? (standards tree only): no",
      "ja": "仮登録？ （標準ツリーのみ）：いいえ"
    },
    {
      "indent": 0,
      "text": "4.3. RESTCONF Capability URNs",
      "section_title": true,
      "ja": "4.3. RESTCONF機能URN"
    },
    {
      "indent": 3,
      "text": "This document registers one capability identifier in the \"RESTCONF Capability URNs\" registry [RFC8040]. The review policy for this registry is \"IETF Review\" [RFC5226].",
      "ja": "このドキュメントでは、「RESTCONF Capability URNs」レジストリ[RFC8040]に1つの機能識別子を登録しています。このレジストリのレビューポリシーは「IETFレビュー」[RFC5226]です。"
    },
    {
      "indent": 3,
      "text": "Index           Capability Identifier\n------------------------------------------------------------------\n:yang-patch     urn:ietf:params:restconf:capability:yang-patch:1.0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The YANG Patch media type does not introduce any significant new security threats, beyond what is described in [RFC8040]. This document defines edit processing instructions for a variant of the PATCH method, as used within the RESTCONF protocol. Message integrity is provided by the RESTCONF protocol. There is no additional capability to validate that a patch has not been altered.",
      "ja": "YANGパッチメディアタイプは、[RFC8040]で説明されているものを超えて、重大な新しいセキュリティ脅威をもたらしません。このドキュメントでは、RESTCONFプロトコル内で使用される、PATCHメソッドのバリアントの編集処理命令を定義します。メッセージの整合性はRESTCONFプロトコルによって提供されます。パッチが変更されていないことを検証する追加機能はありません。"
    },
    {
      "indent": 3,
      "text": "It may be possible to use YANG Patch with other protocols besides RESTCONF; this topic is outside the scope of this document.",
      "ja": "RESTCONF以外のプロトコルでYANGパッチを使用できる場合があります。このトピックはこのドキュメントの範囲外です。"
    },
    {
      "indent": 3,
      "text": "For RESTCONF, both the client and server MUST be authenticated according to Section 2 of [RFC8040]. It is important for RESTCONF server implementations to carefully validate all the edit request parameters in some manner. If the entire YANG Patch request cannot be completed, then no configuration changes to the system are done. A PATCH request MUST be applied atomically, as specified in Section 2 of [RFC5789].",
      "ja": "RESTCONFの場合、[RFC8040]のセクション2に従って、クライアントとサーバーの両方を認証する必要があります。 RESTCONFサーバーの実装では、すべての編集リクエストパラメータを何らかの方法で慎重に検証することが重要です。 YANGパッチ要求全体を完了できない場合、システムの構成変更は行われません。 [RFC5789]のセクション2で指定されているように、PATCHリクエストはアトミックに適用する必要があります。"
    },
    {
      "indent": 3,
      "text": "A RESTCONF server implementation SHOULD attempt to prevent system disruption due to incremental processing of the YANG Patch \"edit\" list. It may be possible to construct an attack on such a RESTCONF server, which relies on the edit processing order mandated by YANG Patch. A server SHOULD apply only the fully validated configuration to the underlying system. For example, an \"edit\" list that deleted an interface and then recreated it could cause system disruption if the \"edit\" list was incrementally applied.",
      "ja": "RESTCONFサーバー実装は、YANGパッチの「編集」リストのインクリメンタル処理によるシステムの混乱を防止する必要があります（SHOULD）。このようなRESTCONFサーバーへの攻撃は、YANGパッチで指定された編集処理順序に依存する可能性があります。サーバーは、完全に検証された構成のみを基盤となるシステムに適用する必要があります（SHOULD）。たとえば、インターフェイスを削除してから再作成した「編集」リストは、「編集」リストが段階的に適用された場合にシステムの中断を引き起こす可能性があります。"
    },
    {
      "indent": 3,
      "text": "A RESTCONF server implementation SHOULD attempt to prevent system disruption due to excessive resource consumption required to fulfill YANG Patch edit requests. On such an implementation, it may be possible to construct an attack that attempts to consume all available memory or other resource types.",
      "ja": "RESTCONFサーバーの実装は、YANGパッチの編集要求を満たすために必要な過剰なリソース消費によるシステムの中断を防止するよう試みるべきです（SHOULD）。このような実装では、利用可能なすべてのメモリまたは他のリソースタイプを消費しようとする攻撃を構築することが可能になる場合があります。"
    },
    {
      "indent": 0,
      "text": "6. References",
      "section_title": true,
      "ja": "6. 参考文献"
    },
    {
      "indent": 0,
      "text": "6.1. Normative References",
      "section_title": true,
      "ja": "6.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<http://www.rfc-editor.org/info/ rfc2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3688] Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688, DOI 10.17487/RFC3688, January 2004, <http://www.rfc-editor.org/info/rfc3688>.",
      "ja": "[RFC3688] Mealling、M。、「The IETF XML Registry」、BCP 81、RFC 3688、DOI 10.17487 / RFC3688、2004年1月、<http://www.rfc-editor.org/info/rfc3688>。"
    },
    {
      "indent": 3,
      "text": "[RFC5789] Dusseault, L. and J. Snell, \"PATCH Method for HTTP\", RFC 5789, DOI 10.17487/RFC5789, March 2010, <http://www.rfc-editor.org/info/rfc5789>.",
      "ja": "[RFC5789] Dusseault、L.およびJ. Snell、「PATCH Method for HTTP」、RFC 5789、DOI 10.17487 / RFC5789、2010年3月、<http://www.rfc-editor.org/info/rfc5789>。"
    },
    {
      "indent": 3,
      "text": "[RFC6020] Bjorklund, M., Ed., \"YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)\", RFC 6020, DOI 10.17487/RFC6020, October 2010, <http://www.rfc-editor.org/info/rfc6020>.",
      "ja": "[RFC6020] Bjorklund、M。、編、「YANG-ネットワーク構成プロトコル（NETCONF）のデータモデリング言語」、RFC 6020、DOI 10.17487 / RFC6020、2010年10月、<http：//www.rfc-editor。 org / info / rfc6020>。"
    },
    {
      "indent": 3,
      "text": "[RFC6241] Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed., and A. Bierman, Ed., \"Network Configuration Protocol (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011, <http://www.rfc-editor.org/info/rfc6241>.",
      "ja": "[RFC6241] Enns、R。、編、Bjorklund、M。、編、Schoenwaelder、J。、編、およびA. Bierman、編、「Network Configuration Protocol（NETCONF）」、RFC 6241、DOI 10.17487 / RFC6241、2011年6月、<http://www.rfc-editor.org/info/rfc6241>。"
    },
    {
      "indent": 3,
      "text": "[RFC7159] Bray, T., Ed., \"The JavaScript Object Notation (JSON) Data Interchange Format\", RFC 7159, DOI 10.17487/RFC7159, March 2014, <http://www.rfc-editor.org/info/rfc7159>.",
      "ja": "[RFC7159]ブレイ、T。、編、「JavaScript Object Notation（JSON）データ交換フォーマット」、RFC 7159、DOI 10.17487 / RFC7159、2014年3月、<http://www.rfc-editor.org/info/ rfc7159>。"
    },
    {
      "indent": 3,
      "text": "[RFC7230] Fielding, R., Ed., and J. Reschke, Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing\", RFC 7230, DOI 10.17487/RFC7230, June 2014, <http://www.rfc-editor.org/info/rfc7230>.",
      "ja": "[RFC7230] Fielding、R.、Ed。、and J. Reschke、Ed。、 \"Hypertext Transfer Protocol（HTTP / 1.1）：Message Syntax and Routing\"、RFC 7230、DOI 10.17487 / RFC7230、June 2014、<http：/ /www.rfc-editor.org/info/rfc7230>。"
    },
    {
      "indent": 3,
      "text": "[RFC7231] Fielding, R., Ed., and J. Reschke, Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content\", RFC 7231, DOI 10.17487/RFC7231, June 2014, <http://www.rfc-editor.org/info/rfc7231>.",
      "ja": "[RFC7231] Fielding、R.、Ed。、and J. Reschke、Ed。、 \"Hypertext Transfer Protocol（HTTP / 1.1）：Semantics and Content\"、RFC 7231、DOI 10.17487 / RFC7231、June 2014、<http：// www.rfc-editor.org/info/rfc7231>。"
    },
    {
      "indent": 3,
      "text": "[RFC7950] Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\", RFC 7950, DOI 10.17487/RFC7950, August 2016, <http://www.rfc-editor.org/info/rfc7950>.",
      "ja": "[RFC7950] Bjorklund、M。、編、「The YANG 1.1 Data Modeling Language」、RFC 7950、DOI 10.17487 / RFC7950、2016年8月、<http://www.rfc-editor.org/info/rfc7950>。"
    },
    {
      "indent": 3,
      "text": "[RFC7951] Lhotka, L., \"JSON Encoding of Data Modeled with YANG\", RFC 7951, DOI 10.17487/RFC7951, August 2016, <http://www.rfc-editor.org/info/rfc7951>.",
      "ja": "[RFC7951] Lhotka、L。、「YANGでモデル化されたデータのJSONエンコーディング」、RFC 7951、DOI 10.17487 / RFC7951、2016年8月、<http://www.rfc-editor.org/info/rfc7951>。"
    },
    {
      "indent": 3,
      "text": "[RFC7952] Lhotka, L., \"Defining and Using Metadata with YANG\", RFC 7952, DOI 10.17487/RFC7952, August 2016, <http://www.rfc-editor.org/info/rfc7952>.",
      "ja": "[RFC7952] Lhotka、L。、「YANGを使用したメタデータの定義と使用」、RFC 7952、DOI 10.17487 / RFC7952、2016年8月、<http://www.rfc-editor.org/info/rfc7952>。"
    },
    {
      "indent": 3,
      "text": "[RFC8040] Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF Protocol\", RFC 8040, DOI 10.17487/RFC8040, January 2017, <http://www.rfc-editor.org/info/rfc8040>.",
      "ja": "[RFC8040] Bierman、A.、Bjorklund、M。、およびK. Watsen、「RESTCONFプロトコル」、RFC 8040、DOI 10.17487 / RFC8040、2017年1月、<http://www.rfc-editor.org/info/rfc8040 >。"
    },
    {
      "indent": 3,
      "text": "[W3C.REC-xml-20081126] Bray, T., Paoli, J., Sperberg-McQueen, M., Maler, E., and F. Yergeau, \"Extensible Markup Language (XML) 1.0 (Fifth Edition)\", World Wide Web Consortium Recommendation REC-xml-20081126, November 2008, <http://www.w3.org/TR/2008/REC-xml-20081126>.",
      "ja": "[W3C.REC-xml-20081126]ブレイ、T。、パオリ、J.、Sperberg-McQueen、M。、マラー、E。、およびF.イェルガウ、「Extensible Markup Language（XML）1.0（Fifth Edition）」、 World Wide Web Consortium Recommendation REC-xml-20081126、2008年11月、<http://www.w3.org/TR/2008/REC-xml-20081126>。"
    },
    {
      "indent": 0,
      "text": "6.2. Informative References",
      "section_title": true,
      "ja": "6.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, DOI 10.17487/RFC5226, May 2008, <http://www.rfc-editor.org/info/rfc5226>.",
      "ja": "[RFC5226] Narten、T。およびH. Alvestrand、「RFCでIANAの考慮事項セクションを作成するためのガイドライン」、BCP 26、RFC 5226、DOI 10.17487 / RFC5226、2008年5月、<http://www.rfc-editor.org / info / rfc5226>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Example YANG Module",
      "section_title": true,
      "ja": "付録A. YANGモジュールの例"
    },
    {
      "indent": 3,
      "text": "The example YANG module used in this document represents a simple media jukebox interface. The \"example-jukebox\" YANG module is defined in [RFC8040].",
      "ja": "このドキュメントで使用されているYANGモジュールの例は、シンプルなメディアジュークボックスインターフェースを表しています。 \"example-jukebox\" YANGモジュールは[RFC8040]で定義されています。"
    },
    {
      "indent": 3,
      "text": "YANG tree diagram for the \"example-jukebox\" module:",
      "ja": "「example-jukebox」モジュールのYANGツリー図："
    },
    {
      "indent": 6,
      "text": "+--rw jukebox!\n   +--rw library\n   |  +--rw artist* [name]\n   |  |  +--rw name     string\n   |  |  +--rw album* [name]\n   |  |     +--rw name     string\n   |  |     +--rw genre?   identityref\n   |  |     +--rw year?    uint16\n   |  |     +--rw admin\n   |  |     |  +--rw label?              string\n   |  |     |  +--rw catalogue-number?   string\n   |  |     +--rw song* [name]\n   |  |        +--rw name        string\n   |  |        +--rw location    string\n   |  |        +--rw format?     string\n   |  |        +--rw length?     uint32\n   |  +--ro artist-count?   uint32\n   |  +--ro album-count?    uint32\n   |  +--ro song-count?     uint32\n   +--rw playlist* [name]\n   |  +--rw name           string\n   |  +--rw description?   string\n   |  +--rw song* [index]\n   |     +--rw index    uint32\n   |     +--rw id       instance-identifier\n   +--rw player\n      +--rw gap?   decimal64",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "rpcs:",
      "ja": "rpcs："
    },
    {
      "indent": 6,
      "text": "+---x play\n   +--ro input\n      +--ro playlist       string\n      +--ro song-number    uint32",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1. YANG Patch Examples",
      "section_title": true,
      "ja": "A.1. YANGパッチの例"
    },
    {
      "indent": 3,
      "text": "This section includes RESTCONF examples. Most examples are shown in JSON encoding [RFC7159], and some are shown in XML encoding [W3C.REC-xml-20081126].",
      "ja": "このセクションにはRESTCONFの例が含まれています。ほとんどの例はJSONエンコーディング[RFC7159]で示され、一部の例はXMLエンコーディング[W3C.REC-xml-20081126]で示されています。"
    },
    {
      "indent": 0,
      "text": "A.1.1. Add Resources: Error",
      "section_title": true,
      "ja": "A.1.1. リソースの追加：エラー"
    },
    {
      "indent": 3,
      "text": "The following example shows several songs being added to an existing album. Each edit contains one song. The first song already exists, so an error will be reported for that edit. The rest of the edits were not attempted, since the first edit failed. XML encoding is used in this example.",
      "ja": "次の例は、既存のアルバムに追加されるいくつかの曲を示しています。各編集には1曲が含まれます。最初の曲はすでに存在するため、その編集についてエラーが報告されます。最初の編集が失敗したため、残りの編集は試行されませんでした。この例では、XMLエンコーディングが使用されています。"
    },
    {
      "indent": 3,
      "text": "Request from the RESTCONF client:",
      "ja": "RESTCONFクライアントからのリクエスト："
    },
    {
      "indent": 6,
      "text": "PATCH /restconf/data/example-jukebox:jukebox/\\\n   library/artist=Foo%20Fighters/album=Wasting%20Light HTTP/1.1\nHost: example.com\nAccept: application/yang-data+xml\nContent-Type: application/yang-patch+xml",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<yang-patch xmlns=\"urn:ietf:params:xml:ns:yang:ietf-yang-patch\">\n  <patch-id>add-songs-patch</patch-id>\n  <edit>\n    <edit-id>edit1</edit-id>\n    <operation>create</operation>\n    <target>/song=Bridge%20Burning</target>\n    <value>\n      <song xmlns=\"http://example.com/ns/example-jukebox\">\n        <name>Bridge Burning</name>\n        <location>/media/bridge_burning.mp3</location>\n        <format>MP3</format>\n        <length>288</length>\n      </song>\n    </value>\n  </edit>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "  <edit>\n    <edit-id>edit2</edit-id>\n    <operation>create</operation>\n    <target>/song=Rope</target>\n    <value>\n      <song xmlns=\"http://example.com/ns/example-jukebox\">\n        <name>Rope</name>\n        <location>/media/rope.mp3</location>\n        <format>MP3</format>\n        <length>259</length>\n      </song>\n    </value>\n  </edit>\n  <edit>\n    <edit-id>edit3</edit-id>\n    <operation>create</operation>\n    <target>/song=Dear%20Rosemary</target>\n    <value>\n      <song xmlns=\"http://example.com/ns/example-jukebox\">\n        <name>Dear Rosemary</name>\n        <location>/media/dear_rosemary.mp3</location>\n        <format>MP3</format>\n        <length>269</length>\n      </song>\n    </value>\n  </edit>\n</yang-patch>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "XML response from the RESTCONF server:",
      "ja": "RESTCONFサーバーからのXML応答："
    },
    {
      "indent": 6,
      "text": "HTTP/1.1 409 Conflict\nDate: Thu, 26 Jan 2017 20:56:30 GMT\nServer: example-server\nLast-Modified: Thu, 26 Jan 2017 20:56:30 GMT\nContent-Type: application/yang-data+xml",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": " <yang-patch-status\n    xmlns=\"urn:ietf:params:xml:ns:yang:ietf-yang-patch\">\n   <patch-id>add-songs-patch</patch-id>\n   <edit-status>\n     <edit>\n        <edit-id>edit1</edit-id>\n        <errors>\n           <error>\n              <error-type>application</error-type>\n              <error-tag>data-exists</error-tag>\n              <error-path\n                xmlns:jb=\"http://example.com/ns/example-jukebox\">\n                /jb:jukebox/jb:library\n                /jb:artist[jb:name='Foo Fighters']\n                /jb:album[jb:name='Wasting Light']\n                /jb:song[jb:name='Bridge Burning']\n              </error-path>\n              <error-message>\n                Data already exists; cannot be created\n              </error-message>\n           </error>\n        </errors>\n     </edit>\n  </edit-status>\n</yang-patch-status>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "JSON response from the RESTCONF server:",
      "ja": "RESTCONFサーバーからのJSON応答："
    },
    {
      "indent": 3,
      "text": "The following response is shown in JSON format to highlight the difference in the \"error-path\" object encoding. For JSON, the instance-identifier encoding specified in [RFC7951] is used.",
      "ja": "次のレスポンスは、「error-path」オブジェクトエンコーディングの違いを強調するために、JSON形式で示されています。 JSONの場合、[RFC7951]で指定されているインスタンス識別子エンコーディングが使用されます。"
    },
    {
      "indent": 6,
      "text": "HTTP/1.1 409 Conflict\nDate: Thu, 26 Jan 2017 20:56:30 GMT\nServer: example-server\nLast-Modified: Thu, 26 Jan 2017 20:56:30 GMT\nContent-Type: application/yang-data+json",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "{\n  \"ietf-yang-patch:yang-patch-status\" : {\n    \"patch-id\" : \"add-songs-patch\",\n    \"edit-status\" : {\n      \"edit\" : [\n        {\n          \"edit-id\" : \"edit1\",\n          \"errors\" : {\n            \"error\" : [\n              {\n                \"error-type\": \"application\",\n                \"error-tag\": \"data-exists\",\n                \"error-path\": \"/example-jukebox:jukebox/library\\\n                   /artist[name='Foo Fighters']\\\n                   /album[name='Wasting Light']\\\n                   /song[name='Bridge Burning']\",\n                \"error-message\":\n                  \"Data already exists; cannot be created\"\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.2. Add Resources: Success",
      "section_title": true,
      "ja": "A.1.2. リソースを追加：成功"
    },
    {
      "indent": 3,
      "text": "The following example shows several songs being added to an existing album.",
      "ja": "次の例は、既存のアルバムに追加されるいくつかの曲を示しています。"
    },
    {
      "indent": 3,
      "text": "o Each of two edits contains one song.",
      "ja": "o 2つの編集にはそれぞれ1つの曲が含まれます。"
    },
    {
      "indent": 3,
      "text": "o Both edits succeed, and new sub-resources are created.",
      "ja": "o 両方の編集が成功し、新しいサブリソースが作成されます。"
    },
    {
      "indent": 3,
      "text": "Request from the RESTCONF client:",
      "ja": "RESTCONFクライアントからのリクエスト："
    },
    {
      "indent": 6,
      "text": "PATCH /restconf/data/example-jukebox:jukebox/\\\n   library/artist=Foo%20Fighters/album=Wasting%20Light \\\n   HTTP/1.1\nHost: example.com\nAccept: application/yang-data+json\nContent-Type: application/yang-patch+json",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "{\n  \"ietf-yang-patch:yang-patch\" : {\n    \"patch-id\" : \"add-songs-patch-2\",\n    \"edit\" : [\n      {\n        \"edit-id\" : \"edit1\",\n        \"operation\" : \"create\",\n        \"target\" : \"/song=Rope\",\n        \"value\" : {\n          \"song\" : [\n            {\n              \"name\" : \"Rope\",\n              \"location\" : \"/media/rope.mp3\",\n              \"format\" : \"MP3\",\n              \"length\" : 259\n            }\n          ]\n        }\n      },",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "      {\n        \"edit-id\" : \"edit2\",\n        \"operation\" : \"create\",\n        \"target\" : \"/song=Dear%20Rosemary\",\n        \"value\" : {\n          \"song\" : [\n            {\n              \"name\" : \"Dear Rosemary\",\n              \"location\" : \"/media/dear_rosemary.mp3\",\n              \"format\" : \"MP3\",\n              \"length\" : 269\n            }\n          ]\n        }\n      }\n    ]\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Response from the RESTCONF server:",
      "ja": "RESTCONFサーバーからの応答："
    },
    {
      "indent": 6,
      "text": "HTTP/1.1 200 OK\nDate: Thu, 26 Jan 2017 20:56:30 GMT\nServer: example-server\nLast-Modified: Thu, 26 Jan 2017 20:56:30 GMT\nContent-Type: application/yang-data+json",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "{\n  \"ietf-yang-patch:yang-patch-status\" : {\n    \"patch-id\" : \"add-songs-patch-2\",\n    \"ok\" : [null]\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.3. Insert List Entry",
      "section_title": true,
      "ja": "A.1.3. リストエントリの挿入"
    },
    {
      "indent": 3,
      "text": "The following example shows a song being inserted within an existing playlist. Song \"6\" in playlist \"Foo-One\" is being inserted after song \"5\" in the playlist. The operation succeeds, so a non-error reply can be provided.",
      "ja": "次の例は、既存のプレイリストに挿入される曲を示しています。プレイリスト「5」の後にプレイリスト「Foo-One」の「6」が挿入されています。操作は成功したため、エラー以外の応答を提供できます。"
    },
    {
      "indent": 4,
      "text": "Request from the RESTCONF client:",
      "ja": "RESTCONFクライアントからのリクエスト："
    },
    {
      "indent": 6,
      "text": "PATCH /restconf/data/example-jukebox:jukebox/\\\n  playlist=Foo-One HTTP/1.1\nHost: example.com\nAccept: application/yang-data+json\nContent-Type: application/yang-patch+json",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "{\n  \"ietf-yang-patch:yang-patch\" : {\n    \"patch-id\" : \"insert-song-patch\",\n    \"comment\" : \"Insert song 6 after song 5\",\n    \"edit\" : [\n      {\n        \"edit-id\" : \"edit1\",\n        \"operation\" : \"insert\",\n        \"target\" : \"/song=6\",\n        \"point\" : \"/song=5\",\n        \"where\" : \"after\",\n        \"value\" : {\n          \"example-jukebox:song\" : [\n            {\n              \"index\" : 6,\n              \"id\" : \"/example-jukebox:jukebox/library\\\n                /artist[name='Foo Fighters']\\\n                /album[name='Wasting Light']\\\n                /song[name='Bridge Burning']\"\n            }\n          ]\n        }\n      }\n    ]\n  }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Response from the RESTCONF server:",
      "ja": "RESTCONFサーバーからの応答："
    },
    {
      "indent": 5,
      "text": "HTTP/1.1 200 OK\nDate: Thu, 26 Jan 2017 20:56:30 GMT\nServer: example-server\nLast-Modified: Thu, 26 Jan 2017 20:56:30 GMT\nContent-Type: application/yang-data+json",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "{\n  \"ietf-yang-patch:yang-patch-status\" : {\n    \"patch-id\" : \"insert-song-patch\",\n    \"ok\" : [null]\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.4. Move List Entry",
      "section_title": true,
      "ja": "A.1.4. リストエントリの移動"
    },
    {
      "indent": 3,
      "text": "The following example shows a song being moved within an existing playlist. Song \"1\" in playlist \"Foo-One\" is being moved after song \"3\" in the playlist. Note that no \"value\" parameter is needed for a \"move\" operation. The operation succeeds, so a non-error reply can be provided.",
      "ja": "次の例は、既存のプレイリスト内で移動される曲を示しています。プレイリスト「Foo-One」の曲「1」がプレイリストの曲「3」の後に移動しています。 「移動」操作には「値」パラメーターは必要ないことに注意してください。操作は成功したため、エラー以外の応答を提供できます。"
    },
    {
      "indent": 3,
      "text": "Request from the RESTCONF client:",
      "ja": "RESTCONFクライアントからのリクエスト："
    },
    {
      "indent": 6,
      "text": "PATCH /restconf/data/example-jukebox:jukebox/\\\n  playlist=Foo-One HTTP/1.1\nHost: example.com\nAccept: application/yang-data+json\nContent-Type: application/yang-patch+json",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "{\n  \"ietf-yang-patch:yang-patch\" : {\n    \"patch-id\" : \"move-song-patch\",\n    \"comment\" : \"Move song 1 after song 3\",\n    \"edit\" : [\n      {\n        \"edit-id\" : \"edit1\",\n        \"operation\" : \"move\",\n        \"target\" : \"/song=1\",\n        \"point\" : \"/song=3\",\n        \"where\" : \"after\"\n      }\n    ]\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Response from the RESTCONF server:",
      "ja": "RESTCONFサーバーからの応答："
    },
    {
      "indent": 6,
      "text": "HTTP/1.1 200 OK\nDate: Thu, 26 Jan 2017 20:56:30 GMT\nServer: example-server\nLast-Modified: Thu, 26 Jan 2017 20:56:30 GMT\nContent-Type: application/yang-data+json",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "{\n  \"ietf-restconf:yang-patch-status\" : {\n    \"patch-id\" : \"move-song-patch\",\n    \"ok\" : [null]\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.5. Edit Datastore Resource",
      "section_title": true,
      "ja": "A.1.5. データストアリソースの編集"
    },
    {
      "indent": 3,
      "text": "The following example shows how three top-level data nodes from different modules can be edited at the same time.",
      "ja": "次の例は、異なるモジュールの3つの最上位データノードを同時に編集する方法を示しています。"
    },
    {
      "indent": 3,
      "text": "Example module \"foo\" defines leaf X. Example module \"bar\" defines container Y, with child leafs A and B. Example module \"baz\" defines list Z, with key C and child leafs D and E.",
      "ja": "サンプルモジュール「foo」はリーフXを定義します。サンプルモジュール「bar」はコンテナYを定義し、子リーフAおよびBを使用します。サンプルモジュール「baz」はリストZを定義し、キーCおよび子リーフDおよびEを使用します。"
    },
    {
      "indent": 3,
      "text": "Request from the RESTCONF client:",
      "ja": "RESTCONFクライアントからのリクエスト："
    },
    {
      "indent": 6,
      "text": "PATCH /restconf/data HTTP/1.1\nHost: example.com\nAccept: application/yang-data+json\nContent-Type: application/yang-patch+json",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "{\n  \"ietf-yang-patch:yang-patch\" : {\n    \"patch-id\" : \"datastore-patch-1\",\n    \"comment\" : \"Edit 3 top-level data nodes at once\",\n    \"edit\" : [\n      {\n        \"edit-id\" : \"edit1\",\n        \"operation\" : \"create\",\n        \"target\" : \"/foo:X\",\n        \"value\" : {\n          \"foo:X\" : 42\n        }\n      },",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "      {\n        \"edit-id\" : \"edit2\",\n        \"operation\" : \"merge\",\n        \"target\" : \"/bar:Y\",\n        \"value\" : {\n          \"bar:Y\" : {\n            \"A\" : \"test1\",\n            \"B\" : 99\n          }\n        }\n      },\n      {\n        \"edit-id\" : \"edit3\",\n        \"operation\" : \"replace\",\n        \"target\" : \"/baz:Z=2\",\n        \"value\" : {\n          \"baz:Z\" : [\n            {\n              \"C\" : 2,\n              \"D\" : 100,\n              \"E\" : false\n            }\n          ]\n        }\n      }\n    ]\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Response from the RESTCONF server:",
      "ja": "Response from the RESTCONF server:"
    },
    {
      "indent": 6,
      "text": "HTTP/1.1 200 OK\nDate: Thu, 26 Jan 2017 20:56:30 GMT\nServer: example-server\nLast-Modified: Thu, 26 Jan 2017 20:55:30 GMT\nContent-Type: application/yang-data+json",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "{\n  \"ietf-yang-patch:yang-patch-status\" : {\n    \"patch-id\" : \"datastore-patch-1\",\n    \"ok\" : [null]\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Rex Fernando for his contributions to this document.",
      "ja": "The authors would like to thank Rex Fernando for his contributions to this document."
    },
    {
      "indent": 3,
      "text": "Contributions to this material by Andy Bierman are based upon work supported by the United States Army, Space & Terrestrial Communications Directorate (S&TCD) under Contract No. W15P7T-13-C-A616. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the S&TCD.",
      "ja": "Andy Biermanによるこの資料への貢献は、契約番号W15P7T-13-C-A616に基づいて米国陸海宇宙通信総局（S＆TCD）がサポートする作業に基づいています。この資料に記載されている意見、調査結果、結論または推奨事項は著者のものであり、必ずしもS＆TCDの見解を反映しているわけではありません。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Andy Bierman YumaWorks",
      "ja": "アンディ・ビアマンYumaWorks"
    },
    {
      "indent": 3,
      "text": "Email: andy@yumaworks.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Martin Bjorklund Tail-f Systems",
      "ja": "Martin Bjorklund Tail-fシステム"
    },
    {
      "indent": 3,
      "text": "Email: mbj@tail-f.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Kent Watsen Juniper Networks",
      "ja": "ケントワトセンジュニパーネットワークス"
    },
    {
      "indent": 3,
      "text": "Email: kwatsen@juniper.net",
      "raw": true,
      "ja": ""
    }
  ]
}