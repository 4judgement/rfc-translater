{
  "title": {
    "text": "RFC 8200 - Internet Protocol, Version 6 (IPv6) Specification",
    "ja": "RFC 8200 - インターネットプロトコル、バージョン6（IPv6）仕様"
  },
  "number": 8200,
  "created_at": "2020-08-28 11:21:28.706622+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        S. Deering\nRequest for Comments: 8200                                       Retired\nSTD: 86                                                        R. Hinden\nObsoletes: 2460                                     Check Point Software\nCategory: Standards Track                                      July 2017\nISSN: 2070-1721",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "Internet Protocol, Version 6 (IPv6) Specification",
      "ja": "インターネットプロトコル、バージョン6（IPv6）仕様"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document specifies version 6 of the Internet Protocol (IPv6). It obsoletes RFC 2460.",
      "ja": "このドキュメントは、インターネットプロトコル（IPv6）のバージョン6を指定します。 RFC 2460は廃止されました。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 7841のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc8200.",
      "ja": "このドキュメントの現在のステータス、エラッタ、およびフィードバックの提供方法に関する情報は、http：//www.rfc-editor.org/info/rfc8200で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2017 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2017 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびこの文書の発行日に有効なIETF文書に関するIETFトラストの法的規定（http://trustee.ietf.org/license-info）の対象となります。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 3,
      "text": "This document may contain material from IETF Documents or IETF Contributions published or made publicly available before November 10, 2008. The person(s) controlling the copyright in some of this material may not have granted the IETF Trust the right to allow modifications of such material outside the IETF Standards Process. Without obtaining an adequate license from the person(s) controlling the copyright in such materials, this document may not be modified outside the IETF Standards Process, and derivative works of it may not be created outside the IETF Standards Process, except to format it for publication as an RFC or to translate it into languages other than English.",
      "ja": "このドキュメントには、2008年11月10日より前に公開または公開されたIETFドキュメントまたはIETFコントリビューションの素材が含まれている場合があります。この素材の一部の著作権を管理する人は、IETFトラストにそのような素材の変更を許可する権利を付与していない可能性がありますIETF標準プロセス外。このような資料の著作権を管理する人から適切なライセンスを取得しない限り、このドキュメントはIETF標準プロセス外で変更できません。また、その派生物は、IETF標準プロセス外で作成できません。 RFCとして、またはそれを英語以外の言語に翻訳するための出版物。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   4\n2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   5\n3.  IPv6 Header Format  . . . . . . . . . . . . . . . . . . . . .   6\n4.  IPv6 Extension Headers  . . . . . . . . . . . . . . . . . . .   7\n  4.1.  Extension Header Order  . . . . . . . . . . . . . . . . .  10\n  4.2.  Options . . . . . . . . . . . . . . . . . . . . . . . . .  11\n  4.3.  Hop-by-Hop Options Header . . . . . . . . . . . . . . . .  13\n  4.4.  Routing Header  . . . . . . . . . . . . . . . . . . . . .  14\n  4.5.  Fragment Header . . . . . . . . . . . . . . . . . . . . .  15\n  4.6.  Destination Options Header  . . . . . . . . . . . . . . .  23\n  4.7.  No Next Header  . . . . . . . . . . . . . . . . . . . . .  24\n  4.8.  Defining New Extension Headers and Options  . . . . . . .  24\n5.  Packet Size Issues  . . . . . . . . . . . . . . . . . . . . .  25\n6.  Flow Labels . . . . . . . . . . . . . . . . . . . . . . . . .  26\n7.  Traffic Classes . . . . . . . . . . . . . . . . . . . . . . .  26\n8.  Upper-Layer Protocol Issues . . . . . . . . . . . . . . . . .  27\n  8.1.  Upper-Layer Checksums . . . . . . . . . . . . . . . . . .  27\n  8.2.  Maximum Packet Lifetime . . . . . . . . . . . . . . . . .  28\n  8.3.  Maximum Upper-Layer Payload Size  . . . . . . . . . . . .  29\n  8.4.  Responding to Packets Carrying Routing Headers  . . . . .  29\n9.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  29\n10. Security Considerations . . . . . . . . . . . . . . . . . . .  30\n11. References  . . . . . . . . . . . . . . . . . . . . . . . . .  32\n  11.1.  Normative References . . . . . . . . . . . . . . . . . .  32\n  11.2.  Informative References . . . . . . . . . . . . . . . . .  33\nAppendix A.  Formatting Guidelines for Options  . . . . . . . . .  36\nAppendix B.  Changes Since RFC 2460 . . . . . . . . . . . . . . .  39\nAcknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .  42\nAuthors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  42",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "IP version 6 (IPv6) is a new version of the Internet Protocol (IP), designed as the successor to IP version 4 (IPv4) [RFC791]. The changes from IPv4 to IPv6 fall primarily into the following categories:",
      "ja": "IPバージョン6（IPv6）は、IPバージョン4（IPv4）[RFC791]の後継として設計されたインターネットプロトコル（IP）の新しいバージョンです。 IPv4からIPv6への変更は、主に次のカテゴリに分類されます。"
    },
    {
      "indent": 6,
      "text": "o Expanded Addressing Capabilities",
      "ja": "o アドレッシング機能の拡張"
    },
    {
      "indent": 9,
      "text": "IPv6 increases the IP address size from 32 bits to 128 bits, to support more levels of addressing hierarchy, a much greater number of addressable nodes, and simpler autoconfiguration of addresses. The scalability of multicast routing is improved by adding a \"scope\" field to multicast addresses. And a new type of address called an \"anycast address\" is defined; it is used to send a packet to any one of a group of nodes.",
      "ja": "IPv6は、IPアドレスのサイズを32ビットから128ビットに増やし、より多くのレベルのアドレス階層、より多くのアドレス可能なノード、およびアドレスのより簡単な自動構成をサポートします。マルチキャストアドレスに「スコープ」フィールドを追加することにより、マルチキャストルーティングのスケーラビリティが向上します。そして、「エニーキャストアドレス」と呼ばれる新しいタイプのアドレスが定義されています。ノードグループのいずれかにパケットを送信するために使用されます。"
    },
    {
      "indent": 6,
      "text": "o Header Format Simplification",
      "ja": "o ヘッダー形式の簡略化"
    },
    {
      "indent": 9,
      "text": "Some IPv4 header fields have been dropped or made optional, to reduce the common-case processing cost of packet handling and to limit the bandwidth cost of the IPv6 header.",
      "ja": "パケット処理の一般的なケースの処理コストを削減し、IPv6ヘッダーの帯域幅コストを制限するために、一部のIPv4ヘッダーフィールドは削除またはオプションになっています。"
    },
    {
      "indent": 6,
      "text": "o Improved Support for Extensions and Options",
      "ja": "o 拡張機能とオプションのサポートの向上"
    },
    {
      "indent": 9,
      "text": "Changes in the way IP header options are encoded allows for more efficient forwarding, less stringent limits on the length of options, and greater flexibility for introducing new options in the future.",
      "ja": "IPヘッダーオプションのエンコード方法の変更により、転送の効率が向上し、オプションの長さに対する制限が緩和され、将来的に新しいオプションを導入する際の柔軟性が高まります。"
    },
    {
      "indent": 6,
      "text": "o Flow Labeling Capability",
      "ja": "o フローのラベル付け機能"
    },
    {
      "indent": 9,
      "text": "A new capability is added to enable the labeling of sequences of packets that the sender requests to be treated in the network as a single flow.",
      "ja": "新しい機能が追加され、送信側がネットワーク内で単一のフローとして処理することを要求する一連のパケットのラベル付けが可能になります。"
    },
    {
      "indent": 6,
      "text": "o Authentication and Privacy Capabilities",
      "ja": "o 認証およびプライバシー機能"
    },
    {
      "indent": 9,
      "text": "Extensions to support authentication, data integrity, and (optional) data confidentiality are specified for IPv6.",
      "ja": "IPv6では、認証、データ整合性、および（オプションの）データ機密性をサポートする拡張機能が指定されています。"
    },
    {
      "indent": 3,
      "text": "This document specifies the basic IPv6 header and the initially defined IPv6 extension headers and options. It also discusses packet size issues, the semantics of flow labels and traffic classes, and the effects of IPv6 on upper-layer protocols. The format and semantics of IPv6 addresses are specified separately in [RFC4291]. The IPv6 version of ICMP, which all IPv6 implementations are required to include, is specified in [RFC4443].",
      "ja": "このドキュメントでは、基本的なIPv6ヘッダーと、最初に定義されたIPv6拡張ヘッダーとオプションを指定します。また、パケットサイズの問題、フローラベルとトラフィッククラスのセマンティクス、および上位層プロトコルに対するIPv6の影響についても説明します。 IPv6アドレスの形式とセマンティクスは、[RFC4291]で個別に指定されています。すべてのIPv6実装に含める必要があるICMPのIPv6バージョンは、[RFC4443]で指定されています。"
    },
    {
      "indent": 3,
      "text": "The data transmission order for IPv6 is the same as for IPv4 as defined in Appendix B of [RFC791].",
      "ja": "IPv6のデータ転送順序は、[RFC791]の付録Bで定義されているIPv4の場合と同じです。"
    },
    {
      "indent": 3,
      "text": "Note: As this document obsoletes [RFC2460], any document referenced in this document that includes pointers to RFC 2460 should be interpreted as referencing this document.",
      "ja": "注：このドキュメントは廃止されているため[RFC2460]、このドキュメントで参照されているRFC 2460へのポインタを含むドキュメントは、このドキュメントを参照していると解釈する必要があります。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2. 用語"
    },
    {
      "indent": 3,
      "text": "node a device that implements IPv6.",
      "ja": "ノードIPv6を実装するデバイス。"
    },
    {
      "indent": 3,
      "text": "router a node that forwards IPv6 packets not explicitly addressed to itself. (See Note below.)",
      "ja": "自身に明示的にアドレス指定されていないIPv6パケットを転送するノード。 （下記の注を参照してください。）"
    },
    {
      "indent": 3,
      "text": "host any node that is not a router. (See Note below.)",
      "ja": "ルーターではないノードをホストします。 （下記の注を参照してください。）"
    },
    {
      "indent": 3,
      "text": "upper layer a protocol layer immediately above IPv6. Examples are transport protocols such as TCP and UDP, control protocols such as ICMP, routing protocols such as OSPF, and internet-layer or lower-layer protocols being \"tunneled\" over (i.e., encapsulated in) IPv6 such as Internetwork Packet Exchange (IPX), AppleTalk, or IPv6 itself.",
      "ja": "上位層IPv6のすぐ上のプロトコル層。例としては、TCPやUDPなどのトランスポートプロトコル、ICMPなどの制御プロトコル、OSPFなどのルーティングプロトコル、インターネットワークパケットエクスチェンジ（IPX）などのIPv6で「トンネリング」される（つまり、カプセル化される）インターネット層プロトコルがあります。 ）、AppleTalk、またはIPv6自体。"
    },
    {
      "indent": 3,
      "text": "link a communication facility or medium over which nodes can communicate at the link layer, i.e., the layer immediately below IPv6. Examples are Ethernets (simple or bridged); PPP links; X.25, Frame Relay, or ATM networks; and internet-layer or higher-layer \"tunnels\", such as tunnels over IPv4 or IPv6 itself.",
      "ja": "ノードがリンク層、つまりIPv6のすぐ下の層で通信できる通信設備または媒体をリンクします。例はイーサネット（シンプルまたはブリッジ）です。 PPPリンク。 X.25、フレームリレー、またはATMネットワーク。 IPv4やIPv6自体のトンネルなど、インターネット層以上の「トンネル」。"
    },
    {
      "indent": 3,
      "text": "neighbors nodes attached to the same link.",
      "ja": "同じリンクに接続された隣接ノード。"
    },
    {
      "indent": 3,
      "text": "interface a node's attachment to a link.",
      "ja": "ノードのアタッチメントをリンクにインターフェースします。"
    },
    {
      "indent": 3,
      "text": "address an IPv6-layer identifier for an interface or a set of interfaces.",
      "ja": "インターフェイスまたはインターフェイスのセットのIPv6レイヤー識別子をアドレス指定します。"
    },
    {
      "indent": 3,
      "text": "packet an IPv6 header plus payload.",
      "ja": "IPv6ヘッダーとペイロードをパケット化します。"
    },
    {
      "indent": 3,
      "text": "link MTU the maximum transmission unit, i.e., maximum packet size in octets, that can be conveyed over a link.",
      "ja": "リンクMTUリンクを介して伝送できる最大伝送単位、つまりオクテット単位の最大パケットサイズ。"
    },
    {
      "indent": 3,
      "text": "path MTU the minimum link MTU of all the links in a path between a source node and a destination node.",
      "ja": "パスMTU送信元ノードと宛先ノード間のパス内のすべてのリンクの最小リンクMTU。"
    },
    {
      "indent": 3,
      "text": "Note: it is possible for a device with multiple interfaces to be configured to forward non-self-destined packets arriving from some set (fewer than all) of its interfaces and to discard non-self-destined packets arriving from its other interfaces. Such a device must obey the protocol requirements for routers when receiving packets from, and interacting with neighbors over, the former (forwarding) interfaces. It must obey the protocol requirements for hosts when receiving packets from, and interacting with neighbors over, the latter (non-forwarding) interfaces.",
      "ja": "注：複数のインターフェースを備えたデバイスは、そのインターフェースのいくつかのセット（すべてではない）から到着する非自己宛てのパケットを転送し、他のインターフェースから到着する非自己宛てのパケットを破棄するように構成できます。このようなデバイスは、以前の（転送）インターフェイスからパケットを受信し、以前の（転送）インターフェイスを介してネイバーと対話するときに、ルーターのプロトコル要件に従う必要があります。後者の（非転送）インターフェースからパケットを受信し、そのインターフェースを介してネイバーと対話する場合、ホストのプロトコル要件に従う必要があります。"
    },
    {
      "indent": 0,
      "text": "3. IPv6 Header Format",
      "section_title": true,
      "ja": "3. IPv6ヘッダー形式"
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|Version| Traffic Class |           Flow Label                  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|         Payload Length        |  Next Header  |   Hop Limit   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                                                               +\n|                                                               |\n+                         Source Address                        +\n|                                                               |\n+                                                               +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                                                               +\n|                                                               |\n+                      Destination Address                      +\n|                                                               |\n+                                                               +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Version 4-bit Internet Protocol version number = 6.",
      "ja": "バージョン4ビットのインターネットプロトコルバージョン番号= 6。"
    },
    {
      "indent": 6,
      "text": "Traffic Class 8-bit Traffic Class field. See Section 7.",
      "ja": "トラフィッククラス8ビットトラフィッククラスフィールド。セクション7を参照してください。"
    },
    {
      "indent": 6,
      "text": "Flow Label 20-bit flow label. See Section 6.",
      "ja": "フローラベル20ビットのフローラベル。セクション6を参照してください。"
    },
    {
      "indent": 6,
      "text": "Payload Length 16-bit unsigned integer. Length of the IPv6 payload, i.e., the rest of the packet following this IPv6 header, in octets. (Note that any extension headers (see Section 4) present are considered part of the payload, i.e., included in the length count.)",
      "ja": "ペイロード長16ビット符号なし整数。 IPv6ペイロードの長さ、つまり、このIPv6ヘッダーに続くパケットの残りの部分（オクテット単位）。 （存在するすべての拡張ヘッダー（セクション4を参照）は、ペイロードの一部と見なされる、つまり長さのカウントに含まれることに注意してください。）"
    },
    {
      "indent": 6,
      "text": "Next Header 8-bit selector. Identifies the type of header immediately following the IPv6 header. Uses the same values as the IPv4 Protocol field [IANA-PN].",
      "ja": "次のヘッダー8ビットセレクター。 IPv6ヘッダーの直後に続くヘッダーのタイプを識別します。 IPv4プロトコルフィールド[IANA-PN]と同じ値を使用します。"
    },
    {
      "indent": 6,
      "text": "Hop Limit 8-bit unsigned integer. Decremented by 1 by each node that forwards the packet. When forwarding, the packet is discarded if Hop Limit was zero when received or is decremented to zero. A node that is the destination of a packet should not discard a packet with Hop Limit equal to zero; it should process the packet normally.",
      "ja": "ホップ制限8ビットの符号なし整数。パケットを転送するノードごとに1ずつ減少します。転送時に、受信時にホップリミットがゼロであったか、ゼロにデクリメントされた場合、パケットは破棄されます。パケットの宛先であるノードは、ホップ制限がゼロに等しいパケットを破棄してはなりません。パケットは通常どおり処理されます。"
    },
    {
      "indent": 6,
      "text": "Source Address 128-bit address of the originator of the packet. See [RFC4291].",
      "ja": "送信元アドレスパケットの発信元の128ビットアドレス。 [RFC4291]を参照してください。"
    },
    {
      "indent": 6,
      "text": "Destination Address 128-bit address of the intended recipient of the packet (possibly not the ultimate recipient, if a Routing header is present). See [RFC4291] and Section 4.4.",
      "ja": "宛先アドレスパケットの目的の受信者の128ビットアドレス（ルーティングヘッダーが存在する場合、最終的な受信者ではない可能性があります）。 [RFC4291]とセクション4.4を参照してください。"
    },
    {
      "indent": 0,
      "text": "4. IPv6 Extension Headers",
      "section_title": true,
      "ja": "4. IPv6拡張ヘッダー"
    },
    {
      "indent": 3,
      "text": "In IPv6, optional internet-layer information is encoded in separate headers that may be placed between the IPv6 header and the upper-layer header in a packet. There is a small number of such extension headers, each one identified by a distinct Next Header value.",
      "ja": "IPv6では、オプションのインターネット層情報は、IPv6ヘッダーとパケットの上位層ヘッダーの間に配置できる個別のヘッダーにエンコードされます。少数のそのような拡張ヘッダーがあり、それぞれが別個の次ヘッダー値によって識別されます。"
    },
    {
      "indent": 3,
      "text": "Extension headers are numbered from IANA IP Protocol Numbers [IANA-PN], the same values used for IPv4 and IPv6. When processing a sequence of Next Header values in a packet, the first one that is not an extension header [IANA-EH] indicates that the next item in the packet is the corresponding upper-layer header. A special \"No Next Header\" value is used if there is no upper-layer header.",
      "ja": "拡張ヘッダーには、IANA IPプロトコル番号[IANA-PN]から番号が付けられます。これは、IPv4およびIPv6で使用されるのと同じ値です。パケットの次のヘッダー値のシーケンスを処理するとき、拡張ヘッダーではない最初の値[IANA-EH]は、パケットの次の項目が対応する上位層ヘッダーであることを示します。上位層ヘッダーがない場合は、特別な「次のヘッダーなし」値が使用されます。"
    },
    {
      "indent": 3,
      "text": "As illustrated in these examples, an IPv6 packet may carry zero, one, or more extension headers, each identified by the Next Header field of the preceding header:",
      "ja": "これらの例に示されているように、IPv6パケットは0、1、またはそれ以上の拡張ヘッダーを運ぶことができ、それぞれが前のヘッダーの次のヘッダーフィールドによって識別されます。"
    },
    {
      "indent": 3,
      "text": "+---------------+------------------------\n|  IPv6 header  | TCP header + data\n|               |\n| Next Header = |\n|      TCP      |\n+---------------+------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "+---------------+----------------+------------------------\n|  IPv6 header  | Routing header | TCP header + data\n|               |                |\n| Next Header = |  Next Header = |\n|    Routing    |      TCP       |\n+---------------+----------------+------------------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "+---------------+----------------+-----------------+-----------------\n|  IPv6 header  | Routing header | Fragment header | fragment of TCP\n|               |                |                 |  header + data\n| Next Header = |  Next Header = |  Next Header =  |\n|    Routing    |    Fragment    |       TCP       |\n+---------------+----------------+-----------------+-----------------",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Extension headers (except for the Hop-by-Hop Options header) are not processed, inserted, or deleted by any node along a packet's delivery path, until the packet reaches the node (or each of the set of nodes, in the case of multicast) identified in the Destination Address field of the IPv6 header.",
      "ja": "拡張ヘッダー（ホップバイホップオプションヘッダーを除く）は、パケットがノード（または、ノードのセットのそれぞれ）に到達するまで、パケットの配信パスに沿ったノードによって処理、挿入、または削除されません。マルチキャスト）IPv6ヘッダーの宛先アドレスフィールドで識別されます。"
    },
    {
      "indent": 3,
      "text": "The Hop-by-Hop Options header is not inserted or deleted, but may be examined or processed by any node along a packet's delivery path, until the packet reaches the node (or each of the set of nodes, in the case of multicast) identified in the Destination Address field of the IPv6 header. The Hop-by-Hop Options header, when present, must immediately follow the IPv6 header. Its presence is indicated by the value zero in the Next Header field of the IPv6 header.",
      "ja": "ホップバイホップオプションヘッダーは挿入または削除されませんが、パケットがノード（またはマルチキャストの場合はノードの各セット）に到達するまで、パケットの配信パスに沿った任意のノードで検査または処理できます。 IPv6ヘッダーの宛先アドレスフィールドで識別されます。ホップバイホップオプションヘッダーは、存在する場合、IPv6ヘッダーの直後に続く必要があります。その存在は、IPv6ヘッダーの次のヘッダーフィールドの値0で示されます。"
    },
    {
      "indent": 3,
      "text": "NOTE: While [RFC2460] required that all nodes must examine and process the Hop-by-Hop Options header, it is now expected that nodes along a packet's delivery path only examine and process the Hop-by-Hop Options header if explicitly configured to do so.",
      "ja": "注：[RFC2460]はすべてのノードがホップバイホップオプションヘッダーを検査および処理する必要があることを要求しましたが、パケットの配信パスに沿ったノードは、明示的に構成されている場合にのみホップバイホップオプションヘッダーを検査および処理することが期待されます。そうする。"
    },
    {
      "indent": 3,
      "text": "At the destination node, normal demultiplexing on the Next Header field of the IPv6 header invokes the module to process the first extension header, or the upper-layer header if no extension header is present. The contents and semantics of each extension header determine whether or not to proceed to the next header. Therefore, extension headers must be processed strictly in the order they appear in the packet; a receiver must not, for example, scan through a packet looking for a particular kind of extension header and process that header prior to processing all preceding ones.",
      "ja": "宛先ノードでは、IPv6ヘッダーの次のヘッダーフィールドでの通常の逆多重化により、モジュールが呼び出され、最初の拡張ヘッダー、または拡張ヘッダーが存在しない場合は上位層ヘッダーが処理されます。各拡張ヘッダーの内容とセマンティクスにより、次のヘッダーに進むかどうかが決まります。したがって、拡張ヘッダーは、パケットに表示される順序で厳密に処理する必要があります。たとえば、受信者はパケットをスキャンして特定の種類の拡張ヘッダーを探し、そのヘッダーを処理してから、先行するすべての拡張ヘッダーを処理することはできません。"
    },
    {
      "indent": 3,
      "text": "If, as a result of processing a header, the destination node is required to proceed to the next header but the Next Header value in the current header is unrecognized by the node, it should discard the packet and send an ICMP Parameter Problem message to the source of the packet, with an ICMP Code value of 1 (\"unrecognized Next Header type encountered\") and the ICMP Pointer field containing the offset of the unrecognized value within the original packet. The same action should be taken if a node encounters a Next Header value of zero in any header other than an IPv6 header.",
      "ja": "ヘッダーを処理した結果、宛先ノードが次のヘッダーに進む必要があるが、現在のヘッダーの次のヘッダー値がノードによって認識されない場合、パケットを破棄し、ICMPパラメータ問題メッセージをパケットのソース、ICMPコード値1（「認識されない次のヘッダータイプが検出されました」）、および元のパケット内の認識されない値のオフセットを含むICMPポインターフィールド。ノードがIPv6ヘッダー以外のヘッダーでゼロの次ヘッダー値を検出した場合も、同じアクションを実行する必要があります。"
    },
    {
      "indent": 3,
      "text": "Each extension header is an integer multiple of 8 octets long, in order to retain 8-octet alignment for subsequent headers. Multi-octet fields within each extension header are aligned on their natural boundaries, i.e., fields of width n octets are placed at an integer multiple of n octets from the start of the header, for n = 1, 2, 4, or 8.",
      "ja": "各拡張ヘッダーは、8オクテットの長さの整数倍で、後続のヘッダーの8オクテットアライメントを保持します。各拡張ヘッダー内のマルチオクテットフィールドは、それらの自然な境界に揃えられます。つまり、幅nオクテットのフィールドは、ヘッダーの先頭からnオクテットの整数倍に配置されます（n = 1、2、4、または8）。"
    },
    {
      "indent": 3,
      "text": "A full implementation of IPv6 includes implementation of the following extension headers:",
      "ja": "IPv6の完全な実装には、次の拡張ヘッダーの実装が含まれます。"
    },
    {
      "indent": 6,
      "text": "Hop-by-Hop Options Fragment Destination Options Routing Authentication Encapsulating Security Payload",
      "ja": "ホップバイホップオプションフラグメント宛先オプションルーティング認証カプセル化セキュリティペイロード"
    },
    {
      "indent": 3,
      "text": "The first four are specified in this document; the last two are specified in [RFC4302] and [RFC4303], respectively. The current list of IPv6 extension headers can be found at [IANA-EH].",
      "ja": "最初の4つはこのドキュメントで指定されています。最後の2つはそれぞれ[RFC4302]と[RFC4303]で指定されています。 IPv6拡張ヘッダーの現在のリストは、[IANA-EH]にあります。"
    },
    {
      "indent": 0,
      "text": "4.1. Extension Header Order",
      "section_title": true,
      "ja": "4.1. 拡張ヘッダーの順序"
    },
    {
      "indent": 3,
      "text": "When more than one extension header is used in the same packet, it is recommended that those headers appear in the following order:",
      "ja": "同じパケットで複数の拡張ヘッダーが使用されている場合、それらのヘッダーを次の順序で表示することをお勧めします。"
    },
    {
      "indent": 6,
      "text": "IPv6 header Hop-by-Hop Options header Destination Options header (note 1) Routing header Fragment header Authentication header (note 2) Encapsulating Security Payload header (note 2) Destination Options header (note 3) Upper-Layer header",
      "ja": "IPv6ヘッダーホップバイホップオプションヘッダー宛先オプションヘッダー（注1）ルーティングヘッダーフラグメントヘッダー認証ヘッダー（注2）カプセル化セキュリティペイロードヘッダー（注2）宛先オプションヘッダー（注3）上位レイヤーヘッダー"
    },
    {
      "indent": 6,
      "text": "note 1: for options to be processed by the first destination that appears in the IPv6 Destination Address field plus subsequent destinations listed in the Routing header.",
      "ja": "注1：IPv6宛先アドレスフィールドに表示される最初の宛先とルーティングヘッダーにリストされている後続の宛先によって処理されるオプションの場合。"
    },
    {
      "indent": 6,
      "text": "note 2: additional recommendations regarding the relative order of the Authentication and Encapsulating Security Payload headers are given in [RFC4303].",
      "ja": "注2：認証およびカプセル化セキュリティペイロードヘッダーの相対的な順序に関する追加の推奨事項は、[RFC4303]に記載されています。"
    },
    {
      "indent": 6,
      "text": "note 3: for options to be processed only by the final destination of the packet.",
      "ja": "注3：パケットの最終宛先によってのみ処理されるオプションの場合。"
    },
    {
      "indent": 3,
      "text": "Each extension header should occur at most once, except for the Destination Options header, which should occur at most twice (once before a Routing header and once before the upper-layer header).",
      "ja": "Destination Optionsヘッダーを除いて、各拡張ヘッダーは最大で1回発生する必要があります。DestinationOptionsヘッダーは最大で2回発生する必要があります（ルーティングヘッダーの前に1回、上位層ヘッダーの前に1回）。"
    },
    {
      "indent": 3,
      "text": "If the upper-layer header is another IPv6 header (in the case of IPv6 being tunneled over or encapsulated in IPv6), it may be followed by its own extension headers, which are separately subject to the same ordering recommendations.",
      "ja": "上位層ヘッダーが別のIPv6ヘッダーである場合（IPv6がトンネリングまたはIPv6でカプセル化されている場合）、その後に独自の拡張ヘッダーが続く場合があります。これらのヘッダーは、同じ順序で推奨されます。"
    },
    {
      "indent": 3,
      "text": "If and when other extension headers are defined, their ordering constraints relative to the above listed headers must be specified.",
      "ja": "他の拡張ヘッダーが定義されている場合は、上記のヘッダーに関連する順序の制約を指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "IPv6 nodes must accept and attempt to process extension headers in any order and occurring any number of times in the same packet, except for the Hop-by-Hop Options header, which is restricted to appear immediately after an IPv6 header only. Nonetheless, it is strongly advised that sources of IPv6 packets adhere to the above recommended order until and unless subsequent specifications revise that recommendation.",
      "ja": "IPv6ノードは、IPv6ヘッダーの直後にのみ表示されるように制限されているホップバイホップオプションヘッダーを除き、同じパケットで任意の順序で何回も発生する拡張ヘッダーを受け入れて処理する必要があります。それでも、IPv6パケットのソースは、以降の仕様でその推奨事項が改訂されるまで、また推奨されない限り、上記の推奨順序に従うことを強くお勧めします。"
    },
    {
      "indent": 0,
      "text": "4.2. Options",
      "section_title": true,
      "ja": "4.2. オプション"
    },
    {
      "indent": 3,
      "text": "Two of the currently defined extension headers specified in this document -- the Hop-by-Hop Options header and the Destination Options header -- carry a variable number of \"options\" that are type-length-value (TLV) encoded in the following format:",
      "ja": "このドキュメントで指定されている現在定義されている拡張ヘッダーのうちの2つ（ホップバイホップオプションヘッダーと宛先オプションヘッダー）は、次のようにエンコードされたtype-length-value（TLV）である「オプション」の可変数を運びますフォーマット："
    },
    {
      "indent": 6,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- - - - - - - - -\n|  Option Type  |  Opt Data Len |  Option Data\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- - - - - - - - -",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Option Type 8-bit identifier of the type of option.",
      "ja": "Option Typeオプションのタイプの8ビットの識別子。"
    },
    {
      "indent": 6,
      "text": "Opt Data Len 8-bit unsigned integer. Length of the Option Data field of this option, in octets.",
      "ja": "Opt Data Len 8ビット符号なし整数。このオプションのオプションデータフィールドの長さ（オクテット単位）。"
    },
    {
      "indent": 6,
      "text": "Option Data Variable-length field. Option-Type-specific data.",
      "ja": "オプションデータ可変長フィールド。オプションタイプ固有のデータ。"
    },
    {
      "indent": 3,
      "text": "The sequence of options within a header must be processed strictly in the order they appear in the header; a receiver must not, for example, scan through the header looking for a particular kind of option and process that option prior to processing all preceding ones.",
      "ja": "ヘッダー内のオプションのシーケンスは、ヘッダーに表示される順序で厳密に処理する必要があります。たとえば、受信者はヘッダーをスキャンして特定の種類のオプションを探し、そのオプションを処理してから、先行するオプションをすべて処理してはなりません。"
    },
    {
      "indent": 3,
      "text": "The Option Type identifiers are internally encoded such that their highest-order 2 bits specify the action that must be taken if the processing IPv6 node does not recognize the Option Type:",
      "ja": "オプションタイプ識別子は内部的にエンコードされているため、最上位の2ビットは、処理するIPv6ノードがオプションタイプを認識しない場合に実行する必要があるアクションを指定します。"
    },
    {
      "indent": 6,
      "text": "00 - skip over this option and continue processing the header.",
      "ja": "00-このオプションをスキップして、ヘッダーの処理を続行します。"
    },
    {
      "indent": 6,
      "text": "01 - discard the packet.",
      "ja": "01-パケットを破棄します。"
    },
    {
      "indent": 6,
      "text": "10 - discard the packet and, regardless of whether or not the packet's Destination Address was a multicast address, send an ICMP Parameter Problem, Code 2, message to the packet's Source Address, pointing to the unrecognized Option Type.",
      "ja": "10-パケットを破棄し、パケットの宛先アドレスがマルチキャストアドレスであったかどうかに関係なく、ICMPパラメータ問題、コード2、メッセージをパケットの送信元アドレスに送信し、認識されないオプションタイプをポイントします。"
    },
    {
      "indent": 6,
      "text": "11 - discard the packet and, only if the packet's Destination Address was not a multicast address, send an ICMP Parameter Problem, Code 2, message to the packet's Source Address, pointing to the unrecognized Option Type.",
      "ja": "11-パケットを破棄し、パケットの宛先アドレスがマルチキャストアドレスでない場合にのみ、認識されないオプションタイプを指すICMPパラメータ問題、コード2メッセージをパケットの送信元アドレスに送信します。"
    },
    {
      "indent": 0,
      "text": " The third-highest-order bit of the Option Type specifies whether or not the Option Data of that option can change en route to the packet's final destination. When an Authentication header is present in the packet, for any option whose data may change en route, its entire Option Data field must be treated as zero-valued octets when computing or verifying the packet's authenticating value.",
      "ja": "オプションタイプの3番目に上位のビットは、そのオプションのオプションデータがパケットの最終宛先への途中で変更できるかどうかを指定します。パケットに認証ヘッダーが存在する場合、データが途中で変更される可能性があるオプションについては、パケットの認証値を計算または検証するときに、そのオプションデータフィールド全体をゼロ値オクテットとして扱う必要があります。"
    },
    {
      "indent": 7,
      "text": "0 - Option Data does not change en route",
      "ja": "0-オプションデータは途中で変更されません"
    },
    {
      "indent": 7,
      "text": "1 - Option Data may change en route",
      "ja": "1-オプションデータは途中で変更される場合があります"
    },
    {
      "indent": 3,
      "text": "The three high-order bits described above are to be treated as part of the Option Type, not independent of the Option Type. That is, a particular option is identified by a full 8-bit Option Type, not just the low-order 5 bits of an Option Type.",
      "ja": "上記の上位3ビットは、オプションタイプとは関係なく、オプションタイプの一部として扱われます。つまり、特定のオプションは、オプションタイプの下位5ビットだけでなく、完全な8ビットオプションタイプによって識別されます。"
    },
    {
      "indent": 3,
      "text": "The same Option Type numbering space is used for both the Hop-by-Hop Options header and the Destination Options header. However, the specification of a particular option may restrict its use to only one of those two headers.",
      "ja": "ホップバイホップオプションヘッダーと宛先オプションヘッダーの両方に同じオプションタイプ番号スペースが使用されます。ただし、特定のオプションを指定すると、その使用がこれら2つのヘッダーの1つだけに制限される場合があります。"
    },
    {
      "indent": 3,
      "text": "Individual options may have specific alignment requirements, to ensure that multi-octet values within Option Data fields fall on natural boundaries. The alignment requirement of an option is specified using the notation xn+y, meaning the Option Type must appear at an integer multiple of x octets from the start of the header, plus y octets. For example:",
      "ja": "個々のオプションには、オプションデータフィールド内のマルチオクテット値が自然な境界に収まるように、特定の配置要件がある場合があります。オプションの配置要件は、xn + yという表記を使用して指定されます。つまり、オプションタイプは、ヘッダーの先頭からxオクテットの整数倍に加えて、yオクテットである必要があります。例えば："
    },
    {
      "indent": 6,
      "text": "2n means any 2-octet offset from the start of the header. 8n+2 means any 8-octet offset from the start of the header, plus 2 octets.",
      "ja": "2nは、ヘッダーの先頭からの2オクテットオフセットを意味します。 8n + 2は、ヘッダーの先頭からの8オクテットオフセットに2オクテットを加えたものを意味します。"
    },
    {
      "indent": 3,
      "text": "There are two padding options that are used when necessary to align subsequent options and to pad out the containing header to a multiple of 8 octets in length. These padding options must be recognized by all IPv6 implementations:",
      "ja": "後続のオプションを調整し、含まれているヘッダーを8オクテットの倍数の長さにパディングするために必要な場合に使用される2つのパディングオプションがあります。これらのパディングオプションは、すべてのIPv6実装で認識される必要があります。"
    },
    {
      "indent": 3,
      "text": "Pad1 option (alignment requirement: none)",
      "ja": "Pad1オプション（配置要件：なし）"
    },
    {
      "indent": 6,
      "text": "+-+-+-+-+-+-+-+-+\n|       0       |\n+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "NOTE! the format of the Pad1 option is a special case -- it does not have length and value fields.",
      "ja": "注意！ Pad1オプションのフォーマットは特殊なケースです-長さフィールドと値フィールドはありません。"
    },
    {
      "indent": 6,
      "text": "The Pad1 option is used to insert 1 octet of padding into the Options area of a header. If more than one octet of padding is required, the PadN option, described next, should be used, rather than multiple Pad1 options.",
      "ja": "Pad1オプションは、ヘッダーのオプション領域に1オクテットのパディングを挿入するために使用されます。複数のオクテットのパディングが必要な場合は、複数のPad1オプションではなく、次に説明するPadNオプションを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "PadN option (alignment requirement: none)",
      "ja": "PadNオプション（配置要件：なし）"
    },
    {
      "indent": 6,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- - - - - - - - -\n|       1       |  Opt Data Len |  Option Data\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- - - - - - - - -",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "The PadN option is used to insert two or more octets of padding into the Options area of a header. For N octets of padding, the Opt Data Len field contains the value N-2, and the Option Data consists of N-2 zero-valued octets.",
      "ja": "PadNオプションは、ヘッダーのオプション領域に2オクテット以上のパディングを挿入するために使用されます。 Nオクテットのパディングの場合、Opt Data Lenフィールドには値N-2が含まれ、Option DataにはN-2のゼロ値オクテットが含まれます。"
    },
    {
      "indent": 3,
      "text": "Appendix A contains formatting guidelines for designing new options.",
      "ja": "付録Aには、新しいオプションを設計するためのフォーマットガイドラインが含まれています。"
    },
    {
      "indent": 0,
      "text": "4.3. Hop-by-Hop Options Header",
      "section_title": true,
      "ja": "4.3. ホップバイホップオプションヘッダー"
    },
    {
      "indent": 3,
      "text": "The Hop-by-Hop Options header is used to carry optional information that may be examined and processed by every node along a packet's delivery path. The Hop-by-Hop Options header is identified by a Next Header value of 0 in the IPv6 header and has the following format:",
      "ja": "ホップバイホップオプションヘッダーは、パケットの配信パスに沿ったすべてのノードによって検査および処理されるオプションの情報を運ぶために使用されます。ホップバイホップオプションヘッダーは、IPv6ヘッダーの次ヘッダー値0で識別され、次の形式になります。"
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  |  Hdr Ext Len  |                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n|                                                               |\n.                                                               .\n.                            Options                            .\n.                                                               .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Next Header 8-bit selector. Identifies the type of header immediately following the Hop-by-Hop Options header. Uses the same values as the IPv4 Protocol field [IANA-PN].",
      "ja": "次のヘッダー8ビットセレクター。ホップバイホップオプションヘッダーの直後のヘッダーのタイプを識別します。 IPv4プロトコルフィールド[IANA-PN]と同じ値を使用します。"
    },
    {
      "indent": 6,
      "text": "Hdr Ext Len 8-bit unsigned integer. Length of the Hop-by-Hop Options header in 8-octet units, not including the first 8 octets.",
      "ja": "Hdr Ext Len 8ビット符号なし整数。最初の8オクテットを含まない、8オクテット単位のホップバイホップオプションヘッダーの長さ。"
    },
    {
      "indent": 6,
      "text": "Options Variable-length field, of length such that the complete Hop-by-Hop Options header is an integer multiple of 8 octets long. Contains one or more TLV-encoded options, as described in Section 4.2.",
      "ja": "オプション可変長フィールド。完全なホップバイホップオプションヘッダーが8オクテットの整数倍になるような長さ。セクション4.2で説明されているように、1つ以上のTLVエンコードオプションが含まれます。"
    },
    {
      "indent": 3,
      "text": "The only hop-by-hop options defined in this document are the Pad1 and PadN options specified in Section 4.2.",
      "ja": "このドキュメントで定義されているホップバイホップオプションは、セクション4.2で指定されているPad1およびPadNオプションのみです。"
    },
    {
      "indent": 0,
      "text": "4.4. Routing Header",
      "section_title": true,
      "ja": "4.4. ルーティングヘッダー"
    },
    {
      "indent": 3,
      "text": "The Routing header is used by an IPv6 source to list one or more intermediate nodes to be \"visited\" on the way to a packet's destination. This function is very similar to IPv4's Loose Source and Record Route option. The Routing header is identified by a Next Header value of 43 in the immediately preceding header and has the following format:",
      "ja": "IPv6送信元はルーティングヘッダーを使用して、パケットの宛先への途中で「訪問」される1つ以上の中間ノードをリストします。この機能は、IPv4のルーズソースおよびレコードルートオプションとよく似ています。ルーティングヘッダーは、直前のヘッダーのNext Header値43で識別され、次の形式になります。"
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  |  Hdr Ext Len  |  Routing Type | Segments Left |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n.                                                               .\n.                       type-specific data                      .\n.                                                               .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Next Header 8-bit selector. Identifies the type of header immediately following the Routing header. Uses the same values as the IPv4 Protocol field [IANA-PN].",
      "ja": "次のヘッダー8ビットセレクター。 Routingヘッダーの直後のヘッダーのタイプを識別します。 IPv4プロトコルフィールド[IANA-PN]と同じ値を使用します。"
    },
    {
      "indent": 6,
      "text": "Hdr Ext Len 8-bit unsigned integer. Length of the Routing header in 8-octet units, not including the first 8 octets.",
      "ja": "Hdr Ext Len 8ビット符号なし整数。最初の8オクテットを含まない、8オクテット単位のルーティングヘッダーの長さ。"
    },
    {
      "indent": 6,
      "text": "Routing Type 8-bit identifier of a particular Routing header variant.",
      "ja": "ルーティングタイプ特定のルーティングヘッダーバリアントの8ビット識別子。"
    },
    {
      "indent": 6,
      "text": "Segments Left 8-bit unsigned integer. Number of route segments remaining, i.e., number of explicitly listed intermediate nodes still to be visited before reaching the final destination.",
      "ja": "セグメント左8ビット符号なし整数。残りのルートセグメントの数、つまり明示的にリストされた中間ノードの数で、最終的な宛先に到達する前にまだ訪問されます。"
    },
    {
      "indent": 6,
      "text": "type-specific data Variable-length field, of format determined by the Routing Type, and of length such that the complete Routing header is an integer multiple of 8 octets long.",
      "ja": "タイプ固有のデータ可変長フィールド。ルーティングタイプによって決定される形式で、完全なルーティングヘッダーが8オクテットの整数倍になるような長さです。"
    },
    {
      "indent": 3,
      "text": "If, while processing a received packet, a node encounters a Routing header with an unrecognized Routing Type value, the required behavior of the node depends on the value of the Segments Left field, as follows:",
      "ja": "受信したパケットの処理中に、ノードが認識されないルーティングタイプの値を持つルーティングヘッダーを検出した場合、ノードの必要な動作は、次のように左セグメントフィールドの値によって異なります。"
    },
    {
      "indent": 6,
      "text": "If Segments Left is zero, the node must ignore the Routing header and proceed to process the next header in the packet, whose type is identified by the Next Header field in the Routing header.",
      "ja": "残りセグメントがゼロの場合、ノードはルーティングヘッダーを無視し、パケット内の次のヘッダーの処理に進む必要があります。そのタイプはルーティングヘッダーの次のヘッダーフィールドで識別されます。"
    },
    {
      "indent": 6,
      "text": "If Segments Left is non-zero, the node must discard the packet and send an ICMP Parameter Problem, Code 0, message to the packet's Source Address, pointing to the unrecognized Routing Type.",
      "ja": "残りセグメントがゼロ以外の場合、ノードはパケットを破棄し、ICMPパラメータ問題、コード0、メッセージをパケットの送信元アドレスに送信して、認識されないルーティングタイプを指す必要があります。"
    },
    {
      "indent": 3,
      "text": "If, after processing a Routing header of a received packet, an intermediate node determines that the packet is to be forwarded onto a link whose link MTU is less than the size of the packet, the node must discard the packet and send an ICMP Packet Too Big message to the packet's Source Address.",
      "ja": "受信したパケットのルーティングヘッダーを処理した後、リンクMTUがパケットのサイズよりも小さいリンクにパケットを転送する必要があると中間ノードが判断した場合、ノードはパケットを破棄し、ICMPパケットを送信する必要があります。パケットの送信元アドレスへの大きなメッセージ。"
    },
    {
      "indent": 3,
      "text": "The currently defined IPv6 Routing Headers and their status can be found at [IANA-RH]. Allocation guidelines for IPv6 Routing Headers can be found in [RFC5871].",
      "ja": "現在定義されているIPv6ルーティングヘッダーとそのステータスは、[IANA-RH]にあります。 IPv6ルーティングヘッダーの割り当てガイドラインは、[RFC5871]にあります。"
    },
    {
      "indent": 0,
      "text": "4.5. Fragment Header",
      "section_title": true,
      "ja": "4.5. フラグメントヘッダー"
    },
    {
      "indent": 3,
      "text": "The Fragment header is used by an IPv6 source to send a packet larger than would fit in the path MTU to its destination. (Note: unlike IPv4, fragmentation in IPv6 is performed only by source nodes, not by routers along a packet's delivery path -- see Section 5.) The Fragment header is identified by a Next Header value of 44 in the immediately preceding header and has the following format:",
      "ja": "フラグメントヘッダーは、パスMTUに収まるよりも大きいパケットを宛先に送信するためにIPv6送信元によって使用されます。 （注：IPv4とは異なり、IPv6のフラグメンテーションは、パケットの配信パスに沿ったルーターではなく、ソースノードによってのみ実行されます-セクション5を参照してください。）フラグメントヘッダーは、直前のヘッダーの次のヘッダー値44によって識別され、次の形式："
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  |   Reserved    |      Fragment Offset    |Res|M|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         Identification                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Next Header 8-bit selector. Identifies the initial header type of the Fragmentable Part of the original packet (defined below). Uses the same values as the IPv4 Protocol field [IANA-PN].",
      "ja": "次のヘッダー8ビットセレクター。元のパケットのフラグメント可能部分の初期ヘッダータイプを識別します（以下で定義）。 IPv4プロトコルフィールド[IANA-PN]と同じ値を使用します。"
    },
    {
      "indent": 6,
      "text": "Reserved 8-bit reserved field. Initialized to zero for transmission; ignored on reception.",
      "ja": "予約済み8ビット予約フィールド。送信用にゼロに初期化されました。受信時には無視されます。"
    },
    {
      "indent": 6,
      "text": "Fragment Offset 13-bit unsigned integer. The offset, in 8-octet units, of the data following this header, relative to the start of the Fragmentable Part of the original packet.",
      "ja": "フラグメントオフセット13ビットの符号なし整数。元のパケットのフラグメント可能部分の開始を基準にした、このヘッダーに続くデータの8オクテット単位のオフセット。"
    },
    {
      "indent": 6,
      "text": "Res 2-bit reserved field. Initialized to zero for transmission; ignored on reception.",
      "ja": "Res 2ビット予約フィールド。送信用にゼロに初期化されました。受信時には無視されます。"
    },
    {
      "indent": 6,
      "text": "M flag 1 = more fragments; 0 = last fragment.",
      "ja": "Mフラグ1 =その他のフラグメント。 0 =最後のフラグメント。"
    },
    {
      "indent": 6,
      "text": "Identification 32 bits. See description below.",
      "ja": "識別32ビット。以下の説明を参照してください。"
    },
    {
      "indent": 3,
      "text": "In order to send a packet that is too large to fit in the MTU of the path to its destination, a source node may divide the packet into fragments and send each fragment as a separate packet, to be reassembled at the receiver.",
      "ja": "宛先へのパスのMTUに収まらないほど大きいパケットを送信するために、送信元ノードは、パケットをフラグメントに分割し、各フラグメントを個別のパケットとして送信して、受信側で再構成する場合があります。"
    },
    {
      "indent": 3,
      "text": "For every packet that is to be fragmented, the source node generates an Identification value. The Identification must be different than that of any other fragmented packet sent recently* with the same Source Address and Destination Address. If a Routing header is present, the Destination Address of concern is that of the final destination.",
      "ja": "フラグメント化されるパケットごとに、ソースノードは識別値を生成します。識別は、同じ送信元アドレスと宛先アドレスで最近送信された他のフラグメント化されたパケット*とは異なる必要があります。ルーティングヘッダーが存在する場合、問題の宛先アドレスは最終宛先のアドレスです。"
    },
    {
      "indent": 6,
      "text": "* \"recently\" means within the maximum likely lifetime of a packet, including transit time from source to destination and time spent awaiting reassembly with other fragments of the same packet. However, it is not required that a source node knows the maximum packet lifetime. Rather, it is assumed that the requirement can be met by implementing an algorithm that results in a low identification reuse frequency. Examples of algorithms that can meet this requirement are described in [RFC7739].",
      "ja": "* 「最近」とは、送信元から宛先への通過時間や、同じパケットの他のフラグメントとの再構成を待つために費やされた時間を含む、パケットの最大可能寿命内を意味します。ただし、送信元ノードが最大パケットライフタイムを知っている必要はありません。むしろ、この要件は、低い識別再利用頻度をもたらすアルゴリズムを実装することによって満たすことができると想定されています。この要件を満たすことができるアルゴリズムの例は、[RFC7739]で説明されています。"
    },
    {
      "indent": 3,
      "text": "The initial, large, unfragmented packet is referred to as the \"original packet\", and it is considered to consist of three parts, as illustrated:",
      "ja": "最初の大きな断片化されていないパケットは「元のパケット」と呼ばれ、図のように3つの部分で構成されていると見なされます。"
    },
    {
      "indent": 3,
      "text": "original packet:",
      "ja": "元のパケット："
    },
    {
      "indent": 3,
      "text": "+------------------+-------------------------+---//----------------+\n|  Per-Fragment    | Extension & Upper-Layer |   Fragmentable      |\n|    Headers       |       Headers           |      Part           |\n+------------------+-------------------------+---//----------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "The Per-Fragment headers must consist of the IPv6 header plus any extension headers that must be processed by nodes en route to the destination, that is, all headers up to and including the Routing header if present, else the Hop-by-Hop Options header if present, else no extension headers.",
      "ja": "フラグメントごとのヘッダーは、IPv6ヘッダーと、宛先への途中のノードで処理する必要があるすべての拡張ヘッダー、つまり、存在する場合はルーティングヘッダーまでのすべてのヘッダー、および存在する場合はホップバイホップオプションで構成される必要があります。存在する場合はヘッダー、それ以外の場合は拡張ヘッダーはありません。"
    },
    {
      "indent": 6,
      "text": "The Extension headers are all other extension headers that are not included in the Per-Fragment headers part of the packet. For this purpose, the Encapsulating Security Payload (ESP) is not considered an extension header. The Upper-Layer header is the first upper-layer header that is not an IPv6 extension header. Examples of upper-layer headers include TCP, UDP, IPv4, IPv6, ICMPv6, and as noted ESP.",
      "ja": "拡張ヘッダーは、パケットのフラグメントごとのヘッダー部分に含まれていない他のすべての拡張ヘッダーです。このため、カプセル化セキュリティペイロード（ESP）は拡張ヘッダーとは見なされません。上位層ヘッダーは、IPv6拡張ヘッダーではない最初の上位層ヘッダーです。上位層ヘッダーの例には、TCP、UDP、IPv4、IPv6、ICMPv6、および前述のESPが含まれます。"
    },
    {
      "indent": 6,
      "text": "The Fragmentable Part consists of the rest of the packet after the upper-layer header or after any header (i.e., initial IPv6 header or extension header) that contains a Next Header value of No Next Header.",
      "ja": "フラグメント可能部分は、上位層ヘッダーの後、または次のヘッダー値の次のヘッダー値を含むヘッダー（つまり、初期IPv6ヘッダーまたは拡張ヘッダー）の後のパケットの残りで構成されます。"
    },
    {
      "indent": 3,
      "text": "The Fragmentable Part of the original packet is divided into fragments. The lengths of the fragments must be chosen such that the resulting fragment packets fit within the MTU of the path to the packet's destination(s). Each complete fragment, except possibly the last (\"rightmost\") one, is an integer multiple of 8 octets long.",
      "ja": "元のパケットのフラグメント可能部分は、フラグメントに分割されます。フラグメントの長さは、結果のフラグメントパケットがパケットの宛先へのパスのMTU内に収まるように選択する必要があります。最後の（「最も右側の」）フラグメントを除いて、各完全なフラグメントは、8オクテットの長さの整数倍です。"
    },
    {
      "indent": 3,
      "text": "The fragments are transmitted in separate \"fragment packets\" as illustrated:",
      "ja": "フラグメントは、次のように別々の「フラグメントパケット」で送信されます。"
    },
    {
      "indent": 3,
      "text": "original packet:",
      "ja": "元のパケット："
    },
    {
      "indent": 3,
      "text": "+-----------------+-----------------+--------+--------+-//-+--------+\n|  Per-Fragment   |Ext & Upper-Layer|  first | second |    |  last  |\n|    Headers      |    Headers      |fragment|fragment|....|fragment|\n+-----------------+-----------------+--------+--------+-//-+--------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "fragment packets:",
      "ja": "フラグメントパケット："
    },
    {
      "indent": 3,
      "text": "+------------------+---------+-------------------+----------+\n|  Per-Fragment    |Fragment | Ext & Upper-Layer |  first   |\n|    Headers       | Header  |   Headers         | fragment |\n+------------------+---------+-------------------+----------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "+------------------+--------+-------------------------------+\n|  Per-Fragment    |Fragment|    second                     |\n|    Headers       | Header |   fragment                    |\n+------------------+--------+-------------------------------+\n                      o\n                      o\n                      o\n+------------------+--------+----------+\n|  Per-Fragment    |Fragment|   last   |\n|    Headers       | Header | fragment |\n+------------------+--------+----------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The first fragment packet is composed of:",
      "ja": "最初のフラグメントパケットは、次のもので構成されます。"
    },
    {
      "indent": 6,
      "text": "(1) The Per-Fragment headers of the original packet, with the Payload Length of the original IPv6 header changed to contain the length of this fragment packet only (excluding the length of the IPv6 header itself), and the Next Header field of the last header of the Per-Fragment headers changed to 44.",
      "ja": "（1）元のIPv6ヘッダーのペイロード長がこのフラグメントパケットの長さのみを含むように変更された元のパケットのフラグメントごとのヘッダー（IPv6ヘッダー自体の長さを除く）、およびPer-Fragmentヘッダーの最後のヘッダーが44に変更されました。"
    },
    {
      "indent": 6,
      "text": "(2) A Fragment header containing:",
      "ja": "（2）以下を含むフラグメントヘッダー："
    },
    {
      "indent": 14,
      "text": "The Next Header value that identifies the first header after the Per-Fragment headers of the original packet.",
      "ja": "元のパケットのフラグメントごとのヘッダーの後の最初のヘッダーを識別する次のヘッダー値。"
    },
    {
      "indent": 14,
      "text": "A Fragment Offset containing the offset of the fragment, in 8-octet units, relative to the start of the Fragmentable Part of the original packet. The Fragment Offset of the first (\"leftmost\") fragment is 0.",
      "ja": "元のパケットのフラグメント可能部分の開始を基準とした、8オクテット単位のフラグメントのオフセットを含むフラグメントオフセット。最初（「左端」）のフラグメントのフラグメントオフセットは0です。"
    },
    {
      "indent": 14,
      "text": "An M flag value of 1 as this is the first fragment.",
      "ja": "これは最初のフラグメントであるため、Mフラグ値は1。"
    },
    {
      "indent": 14,
      "text": "The Identification value generated for the original packet.",
      "ja": "元のパケットに対して生成された識別値。"
    },
    {
      "indent": 6,
      "text": "(3) Extension headers, if any, and the Upper-Layer header. These headers must be in the first fragment. Note: This restricts the size of the headers through the Upper-Layer header to the MTU of the path to the packet's destinations(s).",
      "ja": "（3）拡張ヘッダーがある場合はそれと、Upper-Layerヘッダー。これらのヘッダーは最初のフラグメントに含まれている必要があります。注：これにより、Upper-Layerヘッダーを介したヘッダーのサイズが、パケットの宛先へのパスのMTUに制限されます。"
    },
    {
      "indent": 6,
      "text": "(4) The first fragment.",
      "ja": "（4）最初のフラグメント。"
    },
    {
      "indent": 3,
      "text": "The subsequent fragment packets are composed of:",
      "ja": "後続のフラグメントパケットは、次のもので構成されます。"
    },
    {
      "indent": 6,
      "text": "(1) The Per-Fragment headers of the original packet, with the Payload Length of the original IPv6 header changed to contain the length of this fragment packet only (excluding the length of the IPv6 header itself), and the Next Header field of the last header of the Per-Fragment headers changed to 44.",
      "ja": "（1）元のIPv6ヘッダーのペイロード長がこのフラグメントパケットの長さのみを含むように変更された元のパケットのフラグメントごとのヘッダー（IPv6ヘッダー自体の長さを除く）、およびPer-Fragmentヘッダーの最後のヘッダーが44に変更されました。"
    },
    {
      "indent": 6,
      "text": "(2) A Fragment header containing:",
      "ja": "（2）以下を含むフラグメントヘッダー："
    },
    {
      "indent": 14,
      "text": "The Next Header value that identifies the first header after the Per-Fragment headers of the original packet.",
      "ja": "元のパケットのフラグメントごとのヘッダーの後の最初のヘッダーを識別する次のヘッダー値。"
    },
    {
      "indent": 14,
      "text": "A Fragment Offset containing the offset of the fragment, in 8-octet units, relative to the start of the Fragmentable Part of the original packet.",
      "ja": "元のパケットのフラグメント可能部分の開始を基準とした、8オクテット単位のフラグメントのオフセットを含むフラグメントオフセット。"
    },
    {
      "indent": 14,
      "text": "An M flag value of 0 if the fragment is the last (\"rightmost\") one, else an M flag value of 1.",
      "ja": "フラグメントが最後（右端）の場合、Mフラグ値は0、それ以外の場合、Mフラグ値は1。"
    },
    {
      "indent": 14,
      "text": "The Identification value generated for the original packet.",
      "ja": "元のパケットに対して生成された識別値。"
    },
    {
      "indent": 6,
      "text": "(3) The fragment itself.",
      "ja": "（3）フラグメント自体。"
    },
    {
      "indent": 3,
      "text": "Fragments must not be created that overlap with any other fragments created from the original packet.",
      "ja": "元のパケットから作成された他のフラグメントと重複するフラグメントは作成しないでください。"
    },
    {
      "indent": 3,
      "text": "At the destination, fragment packets are reassembled into their original, unfragmented form, as illustrated:",
      "ja": "宛先では、図に示すように、フラグメントパケットが元のフラグメント化されていない形式に再構成されます。"
    },
    {
      "indent": 3,
      "text": "reassembled original packet:",
      "ja": "元のパケットを再構成："
    },
    {
      "indent": 3,
      "text": "+---------------+-----------------+---------+--------+-//--+--------+\n| Per-Fragment  |Ext & Upper-Layer|  first  | second |     | last   |\n|    Headers    |     Headers     |frag data|fragment|.....|fragment|\n+---------------+-----------------+---------+--------+-//--+--------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The following rules govern reassembly:",
      "ja": "次のルールが再構成を管理します。"
    },
    {
      "indent": 6,
      "text": "An original packet is reassembled only from fragment packets that have the same Source Address, Destination Address, and Fragment Identification.",
      "ja": "元のパケットは、同じ送信元アドレス、宛先アドレス、およびフラグメントIDを持つフラグメントパケットからのみ再構成されます。"
    },
    {
      "indent": 6,
      "text": "The Per-Fragment headers of the reassembled packet consists of all headers up to, but not including, the Fragment header of the first fragment packet (that is, the packet whose Fragment Offset is zero), with the following two changes:",
      "ja": "再構成されたパケットのフラグメントごとのヘッダーは、最初のフラグメントパケット（つまり、フラグメントオフセットがゼロのパケット）のフラグメントヘッダーまでのすべてのヘッダーで構成されますが、次の2つの変更があります。"
    },
    {
      "indent": 9,
      "text": "The Next Header field of the last header of the Per-Fragment headers is obtained from the Next Header field of the first fragment's Fragment header.",
      "ja": "Per-Fragmentヘッダーの最後のヘッダーのNext Headerフィールドは、最初のフラグメントのFragmentヘッダーのNext Headerフィールドから取得されます。"
    },
    {
      "indent": 9,
      "text": "The Payload Length of the reassembled packet is computed from the length of the Per-Fragment headers and the length and offset of the last fragment. For example, a formula for computing the Payload Length of the reassembled original packet is:",
      "ja": "再構成されたパケットのペイロード長は、フラグメントごとのヘッダーの長さと最後のフラグメントの長さとオフセットから計算されます。たとえば、再構成された元のパケットのペイロード長を計算する式は次のとおりです。"
    },
    {
      "indent": 12,
      "text": "PL.orig = PL.first - FL.first - 8 + (8 * FO.last) + FL.last",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "where PL.orig = Payload Length field of reassembled packet. PL.first = Payload Length field of first fragment packet. FL.first = length of fragment following Fragment header of first fragment packet. FO.last = Fragment Offset field of Fragment header of last fragment packet. FL.last = length of fragment following Fragment header of last fragment packet.",
      "ja": "PL.orig =再構成されたパケットのペイロード長フィールド。 PL.first =最初のフラグメントパケットのペイロード長フィールド。 FL.first =最初のフラグメントパケットのフラグメントヘッダーに続くフラグメントの長さ。 FO.last =最後のフラグメントパケットのフラグメントヘッダーのフラグメントオフセットフィールド。 FL.last =最後のフラグメントパケットのフラグメントヘッダーに続くフラグメントの長さ。"
    },
    {
      "indent": 0,
      "text": " The Fragmentable Part of the reassembled packet is constructed from the fragments following the Fragment headers in each of the fragment packets. The length of each fragment is computed by subtracting from the packet's Payload Length the length of the headers between the IPv6 header and fragment itself; its relative position in Fragmentable Part is computed from its Fragment Offset value.",
      "ja": "再構成されたパケットのフラグメント可能部分は、各フラグメントパケットのフラグメントヘッダーに続くフラグメントから構築されます。各フラグメントの長さは、パケットのペイロード長からIPv6ヘッダーとフラグメント自体の間のヘッダーの長さを引くことによって計算されます。フラグメント可能パーツ内の相対位置は、フラグメントオフセット値から計算されます。"
    },
    {
      "indent": 9,
      "text": "The Fragment header is not present in the final, reassembled packet.",
      "ja": "フラグメントヘッダーは、最終的な再構成されたパケットには存在しません。"
    },
    {
      "indent": 9,
      "text": "If the fragment is a whole datagram (that is, both the Fragment Offset field and the M flag are zero), then it does not need any further reassembly and should be processed as a fully reassembled packet (i.e., updating Next Header, adjust Payload Length, removing the Fragment header, etc.). Any other fragments that match this packet (i.e., the same IPv6 Source Address, IPv6 Destination Address, and Fragment Identification) should be processed independently.",
      "ja": "フラグメントがデータグラム全体である（つまり、フラグメントオフセットフィールドとMフラグの両方がゼロである）場合は、それ以上再構成する必要はなく、完全に再構成されたパケットとして処理する必要があります（つまり、次のヘッダーの更新、ペイロードの調整）長さ、フラグメントヘッダーの削除など）。このパケットに一致する他のフラグメント（つまり、同じIPv6送信元アドレス、IPv6宛先アドレス、およびフラグメント識別）は、個別に処理する必要があります。"
    },
    {
      "indent": 3,
      "text": "The following error conditions may arise when reassembling fragmented packets:",
      "ja": "フラグメント化されたパケットを再アセンブルすると、次のエラー状態が発生する可能性があります。"
    },
    {
      "indent": 6,
      "text": "o If insufficient fragments are received to complete reassembly of a packet within 60 seconds of the reception of the first-arriving fragment of that packet, reassembly of that packet must be abandoned and all the fragments that have been received for that packet must be discarded. If the first fragment (i.e., the one with a Fragment Offset of zero) has been received, an ICMP Time Exceeded -- Fragment Reassembly Time Exceeded message should be sent to the source of that fragment.",
      "ja": "o そのパケットの最初に到着したフラグメントを受信して​​から60秒以内にパケットの再構成を完了するのに不十分なフラグメントを受信した場合、そのパケットの再構成を破棄し、そのパケットについて受信したすべてのフラグメントを破棄する必要があります。最初のフラグメント（つまり、フラグメントオフセットがゼロのフラグメント）が受信された場合、ICMP Time Exceeded-Fragment Reassembly Time Exceededメッセージをそのフラグメントのソースに送信する必要があります。"
    },
    {
      "indent": 6,
      "text": "o If the length of a fragment, as derived from the fragment packet's Payload Length field, is not a multiple of 8 octets and the M flag of that fragment is 1, then that fragment must be discarded and an ICMP Parameter Problem, Code 0, message should be sent to the source of the fragment, pointing to the Payload Length field of the fragment packet.",
      "ja": "o フラグメントパケットのペイロード長フィールドから導出されるフラグメントの長さが8オクテットの倍数ではなく、そのフラグメントのMフラグが1の場合、そのフラグメントは破棄され、ICMPパラメータの問題、コード0、メッセージフラグメントパケットのペイロード長フィールドを指すフラグメントの送信元に送信する必要があります。"
    },
    {
      "indent": 6,
      "text": "o If the length and offset of a fragment are such that the Payload Length of the packet reassembled from that fragment would exceed 65,535 octets, then that fragment must be discarded and an ICMP Parameter Problem, Code 0, message should be sent to the source of the fragment, pointing to the Fragment Offset field of the fragment packet.",
      "ja": "o フラグメントの長さとオフセットが、そのフラグメントから再構成されたパケットのペイロード長が65,535オクテットを超えるようなものである場合、そのフラグメントを破棄し、ICMPパラメータの問題、コード0のメッセージを送信元に送信する必要があります。フラグメント、フラグメントパケットのフラグメントオフセットフィールドを指します。"
    },
    {
      "indent": 6,
      "text": "o If the first fragment does not include all headers through an Upper-Layer header, then that fragment should be discarded and an ICMP Parameter Problem, Code 3, message should be sent to the source of the fragment, with the Pointer field set to zero.",
      "ja": "o 最初のフラグメントに上位層ヘッダーのすべてのヘッダーが含まれていない場合は、そのフラグメントを破棄し、ポインターフィールドをゼロに設定して、ICMPパラメーターの問題（コード3）をフラグメントの送信元に送信する必要があります。"
    },
    {
      "indent": 6,
      "text": "o If any of the fragments being reassembled overlap with any other fragments being reassembled for the same packet, reassembly of that packet must be abandoned and all the fragments that have been received for that packet must be discarded, and no ICMP error messages should be sent.",
      "ja": "o 再構成されているフラグメントのいずれかが同じパケット用に再構成されている他のフラグメントと重複している場合、そのパケットの再構成を破棄し、そのパケットで受信されたすべてのフラグメントを破棄し、ICMPエラーメッセージを送信しないようにする必要があります。"
    },
    {
      "indent": 9,
      "text": "It should be noted that fragments may be duplicated in the network. Instead of treating these exact duplicate fragments as overlapping fragments, an implementation may choose to detect this case and drop exact duplicate fragments while keeping the other fragments belonging to the same packet.",
      "ja": "フラグメントはネットワーク内で複製される場合があることに注意してください。これらの正確な重複フラグメントを重複フラグメントとして扱う代わりに、実装はこのケースを検出し、同じパケットに属する他のフラグメントを維持しながら正確な重複フラグメントをドロップすることを選択できます。"
    },
    {
      "indent": 3,
      "text": "The following conditions are not expected to occur frequently but are not considered errors if they do:",
      "ja": "次の条件は頻繁に発生するとは想定されていませんが、発生してもエラーとは見なされません。"
    },
    {
      "indent": 6,
      "text": "The number and content of the headers preceding the Fragment header of different fragments of the same original packet may differ. Whatever headers are present, preceding the Fragment header in each fragment packet, are processed when the packets arrive, prior to queueing the fragments for reassembly. Only those headers in the Offset zero fragment packet are retained in the reassembled packet.",
      "ja": "同じ元のパケットの異なるフラグメントのフラグメントヘッダーに先行するヘッダーの数と内容は異なる場合があります。各フラグメントパケットのフラグメントヘッダーの前にあるヘッダーが存在する場合は、パケットが到着したときに、フラグメントをキューに再配置する前に処理されます。オフセットゼロフラグメントパケットのヘッダーのみが、再構成されたパケットに保持されます。"
    },
    {
      "indent": 6,
      "text": "The Next Header values in the Fragment headers of different fragments of the same original packet may differ. Only the value from the Offset zero fragment packet is used for reassembly.",
      "ja": "同じ元のパケットの異なるフラグメントのフラグメントヘッダーの次のヘッダー値は異なる場合があります。オフセットゼロフラグメントパケットからの値のみが再構成に使用されます。"
    },
    {
      "indent": 6,
      "text": "Other fields in the IPv6 header may also vary across the fragments being reassembled. Specifications that use these fields may provide additional instructions if the basic mechanism of using the values from the Offset zero fragment is not sufficient. For example, Section 5.3 of [RFC3168] describes how to combine the Explicit Congestion Notification (ECN) bits from different fragments to derive the ECN bits of the reassembled packet.",
      "ja": "IPv6ヘッダーの他のフィールドも、再構成されているフラグメント間で異なる場合があります。これらのフィールドを使用する仕様は、オフセットゼロフラグメントの値を使用する基本的なメカニズムでは不十分な場合に、追加の指示を提供することがあります。たとえば、[RFC3168]のセクション5.3では、さまざまなフラグメントの明示的輻輳通知（ECN）ビットを組み合わせて、再構成されたパケットのECNビットを取得する方法について説明しています。"
    },
    {
      "indent": 0,
      "text": "4.6. Destination Options Header",
      "section_title": true,
      "ja": "4.6. 宛先オプションヘッダー"
    },
    {
      "indent": 3,
      "text": "The Destination Options header is used to carry optional information that need be examined only by a packet's destination node(s). The Destination Options header is identified by a Next Header value of 60 in the immediately preceding header and has the following format:",
      "ja": "Destination Optionsヘッダーは、パケットの宛先ノードだけが検査する必要があるオプション情報を運ぶために使用されます。 Destination Optionsヘッダーは、直前のヘッダーの60のNext Header値によって識別され、次の形式になります。"
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  |  Hdr Ext Len  |                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n|                                                               |\n.                                                               .\n.                            Options                            .\n.                                                               .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Next Header 8-bit selector. Identifies the type of header immediately following the Destination Options header. Uses the same values as the IPv4 Protocol field [IANA-PN].",
      "ja": "次のヘッダー8ビットセレクター。 Destination Optionsヘッダーの直後のヘッダーのタイプを識別します。 IPv4プロトコルフィールド[IANA-PN]と同じ値を使用します。"
    },
    {
      "indent": 6,
      "text": "Hdr Ext Len 8-bit unsigned integer. Length of the Destination Options header in 8-octet units, not including the first 8 octets.",
      "ja": "Hdr Ext Len 8ビット符号なし整数。最初の8オクテットを含まない、8オクテット単位の宛先オプションヘッダーの長さ。"
    },
    {
      "indent": 6,
      "text": "Options Variable-length field, of length such that the complete Destination Options header is an integer multiple of 8 octets long. Contains one or more TLV-encoded options, as described in Section 4.2.",
      "ja": "Options可変長フィールド。完全なDestination Optionsヘッダーが8オクテットの整数倍になるような長さです。セクション4.2で説明されているように、1つ以上のTLVエンコードオプションが含まれます。"
    },
    {
      "indent": 3,
      "text": "The only destination options defined in this document are the Pad1 and PadN options specified in Section 4.2.",
      "ja": "このドキュメントで定義されている唯一の宛先オプションは、セクション4.2で指定されたPad1およびPadNオプションです。"
    },
    {
      "indent": 3,
      "text": "Note that there are two possible ways to encode optional destination information in an IPv6 packet: either as an option in the Destination Options header or as a separate extension header. The Fragment header and the Authentication header are examples of the latter approach. Which approach can be used depends on what action is desired of a destination node that does not understand the optional information:",
      "ja": "IPv6パケットのオプションの宛先情報をエンコードする方法は2つあることに注意してください。宛先オプションヘッダーのオプションとして、または個別の拡張ヘッダーとして。 FragmentヘッダーとAuthenticationヘッダーは、後者のアプローチの例です。どちらのアプローチを使用できるかは、オプションの情報を理解していない宛先ノードに必要なアクションによって異なります。"
    },
    {
      "indent": 0,
      "text": " o If the desired action is for the destination node to discard the packet and, only if the packet's Destination Address is not a multicast address, send an ICMP Unrecognized Type message to the packet's Source Address, then the information may be encoded either as a separate header or as an option in the Destination Options header whose Option Type has the value 11 in its highest-order 2 bits. The choice may depend on such factors as which takes fewer octets, or which yields better alignment or more efficient parsing.",
      "ja": "o目的のアクションが宛先ノードがパケットを破棄することであり、パケットの宛先アドレスがマルチキャストアドレスでない場合のみ、ICMP Unrecognized Typeメッセージをパケットの送信元アドレスに送信します。情報は、別の方法でエンコードされます。ヘッダー、またはDestination Optionsヘッダーのオプションとして、オプションタイプの最上位2ビットの値が11である。どちらを選択するかは、オクテットの数が少ないか、配置の改善や解析の効率化などの要因によって異なります。"
    },
    {
      "indent": 6,
      "text": "o If any other action is desired, the information must be encoded as an option in the Destination Options header whose Option Type has the value 00, 01, or 10 in its highest-order 2 bits, specifying the desired action (see Section 4.2).",
      "ja": "o 他のアクションが必要な場合は、情報をDestination Optionsヘッダーのオプションとしてエンコードする必要があります。オプションタイプの値は、最上位の2ビットが00、01、または10で、必要なアクションを指定します（セクション4.2を参照）。"
    },
    {
      "indent": 0,
      "text": "4.7. No Next Header",
      "section_title": true,
      "ja": "4.7. 次のヘッダーなし"
    },
    {
      "indent": 3,
      "text": "The value 59 in the Next Header field of an IPv6 header or any extension header indicates that there is nothing following that header. If the Payload Length field of the IPv6 header indicates the presence of octets past the end of a header whose Next Header field contains 59, those octets must be ignored and passed on unchanged if the packet is forwarded.",
      "ja": "IPv6ヘッダーまたは任意の拡張ヘッダーの次のヘッダーフィールドの値59は、そのヘッダーの後に何もないことを示します。 IPv6ヘッダーのペイロード長フィールドが、次のヘッダーフィールドに59が含まれるヘッダーの終わりを過ぎたオクテットの存在を示す場合、それらのオクテットは無視され、パケットが転送される場合は変更されずに渡されます。"
    },
    {
      "indent": 0,
      "text": "4.8. Defining New Extension Headers and Options",
      "section_title": true,
      "ja": "4.8. 新しい拡張ヘッダーとオプションの定義"
    },
    {
      "indent": 3,
      "text": "Defining new IPv6 extension headers is not recommended, unless there are no existing IPv6 extension headers that can be used by specifying a new option for that IPv6 extension header. A proposal to specify a new IPv6 extension header must include a detailed technical explanation of why an existing IPv6 extension header can not be used for the desired new function. See [RFC6564] for additional background information.",
      "ja": "そのIPv6拡張ヘッダーに新しいオプションを指定して使用できる既存のIPv6拡張ヘッダーがない場合を除き、新しいIPv6拡張ヘッダーを定義することはお勧めできません。新しいIPv6拡張ヘッダーを指定する提案には、既存のIPv6拡張ヘッダーを目的の新しい機能に使用できない理由の詳細な技術的説明を含める必要があります。追加の背景情報については、[RFC6564]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Note: New extension headers that require hop-by-hop behavior must not be defined because, as specified in Section 4 of this document, the only extension header that has hop-by-hop behavior is the Hop-by-Hop Options header.",
      "ja": "注：このドキュメントのセクション4で指定されているように、ホップバイホップ動作を持つ拡張ヘッダーはホップバイホップオプションヘッダーのみであるため、ホップバイホップ動作を必要とする新しい拡張ヘッダーは定義しないでください。"
    },
    {
      "indent": 3,
      "text": "New hop-by-hop options are not recommended because nodes may be configured to ignore the Hop-by-Hop Options header, drop packets containing a Hop-by-Hop Options header, or assign packets containing a Hop-by-Hop Options header to a slow processing path. Designers considering defining new hop-by-hop options need to be aware of this likely behavior. There has to be a very clear justification why any new hop-by-hop option is needed before it is standardized.",
      "ja": "ノードがホップバイホップオプションヘッダーを無視する、ホップバイホップオプションヘッダーを含むパケットをドロップする、またはホップバイホップオプションヘッダーを含むパケットを割り当てるように構成されている場合があるため、新しいホップバイホップオプションは推奨されません。遅い処理パスに。新しいホップバイホップオプションの定義を検討している設計者は、この可能性のある動作に注意する必要があります。標準化する前に新しいホップバイホップオプションが必要な理由が非常に明確である必要があります。"
    },
    {
      "indent": 3,
      "text": "Instead of defining new extension headers, it is recommended that the Destination Options header is used to carry optional information that must be examined only by a packet's destination node(s), because they provide better handling and backward compatibility.",
      "ja": "新しい拡張ヘッダーを定義する代わりに、Destination Optionsヘッダーを使用して、パケットの宛先ノードのみが検査する必要のあるオプション情報を運ぶことをお勧めします。これにより、処理と下位互換性が向上します。"
    },
    {
      "indent": 3,
      "text": "If new extension headers are defined, they need to use the following format:",
      "ja": "新しい拡張ヘッダーが定義されている場合、次の形式を使用する必要があります。"
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  |  Hdr Ext Len  |                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n|                                                               |\n.                                                               .\n.                  Header-Specific Data                         .\n.                                                               .\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Next Header 8-bit selector. Identifies the type of header immediately following the extension header. Uses the same values as the IPv4 Protocol field [IANA-PN].",
      "ja": "次のヘッダー8ビットセレクター。拡張ヘッダーの直後のヘッダーのタイプを識別します。 IPv4プロトコルフィールド[IANA-PN]と同じ値を使用します。"
    },
    {
      "indent": 6,
      "text": "Hdr Ext Len 8-bit unsigned integer. Length of the Destination Options header in 8-octet units, not including the first 8 octets.",
      "ja": "Hdr Ext Len 8ビット符号なし整数。最初の8オクテットを含まない、8オクテット単位の宛先オプションヘッダーの長さ。"
    },
    {
      "indent": 6,
      "text": "Header Specific Data Variable-length field. Fields specific to the extension header.",
      "ja": "ヘッダー固有のデータ可変長フィールド。拡張ヘッダーに固有のフィールド。"
    },
    {
      "indent": 0,
      "text": "5. Packet Size Issues",
      "section_title": true,
      "ja": "5. パケットサイズの問題"
    },
    {
      "indent": 3,
      "text": "IPv6 requires that every link in the Internet have an MTU of 1280 octets or greater. This is known as the IPv6 minimum link MTU. On any link that cannot convey a 1280-octet packet in one piece, link-specific fragmentation and reassembly must be provided at a layer below IPv6.",
      "ja": "IPv6では、インターネットのすべてのリンクのMTUが1280オクテット以上である必要があります。これは、IPv6最小リンクMTUと呼ばれます。 1280オクテットのパケットを1つにまとめて伝送できないリンクでは、リンク固有のフラグメンテーションと再構成をIPv6の下のレイヤーで提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "Links that have a configurable MTU (for example, PPP links [RFC1661]) must be configured to have an MTU of at least 1280 octets; it is recommended that they be configured with an MTU of 1500 octets or greater, to accommodate possible encapsulations (i.e., tunneling) without incurring IPv6-layer fragmentation.",
      "ja": "構成可能なMTUを持つリンク（たとえば、PPPリンク[RFC1661]）は、少なくとも1280オクテットのMTUを持つように構成する必要があります。 IPv6レイヤーの断片化を招くことなくカプセル化（つまり、トンネリング）に対応できるように、MTUを1500オクテット以上に構成することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "From each link to which a node is directly attached, the node must be able to accept packets as large as that link's MTU.",
      "ja": "ノードが直接接続されている各リンクから、ノードはそのリンクのMTUと同じ大きさのパケットを受け入れることができる必要があります。"
    },
    {
      "indent": 3,
      "text": "It is strongly recommended that IPv6 nodes implement Path MTU Discovery [RFC8201], in order to discover and take advantage of path MTUs greater than 1280 octets. However, a minimal IPv6 implementation (e.g., in a boot ROM) may simply restrict itself to sending packets no larger than 1280 octets, and omit implementation of Path MTU Discovery.",
      "ja": "1280オクテットより大きいパスMTUを発見して利用するために、IPv6ノードがパスMTU発見[RFC8201]を実装することを強くお勧めします。ただし、最小限のIPv6実装（たとえば、ブートROMで）は、それ自体を1280オクテット以下のパケットの送信に制限し、パスMTU検出の実装を省略します。"
    },
    {
      "indent": 3,
      "text": "In order to send a packet larger than a path's MTU, a node may use the IPv6 Fragment header to fragment the packet at the source and have it reassembled at the destination(s). However, the use of such fragmentation is discouraged in any application that is able to adjust its packets to fit the measured path MTU (i.e., down to 1280 octets).",
      "ja": "パスのMTUよりも大きいパケットを送信するために、ノードはIPv6フラグメントヘッダーを使用して送信元でパケットをフラグメント化し、宛先で再構成させることができます。ただし、そのような断片化の使用は、測定されたパスMTU（つまり、最低1280オクテット）に合わせてパケットを調整できるアプリケーションでは推奨されません。"
    },
    {
      "indent": 3,
      "text": "A node must be able to accept a fragmented packet that, after reassembly, is as large as 1500 octets. A node is permitted to accept fragmented packets that reassemble to more than 1500 octets. An upper-layer protocol or application that depends on IPv6 fragmentation to send packets larger than the MTU of a path should not send packets larger than 1500 octets unless it has assurance that the destination is capable of reassembling packets of that larger size.",
      "ja": "ノードは、再構成後、1500オクテットにもなる断片化されたパケットを受け入れることができる必要があります。ノードは、1500オクテット以上に再構成される断片化されたパケットを受け入れることが許可されています。 IPv6フラグメンテーションに依存してパスのMTUより大きいパケットを送信する上位層プロトコルまたはアプリケーションは、宛先がそのより大きなサイズのパケットを再構成できることが保証されていない限り、1500オクテットを超えるパケットを送信しないでください。"
    },
    {
      "indent": 0,
      "text": "6. Flow Labels",
      "section_title": true,
      "ja": "6. フローラベル"
    },
    {
      "indent": 3,
      "text": "The 20-bit Flow Label field in the IPv6 header is used by a source to label sequences of packets to be treated in the network as a single flow.",
      "ja": "IPv6ヘッダーの20ビットのフローラベルフィールドは、ネットワークで単一のフローとして扱われるパケットのシーケンスにラベルを付けるためにソースによって使用されます。"
    },
    {
      "indent": 3,
      "text": "The current definition of the IPv6 Flow Label can be found in [RFC6437].",
      "ja": "IPv6フローラベルの現在の定義は、[RFC6437]にあります。"
    },
    {
      "indent": 0,
      "text": "7. Traffic Classes",
      "section_title": true,
      "ja": "7. トラフィッククラス"
    },
    {
      "indent": 3,
      "text": "The 8-bit Traffic Class field in the IPv6 header is used by the network for traffic management. The value of the Traffic Class bits in a received packet or fragment might be different from the value sent by the packet's source.",
      "ja": "IPv6ヘッダーの8ビットトラフィッククラスフィールドは、ネットワークでトラフィック管理に使用されます。受信したパケットまたはフラグメントのトラフィッククラスビットの値は、パケットのソースから送信された値とは異なる場合があります。"
    },
    {
      "indent": 3,
      "text": "The current use of the Traffic Class field for Differentiated Services and Explicit Congestion Notification is specified in [RFC2474] and [RFC3168].",
      "ja": "Differentiated ServicesおよびExplicit Congestion Notificationの現在のトラフィッククラスフィールドの使用は、[RFC2474]および[RFC3168]で指定されています。"
    },
    {
      "indent": 0,
      "text": "8. Upper-Layer Protocol Issues",
      "section_title": true,
      "ja": "8. 上位層プロトコルの問題"
    },
    {
      "indent": 0,
      "text": "8.1. Upper-Layer Checksums",
      "section_title": true,
      "ja": "8.1. 上位層のチェックサム"
    },
    {
      "indent": 3,
      "text": "Any transport or other upper-layer protocol that includes the addresses from the IP header in its checksum computation must be modified for use over IPv6, to include the 128-bit IPv6 addresses instead of 32-bit IPv4 addresses. In particular, the following illustration shows the TCP and UDP \"pseudo-header\" for IPv6:",
      "ja": "チェックサム計算にIPヘッダーからのアドレスを含むトランスポートまたはその他の上位層プロトコルは、32ビットIPv4アドレスの代わりに128ビットIPv6アドレスを含めるように、IPv6で使用できるように変更する必要があります。特に、次の図は、IPv6のTCPおよびUDPの「疑似ヘッダー」を示しています。"
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                                                               +\n|                                                               |\n+                         Source Address                        +\n|                                                               |\n+                                                               +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                                                               +\n|                                                               |\n+                      Destination Address                      +\n|                                                               |\n+                                                               +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                   Upper-Layer Packet Length                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      zero                     |  Next Header  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "o If the IPv6 packet contains a Routing header, the Destination Address used in the pseudo-header is that of the final destination. At the originating node, that address will be in the last element of the Routing header; at the recipient(s), that address will be in the Destination Address field of the IPv6 header.",
      "ja": "o IPv6パケットにルーティングヘッダーが含まれている場合、疑似ヘッダーで使用される宛先アドレスは、最終宛先のアドレスです。発信ノードでは、そのアドレスはルーティングヘッダーの最後の要素に含まれます。受信者では、そのアドレスはIPv6ヘッダーの宛先アドレスフィールドにあります。"
    },
    {
      "indent": 6,
      "text": "o The Next Header value in the pseudo-header identifies the upper-layer protocol (e.g., 6 for TCP or 17 for UDP). It will differ from the Next Header value in the IPv6 header if there are extension headers between the IPv6 header and the upper-layer header.",
      "ja": "o 疑似ヘッダーの次のヘッダー値は、上位層プロトコルを識別します（たとえば、TCPの場合は6、UDPの場合は17）。 IPv6ヘッダーと上位層ヘッダーの間に拡張ヘッダーがある場合、IPv6ヘッダーの次のヘッダー値とは異なります。"
    },
    {
      "indent": 6,
      "text": "o The Upper-Layer Packet Length in the pseudo-header is the length of the upper-layer header and data (e.g., TCP header plus TCP data). Some upper-layer protocols carry their own length information (e.g., the Length field in the UDP header); for such protocols, that is the length used in the pseudo-header. Other protocols (such as TCP) do not carry their own length information, in which case the length used in the pseudo-header is the Payload Length from the IPv6 header, minus the length of any extension headers present between the IPv6 header and the upper-layer header.",
      "ja": "o 疑似ヘッダーの上位層パケット長は、上位層ヘッダーとデータ（TCPヘッダーとTCPデータなど）の長さです。一部の上位層プロトコルは、独自の長さ情報（たとえば、UDPヘッダーのLengthフィールド）を伝送します。そのようなプロトコルの場合、それは疑似ヘッダーで使用される長さです。他のプロトコル（TCPなど）は独自の長さ情報を運びません。この場合、疑似ヘッダーで使用される長さは、IPv6ヘッダーからのペイロード長から、IPv6ヘッダーと上位ヘッダーの間にある拡張ヘッダーの長さを引いたものです。層ヘッダー。"
    },
    {
      "indent": 6,
      "text": "o Unlike IPv4, the default behavior when UDP packets are originated by an IPv6 node is that the UDP checksum is not optional. That is, whenever originating a UDP packet, an IPv6 node must compute a UDP checksum over the packet and the pseudo-header, and, if that computation yields a result of zero, it must be changed to hex FFFF for placement in the UDP header. IPv6 receivers must discard UDP packets containing a zero checksum and should log the error.",
      "ja": "o IPv4とは異なり、UDPパケットがIPv6ノードによって発信されたときのデフォルトの動作は、UDPチェックサムはオプションではありません。つまり、UDPパケットを発信するときは常に、IPv6ノードはパケットと疑似ヘッダーに対してUDPチェックサムを計算する必要があり、その計算結果がゼロになる場合は、UDPヘッダーに配置するために16進FFFFに変更する必要があります。 。 IPv6レシーバーは、ゼロのチェックサムを含むUDPパケットを破棄し、エラーをログに記録する必要があります。"
    },
    {
      "indent": 6,
      "text": "o As an exception to the default behavior, protocols that use UDP as a tunnel encapsulation may enable zero-checksum mode for a specific port (or set of ports) for sending and/or receiving. Any node implementing zero-checksum mode must follow the requirements specified in \"Applicability Statement for the Use of IPv6 UDP Datagrams with Zero Checksums\" [RFC6936].",
      "ja": "o デフォルトの動作の例外として、UDPをトンネルカプセル化として使用するプロトコルは、特定のポート（またはポートのセット）のゼロチェックサムモードを送信または受信用に有効にする場合があります。ゼロチェックサムモードを実装するノードは、「ゼロチェックサムを使用したIPv6 UDPデータグラムの使用に関する適用性ステートメント」[RFC6936]で指定された要件に従う必要があります。"
    },
    {
      "indent": 3,
      "text": "The IPv6 version of ICMP [RFC4443] includes the above pseudo-header in its checksum computation; this is a change from the IPv4 version of ICMP, which does not include a pseudo-header in its checksum. The reason for the change is to protect ICMP from misdelivery or corruption of those fields of the IPv6 header on which it depends, which, unlike IPv4, are not covered by an internet-layer checksum. The Next Header field in the pseudo-header for ICMP contains the value 58, which identifies the IPv6 version of ICMP.",
      "ja": "ICMP [RFC4443]のIPv6バージョンは、そのチェックサム計算に上記の疑似ヘッダーを含みます。これは、ICMPのIPv4バージョンからの変更で、チェックサムに疑似ヘッダーが含まれていません。この変更の理由は、ICMPが依存するIPv6ヘッダーのフィールドの誤配信または破損からICMPを保護するためです。これは、IPv4とは異なり、インターネット層のチェックサムではカバーされません。 ICMPの疑似ヘッダーの次のヘッダーフィールドには、ICMPのIPv6バージョンを識別する値58が含まれています。"
    },
    {
      "indent": 0,
      "text": "8.2. Maximum Packet Lifetime",
      "section_title": true,
      "ja": "8.2. 最大パケット寿命"
    },
    {
      "indent": 3,
      "text": "Unlike IPv4, IPv6 nodes are not required to enforce maximum packet lifetime. That is the reason the IPv4 \"Time-to-Live\" field was renamed \"Hop Limit\" in IPv6. In practice, very few, if any, IPv4 implementations conform to the requirement that they limit packet lifetime, so this is not a change in practice. Any upper-layer protocol that relies on the internet layer (whether IPv4 or IPv6) to limit packet lifetime ought to be upgraded to provide its own mechanisms for detecting and discarding obsolete packets.",
      "ja": "IPv4とは異なり、IPv6ノードは最大のパケットライフタイムを強制する必要はありません。これが、IPv6でIPv4の「Time-to-Live」フィールドの名前が「Hop Limit」に変更された理由です。実際には、IPv4の実装がパケットの有効期間を制限するという要件に準拠している場合はほとんどありません。したがって、これは実際の変更ではありません。パケットの存続期間を制限するためにインターネット層（IPv4またはIPv6のいずれか）に依存する上位層プロトコルは、古いパケットを検出して破棄する独自のメカニズムを提供するようにアップグレードする必要があります。"
    },
    {
      "indent": 0,
      "text": "8.3. Maximum Upper-Layer Payload Size",
      "section_title": true,
      "ja": "8.3. 上位層ペイロードの最大サイズ"
    },
    {
      "indent": 3,
      "text": "When computing the maximum payload size available for upper-layer data, an upper-layer protocol must take into account the larger size of the IPv6 header relative to the IPv4 header. For example, in IPv4, TCP's Maximum Segment Size (MSS) option is computed as the maximum packet size (a default value or a value learned through Path MTU Discovery) minus 40 octets (20 octets for the minimum-length IPv4 header and 20 octets for the minimum-length TCP header). When using TCP over IPv6, the MSS must be computed as the maximum packet size minus 60 octets, because the minimum-length IPv6 header (i.e., an IPv6 header with no extension headers) is 20 octets longer than a minimum-length IPv4 header.",
      "ja": "上位層のデータに使用できる最大ペイロードサイズを計算する場合、上位層のプロトコルでは、IPv4ヘッダーに比べてIPv6ヘッダーのサイズが大きいことを考慮する必要があります。たとえば、IPv4では、TCPの最大セグメントサイズ（MSS）オプションは、最大パケットサイズ（デフォルト値またはPath MTU Discoveryを通じて学習した値）から40オクテット（最小長のIPv4ヘッダー用の20オクテットおよび20オクテット）を引いたものとして計算されます。最小長のTCPヘッダー）。 TCP over IPv6を使用する場合、最小長のIPv6ヘッダー（つまり、拡張ヘッダーのないIPv6ヘッダー）は最小長のIPv4ヘッダーよりも20オクテット長いため、MSSは最大パケットサイズから60オクテットを引いたものとして計算する必要があります。"
    },
    {
      "indent": 0,
      "text": "8.4. Responding to Packets Carrying Routing Headers",
      "section_title": true,
      "ja": "8.4. ルーティングヘッダーを運ぶパケットへの応答"
    },
    {
      "indent": 3,
      "text": "When an upper-layer protocol sends one or more packets in response to a received packet that included a Routing header, the response packet(s) must not include a Routing header that was automatically derived by \"reversing\" the received Routing header UNLESS the integrity and authenticity of the received Source Address and Routing header have been verified (e.g., via the use of an Authentication header in the received packet). In other words, only the following kinds of packets are permitted in response to a received packet bearing a Routing header:",
      "ja": "上位層プロトコルがルーティングヘッダーを含む受信パケットに応答して1つまたは複数のパケットを送信する場合、整合性がない限り、応答パケットには、受信したルーティングヘッダーを「逆転」することによって自動的に生成されたルーティングヘッダーを含めないでください。受信したソースアドレスとルーティングヘッダーの信頼性が確認されている（たとえば、受信したパケットの認証ヘッダーを使用して）。つまり、ルーティングヘッダーが付いた受信パケットに応じて、次の種類のパケットのみが許可されます。"
    },
    {
      "indent": 6,
      "text": "o Response packets that do not carry Routing headers.",
      "ja": "o ルーティングヘッダーを伝送しない応答パケット。"
    },
    {
      "indent": 6,
      "text": "o Response packets that carry Routing headers that were NOT derived by reversing the Routing header of the received packet (for example, a Routing header supplied by local configuration).",
      "ja": "o 受信したパケットのルーティングヘッダーを逆にしても生成されなかったルーティングヘッダーを運ぶ応答パケット（たとえば、ローカル構成によって提供されるルーティングヘッダー）。"
    },
    {
      "indent": 6,
      "text": "o Response packets that carry Routing headers that were derived by reversing the Routing header of the received packet IF AND ONLY IF the integrity and authenticity of the Source Address and Routing header from the received packet have been verified by the responder.",
      "ja": "o 受信したパケットの送信元アドレスとルーティングヘッダーの整合性と信頼性がレスポンダによって検証された場合に限り、受信したパケットのルーティングヘッダーを逆にすることによって導出されたルーティングヘッダーを含む応答パケット。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "RFC 2460 is referenced in a number of IANA registries. These include:",
      "ja": "RFC 2460は、多くのIANAレジストリで参照されています。これらには以下が含まれます："
    },
    {
      "indent": 6,
      "text": "o Internet Protocol Version 6 (IPv6) Parameters [IANA-6P]",
      "ja": "o インターネットプロトコルバージョン6（IPv6）パラメータ[IANA-6P]"
    },
    {
      "indent": 6,
      "text": "o Assigned Internet Protocol Numbers [IANA-PN]",
      "ja": "o 割り当てられたインターネットプロトコル番号[IANA-PN]"
    },
    {
      "indent": 6,
      "text": "o ONC RPC Network Identifiers (netids) [IANA-NI]",
      "ja": "o ONC RPCネットワーク識別子（netids）[IANA-NI]"
    },
    {
      "indent": 6,
      "text": "o Network Layer Protocol Identifiers (NLPIDs) of Interest [IANA-NL]",
      "ja": "o 対象のネットワーク層プロトコル識別子（NLPID）[IANA-NL]"
    },
    {
      "indent": 6,
      "text": "o Protocol Registries [IANA-PR]",
      "ja": "o プロトコルレジストリ[IANA-PR]"
    },
    {
      "indent": 3,
      "text": "The IANA has updated these references to point to this document.",
      "ja": "IANAは、このドキュメントを指すようにこれらの参照を更新しました。"
    },
    {
      "indent": 0,
      "text": "10. Security Considerations",
      "section_title": true,
      "ja": "10. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "IPv6, from the viewpoint of the basic format and transmission of packets, has security properties that are similar to IPv4. These security issues include:",
      "ja": "IPv6は、基本的な形式とパケットの伝送の観点から、IPv4と同様のセキュリティ特性を備えています。これらのセキュリティ問題は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "o Eavesdropping, where on-path elements can observe the whole packet (including both contents and metadata) of each IPv6 datagram. o Replay, where the attacker records a sequence of packets off of the wire and plays them back to the party that originally received them. o Packet insertion, where the attacker forges a packet with some chosen set of properties and injects it into the network. o Packet deletion, where the attacker removes a packet from the wire. o Packet modification, where the attacker removes a packet from the wire, modifies it, and reinjects it into the network. o Man-in-the-middle (MITM) attacks, where the attacker subverts the communication stream in order to pose as the sender to receiver and the receiver to the sender. o Denial-of-service (DoS) attacks, where the attacker sends large amounts of legitimate traffic to a destination to overwhelm it.",
      "ja": "o 傍受。パス上の要素が各IPv6データグラムのパケット全体（コンテンツとメタデータの両方を含む）を監視できます。 oリプレイ。攻撃者は一連のパケットを有線で記録し、最初にパケットを受信した側に再生します。 oパケット挿入。攻撃者は、選択したプロパティのセットでパケットを偽造し、ネットワークに挿入します。 oパケット削除。攻撃者がパケットをネットワークから削除します。 oパケットの変更。攻撃者がパケットをワイヤから削除し、変更して、ネットワークに再注入します。 o中間者（MITM）攻撃。攻撃者は、送信者から受信者へ、受信者から送信者へと装うために通信ストリームを破壊します。 oサービス拒否（DoS）攻撃。攻撃者は大量の正当なトラフィックを宛先に送信して、宛先を圧倒します。"
    },
    {
      "indent": 3,
      "text": "IPv6 packets can be protected from eavesdropping, replay, packet insertion, packet modification, and MITM attacks by use of the \"Security Architecture for the Internet Protocol\" [RFC4301]. In addition, upper-layer protocols such as Transport Layer Security (TLS) or Secure Shell (SSH) can be used to protect the application-layer traffic running on top of IPv6.",
      "ja": "IPv6パケットは、「インターネットプロトコルのセキュリティアーキテクチャ」[RFC4301]を使用して、盗聴、再生、パケット挿入、パケット変更、およびMITM攻撃から保護できます。さらに、トランスポート層セキュリティ（TLS）やセキュアシェル（SSH）などの上位層プロトコルを使用して、IPv6上で実行されているアプリケーション層トラフィックを保護できます。"
    },
    {
      "indent": 3,
      "text": "There is not any mechanism to protect against DoS attacks. Defending against these type of attacks is outside the scope of this specification.",
      "ja": "DoS攻撃から保護するメカニズムはありません。これらのタイプの攻撃に対する防御は、この仕様の範囲外です。"
    },
    {
      "indent": 3,
      "text": "IPv6 addresses are significantly larger than IPv4 addresses making it much harder to scan the address space across the Internet and even on a single network link (e.g., Local Area Network). See [RFC7707] for more information.",
      "ja": "IPv6アドレスはIPv4アドレスよりも大幅に大きいため、インターネット全体や単一のネットワークリンク（ローカルエリアネットワークなど）でもアドレススペースをスキャンするのは非常に困難です。詳細については、[RFC7707]を参照してください。"
    },
    {
      "indent": 3,
      "text": "IPv6 addresses of nodes are expected to be more visible on the Internet as compared with IPv4 since the use of address translation technology is reduced. This creates some additional privacy issues such as making it easier to distinguish endpoints. See [RFC7721] for more information.",
      "ja": "ノードのIPv6アドレスは、アドレス変換テクノロジの使用が削減されるため、IPv4と比較してインターネット上でより見やすくなると予想されます。これにより、エンドポイントを区別しやすくするなど、プライバシーに関する追加の問題が発生します。詳細については、[RFC7721]を参照してください。"
    },
    {
      "indent": 3,
      "text": "The design of IPv6 extension header architecture, while adding a lot of flexibility, also creates new security challenges. As noted below, issues relating to the Fragment extension header have been resolved, but it's clear that for any new extension header designed in the future, the security implications need to be examined thoroughly, and this needs to include how the new extension header works with existing extension headers. See [RFC7045] for more information.",
      "ja": "IPv6拡張ヘッダーアーキテクチャの設計は、多くの柔軟性を追加する一方で、新しいセキュリティの課題も生み出します。以下に示すように、フラグメント拡張ヘッダーに関連する問題は解決されましたが、将来設計される新しい拡張ヘッダーについては、セキュリティへの影響を徹底的に調査する必要があり、これには新しい拡張ヘッダーがどのように機能するかを含める必要があります既存の拡張ヘッダー。詳細については、[RFC7045]を参照してください。"
    },
    {
      "indent": 3,
      "text": "This version of the IPv6 specification resolves a number of security issues that were found with the previous version [RFC2460] of the IPv6 specification. These include:",
      "ja": "このバージョンのIPv6仕様では、IPv6仕様の以前のバージョン[RFC2460]で見つかった多くのセキュリティ問題が解決されています。これらには以下が含まれます："
    },
    {
      "indent": 6,
      "text": "o Revised the text to handle the case of fragments that are whole datagrams (i.e., both the Fragment Offset field and the M flag are zero). If received, they should be processed as a reassembled packet. Any other fragments that match should be processed independently. The Fragment creation process was modified to not create whole datagram fragments (Fragment Offset field and the M flag are zero). See [RFC6946] and [RFC8021] for more information.",
      "ja": "o データグラム全体であるフラグメントのケースを処理するようにテキストを改訂しました（つまり、フラグメントオフセットフィールドとMフラグの両方がゼロです）。受信した場合は、再構成されたパケットとして処理する必要があります。一致する他のフラグメントは、個別に処理する必要があります。フラグメント作成プロセスは、データグラムフラグメント全体を作成しないように変更されました（フラグメントオフセットフィールドとMフラグはゼロです）。詳細については、[RFC6946]および[RFC8021]を参照してください。"
    },
    {
      "indent": 6,
      "text": "o Removed the paragraph in Section 5 that required including a Fragment header to outgoing packets if an ICMP Packet Too Big message reporting a Next-Hop MTU is less than 1280. See [RFC6946] for more information.",
      "ja": "o Next-Hop MTUを報告するICMP Packet Too Bigメッセージが1280未満である場合、送信パケットにFragmentヘッダーを含める必要があるセクション5の段落を削除しました。詳細については、[RFC6946]を参照してください。"
    },
    {
      "indent": 6,
      "text": "o Changed the text to require that IPv6 nodes must not create overlapping fragments. Also, when reassembling an IPv6 datagram, if one or more of its constituent fragments is determined to be an overlapping fragment, the entire datagram (and any constituent fragments) must be silently discarded. Includes clarification that no ICMP error message should be sent if overlapping fragments are received. See [RFC5722] for more information.",
      "ja": "o IPv6ノードが重複フラグメントを作成してはならないことを要求するようにテキストを変更しました。また、IPv6データグラムを再構成するときに、その構成フラグメントの1つ以上が重複フラグメントであると判断された場合、データグラム全体（および構成フラグメント）は警告なしに破棄される必要があります。重複するフラグメントが受信された場合、ICMPエラーメッセージを送信しないようにする必要があるという説明が含まれています。詳細については、[RFC5722]を参照してください。"
    },
    {
      "indent": 6,
      "text": "o Revised the text to require that all headers through the first upper-layer header are in the first fragment. See [RFC7112] for more information.",
      "ja": "o 最初の上位層ヘッダーを通るすべてのヘッダーが最初のフラグメントにあることを要求するようにテキストを改訂しました。詳細については、[RFC7112]を参照してください。"
    },
    {
      "indent": 6,
      "text": "o Incorporated the updates from [RFC5095] and [RFC5871] to remove the description of the Routing Header type 0 (RH0), that the allocations guidelines for Routing headers are specified in RFC 5871, and removed RH0 from the list of required extension headers.",
      "ja": "o [RFC5095]と[RFC5871]からの更新を組み込んで、ルーティングヘッダータイプ0（RH0）の説明を削除し、ルーティングヘッダーの割り当てガイドラインをRFC 5871で指定し、RH0を必要な拡張ヘッダーのリストから削除しました。"
    },
    {
      "indent": 3,
      "text": "Security issues relating to other parts of IPv6 including addressing, ICMPv6, Path MTU Discovery, etc., are discussed in the appropriate specifications.",
      "ja": "アドレッシング、ICMPv6、パスMTUディスカバリーなど、IPv6の他の部分に関連するセキュリティの問題は、適切な仕様で説明されています。"
    },
    {
      "indent": 0,
      "text": "11. References",
      "section_title": true,
      "ja": "11. 参考文献"
    },
    {
      "indent": 0,
      "text": "11.1. Normative References",
      "section_title": true,
      "ja": "11.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC791] Postel, J., \"Internet Protocol\", STD 5, RFC 791, DOI 10.17487/RFC0791, September 1981, <http://www.rfc-editor.org/info/rfc791>.",
      "ja": "[RFC791] Postel、J。、「インターネットプロトコル」、STD 5、RFC 791、DOI 10.17487 / RFC0791、1981年9月、<http://www.rfc-editor.org/info/rfc791>。"
    },
    {
      "indent": 3,
      "text": "[RFC2474] Nichols, K., Blake, S., Baker, F., and D. Black, \"Definition of the Differentiated Services Field (DS Field) in the IPv4 and IPv6 Headers\", RFC 2474, DOI 10.17487/RFC2474, December 1998, <http://www.rfc-editor.org/info/rfc2474>.",
      "ja": "[RFC2474] Nichols、K.、Blake、S.、Baker、F。、およびD. Black、「IPv4およびIPv6ヘッダーのDiffServフィールド（DSフィールド）の定義」、RFC 2474、DOI 10.17487 / RFC2474、 1998年12月、<http://www.rfc-editor.org/info/rfc2474>。"
    },
    {
      "indent": 3,
      "text": "[RFC3168] Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition of Explicit Congestion Notification (ECN) to IP\", RFC 3168, DOI 10.17487/RFC3168, September 2001, <http://www.rfc-editor.org/info/rfc3168>.",
      "ja": "[RFC3168]ラマクリシュナン、K。、フロイド、S。、およびD.ブラック、「IPへの明示的輻輳通知（ECN）の追加」、RFC 3168、DOI 10.17487 / RFC3168、2001年9月、<http：// www。 rfc-editor.org/info/rfc3168>。"
    },
    {
      "indent": 3,
      "text": "[RFC4291] Hinden, R. and S. Deering, \"IP Version 6 Addressing Architecture\", RFC 4291, DOI 10.17487/RFC4291, February 2006, <http://www.rfc-editor.org/info/rfc4291>.",
      "ja": "[RFC4291] Hinden、R。およびS. Deering、「IPバージョン6アドレッシングアーキテクチャ」、RFC 4291、DOI 10.17487 / RFC4291、2006年2月、<http://www.rfc-editor.org/info/rfc4291>。"
    },
    {
      "indent": 3,
      "text": "[RFC4443] Conta, A., Deering, S., and M. Gupta, Ed., \"Internet Control Message Protocol (ICMPv6) for the Internet Protocol Version 6 (IPv6) Specification\", STD 89, RFC 4443, DOI 10.17487/RFC4443, March 2006, <http://www.rfc-editor.org/info/rfc4443>.",
      "ja": "[RFC4443] Conta、A.、Deering、S。、およびM. Gupta、編、「インターネットプロトコルバージョン6（IPv6）仕様のためのインターネット制御メッセージプロトコル（ICMPv6）」、STD 89、RFC 4443、DOI 10.17487 / RFC4443、2006年3月、<http://www.rfc-editor.org/info/rfc4443>。"
    },
    {
      "indent": 3,
      "text": "[RFC6437] Amante, S., Carpenter, B., Jiang, S., and J. Rajahalme, \"IPv6 Flow Label Specification\", RFC 6437, DOI 10.17487/RFC6437, November 2011, <http://www.rfc-editor.org/info/rfc6437>.",
      "ja": "[RFC6437] Amante、S.、Carpenter、B.、Jiang、S。、およびJ. Rajahalme、「IPv6 Flow Label Specification」、RFC 6437、DOI 10.17487 / RFC6437、2011年11月、<http：//www.rfc- editor.org/info/rfc6437>。"
    },
    {
      "indent": 0,
      "text": "11.2. Informative References",
      "section_title": true,
      "ja": "11.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[Err2541] RFC Errata, Erratum ID 2541, RFC 2460.",
      "ja": "[Err2541] RFC Errata、Erratum ID 2541、RFC 2460。"
    },
    {
      "indent": 3,
      "text": "[Err4279] RFC Errata, Erratum ID 4279, RFC 2460.",
      "ja": "[Err4279] RFC Errata、Erratum ID 4279、RFC 2460。"
    },
    {
      "indent": 3,
      "text": "[Err4657] RFC Errata, Erratum ID 4657, RFC 2460.",
      "ja": "[Err4657] RFC Errata、Erratum ID 4657、RFC 2460。"
    },
    {
      "indent": 3,
      "text": "[Err4662] RFC Errata, Erratum ID 4662, RFC 2460.",
      "ja": "[Err4662] RFC Errata、Erratum ID 4662、RFC 2460。"
    },
    {
      "indent": 3,
      "text": "[IANA-6P] IANA, \"Internet Protocol Version 6 (IPv6) Parameters\", <https://www.iana.org/assignments/ipv6-parameters>.",
      "ja": "[IANA-6P] IANA、「インターネットプロトコルバージョン6（IPv6）パラメータ」、<https://www.iana.org/assignments/ipv6-parameters>。"
    },
    {
      "indent": 3,
      "text": "[IANA-EH] IANA, \"IPv6 Extension Header Types\", <https://www.iana.org/assignments/ipv6-parameters>.",
      "ja": "[IANA-EH] IANA、「IPv6拡張ヘッダータイプ」、<https://www.iana.org/assignments/ipv6-parameters>。"
    },
    {
      "indent": 3,
      "text": "[IANA-NI] IANA, \"ONC RPC Network Identifiers (netids)\", <https://www.iana.org/assignments/rpc-netids>.",
      "ja": "[IANA-NI] IANA、「ONC RPC Network Identifiers（netids）」、<https://www.iana.org/assignments/rpc-netids>。"
    },
    {
      "indent": 3,
      "text": "[IANA-NL] IANA, \"Network Layer Protocol Identifiers (NLPIDs) of Interest\", <https://www.iana.org/assignments/nlpids>.",
      "ja": "[IANA-NL] IANA、「対象のネットワーク層プロトコル識別子（NLPID）」、<https://www.iana.org/assignments/nlpids>。"
    },
    {
      "indent": 3,
      "text": "[IANA-PN] IANA, \"Protocol Numbers\", <https://www.iana.org/assignments/protocol-numbers>.",
      "ja": "[IANA-PN] IANA、「プロトコル番号」、<https://www.iana.org/assignments/protocol-numbers>。"
    },
    {
      "indent": 3,
      "text": "[IANA-PR] IANA, \"Protocol Registries\", <https://www.iana.org/ protocols>.",
      "ja": "[IANA-PR] IANA、「プロトコルレジストリ」、<https://www.iana.org/ protocol>。"
    },
    {
      "indent": 3,
      "text": "[IANA-RH] IANA, \"Routing Types\", <https://www.iana.org/assignments/ ipv6-parameters>.",
      "ja": "[IANA-RH] IANA、「ルーティングタイプ」、<https://www.iana.org/assignments/ ipv6-parameters>。"
    },
    {
      "indent": 3,
      "text": "[RFC1661] Simpson, W., Ed., \"The Point-to-Point Protocol (PPP)\", STD 51, RFC 1661, DOI 10.17487/RFC1661, July 1994, <http://www.rfc-editor.org/info/rfc1661>.",
      "ja": "[RFC1661] Simpson、W.、Ed。、 \"The Point-to-Point Protocol（PPP）\"、STD 51、RFC 1661、DOI 10.17487 / RFC1661、July 1994、<http://www.rfc-editor.org / info / rfc1661>。"
    },
    {
      "indent": 3,
      "text": "[RFC2460] Deering, S. and R. Hinden, \"Internet Protocol, Version 6 (IPv6) Specification\", RFC 2460, DOI 10.17487/RFC2460, December 1998, <http://www.rfc-editor.org/info/rfc2460>.",
      "ja": "[RFC2460] Deering、S。およびR. Hinden、「インターネットプロトコル、バージョン6（IPv6）仕様」、RFC 2460、DOI 10.17487 / RFC2460、1998年12月、<http://www.rfc-editor.org/info/ rfc2460>。"
    },
    {
      "indent": 3,
      "text": "[RFC4301] Kent, S. and K. Seo, \"Security Architecture for the Internet Protocol\", RFC 4301, DOI 10.17487/RFC4301, December 2005, <http://www.rfc-editor.org/info/rfc4301>.",
      "ja": "[RFC4301] Kent、S。およびK. Seo、「インターネットプロトコルのセキュリティアーキテクチャ」、RFC 4301、DOI 10.17487 / RFC4301、2005年12月、<http://www.rfc-editor.org/info/rfc4301>。"
    },
    {
      "indent": 3,
      "text": "[RFC4302] Kent, S., \"IP Authentication Header\", RFC 4302, DOI 10.17487/RFC4302, December 2005, <http://www.rfc-editor.org/info/rfc4302>.",
      "ja": "[RFC4302]ケント、S。、「IP認証ヘッダー」、RFC 4302、DOI 10.17487 / RFC4302、2005年12月、<http://www.rfc-editor.org/info/rfc4302>。"
    },
    {
      "indent": 3,
      "text": "[RFC4303] Kent, S., \"IP Encapsulating Security Payload (ESP)\", RFC 4303, DOI 10.17487/RFC4303, December 2005, <http://www.rfc-editor.org/info/rfc4303>.",
      "ja": "[RFC4303]ケント、S。、「IPカプセル化セキュリティペイロード（ESP）」、RFC 4303、DOI 10.17487 / RFC4303、2005年12月、<http://www.rfc-editor.org/info/rfc4303>。"
    },
    {
      "indent": 3,
      "text": "[RFC5095] Abley, J., Savola, P., and G. Neville-Neil, \"Deprecation of Type 0 Routing Headers in IPv6\", RFC 5095, DOI 10.17487/RFC5095, December 2007, <http://www.rfc-editor.org/info/rfc5095>.",
      "ja": "[RFC5095] Abley、J.、Savola、P。、およびG. Neville-Neil、「Deprecation of Type 0 Routing Headers in IPv6」、RFC 5095、DOI 10.17487 / RFC5095、2007年12月、<http：//www.rfc -editor.org/info/rfc5095>。"
    },
    {
      "indent": 3,
      "text": "[RFC5722] Krishnan, S., \"Handling of Overlapping IPv6 Fragments\", RFC 5722, DOI 10.17487/RFC5722, December 2009, <http://www.rfc-editor.org/info/rfc5722>.",
      "ja": "[RFC5722] Krishnan、S。、「Handling of Overlapping IPv6 Fragments」、RFC 5722、DOI 10.17487 / RFC5722、2009年12月、<http://www.rfc-editor.org/info/rfc5722>。"
    },
    {
      "indent": 3,
      "text": "[RFC5871] Arkko, J. and S. Bradner, \"IANA Allocation Guidelines for the IPv6 Routing Header\", RFC 5871, DOI 10.17487/RFC5871, May 2010, <http://www.rfc-editor.org/info/rfc5871>.",
      "ja": "[RFC5871] Arkko、J。およびS. Bradner、「IPv6ルーティングヘッダーのIANA割り当てガイドライン」、RFC 5871、DOI 10.17487 / RFC5871、2010年5月、<http://www.rfc-editor.org/info/rfc5871 >。"
    },
    {
      "indent": 3,
      "text": "[RFC6564] Krishnan, S., Woodyatt, J., Kline, E., Hoagland, J., and M. Bhatia, \"A Uniform Format for IPv6 Extension Headers\", RFC 6564, DOI 10.17487/RFC6564, April 2012, <http://www.rfc-editor.org/info/rfc6564>.",
      "ja": "[RFC6564] Krishnan、S.、Woodyatt、J.、Kline、E.、Hoagland、J.、およびM. Bhatia、「A Uniform Format for IPv6 Extension Headers」、RFC 6564、DOI 10.17487 / RFC6564、April 2012、< http://www.rfc-editor.org/info/rfc6564>。"
    },
    {
      "indent": 3,
      "text": "[RFC6936] Fairhurst, G. and M. Westerlund, \"Applicability Statement for the Use of IPv6 UDP Datagrams with Zero Checksums\", RFC 6936, DOI 10.17487/RFC6936, April 2013, <http://www.rfc-editor.org/info/rfc6936>.",
      "ja": "[RFC6936] Fairhurst、G。およびM. Westerlund、「ゼロチェックサムを使用したIPv6 UDPデータグラムの使用に関する適用性声明」、RFC 6936、DOI 10.17487 / RFC6936、2013年4月、<http://www.rfc-editor.org / info / rfc6936>。"
    },
    {
      "indent": 3,
      "text": "[RFC6946] Gont, F., \"Processing of IPv6 \"Atomic\" Fragments\", RFC 6946, DOI 10.17487/RFC6946, May 2013, <http://www.rfc-editor.org/info/rfc6946>.",
      "ja": "[RFC6946] Gont、F。、「Processing of IPv6 \"Atomic\" Fragments」、RFC 6946、DOI 10.17487 / RFC6946、May 2013、<http://www.rfc-editor.org/info/rfc6946>。"
    },
    {
      "indent": 3,
      "text": "[RFC7045] Carpenter, B. and S. Jiang, \"Transmission and Processing of IPv6 Extension Headers\", RFC 7045, DOI 10.17487/RFC7045, December 2013, <http://www.rfc-editor.org/info/rfc7045>.",
      "ja": "[RFC7045] Carpenter、B。およびS. Jiang、「IPv6拡張ヘッダーの送信と処理」、RFC 7045、DOI 10.17487 / RFC7045、2013年12月、<http://www.rfc-editor.org/info/rfc7045> 。"
    },
    {
      "indent": 3,
      "text": "[RFC7112] Gont, F., Manral, V., and R. Bonica, \"Implications of Oversized IPv6 Header Chains\", RFC 7112, DOI 10.17487/RFC7112, January 2014, <http://www.rfc-editor.org/info/rfc7112>.",
      "ja": "[RFC7112] Gont、F.、Manral、V。、およびR. Bonica、「特大IPv6ヘッダーチェーンの影響」、RFC 7112、DOI 10.17487 / RFC7112、2014年1月、<http://www.rfc-editor.org / info / rfc7112>。"
    },
    {
      "indent": 3,
      "text": "[RFC7707] Gont, F. and T. Chown, \"Network Reconnaissance in IPv6 Networks\", RFC 7707, DOI 10.17487/RFC7707, March 2016, <http://www.rfc-editor.org/info/rfc7707>.",
      "ja": "[RFC7707] Gont、F。およびT. Chown、「IPv6ネットワークでのネットワーク偵察」、RFC 7707、DOI 10.17487 / RFC7707、2016年3月、<http://www.rfc-editor.org/info/rfc7707>。"
    },
    {
      "indent": 3,
      "text": "[RFC7721] Cooper, A., Gont, F., and D. Thaler, \"Security and Privacy Considerations for IPv6 Address Generation Mechanisms\", RFC 7721, DOI 10.17487/RFC7721, March 2016, <http://www.rfc-editor.org/info/rfc7721>.",
      "ja": "[RFC7721]クーパー、A。、ゴント、F。、およびD.ターラー、「IPv6アドレス生成メカニズムのセキュリティとプライバシーに関する考慮事項」、RFC 7721、DOI 10.17487 / RFC7721、2016年3月、<http：//www.rfc- editor.org/info/rfc7721>。"
    },
    {
      "indent": 3,
      "text": "[RFC7739] Gont, F., \"Security Implications of Predictable Fragment Identification Values\", RFC 7739, DOI 10.17487/RFC7739, February 2016, <http://www.rfc-editor.org/info/rfc7739>.",
      "ja": "[RFC7739] Gont、F。、「予測可能なフラグメント識別値のセキュリティへの影響」、RFC 7739、DOI 10.17487 / RFC7739、2016年2月、<http://www.rfc-editor.org/info/rfc7739>。"
    },
    {
      "indent": 3,
      "text": "[RFC8021] Gont, F., Liu, W., and T. Anderson, \"Generation of IPv6 Atomic Fragments Considered Harmful\", RFC 8021, DOI 10.17487/RFC8021, January 2017, <http://www.rfc-editor.org/info/rfc8021>.",
      "ja": "[RFC8021] Gont、F.、Liu、W。、およびT. Anderson、「Generation of IPv6 Atomic Fragments考慮される有害」、RFC 8021、DOI 10.17487 / RFC8021、2017年1月、<http：//www.rfc-editor。 org / info / rfc8021>。"
    },
    {
      "indent": 3,
      "text": "[RFC8201] McCann, J., Deering, S., Mogul, J., and R. Hinden, \"Path MTU Discovery for IP version 6\", STD 87, RFC 8201, DOI 10.17487/RFC8201, July 2017, <http://www.rfc-editor.org/info/rfc8201>.",
      "ja": "[RFC8201] McCann、J.、Deering、S.、Mogul、J。、およびR. Hinden、「Path MTU Discovery for IP version 6」、STD 87、RFC 8201、DOI 10.17487 / RFC8201、2017年7月、<http： //www.rfc-editor.org/info/rfc8201>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Formatting Guidelines for Options",
      "section_title": true,
      "ja": "付録A.オプションのフォーマットガイドライン"
    },
    {
      "indent": 3,
      "text": "This appendix gives some advice on how to lay out the fields when designing new options to be used in the Hop-by-Hop Options header or the Destination Options header, as described in Section 4.2. These guidelines are based on the following assumptions:",
      "ja": "この付録では、セクション4.2で説明されているように、Hop-by-Hop OptionsヘッダーまたはDestination Optionsヘッダーで使用される新しいオプションを設計するときにフィールドをレイアウトする方法についていくつかのアドバイスを提供します。これらのガイドラインは、次の前提に基づいています。"
    },
    {
      "indent": 6,
      "text": "o One desirable feature is that any multi-octet fields within the Option Data area of an option be aligned on their natural boundaries, i.e., fields of width n octets should be placed at an integer multiple of n octets from the start of the Hop-by-Hop or Destination Options header, for n = 1, 2, 4, or 8.",
      "ja": "o 望ましい機能の1つは、オプションのオプションデータ領域内のマルチオクテットフィールドを自然な境界に揃えることです。つまり、幅nオクテットのフィールドは、ホップバイの開始からnオクテットの整数倍に配置する必要があります。 -HopまたはDestination Optionsヘッダー、n = 1、2、4、または8。"
    },
    {
      "indent": 6,
      "text": "o Another desirable feature is that the Hop-by-Hop or Destination Options header take up as little space as possible, subject to the requirement that the header be an integer multiple of 8 octets long.",
      "ja": "o 別の望ましい機能は、ヘッダーが8オクテットの整数倍の長さであるという要件に従って、ホップバイホップまたは宛先オプションのヘッダーが可能な限り少ないスペースを占めることです。"
    },
    {
      "indent": 6,
      "text": "o It may be assumed that, when either of the option-bearing headers are present, they carry a very small number of options, usually only one.",
      "ja": "o オプション付きヘッダーのいずれかが存在する場合、それらは非常に少数のオプション、通常は1つだけを運ぶと想定できます。"
    },
    {
      "indent": 3,
      "text": "These assumptions suggest the following approach to laying out the fields of an option: order the fields from smallest to largest, with no interior padding, then derive the alignment requirement for the entire option based on the alignment requirement of the largest field (up to a maximum alignment of 8 octets). This approach is illustrated in the following examples:",
      "ja": "これらの仮定は、オプションのフィールドをレイアウトする次のアプローチを提案します：内部パディングなしでフィールドを最小から最大に並べ、次に最大のフィールドの配置要件に基づいてオプション全体の配置要件を導き出します（最大で最大8オクテット）。このアプローチを次の例に示します。"
    },
    {
      "indent": 3,
      "text": "Example 1",
      "ja": "例1"
    },
    {
      "indent": 3,
      "text": "If an option X required two data fields, one of length 8 octets and one of length 4 octets, it would be laid out as follows:",
      "ja": "オプションXに2つのデータフィールド（長さ8オクテットと長さ4オクテットの1つ）が必要な場合、次のようにレイアウトされます。"
    },
    {
      "indent": 0,
      "text": "                                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                                   | Option Type=X |Opt Data Len=12|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |                         4-octet field                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |                                                               |\n   +                         8-octet field                         +\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Its alignment requirement is 8n+2, to ensure that the 8-octet field\n   starts at a multiple-of-8 offset from the start of the enclosing\n   header.  A complete Hop-by-Hop or Destination Options header\n   containing this one option would look as follows:",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  | Hdr Ext Len=1 | Option Type=X |Opt Data Len=12|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         4-octet field                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                         8-octet field                         +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Example 2",
      "ja": "例2"
    },
    {
      "indent": 3,
      "text": "If an option Y required three data fields, one of length 4 octets, one of length 2 octets, and one of length 1 octet, it would be laid out as follows:",
      "ja": "オプションYに、長さ4オクテット、長さ2オクテット、長さ1オクテットの3つのデータフィールドが必要な場合、次のようにレイアウトされます。"
    },
    {
      "indent": 3,
      "text": "                                                +-+-+-+-+-+-+-+-+\n                                                | Option Type=Y |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|Opt Data Len=7 | 1-octet field |         2-octet field         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         4-octet field                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Its alignment requirement is 4n+3, to ensure that the 4-octet field starts at a multiple-of-4 offset from the start of the enclosing header. A complete Hop-by-Hop or Destination Options header containing this one option would look as follows:",
      "ja": "そのアラインメント要件は4n + 3であり、4オクテットフィールドが、囲んでいるヘッダーの先頭から4の倍数のオフセットで開始することを保証します。この1つのオプションを含む完全なホップバイホップまたは宛先オプションヘッダーは、次のようになります。"
    },
    {
      "indent": 0,
      "text": "   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  Next Header  | Hdr Ext Len=1 | Pad1 Option=0 | Option Type=Y |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |Opt Data Len=7 | 1-octet field |         2-octet field         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |                         4-octet field                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   | PadN Option=1 |Opt Data Len=2 |       0       |       0       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Example 3",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "A Hop-by-Hop or Destination Options header containing both options X and Y from Examples 1 and 2 would have one of the two following formats, depending on which option appeared first:",
      "ja": "例1と2のオプションXとYの両方を含むホップバイホップまたは宛先オプションヘッダーは、最初に表示されたオプションに応じて、次の2つの形式のいずれかになります。"
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  | Hdr Ext Len=3 | Option Type=X |Opt Data Len=12|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         4-octet field                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                         8-octet field                         +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| PadN Option=1 |Opt Data Len=1 |       0       | Option Type=Y |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|Opt Data Len=7 | 1-octet field |         2-octet field         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         4-octet field                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| PadN Option=1 |Opt Data Len=2 |       0       |       0       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Next Header  | Hdr Ext Len=3 | Pad1 Option=0 | Option Type=Y |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|Opt Data Len=7 | 1-octet field |         2-octet field         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         4-octet field                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| PadN Option=1 |Opt Data Len=4 |       0       |       0       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|       0       |       0       | Option Type=X |Opt Data Len=12|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         4-octet field                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |\n+                         8-octet field                         +\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix B. Changes Since RFC 2460",
      "section_title": true,
      "ja": "付録B. RFC 2460以降の変更"
    },
    {
      "indent": 3,
      "text": "This memo has the following changes from RFC 2460.",
      "ja": "このメモには、RFC 2460からの次の変更点があります。"
    },
    {
      "indent": 3,
      "text": "o Removed IP Next Generation from the Abstract.",
      "ja": "o アブストラクトからIP Next Generationを削除しました。"
    },
    {
      "indent": 3,
      "text": "o Added text in Section 1 that the data transmission order is the same as IPv4 as defined in RFC 791.",
      "ja": "o セクション1に、データ転送順序がRFC 791で定義されているIPv4と同じであるというテキストを追加しました。"
    },
    {
      "indent": 3,
      "text": "o Clarified the text in Section 3 about decrementing the Hop Limit.",
      "ja": "o ホップ制限のデクリメントに関するセクション3のテキストを明確にしました。"
    },
    {
      "indent": 3,
      "text": "o Clarified that extension headers (except for the Hop-by-Hop Options header) are not processed, inserted, or deleted by any node along a packet's delivery path.",
      "ja": "o 拡張ヘッダー（ホップバイホップオプションヘッダーを除く）は、パケットの配信パス上のノードによって処理、挿入、または削除されないことを明確にしました。"
    },
    {
      "indent": 3,
      "text": "o Changed requirement for the Hop-by-Hop Options header to a \"may\", and added a note to indicate what is expected regarding the Hop-by-Hop Options header.",
      "ja": "o Hop-by-Hop Optionsヘッダーの要件を「may」に変更し、Hop-by-Hop Optionsヘッダーに関して予想されることを示すメモを追加しました。"
    },
    {
      "indent": 3,
      "text": "o Added a paragraph to Section 4 to clarify how extension headers are numbered and which are upper-layer headers.",
      "ja": "o セクション4に段落を追加し、拡張ヘッダーの番号付け方法と上位ヘッダーを明確にしました。"
    },
    {
      "indent": 3,
      "text": "o Added a reference to the end of Section 4 to the \"IPv6 Extension Header Types\" IANA registry.",
      "ja": "o 「IPv6拡張ヘッダータイプ」のIANAレジストリに、セクション4の末尾への参照を追加しました。"
    },
    {
      "indent": 3,
      "text": "o Incorporated the updates from RFCs 5095 and 5871 to remove the description of RH0, that the allocations guidelines for routing headers are specified in RFC 5871, and removed RH0 from the list of required extension headers.",
      "ja": "o RFC 5095および5871からの更新を組み込んで、RH0の説明を削除し、ルーティングヘッダーの割り当てガイドラインをRFC 5871で指定し、必要な拡張ヘッダーのリストからRH0を削除しました。"
    },
    {
      "indent": 3,
      "text": "o Revised Section 4.5 on IPv6 fragmentation based on updates from RFCs 5722, 6946, 7112, and 8021. This includes:",
      "ja": "o RFC 5722、6946、7112、および8021からの更新に基づくIPv6フラグメンテーションに関するセクション4.5を改訂しました。これには以下が含まれます。"
    },
    {
      "indent": 6,
      "text": "- Revised the text to handle the case of fragments that are whole datagrams (i.e., both the Fragment Offset field and the M flag are zero). If received, they should be processed as a reassembled packet. Any other fragments that match should be processed independently. The revised Fragment creation process was modified to not create whole datagram fragments (Fragment Offset field and the M flag are zero).",
      "ja": "- データグラム全体であるフラグメントのケースを処理するようにテキストを改訂しました（つまり、フラグメントオフセットフィールドとMフラグの両方がゼロです）。受信した場合は、再構成されたパケットとして処理する必要があります。一致する他のフラグメントは、個別に処理する必要があります。改訂されたフラグメント作成プロセスは、データグラムフラグメント全体を作成しないように変更されました（フラグメントオフセットフィールドとMフラグはゼロです）。"
    },
    {
      "indent": 6,
      "text": "- Changed the text to require that IPv6 nodes must not create overlapping fragments. Also, when reassembling an IPv6 datagram, if one or more its constituent fragments is determined to be an overlapping fragment, the entire datagram (and any constituent fragments) must be silently discarded. Includes a clarification that no ICMP error message should be sent if overlapping fragments are received.",
      "ja": "- IPv6ノードが重複フラグメントを作成してはならないことを要求するようにテキストを変更しました。また、IPv6データグラムを再アセンブルするときに、1つ以上の構成フラグメントが重複フラグメントであると判断された場合、データグラム全体（および構成フラグメント）は警告なしに破棄される必要があります。重複するフラグメントが受信された場合、ICMPエラーメッセージを送信してはならないという説明が含まれています。"
    },
    {
      "indent": 6,
      "text": "- Revised the text to require that all headers through the first Upper-Layer header are in the first fragment. This changed the text describing how packets are fragmented and reassembled and added a new error case.",
      "ja": "- 最初のアッパーレイヤーヘッダーまでのすべてのヘッダーが最初のフラグメントにあることを要求するようにテキストを修正しました。これにより、パケットの断片化と再構成の方法を説明するテキストが変更され、新しいエラーケースが追加されました。"
    },
    {
      "indent": 6,
      "text": "- Added text to the Fragment header process on handling exact duplicate fragments.",
      "ja": "- 正確な重複フラグメントの処理に関するフラグメントヘッダープロセスにテキストを追加しました。"
    },
    {
      "indent": 6,
      "text": "- Updated the Fragmentation header text to correct the inclusion of an Authentication Header (AH) and noted No Next Header case.",
      "ja": "- フラグメンテーションヘッダーテキストを更新して、認証ヘッダー（AH）のインクルードを修正し、次のヘッダーがない場合を指摘しました。"
    },
    {
      "indent": 6,
      "text": "- Changed terminology in the Fragment header section from \"Unfragmentable Headers\" to \"Per-Fragment headers\".",
      "ja": "- Fragmentヘッダーセクションの用語を「Unfragmentable Headers」から「Per-Fragment headers」に変更しました。"
    },
    {
      "indent": 6,
      "text": "- Removed the paragraph in Section 5 that required including a Fragment header to outgoing packets if an ICMP Packet Too Big message reports a Next-Hop MTU less than 1280.",
      "ja": "- ICMP Packet Too Bigメッセージが1280未満のネクストホップMTUを報告する場合、送信パケットにフラグメントヘッダーを含める必要があるセクション5の段落を削除しました。"
    },
    {
      "indent": 6,
      "text": "- Changed the text to clarify MTU restriction and 8-byte restrictions, and noted the restriction on headers in the first fragment.",
      "ja": "- MTUの制限と8バイトの制限を明確にするためにテキストを変更し、最初のフラグメントのヘッダーの制限に注意しました。"
    },
    {
      "indent": 3,
      "text": "o In Section 4.5, added clarification noting that some fields in the IPv6 header may also vary across the fragments being reassembled, and that other specifications may provide additional instructions for how they should be reassembled. See, for example, Section 5.3 of [RFC3168].",
      "ja": "o セクション4.5に、IPv6ヘッダーの一部のフィールドも再構成されるフラグメント間で異なる可能性があること、および他の仕様がそれらを再構成する方法に関する追加の指示を提供する場合があることを明記した説明を追加しました。たとえば、[RFC3168]のセクション5.3をご覧ください。"
    },
    {
      "indent": 3,
      "text": "o Incorporated the update from RFC 6564 to add a new Section 4.8 that describes recommendations for defining new extension headers and options.",
      "ja": "o RFC 6564からの更新を組み込んで、新しい拡張ヘッダーとオプションを定義するための推奨事項を説明する新しいセクション4.8を追加しました。"
    },
    {
      "indent": 3,
      "text": "o Added text to Section 5 to define \"IPv6 minimum link MTU\".",
      "ja": "o 「IPv6最小リンクMTU」を定義するためにセクション5にテキストを追加しました。"
    },
    {
      "indent": 3,
      "text": "o Simplified the text in Section 6 about Flow Labels and removed what was Appendix A (\"Semantics and Usage of the Flow Label Field\"); instead, pointed to the current specifications of the IPv6 Flow Label field in [RFC6437] and the Traffic Class field in [RFC2474] and [RFC3168].",
      "ja": "o フローラベルに関するセクション6のテキストを簡略化し、付録A（「フローラベルフィールドのセマンティクスと使用法」）を削除しました。代わりに、[RFC6437]のIPv6フローラベルフィールドの現在の仕様と、[RFC2474]と[RFC3168]のトラフィッククラスフィールドを示しました。"
    },
    {
      "indent": 3,
      "text": "o Incorporated the update made by RFC 6935 (\"IPv6 and UDP Checksums for Tunneled Packets\") in Section 8. Added an exception to the default behavior for the handling of UDP packets with zero checksums for tunnels.",
      "ja": "o セクション8にRFC 6935（「トンネルパケットのIPv6およびUDPチェックサム」）によって行われた更新が組み込まれました。トンネルのチェックサムがゼロのUDPパケットの処理に関するデフォルトの動作に例外が追加されました。"
    },
    {
      "indent": 3,
      "text": "o Added instruction to Section 9, \"IANA Considerations\", to change references to RFC 2460 to this document.",
      "ja": "o RFC 2460への参照をこのドキュメントに変更するために、セクション9「IANAの考慮事項」に説明を追加しました。"
    },
    {
      "indent": 3,
      "text": "o Revised and expanded Section 10, \"Security Considerations\".",
      "ja": "o 「セキュリティに関する考慮事項」を改訂および拡張。"
    },
    {
      "indent": 3,
      "text": "o Added a paragraph to the Acknowledgments section acknowledging the authors of the updating documents.",
      "ja": "o 更新ドキュメントの作成者に謝辞を示す「謝辞」セクションに段落を追加しました。"
    },
    {
      "indent": 3,
      "text": "o Updated references to current versions and assigned references to normative and informative.",
      "ja": "o 現在のバージョンへの参照の更新、および規範的で有益な参照の割り当て。"
    },
    {
      "indent": 3,
      "text": "o Made changes to resolve the errata on RFC 2460. These are:",
      "ja": "o RFC 2460のエラッタを解決するために変更を加えました。これらは次のとおりです。"
    },
    {
      "indent": 9,
      "text": "Erratum ID 2541 [Err2541]: This erratum notes that RFC 2460 didn't update RFC 2205 when the length of the flow label was changed from 24 to 20 bits from RFC 1883. This issue was resolved in RFC 6437 where the flow label is defined. This specification now references RFC 6437. No change is required.",
      "ja": "エラータID 2541 [Err2541]：このエラータは、フローラベルの長さがRFC 1883から24ビットから20ビットに変更されたときにRFC 2460がRFC 2205を更新しなかったことを示しています。この問題は、フローラベルが定義されているRFC 6437で解決されました。現在、この仕様はRFC 6437を参照しています。変更は必要ありません。"
    },
    {
      "indent": 9,
      "text": "Erratum ID 4279 [Err4279]: This erratum noted that the specification doesn't handle the case of a forwarding node receiving a packet with a zero Hop Limit. This is fixed in Section 3 of this specification.",
      "ja": "エラータID 4279 [Err4279]：このエラータは、ホップリミットがゼロのパケットを転送ノードが受信する場合、この仕様では処理されないことを示しています。これは、この仕様のセクション3で修正されています。"
    },
    {
      "indent": 9,
      "text": "Erratum ID 4657 [Err4657]: This erratum proposed text that extension headers must never be inserted by any node other than the source of the packet. This was resolved in Section 4, \"IPv6 Extension Headers\".",
      "ja": "エラータID 4657 [Err4657]：このエラータは、拡張ヘッダーがパケットの送信元以外のノードによって挿入されてはならないことを提案するテキストです。これは、セクション4「IPv6拡張ヘッダー」で解決されました。"
    },
    {
      "indent": 9,
      "text": "Erratum ID 4662 [Err4662]: This erratum proposed text that extension headers, with one exception, are not examined, processed, modified, inserted, or deleted by any node along a packet's delivery path. This was resolved in Section 4, \"IPv6 Extension Headers\".",
      "ja": "エラータID 4662 [Err4662]：このエラータは、1つの例外を除き、拡張ヘッダーがパケットの配信パスに沿ったノードによって検査、処理、変更、挿入、または削除されないことを提案するテキストです。これは、セクション4「IPv6拡張ヘッダー」で解決されました。"
    },
    {
      "indent": 9,
      "text": "Erratum ID 2843: This erratum is marked \"Rejected\". No change was made.",
      "ja": "エラータID 2843：このエラータは「拒否」とマークされています。変更は行われませんでした。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors gratefully acknowledge the many helpful suggestions of the members of the IPng Working Group, the End-to-End Protocols research group, and the Internet community at large.",
      "ja": "著者は、IPngワーキンググループ、End-to-End Protocols研究グループ、およびインターネットコミュニティ全体のメンバーの多くの有益な提案に感謝します。"
    },
    {
      "indent": 3,
      "text": "The authors would also like to acknowledge the authors of the updating RFCs that were incorporated in this document to move the IPv6 specification to Internet Standard. They are Joe Abley, Shane Amante, Jari Arkko, Manav Bhatia, Ronald P. Bonica, Scott Bradner, Brian Carpenter, P.F. Chimento, Marshall Eubanks, Fernando Gont, James Hoagland, Sheng Jiang, Erik Kline, Suresh Krishnan, Vishwas Manral, George Neville-Neil, Jarno Rajahalme, Pekka Savola, Magnus Westerlund, and James Woodyatt.",
      "ja": "著者は、IPv6仕様をインターネット標準に移行するために、このドキュメントに組み込まれた更新RFCの著者にも謝意を表します。彼らは、ジョー・アブリー、シェーン・アマンテ、ヤリ・アルコ、マナフ・バーティア、ロナルド・P・ボニカ、スコット・ブラドナー、ブライアン・カーペンター、P.F。 Chimento、Marshall Eubanks、Fernando Gont、James Hoagland、Sheng Jiang、Erik Kline、Suresh Krishnan、Vishwas Manral、George Neville-Neil、Jarno Rajahalme、Pekka Savola、Magnus Westerlund、James Woodyatt。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Stephen E. Deering Retired Vancouver, British Columbia Canada",
      "ja": "スティーブンE.ディアーリングカナダ、ブリティッシュコロンビア州バンクーバー"
    },
    {
      "indent": 3,
      "text": "Robert M. Hinden Check Point Software 959 Skyway Road San Carlos, CA 94070 United States of America",
      "ja": "Robert M. Hinden Check Point Software 959 Skyway Road San Carlos、CA 94070アメリカ合衆国"
    },
    {
      "indent": 3,
      "text": "Email: bob.hinden@gmail.com",
      "raw": true,
      "ja": ""
    }
  ]
}