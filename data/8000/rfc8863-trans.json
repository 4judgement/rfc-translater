{
  "title": {
    "text": "RFC 8863 - Interactive Connectivity Establishment Patiently Awaiting Connectivity (ICE PAC)",
    "ja": "RFC 8863 - 対話型接続確立患者に接続を待っている（ICE PAC）"
  },
  "number": 8863,
  "created_at": "2021-03-15 06:59:04.829615+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                       C. Holmberg\nRequest for Comments: 8863                                      Ericsson\nUpdates: 8445, 8838                                            J. Uberti\nCategory: Standards Track                                         Google\nISSN: 2070-1721                                             January 2021",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "Interactive Connectivity Establishment Patiently Awaiting Connectivity (ICE PAC)",
      "ja": "対話型接続確立患者に接続を待っている（ICE PAC）"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "During the process of establishing peer-to-peer connectivity, Interactive Connectivity Establishment (ICE) agents can encounter situations where they have no candidate pairs to check, and, as a result, conclude that ICE processing has failed. However, because additional candidate pairs can be discovered during ICE processing, declaring failure at this point may be premature. This document discusses when these situations can occur.",
      "ja": "ピアツーピア接続を確立するプロセスの間、インタラクティブ接続確立（ICE）エージェントは、チェックする候補ペアがない状況に遭遇する可能性があり、その結果、ICE処理が失敗したと結論付ける。しかしながら、アイス処理中に追加の候補ペアを発見することができるので、この時点での故障故障は早期であり得る。この文書は、これらの状況が発生したときに説明します。"
    },
    {
      "indent": 3,
      "text": "This document updates RFCs 8445 and 8838 by requiring that an ICE agent wait a minimum amount of time before declaring ICE failure, even if there are no candidate pairs left to check.",
      "ja": "このドキュメントは、候補ペアがない場合でも、ICEエージェントがアイス失敗を宣言する前に最小の時間を待つことによってRFCS 8445および8838を更新します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはインターネット規格のトラック文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "この文書は、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表します。それは公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による出版の承認を受けました。インターネット規格に関する詳細情報は、RFC 7841のセクション2で利用できます。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8863.",
      "ja": "この文書の現在のステータス、エラータ、およびフィードバックを提供する方法については、https://www.rfc-editor.org/info/frfc8863で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2021 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2021 IETF信頼と文書著者として識別された人。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、この文書の公開日に有効なIETF文書（https://truste.ietf.org/License-info）に関するBCP 78とIETF信頼の法的規定を受けています。この文書に関してあなたの権利と制限を説明するので、これらの文書を慎重に見直してください。この文書から抽出されたコードコンポーネントには、信頼法の法的規定のセクション4。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n2.  Conventions\n3.  Relevant Scenarios\n  3.1.  No Candidates from Peer\n  3.2.  All Candidates Discarded\n  3.3.  Immediate Candidate Pair Failure\n4.  Update to RFC 8445\n5.  Update to RFC 8838\n6.  Security Considerations\n7.  IANA Considerations\n8.  Normative References\nAcknowledgements\nAuthors' Addresses",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "[RFC8445] describes a protocol, Interactive Connectivity Establishment (ICE), for Network Address Translator (NAT) traversal for UDP-based communication.",
      "ja": "[RFC8445] UDPベースの通信のためのネットワークアドレストランスレータ（NAT）トラバースのためのプロトコル、インタラクティブ接続確立（ICE）を説明しています。"
    },
    {
      "indent": 3,
      "text": "When using ICE, endpoints will typically exchange ICE candidates, form a list of candidate pairs, and then test each candidate pair to see if connectivity can be established. If the test for a given pair fails, it is marked accordingly, and if all pairs have failed, the overall ICE process typically is considered to have failed.",
      "ja": "ICEを使用する場合、エンドポイントは通常ICE候補を交換し、候補ペアのリストを形成してから、接続性を確立できるかどうかを確認するために各候補ペアをテストします。特定のペアのテストが失敗した場合、それに応じてマークされ、すべてのペアが失敗した場合、全体のICEプロセスは通常失敗したと見なされます。"
    },
    {
      "indent": 3,
      "text": "During the process of connectivity checks, additional candidates may be created as a result of successful inbound checks from the remote peer. Such candidates are referred to as peer-reflexive candidates; once discovered, these candidates will be used to form new candidate pairs, which will be tested like any other. However, there is an inherent problem here; if, before learning about any peer-reflexive candidates, an endpoint runs out of candidate pairs to check, either because it has none or it considers them all to have failed, it will prematurely declare failure and terminate ICE processing. This problem can occur in many common situations.",
      "ja": "接続チェックのプロセス中に、リモートピアからのインバウンドチェックが成功した結果として追加の候補が作成されることがあります。そのような候補は、ピア反射候補と呼ばれる。発見されると、これらの候補者は新しい候補ペアを形成するために使用され、それは他のものと同じようにテストされます。しかし、ここでは固有の問題があります。ピアリフレクサ候補者について学ぶ前に、エンドポイントがチェックするために候補ペアから実行される場合、またはそれらすべてが失敗したと考えるので、故障を遅く宣言してICE処理を終了します。この問題は多くの一般的な状況で発生する可能性があります。"
    },
    {
      "indent": 3,
      "text": "This specification updates [RFC8445] and [RFC8838] by simply requiring that an ICE agent wait a minimum amount of time before declaring ICE failure, even if there are no candidate pairs to check or all candidate pairs have failed. This delay provides enough time for the discovery of peer-reflexive candidates, which may eventually lead to ICE processing completing successfully.",
      "ja": "この仕様は、iceAgryがice障害を宣言する前にICEエージェントが最小の時間を待つだけで、候補ペアが故障していなくても、ICEエージェントが最小時間待機するだけで、ICEエージェントが最小限の時間待機することができます。この遅延は、ピアリフレクサ候補の発見に十分な時間を提供し、それは最終的にICE処理がうまく完了する可能性がある。"
    },
    {
      "indent": 0,
      "text": "2. Conventions",
      "section_title": true,
      "ja": "2. 規約"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "「必須」、「必須」、「必須」、「SHALL」、「必ず」、「推奨する」、「推奨する」、「推奨する」、「推奨する」、「推奨する」、「5月」「この文書では、BCP 14 [RFC2119] [RFC8174]に記載されている場合に解釈されるべきであり、ここに示すように、すべての首都に表示されます。"
    },
    {
      "indent": 0,
      "text": "3. Relevant Scenarios",
      "section_title": true,
      "ja": "3. 関連するシナリオ"
    },
    {
      "indent": 3,
      "text": "As noted above, the core problem this specification attempts to address is the situation where even after local gathering and remote candidate signaling have completed, the ICE agent immediately ends up with no valid pairs and no candidate pairs left to check, resulting in a premature ICE failure. This failure is premature because not enough time has elapsed to allow for discovery of peer-reflexive candidates from inbound connectivity checks; if discovered, these candidates are very likely to result in a valid pair.",
      "ja": "上記のように、この仕様は、局所的な集まりおよび遠隔候補シグナリングが完了した後でさえも、氷河が直ちに有効なペアで終わらず、候補ペアは早期氷をもたらすという状況である。失敗インバウンド接続チェックからピアリフレクティブ候補の発見を可能にするのに十分な時間が経過していないため、この失敗は早期です。発見された場合、これらの候補は有効なペアになる可能性が非常に高いです。"
    },
    {
      "indent": 3,
      "text": "In most ICE scenarios, the lengthy timeouts for connectivity check transactions, typically tens of seconds, will prevent this problem from occurring. However, there are certain specific cases where this problem will frequently occur.",
      "ja": "ほとんどのアイスシナリオでは、接続性チェックトランザクションの長さのタイムアウト、通常は数十秒で、この問題が発生するのを防ぎます。しかしながら、この問題が頻繁に発生する特定の具体的なケースがある。"
    },
    {
      "indent": 0,
      "text": "3.1. No Candidates from Peer",
      "section_title": true,
      "ja": "3.1. ピアからの候補者はありません"
    },
    {
      "indent": 3,
      "text": "Per [RFC8838], an ICE agent can provide zero candidates of its own. If the agent somehow knows that the remote endpoint is directly reachable, gathering local candidates is unnecessary and will only cause delays; the peer agent can discover the appropriate local candidate via connectivity checks.",
      "ja": "[RFC8838]ごとに、氷剤はそれ自体のゼロ候補を提供することができます。どういうわけか、リモートエンドポイントが直接到達可能であることをどういうわけか知っている場合は、ローカル候補を収集することは不要で、遅延のみを引き起こします。ピアエージェントは、接続チェックを介して適切なローカル候補を発見することができます。"
    },
    {
      "indent": 3,
      "text": "However, following the procedures from [RFC8445] strictly will result in immediate ICE failure, since the checklist at the peer agent will be empty.",
      "ja": "ただし、[RFC8445]の手順に従って、ピアエージェントのチェックリストが空になるため、厳密に即時の停止が発生します。"
    },
    {
      "indent": 0,
      "text": "3.2. All Candidates Discarded",
      "section_title": true,
      "ja": "3.2. すべての候補者は廃棄されました"
    },
    {
      "indent": 3,
      "text": "Even if the ICE agent provides candidates, they may be discarded by the peer agent if it does not know what to do with them. For example, candidates may use an address family that the peer agent does not support (e.g., a host candidate with an IPv6 address in a NAT64 scenario) or that may not be usable for some other reason.",
      "ja": "アイスエージェントが候補者を提供しても、それがそれらと何をすべきかわからない場合、それらはピアエージェントによって廃棄されるかもしれません。例えば、候補は、ピアエージェントがサポートしていないアドレスファミリ（例えば、NAT64シナリオでIPv6アドレスを有するホスト候補）を使用することができ、あるいは他の何らかの理由で使用可能ではないかもしれない。"
    },
    {
      "indent": 3,
      "text": "In these scenarios, when the candidates are discarded, the checklist at the peer agent will once again be empty, leading to immediate ICE failure.",
      "ja": "これらのシナリオでは、候補者が破棄されると、ピアエージェントのチェックリストが再び空になり、即時の氷の障害が発生します。"
    },
    {
      "indent": 0,
      "text": "3.3. Immediate Candidate Pair Failure",
      "section_title": true,
      "ja": "3.3. 即時候補ペアの失敗"
    },
    {
      "indent": 3,
      "text": "Section 7.2.5.2 of [RFC8445] describes several situations in which a candidate pair will be considered to have failed, well before the connectivity check transaction timeout.",
      "ja": "[RFC8445]のセクション7.2.5.2は、接続性チェックトランザクションタイムアウトの前に、候補ペアが失敗したと見なされるいくつかの状況を示しています。"
    },
    {
      "indent": 3,
      "text": "As a result, even if the ICE agent provides usable candidates, the pairs created by the peer agent may fail immediately when checked, e.g., a check to a non-routable address that receives an immediate ICMP error.",
      "ja": "その結果、氷剤が使用可能な候補を提供しても、ピアエージェントによって作成されたペアは、例えば、即時ICMPエラーを受信する非ルーティング可能なアドレスにチェックされたときに直ちに失敗する可能性がある。"
    },
    {
      "indent": 3,
      "text": "In this situation, the checklist at the peer agent may contain only failed pairs, resulting in immediate ICE failure.",
      "ja": "この状況では、ピアエージェントのチェックリストには失敗したペアのみを含めることができ、即時のアイス障害が発生する可能性があります。"
    },
    {
      "indent": 0,
      "text": "4. Update to RFC 8445",
      "section_title": true,
      "ja": "4. RFC 8445に更新されます"
    },
    {
      "indent": 3,
      "text": "In order to avoid the problem raised by this document, the ICE agent needs to wait enough time to allow peer-reflexive candidates to be discovered. Accordingly, when a full ICE implementation begins its ICE processing, as described in [RFC8445], Section 6.1, it MUST set a timer, henceforth known as the \"PAC timer\" (Patiently Awaiting Connectivity), to ensure that ICE will run for a minimum amount of time before determining failure.",
      "ja": "この文書によって提起された問題を回避するために、アイスエージェントは、ピアリフレクサ候補を発見するのを可能にするのに十分な時間を待つ必要がある。したがって、フルアイスの実装が氷処理を開始すると、[RFC8445]、セクション6.1で説明されているように、ICEが実行されることを確実にするために、「PAC Timer」（Conditive）として知られているタイマーを設定しなければなりません。失敗を決定する前の最小時間。"
    },
    {
      "indent": 3,
      "text": "Specifically, the ICE agent will start its timer once it believes ICE connectivity checks are starting. This occurs when the agent has sent the values needed to perform connectivity checks (e.g., the Username Fragment and Password denoted in [RFC8445], Section 5.3) and has received some indication that the remote side is ready to start connectivity checks, typically via receipt of the values mentioned above. Note that the agent will start the timer even if it has not sent or received any ICE candidates.",
      "ja": "具体的には、アイスコネクティビティチェックが開始されたと考えると、アイスエージェントはタイマーを開始します。これは、エージェントが接続性チェックを実行するために必要な値を送信したとき（例：[RFC8445]、セクション5.3で示されているユーザー名のフラグメントとパスワード）が発生し、通常は受信を経由して、リモート側が接続性チェックを開始する準備ができているという表示を受け取りました。上記の値の。ice候補を送受信していなくても、エージェントはタイマーを起動します。"
    },
    {
      "indent": 3,
      "text": "The RECOMMENDED duration for the PAC timer is equal to the agent's connectivity check transaction timeout, including all retransmissions. When using default values for retransmission timeout (RTO) and Rc, this amounts to 39.5 seconds, as explained in [RFC5389], Section 7.2.1. This timeout value is chosen to roughly coincide with the maximum possible duration of ICE connectivity checks from the remote peer, which, if successful, could create peer-reflexive candidates. Because the ICE agent doesn't know the exact number of candidate pairs and pacing interval in use by the remote side, this timeout value is simply a guess, albeit an educated one. Regardless, for this particular problem, the desired benefits will be realized as long as the agent waits some reasonable amount of time, and, as usual, the application is in the best position to determine what is reasonable for its scenario.",
      "ja": "PACタイマーの推奨期間は、すべての再送信を含め、エージェントの接続チェックトランザクションタイムアウトと同じです。再送タイムアウト（RTO）とRCのデフォルト値を使用する場合は、[RFC5389]、セクション7.2.1で説明されているように、これは39.5秒です。このタイムアウト値は、リモートピアからのICE接続チェックの最大可能期間と大まかに一致するように選択されます。これは成功した場合はピアリフレクサ候補を作成できます。アイスエージェントは、リモート側で使用されている候補ペアの正確な数とペーシング間隔を知らないため、このタイムアウト値は単に教育を受けたものではありません。とにかく、この特定の問題のために、エージェントがいくらかの合理的な時間を待つ限り、望ましい利点は実現され、通常どおり、そのシナリオに合理的なものを決定するための最良の位置にある。"
    },
    {
      "indent": 3,
      "text": "While the timer is still running, the ICE agent MUST NOT update a checklist state from Running to Failed, even if there are no pairs left in the checklist to check. As a result, the ICE agent will not remove any data streams or set the state of the ICE session to Failed as long as the timer is running.",
      "ja": "タイマーがまだ実行されている間、チェックリストにペアが残っていても、チェックリストの状態が鳴って失敗した場合は、チェックリストの状態を更新しないでください。その結果、ICEエージェントはデータストリームを削除したり、タイマーが実行されている限り、ICEセッションの状態を失敗させたりしません。"
    },
    {
      "indent": 3,
      "text": "When the timer period eventually elapses, the ICE agent MUST resume typical ICE processing, including setting the state of any checklists to Failed if they have no pairs left to check and handling any consequences as indicated in [RFC8445], Section 8.1.2. Naturally, if there are no such checklists, no action is necessary.",
      "ja": "タイマー周期が最終的に経過すると、[RFC8445]、セクション8.1.2に示されているように、チェックリストが故障した場合には、チェックリストの状態を失敗させるなど、典型的なICE処理を再開する必要があります。当然のことながら、そのようなチェックリストがない場合は、行動は必要ありません。"
    },
    {
      "indent": 3,
      "text": "One consequence of this behavior is that in cases where ICE should fail, e.g., where both sides provide candidates with unsupported address families, ICE will no longer fail immediately -- it will only fail when the PAC timer expires. However, because most ICE scenarios require an extended period of time to determine failure, the fact that some specific scenarios no longer fail quickly should have minimal application impact, if any.",
      "ja": "この挙動の1つの結果の1つは、氷が失敗する必要がある場合、例えば両側がサポートされていないアドレスファミリーを持つ候補者を提供する場合、ICEはすぐに失敗することはできません -  PACタイマーが期限切れになると失敗します。ただし、ほとんどのアイスシナリオでは、障害を判断するために長期間が必要とされるため、特定のシナリオが迅速に失敗しないという事実は、あれば、最小限のアプリケーションの影響を持つべきです。"
    },
    {
      "indent": 3,
      "text": "Note also that the PAC timer is potentially relevant to the ICE nomination procedure described in [RFC8445], Section 8.1.1. That specification does not define a minimum duration for ICE processing prior to nomination of a candidate pair, but in order to select the best candidate pair, ICE needs to run for enough time in order to allow peer-reflexive candidates to be discovered and checked, as noted above. Accordingly, the controlling ICE agent SHOULD wait a sufficient amount of time before nominating candidate pairs, and it MAY use the PAC timer to do so. As always, the controlling ICE agent retains full discretion and MAY decide, based on its own criteria, to nominate pairs prior to the PAC timer period elapsing.",
      "ja": "PACタイマーは、[RFC8445]、セクション8.1.1に記載されているICEノミネート手順に潜在的に関連していることにも注意してください。その仕様は、候補ペアの指名前に氷処理の最小持続時間を定義していないが、最良の候補ペアを選択するために、ピアリフレクサ候補を発見しチェックすることを可能にするために十分な時間を実行する必要がある。上記のように。したがって、制御されているアイスエージェントは、候補ペアを指名するまでに十分な時間待つべきであり、それはPACタイマーを使用することができる。いつものように、制御されているアイスエージェントは完全な裁量を保持し、それ自体の基準に基づいて、PACタイマー周期の経過の前にペアを指名するために決定することができます。"
    },
    {
      "indent": 0,
      "text": "5. Update to RFC 8838",
      "section_title": true,
      "ja": "5. RFC 8838に更新されます"
    },
    {
      "indent": 3,
      "text": "Trickle ICE [RFC8838] considers a similar problem, namely whether an ICE agent should allow a checklist to enter the Failed state if more candidates might still be provided by the remote peer. The solution, specified in [RFC8838], Section 8, is to wait until an end-of-candidates indication has been received before determining ICE failure.",
      "ja": "Trickle Ice [RFC8838]も同様の問題を考慮しています。すなわち、リモートピアによってもっと多くの候補が提供されている場合には、ICEエージェントがチェックリストが失敗状態に入ることを許可する必要があるかどうかを考慮する必要があります。[RFC8838]、セクション8で指定された解決策は、ICEの故障を判断する前に候補の終わりの指示が受信されるまで待つことです。"
    },
    {
      "indent": 3,
      "text": "However, for the same reasons described above, the ICE agent may discover peer-reflexive candidates after it has received the end-of-candidates indication, and so the solution proposed by this document MUST still be used even when the ICE agent is using Trickle ICE.",
      "ja": "しかしながら、上述したのと同じ理由で、氷剤は、候補の終了表示を受けた後にピアリフレット候補を発見することができるので、この文書によって提案された解決策は依然として氷剤がトリクルを使用している場合でも使用されなければならない。氷。"
    },
    {
      "indent": 3,
      "text": "Note also that sending an end-of-candidates indication is only a SHOULD-strength requirement, which means that ICE agents will need to implement a backup mechanism to decide when all candidates have been received, typically a timer. Accordingly, ICE agents MAY use the PAC timer to also serve as an end-of-candidates fallback.",
      "ja": "また、候補の終わりの指示を送信することはすぐの強度要件であることにも注意事項が必要であり、これは、ICEエージェントがすべての候補が受信されたとき、通常はタイマーを受信したときに決定するためのバックアップメカニズムを実装する必要があることを意味する。したがって、ICEエージェントはPACタイマーを使用して候補の終了フォールバックとしても機能することがある。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The security considerations for ICE are defined in [RFC8445]. This specification only recommends that ICE agents wait for a certain period of time before they declare ICE failure; it does not introduce new security considerations.",
      "ja": "ICEのセキュリティ上の考慮事項は[RFC8445]で定義されています。この仕様は、ICEエージェントが氷の故障を宣言する前に一定期間待つことをお勧めします。新しいセキュリティ上の考慮事項を導入しません。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no IANA actions.",
      "ja": "この文書にはIANAの行動がありません。"
    },
    {
      "indent": 0,
      "text": "8. Normative References",
      "section_title": true,
      "ja": "8. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] BRADNER、S、「RFCSで使用するためのキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https：//www.rfc-editor.org/info/RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC5389] Rosenberg, J., Mahy, R., Matthews, P., and D. Wing, \"Session Traversal Utilities for NAT (STUN)\", RFC 5389, DOI 10.17487/RFC5389, October 2008, <https://www.rfc-editor.org/info/rfc5389>.",
      "ja": "[RFC5389] Rosenberg、J.、Mahy、R.、Matthews、P.、およびD. Wing、「Stun（Stun）のセッショントラバーサルユーティリティ（STUN）」、RFC 5389、DOI 10.17487 / RFC5389、2008年10月、<https：//www.rfc-editor.org/info/rfc5389>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B、「RFC 2119キーワードの大文字の曖昧さ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https：//www.rfc-editor.org/info/RFC8174>。"
    },
    {
      "indent": 3,
      "text": "[RFC8445] Keranen, A., Holmberg, C., and J. Rosenberg, \"Interactive Connectivity Establishment (ICE): A Protocol for Network Address Translator (NAT) Traversal\", RFC 8445, DOI 10.17487/RFC8445, July 2018, <https://www.rfc-editor.org/info/rfc8445>.",
      "ja": "[RFC8445]ケラネン、A.、Holmberg、C.、J.Rosenberg、「インタラクティブ接続施設（氷）：ネットワークアドレス翻訳者のためのプロトコル」、RFC 8445、DOI 10.17487 / RFC8445、2018年7月、<https://www.rfc-editor.org/info/rfc8445>。"
    },
    {
      "indent": 3,
      "text": "[RFC8838] Ivov, E., Uberti, J., and P. Saint-Andre, \"Trickle ICE: Incremental Provisioning of Candidates for the Interactive Connectivity Establishment (ICE) Protocol\", RFC 8838, DOI 10.17487/RFC8838, January 2021, <https://www.rfc-editor.org/info/rfc8838>.",
      "ja": "[RFC8838] IVOV、E.、Uberti、J.、およびP.Saint-Andre、「トリクルアイス：インタラクティブ接続確立の候補（ICE）プロトコルの候補の増分プロビジョニング」、RFC 8838、DOI 10.17487 / RFC8838、2021年1月、<https://www.rfc-editor.org/info/rfc8838>。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Roman Shpount, Nils Ohlmeier, and Peter Thatcher provided lots of useful input and comments.",
      "ja": "ローマのShpount、Nils Ohlmeier、およびPeter Thatcherは、たくさんの便利な入力とコメントを提供しました。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者の住所"
    },
    {
      "indent": 3,
      "text": "Christer Holmberg Ericsson Hirsalantie 11 FI-02420 Jorvas Finland",
      "ja": "Christer Holmberg Ericsson Hirsalantie 11 Fi-02420 Jorvas Finland"
    },
    {
      "indent": 3,
      "text": "Email: christer.holmberg@ericsson.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Justin Uberti Google 747 6th St W Kirkland, WA 98033 United States of America",
      "ja": "Justin Uberti Google 747 6th St W Kirkland、WA 98033アメリカ合衆国"
    },
    {
      "indent": 3,
      "text": "Email: justin@uberti.name",
      "raw": true,
      "ja": ""
    }
  ]
}