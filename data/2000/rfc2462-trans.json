{
  "title": {
    "text": "RFC 2462 - IPv6 Stateless Address Autoconfiguration",
    "ja": "RFC 2462 - IPv6ステートレスアドレス自動構成"
  },
  "number": 2462,
  "created_at": "2020-08-16 20:08:27.439575+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                         S. Thomson\nRequest for Comments: 2462                                      Bellcore\nObsoletes: 1971                                                T. Narten\nCategory: Standards Track                                            IBM\n                                                           December 1998",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "IPv6 Stateless Address Autoconfiguration",
      "ja": "IPv6ステートレスアドレス自動構成"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "このドキュメントは、インターネットコミュニティのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態とステータスについては、「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "Copyright（C）The Internet Society（1998）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document specifies the steps a host takes in deciding how to autoconfigure its interfaces in IP version 6. The autoconfiguration process includes creating a link-local address and verifying its uniqueness on a link, determining what information should be autoconfigured (addresses, other information, or both), and in the case of addresses, whether they should be obtained through the stateless mechanism, the stateful mechanism, or both. This document defines the process for generating a link-local address, the process for generating site-local and global addresses via stateless address autoconfiguration, and the Duplicate Address Detection procedure. The details of autoconfiguration using the stateful protocol are specified elsewhere.",
      "ja": "このドキュメントでは、ホストがIPバージョン6でインターフェイスを自動構成する方法を決定する際に実行する手順について説明します。自動構成プロセスには、リンクローカルアドレスの作成とリンク上での一意性の確認、自動構成する必要がある情報（アドレス、その他の情報、または両方）、およびアドレスの場合は、ステートレスメカニズム、ステートフルメカニズム、またはその両方を介して取得する必要があるかどうか。このドキュメントでは、リンクローカルアドレスを生成するプロセス、ステートレスアドレス自動構成を介してサイトローカルアドレスとグローバルアドレスを生成するプロセス、および重複アドレス検出手順を定義します。ステートフルプロトコルを使用した自動構成の詳細は、他の場所で指定されています。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  INTRODUCTION.............................................    2\n2.  TERMINOLOGY..............................................    4\n   2.1.  Requirements........................................    6\n3.  DESIGN GOALS.............................................    7\n4.  PROTOCOL OVERVIEW........................................    8\n   4.1.  Site Renumbering....................................   10\n5.  PROTOCOL SPECIFICATION...................................   10\n   5.1.  Node Configuration Variables........................   11\n   5.2.  Autoconfiguration-Related Variables.................   11\n   5.3.  Creation of Link-Local Addresses....................   12",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "   5.4.  Duplicate Address Detection.........................   13\n      5.4.1.  Message Validation.............................   14\n      5.4.2.  Sending Neighbor Solicitation Messages.........   14\n      5.4.3.  Receiving Neighbor Solicitation Messages.......   15\n      5.4.4.  Receiving Neighbor Advertisement Messages......   16\n      5.4.5.  When Duplicate Address Detection Fails.........   16\n   5.5.  Creation of Global and Site-Local Addresses.........   16\n      5.5.1.  Soliciting Router Advertisements...............   16\n      5.5.2.  Absence of Router Advertisements...............   17\n      5.5.3.  Router Advertisement Processing................   17\n      5.5.4.  Address Lifetime Expiry........................   19\n   5.6.  Configuration Consistency...........................   19\n6.  SECURITY CONSIDERATIONS..................................   20\n7.  References...............................................   20\n8.  Acknowledgements and Authors' Addresses..................   21\n9.  APPENDIX A: LOOPBACK SUPPRESSION & DUPLICATE ADDRESS\n      DETECTION..............................................   22\n10. APPENDIX B: CHANGES SINCE RFC 1971.......................   24\n11. Full Copyright Statement.................................   25",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. INTRODUCTION",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document specifies the steps a host takes in deciding how to autoconfigure its interfaces in IP version 6. The autoconfiguration process includes creating a link-local address and verifying its uniqueness on a link, determining what information should be autoconfigured (addresses, other information, or both), and in the case of addresses, whether they should be obtained through the stateless mechanism, the stateful mechanism, or both. This document defines the process for generating a link-local address, the process for generating site-local and global addresses via stateless address autoconfiguration, and the Duplicate Address Detection procedure. The details of autoconfiguration using the stateful protocol are specified elsewhere.",
      "ja": "このドキュメントでは、ホストがIPバージョン6でインターフェイスを自動構成する方法を決定する際に実行する手順について説明します。自動構成プロセスには、リンクローカルアドレスの作成とリンク上での一意性の確認、自動構成する必要がある情報（アドレス、その他の情報、または両方）、およびアドレスの場合は、ステートレスメカニズム、ステートフルメカニズム、またはその両方を介して取得する必要があるかどうか。このドキュメントでは、リンクローカルアドレスを生成するプロセス、ステートレスアドレス自動構成を介してサイトローカルアドレスとグローバルアドレスを生成するプロセス、および重複アドレス検出手順を定義します。ステートフルプロトコルを使用した自動構成の詳細は、他の場所で指定されています。"
    },
    {
      "indent": 3,
      "text": "IPv6 defines both a stateful and stateless address autoconfiguration mechanism. Stateless autoconfiguration requires no manual configuration of hosts, minimal (if any) configuration of routers, and no additional servers. The stateless mechanism allows a host to generate its own addresses using a combination of locally available information and information advertised by routers. Routers advertise prefixes that identify the subnet(s) associated with a link, while hosts generate an \"interface identifier\" that uniquely identifies an interface on a subnet. An address is formed by combining the two. In the absence of routers, a host can only generate link-local addresses. However, link-local addresses are sufficient for allowing communication among nodes attached to the same link.",
      "ja": "IPv6は、ステートフルとステートレスの両方のアドレス自動構成メカニズムを定義します。ステートレス自動構成では、ホストの手動構成、ルーターの（存在する場合）最小構成、および追加のサーバーは必要ありません。ステートレスメカニズムにより、ホストは、ローカルで利用可能な情報とルーターによってアドバタイズされた情報の組み合わせを使用して、独自のアドレスを生成できます。ルーターはリンクに関連付けられたサブネットを識別するプレフィックスをアドバタイズし、ホストはサブネット上のインターフェースを一意に識別する「インターフェース識別子」を生成します。この2つを組み合わせてアドレスが形成されます。ルーターがない場合、ホストはリンクローカルアドレスしか生成できません。ただし、リンクローカルアドレスは、同じリンクに接続されたノード間の通信を可能にするのに十分です。"
    },
    {
      "indent": 3,
      "text": "In the stateful autoconfiguration model, hosts obtain interface addresses and/or configuration information and parameters from a server. Servers maintain a database that keeps track of which addresses have been assigned to which hosts. The stateful autoconfiguration protocol allows hosts to obtain addresses, other configuration information or both from a server. Stateless and stateful autoconfiguration complement each other. For example, a host can use stateless autoconfiguration to configure its own addresses, but use stateful autoconfiguration to obtain other information. Stateful autoconfiguration for IPv6 is the subject of future work [DHCPv6].",
      "ja": "ステートフル自動設定モデルでは、ホストはサーバーからインターフェイスアドレスや設定情報、パラメータを取得します。サーバーは、どのアドレスがどのホストに割り当てられたかを追跡するデータベースを維持します。ステートフル自動構成プロトコルにより、ホストはサーバーからアドレス、その他の構成情報、またはその両方を取得できます。ステートレスとステートフルの自動構成は互いに補完します。たとえば、ホストはステートレス自動構成を使用して自身のアドレスを構成できますが、ステートフル自動構成を使用して他の情報を取得できます。 IPv6のステートフル自動構成は、将来の作業の主題です[DHCPv6]。"
    },
    {
      "indent": 3,
      "text": "The stateless approach is used when a site is not particularly concerned with the exact addresses hosts use, so long as they are unique and properly routable. The stateful approach is used when a site requires tighter control over exact address assignments. Both stateful and stateless address autoconfiguration may be used simultaneously. The site administrator specifies which type of autoconfiguration to use through the setting of appropriate fields in Router Advertisement messages [DISCOVERY].",
      "ja": "ステートレスなアプローチは、サイトが一意で適切にルーティング可能である限り、ホストが使用する正確なアドレスに特に関係がない場合に使用されます。ステートフルなアプローチは、サイトが正確なアドレス割り当てをより厳密に制御する必要がある場合に使用されます。ステートフルとステートレスの両方のアドレス自動設定を同時に使用できます。サイト管理者は、ルーターアドバタイズメッセージ[DISCOVERY]の適切なフィールドの設定を通じて、使用する自動構成のタイプを指定します。"
    },
    {
      "indent": 3,
      "text": "IPv6 addresses are leased to an interface for a fixed (possibly infinite) length of time. Each address has an associated lifetime that indicates how long the address is bound to an interface. When a lifetime expires, the binding (and address) become invalid and the address may be reassigned to another interface elsewhere in the Internet. To handle the expiration of address bindings gracefully, an address goes through two distinct phases while assigned to an interface. Initially, an address is \"preferred\", meaning that its use in arbitrary communication is unrestricted. Later, an address becomes \"deprecated\" in anticipation that its current interface binding will become invalid. While in a deprecated state, the use of an address is discouraged, but not strictly forbidden. New communication (e.g., the opening of a new TCP connection) should use a preferred address when possible. A deprecated address should be used only by applications that have been using it and would have difficulty switching to another address without a service disruption.",
      "ja": "IPv6アドレスは、固定（場合によっては無限）の期間、インターフェースにリースされます。各アドレスには、アドレスがインターフェイスにバインドされている期間を示す関連するライフタイムがあります。ライフタイムが期限切れになると、バインディング（およびアドレス）が無効になり、インターネットの他の場所にある別のインターフェースにアドレスが再割り当てされる可能性があります。アドレスバインディングの有効期限を適切に処理するために、アドレスはインターフェイスに割り当てられている間、2つの異なるフェーズを通過します。当初、アドレスは「優先」されます。つまり、任意の通信でのアドレスの使用は制限されません。その後、アドレスは、現在のインターフェースバインディングが無効になることを見越して「非推奨」になります。非推奨の状態では、アドレスの使用は推奨されませんが、厳密に禁止されていません。新しい通信（新しいTCP接続を開くなど）では、可能な場合は優先アドレスを使用する必要があります。非推奨のアドレスは、それを使用していて、サービスを中断することなく別のアドレスに切り替えることが困難なアプリケーションでのみ使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "To insure that all configured addresses are likely to be unique on a given link, nodes run a \"duplicate address detection\" algorithm on addresses before assigning them to an interface. The Duplicate Address Detection algorithm is performed on all addresses, independent of whether they are obtained via stateless or stateful autoconfiguration. This document defines the Duplicate Address Detection algorithm.",
      "ja": "設定されたすべてのアドレスが特定のリンクで一意になる可能性が高いことを保証するために、ノードはアドレスに「重複アドレス検出」アルゴリズムを実行してから、それらをインターフェイスに割り当てます。重複アドレス検出アルゴリズムは、ステートレスまたはステートフルの自動構成を介して取得されたかどうかに関係なく、すべてのアドレスに対して実行されます。このドキュメントでは、重複アドレス検出アルゴリズムを定義しています。"
    },
    {
      "indent": 3,
      "text": "The autoconfiguration process specified in this document applies only to hosts and not routers. Since host autoconfiguration uses information advertised by routers, routers will need to be configured by some other means. However, it is expected that routers will generate link-local addresses using the mechanism described in this document. In addition, routers are expected to successfully pass the Duplicate Address Detection procedure described in this document on all addresses prior to assigning them to an interface.",
      "ja": "このドキュメントで指定されている自動設定プロセスはホストにのみ適用され、ルーターには適用されません。ホストの自動構成はルーターによってアドバタイズされた情報を使用するため、ルーターは他の方法で構成する必要があります。ただし、ルーターは、このドキュメントで説明されているメカニズムを使用してリンクローカルアドレスを生成することが予想されます。さらに、ルーターは、インターフェイスに割り当てる前に、すべてのアドレスについて、このドキュメントで説明されている重複アドレス検出手順に合格する必要があります。"
    },
    {
      "indent": 3,
      "text": "Section 2 provides definitions for terminology used throughout this document. Section 3 describes the design goals that lead to the current autoconfiguration procedure. Section 4 provides an overview of the protocol, while Section 5 describes the protocol in detail.",
      "ja": "セクション2では、このドキュメント全体で使用される用語の定義を示します。セクション3では、現在の自動構成手順に至る設計目標について説明します。セクション5ではプロトコルの概要を説明し、セクション5ではプロトコルの詳細を説明します。"
    },
    {
      "indent": 0,
      "text": "2. TERMINOLOGY",
      "section_title": true,
      "ja": "2. 用語"
    },
    {
      "indent": 3,
      "text": "IP - Internet Protocol Version 6. The terms IPv4 and are used only in contexts where necessary to avoid ambiguity.",
      "ja": "IP-インターネットプロトコルバージョン6。用語IPv4およびは、あいまいさを避けるために必要な場合にのみ使用されます。"
    },
    {
      "indent": 3,
      "text": "node - a device that implements IP.",
      "ja": "ノード-IPを実装するデバイス。"
    },
    {
      "indent": 3,
      "text": "router - a node that forwards IP packets not explicitly addressed to itself.",
      "ja": "ルーター-明示的にアドレス指定されていないIPパケットを転送するノード。"
    },
    {
      "indent": 3,
      "text": "host - any node that is not a router.",
      "ja": "ホスト-ルーターではないノード。"
    },
    {
      "indent": 3,
      "text": "upper layer - a protocol layer immediately above IP. Examples are transport protocols such as TCP and UDP, control protocols such as ICMP, routing protocols such as OSPF, and internet or lower-layer protocols being \"tunneled\" over (i.e., encapsulated in) IP such as IPX, AppleTalk, or IP itself.",
      "ja": "上位層-IPのすぐ上のプロトコル層。例としては、TCPやUDPなどのトランスポートプロトコル、ICMPなどの制御プロトコル、OSPFなどのルーティングプロトコル、IPX、AppleTalk、IP自体などのIPで「トンネリング」される（つまりカプセル化される）インターネットまたは下位層プロトコルがあります。 。"
    },
    {
      "indent": 3,
      "text": "link - a communication facility or medium over which nodes can communicate at the link layer, i.e., the layer immediately below IP. Examples are Ethernets (simple or bridged); PPP links; X.25, Frame Relay, or ATM networks; and internet (or higher) layer \"tunnels\", such as tunnels over IPv4 or IPv6 itself.",
      "ja": "リンク-ノードがリンク層、つまりIPのすぐ下の層で通信できる通信機能または媒体。例はイーサネット（シンプルまたはブリッジ）です。 PPPリンク。 X.25、フレームリレー、またはATMネットワーク。 IPv4またはIPv6自体のトンネルなどのインターネット（またはそれ以上の）層の「トンネル」。"
    },
    {
      "indent": 3,
      "text": "interface - a node's attachment to a link.",
      "ja": "インターフェース-リンクへのノードのアタッチメント。"
    },
    {
      "indent": 3,
      "text": "packet - an IP header plus payload.",
      "ja": "パケット-IPヘッダーとペイロード。"
    },
    {
      "indent": 3,
      "text": "address - an IP-layer identifier for an interface or a set of interfaces.",
      "ja": "address-インターフェースまたはインターフェースのセットのIP層識別子。"
    },
    {
      "indent": 3,
      "text": "unicast address - an identifier for a single interface. A packet sent to a unicast address is delivered to the interface identified by that address.",
      "ja": "ユニキャストアドレス-単一インターフェイスの識別子。ユニキャストアドレスに送信されたパケットは、そのアドレスで識別されるインターフェイスに配信されます。"
    },
    {
      "indent": 3,
      "text": "multicast address - an identifier for a set of interfaces (typically belonging to different nodes). A packet sent to a multicast address is delivered to all interfaces identified by that address.",
      "ja": "マルチキャストアドレス-インターフェイスのセットの識別子（通常は異なるノードに属します）。マルチキャストアドレスに送信されたパケットは、そのアドレスで識別されるすべてのインターフェイスに配信されます。"
    },
    {
      "indent": 3,
      "text": "anycast address - an identifier for a set of interfaces (typically belonging to different nodes). A packet sent to an anycast address is delivered to one of the interfaces identified by that address (the \"nearest\" one, according to the routing protocol's measure of distance). See [ADDR-ARCH].",
      "ja": "エニーキャストアドレス-インターフェイスのセットの識別子（通常は異なるノードに属します）。エニーキャストアドレスに送信されたパケットは、そのアドレスで識別されるインターフェイスの1つに配信されます（ルーティングプロトコルの距離測定によると、「最も近い」インターフェイス）。 [ADDR-ARCH]を参照してください。"
    },
    {
      "indent": 3,
      "text": "solicited-node multicast address - a multicast address to which Neighbor Solicitation messages are sent. The algorithm for computing the address is given in [DISCOVERY].",
      "ja": "solicited-nodeマルチキャストアドレス-Neighbor Solicitationメッセージが送信されるマルチキャストアドレス。アドレスを計算するためのアルゴリズムは[DISCOVERY]で与えられます。"
    },
    {
      "indent": 3,
      "text": "link-layer address - a link-layer identifier for an interface. Examples include IEEE 802 addresses for Ethernet links and E.164 addresses for ISDN links.",
      "ja": "リンク層アドレス-インターフェイスのリンク層識別子。例としては、イーサネットリンクのIEEE 802アドレスやISDNリンクのE.164アドレスなどがあります。"
    },
    {
      "indent": 3,
      "text": "link-local address - an address having link-only scope that can be used to reach neighboring nodes attached to the same link. All interfaces have a link-local unicast address.",
      "ja": "リンクローカルアドレス-同じリンクに接続されている隣接ノードに到達するために使用できるリンクのみのスコープを持つアドレス。すべてのインターフェイスにはリンクローカルユニキャストアドレスがあります。"
    },
    {
      "indent": 3,
      "text": "site-local address - an address having scope that is limited to the local site.",
      "ja": "サイトローカルアドレス-ローカルサイトに限定されたスコープを持つアドレス。"
    },
    {
      "indent": 3,
      "text": "global address - an address with unlimited scope.",
      "ja": "グローバルアドレス-スコープが無制限のアドレス。"
    },
    {
      "indent": 3,
      "text": "communication - any packet exchange among nodes that requires that the address of each node used in the exchange remain the same for the duration of the packet exchange. Examples are a TCP connection or a UDP request- response.",
      "ja": "通信-ノード間のパケット交換。交換で使用される各ノードのアドレスは、パケット交換の期間中同じままである必要があります。例は、TCP接続またはUDP要求応答です。"
    },
    {
      "indent": 3,
      "text": "tentative address - an address whose uniqueness on a link is being verified, prior to its assignment to an interface. A tentative address is not considered assigned to an interface in the usual sense. An interface discards received packets addressed to a tentative address, but accepts Neighbor Discovery packets related to Duplicate Address Detection for the tentative address.",
      "ja": "暫定アドレス-インターフェイスへの割り当て前に、リンクの一意性が検証されているアドレス。仮のアドレスは、通常の意味ではインターフェイスに割り当てられているとは見なされません。インターフェイスは、仮アドレス宛の受信パケットを破棄しますが、仮アドレスの重複アドレス検出に関連するネイバー探索パケットを受け入れます。"
    },
    {
      "indent": 3,
      "text": "preferred address - an address assigned to an interface whose use by upper layer protocols is unrestricted. Preferred addresses may be used as the source (or destination) address of packets sent from (or to) the interface.",
      "ja": "優先アドレス-上位層プロトコルによる使用が制限されていないインターフェースに割り当てられたアドレス。優先アドレスは、インターフェースから（またはインターフェースに）送信されるパケットのソース（または宛先）アドレスとして使用できます。"
    },
    {
      "indent": 3,
      "text": "deprecated address - An address assigned to an interface whose use is discouraged, but not forbidden. A deprecated address should no longer be used as a source address in new communications, but packets sent from or to deprecated addresses are delivered as expected. A deprecated address may continue to be used as a source address in communications where switching to a preferred address causes hardship to a specific upper-layer activity (e.g., an existing TCP connection).",
      "ja": "非推奨アドレス-使用が推奨されていないが禁止されていないインターフェースに割り当てられたアドレス。廃止されたアドレスは、新しい通信の送信元アドレスとして使用されなくなりましたが、廃止されたアドレスとの間で送受信されたパケットは、期待どおりに配信されます。廃止されたアドレスは、優先アドレスへの切り替えが特定の上位層のアクティビティ（既存のTCP接続など）に困難をもたらす通信で、送信元アドレスとして引き続き使用される可能性があります。"
    },
    {
      "indent": 3,
      "text": "valid address - a preferred or deprecated address. A valid address may appear as the source or destination address of a packet, and the internet routing system is expected to deliver packets sent to a valid address to their intended recipients.",
      "ja": "有効なアドレス-優先または非推奨のアドレス。有効なアドレスがパケットの送信元または宛先アドレスとして表示される場合があり、インターネットルーティングシステムは、有効なアドレスに送信されたパケットを目的の受信者に配信することが期待されています。"
    },
    {
      "indent": 3,
      "text": "invalid address - an address that is not assigned to any interface. A valid address becomes invalid when its valid lifetime expires. Invalid addresses should not appear as the destination or source address of a packet. In the former case, the internet routing system will be unable to deliver the packet, in the later case the recipient of the packet will be unable to respond to it.",
      "ja": "無効なアドレス-どのインターフェースにも割り当てられていないアドレス。有効なアドレスは、有効な有効期限が切れると無効になります。無効なアドレスは、パケットの宛先または送信元アドレスとして表示されるべきではありません。前者の場合、インターネットルーティングシステムはパケットを配信できず、後者の場合、パケットの受信者はパケットに応答できません。"
    },
    {
      "indent": 3,
      "text": "preferred lifetime - the length of time that a valid address is preferred (i.e., the time until deprecation). When the preferred lifetime expires, the address becomes deprecated.",
      "ja": "推奨される有効期間-有効なアドレスが推奨される期間（つまり、廃止されるまでの期間）。優先ライフタイムが期限切れになると、アドレスは非推奨になります。"
    },
    {
      "indent": 3,
      "text": "valid lifetime - the length of time an address remains in the valid state (i.e., the time until invalidation). The valid lifetime must be greater then or equal to the preferred lifetime. When the valid lifetime expires, the address becomes invalid.",
      "ja": "有効期間-アドレスが有効な状態にある時間（無効になるまでの時間）。有効なライフタイムは、推奨ライフタイム以上である必要があります。有効な有効期限が切れると、アドレスは無効になります。"
    },
    {
      "indent": 3,
      "text": "interface identifier - a link-dependent identifier for an interface that is (at least) unique per link [ADDR-ARCH]. Stateless address autoconfiguration combines an interface identifier with a prefix to form an address. From address autoconfiguration's perspective, an interface identifier is a bit string of known length. The exact length of an interface identifier and the way it is created is defined in a separate link-type specific document that covers issues related to the transmission of IP over a particular link type (e.g., [IPv6-ETHER]). In many cases, the identifier will be the same as the interface's link-layer address.",
      "ja": "インターフェース識別子-リンクごとに（少なくとも）一意であるインターフェースのリンク依存の識別子[ADDR-ARCH]。ステートレスアドレス自動構成では、インターフェイス識別子とプレフィックスを組み合わせてアドレスを形成します。アドレスの自動構成の観点から見ると、インターフェイス識別子は既知の長さのビット文字列です。インターフェース識別子の正確な長さとその作成方法は、特定のリンクタイプ（[IPv6-ETHER]など）を介したIPの送信に関連する問題をカバーする別のリンクタイプ固有のドキュメントで定義されています。多くの場合、識別子はインターフェイスのリンク層アドレスと同じです。"
    },
    {
      "indent": 0,
      "text": "2.1. Requirements",
      "section_title": true,
      "ja": "2.1. 必要条件"
    },
    {
      "indent": 3,
      "text": "The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear in this document, are to be interpreted as described in [KEYWORDS].",
      "ja": "このドキュメントに記載されているキーワードは、必須、必須、必須、SHALL、SHALL NOT、SHOULD、SHOULD NOT、RECOMMENDED、MAY、およびOPTIONALであり、[キーワード]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. DESIGN GOALS",
      "section_title": true,
      "ja": "3. 設計目標"
    },
    {
      "indent": 3,
      "text": "Stateless autoconfiguration is designed with the following goals in mind:",
      "ja": "ステートレス自動構成は、次の目標を念頭に置いて設計されています。"
    },
    {
      "indent": 6,
      "text": "o Manual configuration of individual machines before connecting them to the network should not be required. Consequently, a mechanism is needed that allows a host to obtain or create unique addresses for each of its interfaces. Address autoconfiguration assumes that each interface can provide a unique identifier for that interface (i.e., an \"interface identifier\"). In the simplest case, an interface identifier consists of the interface's link-layer address. An interface identifier can be combined with a prefix to form an address.",
      "ja": "o ネットワークに接続する前に、個々のマシンを手動で構成する必要はありません。したがって、ホストが各インターフェースの一意のアドレスを取得または作成できるメカニズムが必要です。アドレスの自動構成では、各インターフェースがそのインターフェースに一意の識別子（「インターフェース識別子」）を提供できると想定しています。最も単純なケースでは、インターフェイス識別子はインターフェイスのリンク層アドレスで構成されます。インターフェイス識別子をプレフィックスと組み合わせてアドレスを形成できます。"
    },
    {
      "indent": 6,
      "text": "o Small sites consisting of a set of machines attached to a single link should not require the presence of a stateful server or router as a prerequisite for communicating. Plug-and-play communication is achieved through the use of link-local addresses. Link-local addresses have a well-known prefix that identifies the (single) shared link to which a set of nodes attach. A host forms a link-local address by appending its interface identifier to the link-local prefix.",
      "ja": "o 単一のリンクに接続された一連のマシンで構成される小さなサイトでは、通信の前提条件としてステートフルサーバーまたはルーターの存在を必要としません。プラグアンドプレイ通信は、リンクローカルアドレスを使用して実現されます。リンクローカルアドレスには、一連のノードが接続する（単一の）共有リンクを識別する既知のプレフィックスがあります。ホストは、インターフェイス識別子をリンクローカルプレフィックスに追加して、リンクローカルアドレスを形成します。"
    },
    {
      "indent": 6,
      "text": "o A large site with multiple networks and routers should not require the presence of a stateful address configuration server. In order to generate site-local or global addresses, hosts must determine the prefixes that identify the subnets to which they attach. Routers generate periodic Router Advertisements that include options listing the set of active prefixes on a link.",
      "ja": "o 複数のネットワークとルーターを備えた大規模なサイトでは、ステートフルアドレス構成サーバーが存在する必要はありません。ホストは、サイトローカルアドレスまたはグローバルアドレスを生成するために、接続先のサブネットを識別するプレフィックスを決定する必要があります。ルーターは、リンク上のアクティブなプレフィックスのセットを一覧表示するオプションを含む定期的なルーターアドバタイズメントを生成します。"
    },
    {
      "indent": 6,
      "text": "o Address configuration should facilitate the graceful renumbering of a site's machines. For example, a site may wish to renumber all of its nodes when it switches to a new network service provider. Renumbering is achieved through the leasing of addresses to interfaces and the assignment of multiple addresses to the same interface. Lease lifetimes provide the mechanism through which a site phases out old prefixes. The assignment of multiple addresses to an interface provides for a transition period during which both a new address and the one being phased out work simultaneously.",
      "ja": "o アドレス構成により、サイトのマシンの適切な番号付けが容易になります。たとえば、サイトが新しいネットワークサービスプロバイダーに切り替えたときに、すべてのノードの番号を付け直したいとします。番号の付け直しは、インターフェイスへのアドレスのリースと、同じインターフェイスへの複数のアドレスの割り当てによって実現されます。リースのライフタイムは、サイトが古いプレフィックスを段階的に廃止するメカニズムを提供します。インターフェイスへの複数のアドレスの割り当ては、新しいアドレスと段階的に廃止されるアドレスの両方が同時に機能する移行期間を提供します。"
    },
    {
      "indent": 6,
      "text": "o System administrators need the ability to specify whether stateless autoconfiguration, stateful autoconfiguration, or both should be used. Router Advertisements include flags specifying which mechanisms a host should use.",
      "ja": "o システム管理者は、ステートレス自動構成、ステートフル自動構成、またはその両方を使用する必要があるかどうかを指定する機能が必要です。ルーター通知には、ホストが使用するメカニズムを指定するフラグが含まれています。"
    },
    {
      "indent": 0,
      "text": "4. PROTOCOL OVERVIEW",
      "section_title": true,
      "ja": "4. プロトコルの概要"
    },
    {
      "indent": 3,
      "text": "This section provides an overview of the typical steps that take place when an interface autoconfigures itself. Autoconfiguration is performed only on multicast-capable links and begins when a multicast-capable interface is enabled, e.g., during system startup. Nodes (both hosts and routers) begin the autoconfiguration process by generating a link-local address for the interface. A link-local address is formed by appending the interface's identifier to the well-known link-local prefix.",
      "ja": "このセクションでは、インターフェースが自動構成するときに行われる一般的な手順の概要を説明します。自動構成は、マルチキャスト対応リンクでのみ実行され、システムの起動時など、マルチキャスト対応インターフェースが有効になったときに開始されます。ノード（ホストとルーターの両方）は、インターフェイスのリンクローカルアドレスを生成することにより、自動構成プロセスを開始します。リンクローカルアドレスは、既知のリンクローカルプレフィックスにインターフェイスの識別子を追加することによって形成されます。"
    },
    {
      "indent": 3,
      "text": "Before the link-local address can be assigned to an interface and used, however, a node must attempt to verify that this \"tentative\" address is not already in use by another node on the link. Specifically, it sends a Neighbor Solicitation message containing the tentative address as the target. If another node is already using that address, it will return a Neighbor Advertisement saying so. If another node is also attempting to use the same address, it will send a Neighbor Solicitation for the target as well. The exact number of times the Neighbor Solicitation is (re)transmitted and the delay time between consecutive solicitations is link-specific and may be set by system management.",
      "ja": "ただし、リンクローカルアドレスをインターフェイスに割り当てて使用する前に、ノードはこの「仮の」アドレスがリンク上の別のノードですでに使用されていないことを確認する必要があります。具体的には、仮のアドレスをターゲットとして含む近隣要請メッセージを送信します。別のノードがそのアドレスをすでに使用している場合、そのことを伝えるネイバーアドバタイズメントを返します。別のノードも同じアドレスを使用しようとしている場合は、ターゲットにも近隣要請を送信します。近傍要請が（再）送信される正確な回数と、連続する要請間の遅延時間はリンク固有であり、システム管理によって設定できます。"
    },
    {
      "indent": 3,
      "text": "If a node determines that its tentative link-local address is not unique, autoconfiguration stops and manual configuration of the interface is required. To simplify recovery in this case, it should be possible for an administrator to supply an alternate interface identifier that overrides the default identifier in such a way that the autoconfiguration mechanism can then be applied using the new (presumably unique) interface identifier. Alternatively, link-local and other addresses will need to be configured manually.",
      "ja": "仮のリンクローカルアドレスが一意でないとノードが判断した場合、自動構成が停止し、インターフェイスの手動構成が必要になります。この場合の回復を簡単にするために、管理者はデフォルトの識別子を上書きする代替のインターフェース識別子を指定して、新しい（おそらく一意の）インターフェース識別子を使用して自動構成メカニズムを適用できるようにする必要があります。または、リンクローカルアドレスと他のアドレスを手動で構成する必要があります。"
    },
    {
      "indent": 3,
      "text": "Once a node ascertains that its tentative link-local address is unique, it assigns it to the interface. At this point, the node has IP-level connectivity with neighboring nodes. The remaining autoconfiguration steps are performed only by hosts; the (auto)configuration of routers is beyond the scope of this document.",
      "ja": "ノードは、仮のリンクローカルアドレスが一意であることを確認すると、それをインターフェイスに割り当てます。この時点で、ノードは隣接ノードとのIPレベルの接続を確立しています。残りの自動構成手順は、ホストによってのみ実行されます。ルータの（自動）構成は、このドキュメントの範囲外です。"
    },
    {
      "indent": 3,
      "text": "The next phase of autoconfiguration involves obtaining a Router Advertisement or determining that no routers are present. If routers are present, they will send Router Advertisements that specify what sort of autoconfiguration a host should do. If no routers are present, stateful autoconfiguration should be invoked.",
      "ja": "自動構成の次のフェーズでは、ルーターアドバタイズを取得するか、ルーターが存在しないと判断します。ルーターが存在する場合は、ホストが行うべき自動構成の種類を指定するルーターアドバタイズを送信します。ルーターが存在しない場合は、ステートフル自動構成を呼び出す必要があります。"
    },
    {
      "indent": 0,
      "text": " Routers send Router Advertisements periodically, but the delay between successive advertisements will generally be longer than a host performing autoconfiguration will want to wait [DISCOVERY]. To obtain an advertisement quickly, a host sends one or more Router Solicitations to the all-routers multicast group. Router Advertisements contain two flags indicating what type of stateful autoconfiguration (if any) should be performed. A \"managed address configuration\" flag indicates whether hosts should use stateful autoconfiguration to obtain addresses. An \"other stateful configuration\" flag indicates whether hosts should use stateful autoconfiguration to obtain additional information (excluding addresses).",
      "ja": "ルーターはルーターアドバタイズメントを定期的に送信しますが、連続するアドバタイズメント間の遅延は通常、自動構成を実行するホストが待機するよりも長くなります[DISCOVERY]。アドバタイズをすばやく取得するために、ホストは1つ以上のルーター要請を全ルーターマルチキャストグループに送信します。ルーターアドバタイズには、実行する必要があるステートフル自動構成（存在する場合）のタイプを示す2つのフラグが含まれています。 「管理アドレス構成」フラグは、ホストがステートフル自動構成を使用してアドレスを取得する必要があるかどうかを示します。 「その他のステートフル構成」フラグは、ホストが追加情報（アドレスを除く）を取得するためにステートフル自動構成を使用する必要があるかどうかを示します。"
    },
    {
      "indent": 3,
      "text": "Router Advertisements also contain zero or more Prefix Information options that contain information used by stateless address autoconfiguration to generate site-local and global addresses. It should be noted that the stateless and stateful address autoconfiguration fields in Router Advertisements are processed independently of one another, and a host may use both stateful and stateless address autoconfiguration simultaneously. One Prefix Information option field, the \"autonomous address-configuration flag\", indicates whether or not the option even applies to stateless autoconfiguration. If it does, additional option fields contain a subnet prefix together with lifetime values indicating how long addresses created from the prefix remain preferred and valid.",
      "ja": "ルーターアドバタイズには、サイトレスアドレスとグローバルアドレスを生成するためにステートレスアドレス自動構成で使用される情報を含む0個以上のプレフィックス情報オプションも含まれます。ルーターアドバタイズメントのステートレスおよびステートフルアドレス自動構成フィールドは互いに独立して処理され、ホストはステートフルとステートレスアドレス自動構成の両方を同時に使用できることに注意してください。プレフィックス情報オプションフィールドの1つである「自律アドレス構成フラグ」は、オプションがステートレス自動構成にも適用されるかどうかを示します。その場合、追加のオプションフィールドには、サブネットプレフィックスと、プレフィックスから作成されたアドレスが優先されて有効である期間を示すライフタイム値が含まれます。"
    },
    {
      "indent": 3,
      "text": "Because routers generate Router Advertisements periodically, hosts will continually receive new advertisements. Hosts process the information contained in each advertisement as described above, adding to and refreshing information received in previous advertisements.",
      "ja": "ルーターは定期的にルーターアドバタイズを生成するため、ホストは新しいアドバタイズを継続的に受信します。ホストは、前述のように各アドバタイズに含まれる情報を処理し、以前のアドバタイズで受信した情報に追加して更新します。"
    },
    {
      "indent": 3,
      "text": "For safety, all addresses must be tested for uniqueness prior to their assignment to an interface. In the case of addresses created through stateless autoconfig, however, the uniqueness of an address is determined primarily by the portion of the address formed from an interface identifier. Thus, if a node has already verified the uniqueness of a link-local address, additional addresses created from the same interface identifier need not be tested individually. In contrast, all addresses obtained manually or via stateful address autoconfiguration should be tested for uniqueness individually. To accommodate sites that believe the overhead of performing Duplicate Address Detection outweighs its benefits, the use of Duplicate Address Detection can be disabled through the administrative setting of a per-interface configuration flag.",
      "ja": "安全のため、インターフェイスに割り当てる前に、すべてのアドレスの一意性をテストする必要があります。ただし、ステートレス自動構成によって作成されたアドレスの場合、アドレスの一意性は、主にインターフェイス識別子から形成されるアドレスの部分によって決定されます。したがって、ノードがリンクローカルアドレスの一意性をすでに確認している場合、同じインターフェイス識別子から作成された追加のアドレスを個別にテストする必要はありません。対照的に、手動で、またはステートフルアドレス自動構成を介して取得されたすべてのアドレスは、個別に一意性をテストする必要があります。重複アドレス検出を実行するオーバーヘッドがその利点を上回ると考えられるサイトに対応するために、インターフェイスごとの構成フラグの管理設定を通じて重複アドレス検出の使用を無効にすることができます。"
    },
    {
      "indent": 3,
      "text": "To speed the autoconfiguration process, a host may generate its link-local address (and verify its uniqueness) in parallel with waiting for a Router Advertisement. Because a router may delay responding to a Router Solicitation for a few seconds, the total time needed to complete autoconfiguration can be significantly longer if the two steps are done serially.",
      "ja": "自動構成プロセスを高速化するために、ホストは、ルーターアドバタイズメントの待機と並行して、リンクローカルアドレスを生成（およびその一意性を検証）する場合があります。ルーターがルーター要請への応答を数秒間遅らせる可能性があるため、2つの手順を順番に実行すると、自動構成を完了するために必要な合計時間が大幅に長くなる可能性があります。"
    },
    {
      "indent": 0,
      "text": "4.1. Site Renumbering",
      "section_title": true,
      "ja": "4.1. サイトの再番号付け"
    },
    {
      "indent": 3,
      "text": "Address leasing facilitates site renumbering by providing a mechanism to time-out addresses assigned to interfaces in hosts. At present, upper layer protocols such as TCP provide no support for changing end-point addresses while a connection is open. If an end-point address becomes invalid, existing connections break and all communication to the invalid address fails. Even when applications use UDP as a transport protocol, addresses must generally remain the same during a packet exchange.",
      "ja": "アドレスリースは、ホストのインターフェイスに割り当てられたアドレスをタイムアウトするメカニズムを提供することにより、サイトの番号付けを容易にします。現在、TCPなどの上位層プロトコルは、接続が開いている間はエンドポイントアドレスの変更をサポートしていません。エンドポイントアドレスが無効になると、既存の接続が切断され、無効なアドレスへのすべての通信が失敗します。アプリケーションがUDPをトランスポートプロトコルとして使用する場合でも、パケット交換中、アドレスは通常同じままである必要があります。"
    },
    {
      "indent": 3,
      "text": "Dividing valid addresses into preferred and deprecated categories provides a way of indicating to upper layers that a valid address may become invalid shortly and that future communication using the address will fail, should the address's valid lifetime expire before communication ends. To avoid this scenario, higher layers should use a preferred address (assuming one of sufficient scope exists) to increase the likelihood that an address will remain valid for the duration of the communication. It is up to system administrators to set appropriate prefix lifetimes in order to minimize the impact of failed communication when renumbering takes place. The deprecation period should be long enough that most, if not all, communications are using the new address at the time an address becomes invalid.",
      "ja": "有効なアドレスを優先カテゴリと非推奨のカテゴリに分割すると、有効なアドレスがすぐに無効になる可能性があり、通信が終了する前にアドレスの有効な有効期限が切れた場合、アドレスを使用する将来の通信が失敗することを上位層に示す方法が提供されます。このシナリオを回避するには、上位層は優先アドレスを使用して（十分なスコープの1つが存在すると想定）、アドレスが通信中に有効なままである可​​能性を高めます。再番号付けが行われるときに通信の失敗による影響を最小限に抑えるために、適切なプレフィックスの有効期間を設定するのはシステム管理者の責任です。非推奨期間は、アドレスが無効になったときにほとんどの通信がすべてではないにしても新しいアドレスを使用するのに十分な長さである必要があります。"
    },
    {
      "indent": 3,
      "text": "The IP layer is expected to provide a means for upper layers (including applications) to select the most appropriate source address given a particular destination and possibly other constraints. An application may choose to select the source address itself before starting a new communication or may leave the address unspecified, in which case the upper networking layers will use the mechanism provided by the IP layer to choose a suitable address on the application's behalf.",
      "ja": "IP層は、特定の宛先やその他の制約を考慮して、上位層（アプリケーションを含む）が最も適切な送信元アドレスを選択する手段を提供することが期待されています。アプリケーションは、新しい通信を開始する前にソースアドレス自体を選択するか、アドレスを指定しないままにすることができます。その場合、上位のネットワーク層は、IP層によって提供されるメカニズムを使用して、アプリケーションに代わって適切なアドレスを選択します。"
    },
    {
      "indent": 3,
      "text": "Detailed address selection rules are beyond the scope of this document.",
      "ja": "詳細なアドレス選択規則は、このドキュメントの範囲外です。"
    },
    {
      "indent": 0,
      "text": "5. PROTOCOL SPECIFICATION",
      "section_title": true,
      "ja": "5. プロトコル仕様"
    },
    {
      "indent": 3,
      "text": "Autoconfiguration is performed on a per-interface basis on multicast-capable interfaces. For multihomed hosts, autoconfiguration is performed independently on each interface. Autoconfiguration applies primarily to hosts, with two exceptions. Routers are expected to generate a link-local address using the procedure outlined below. In addition, routers perform Duplicate Address Detection on all addresses prior to assigning them to an interface.",
      "ja": "自動構成は、マルチキャスト対応インターフェース上でインターフェースごとに実行されます。マルチホームホストの場合、自動設定は各インターフェイスで個別に実行されます。自動設定は主にホストに適用されますが、2つの例外があります。ルーターは、以下に概説する手順を使用してリンクローカルアドレスを生成することが期待されています。さらに、ルーターは、アドレスをインターフェイスに割り当てる前に、すべてのアドレスに対して重複アドレス検出を実行します。"
    },
    {
      "indent": 0,
      "text": "5.1. Node Configuration Variables",
      "section_title": true,
      "ja": "5.1. ノード構成変数"
    },
    {
      "indent": 3,
      "text": "A node MUST allow the following autoconfiguration-related variable to be configured by system management for each multicast interface:",
      "ja": "ノードは、以下の自動設定関連の変数が各マルチキャストインターフェイスのシステム管理によって設定されることを許可する必要があります。"
    },
    {
      "indent": 6,
      "text": "DupAddrDetectTransmits",
      "ja": "DupAddrDetectTransmits"
    },
    {
      "indent": 21,
      "text": "The number of consecutive Neighbor Solicitation messages sent while performing Duplicate Address Detection on a tentative address. A value of zero indicates that Duplicate Address Detection is not performed on tentative addresses. A value of one indicates a single transmission with no follow up retransmissions.",
      "ja": "仮アドレスで重複アドレス検出を実行中に送信された連続した近隣要請メッセージの数。ゼロの値は、重複アドレス検出が一時アドレスで実行されないことを示します。値1は、フォローアップ再送信がない単一の送信を示します。"
    },
    {
      "indent": 21,
      "text": "Default: 1, but may be overridden by a link-type specific value in the document that covers issues related to the transmission of IP over a particular link type (e.g., [IPv6-ETHER]).",
      "ja": "デフォルト：1。ただし、特定のリンクタイプ（[IPv6-ETHER]など）を介したIPの送信に関連する問題をカバーするドキュメント内のリンクタイプ固有の値によってオーバーライドされる場合があります。"
    },
    {
      "indent": 21,
      "text": "Autoconfiguration also assumes the presence of the variable RetransTimer as defined in [DISCOVERY]. For autoconfiguration purposes, RetransTimer specifies the delay between consecutive Neighbor Solicitation transmissions performed during Duplicate Address Detection (if DupAddrDetectTransmits is greater than 1), as well as the time a node waits after sending the last Neighbor Solicitation before ending the Duplicate Address Detection process.",
      "ja": "自動構成では、[DISCOVERY]で定義されている変数RetransTimerの存在も想定しています。自動構成の目的で、RetransTimerは、重複アドレス検出中に実行される連続した近傍要請送信間の遅延（DupAddrDetectTransmitsが1より大きい場合）、および重複アドレス検出プロセスを終了する前にノードが最後の近傍要請を送信した後に待機する時間を指定します。"
    },
    {
      "indent": 0,
      "text": "5.2. Autoconfiguration-Related Variables",
      "section_title": true,
      "ja": "5.2. 自動構成関連の変数"
    },
    {
      "indent": 3,
      "text": "A host maintains a number of data structures and flags related to autoconfiguration. In the following, we present conceptual variables and show how they are used to perform autoconfiguration. The specific variables are used for demonstration purposes only, and an implementation is not required to have them, so long as its external behavior is consistent with that described in this document.",
      "ja": "ホストは、自動構成に関連するいくつかのデータ構造とフラグを保持しています。以下では、概念変数を示し、それらが自動構成を実行するためにどのように使用されるかを示します。特定の変数はデモンストレーションの目的でのみ使用され、外部の動作がこのドキュメントで説明されている動作と一致している限り、実装にそれらを持たせる必要はありません。"
    },
    {
      "indent": 3,
      "text": "Beyond the formation of a link-local address and using Duplicate Address Detection, how routers (auto)configure their interfaces is beyond the scope of this document.",
      "ja": "リンクローカルアドレスの形成と重複アドレス検出の使用を超えて、ルーターがインターフェイスを（自動）構成する方法は、このドキュメントの範囲外です。"
    },
    {
      "indent": 3,
      "text": "Hosts maintain the following variables on a per-interface basis:",
      "ja": "ホストは、インターフェイスごとに次の変数を維持します。"
    },
    {
      "indent": 6,
      "text": "ManagedFlag Copied from the M flag field (i.e., the \"managed address configuration\" flag) of the most recently received Router Advertisement message. The flag indicates whether or not addresses are to be configured using the stateful autoconfiguration mechanism. It starts out in a FALSE state.",
      "ja": "ManagedFlag最後に受信したルーターアドバタイズメッセージのMフラグフィールド（つまり、「管理対象アドレス構成」フラグ）からコピーします。このフラグは、ステートフル自動構成メカニズムを使用してアドレスを構成するかどうかを示します。最初はFALSE状態です。"
    },
    {
      "indent": 6,
      "text": "OtherConfigFlag Copied from the O flag field (i.e., the \"other stateful configuration\" flag) of the most recently received Router Advertisement message. The flag indicates whether or not information other than addresses is to be obtained using the stateful autoconfiguration mechanism. It starts out in a FALSE state.",
      "ja": "OtherConfigFlag最後に受信したルーターアドバタイズメントメッセージのOフラグフィールド（つまり、「その他のステートフル構成」フラグ）からコピーします。このフラグは、アドレス以外の情報をステートフル自動構成メカニズムを使用して取得するかどうかを示します。最初はFALSE状態です。"
    },
    {
      "indent": 23,
      "text": "In addition, when the value of the ManagedFlag is TRUE, the value of OtherConfigFlag is implicitely TRUE as well. It is not a valid configuration for a host to use stateful address autoconfiguration to request addresses only, without also accepting other configuration information.",
      "ja": "さらに、ManagedFlagの値がTRUEの場合、OtherConfigFlagの値も暗黙的にTRUEになります。ホストがステートフルアドレス自動構成を使用してアドレスのみを要求し、他の構成情報も受け入れないようにすることは、有効な構成ではありません。"
    },
    {
      "indent": 3,
      "text": "A host also maintains a list of addresses together with their corresponding lifetimes. The address list contains both autoconfigured addresses and those configured manually.",
      "ja": "ホストは、対応するライフタイムとともにアドレスのリストも維持します。アドレス一覧には、自動構成されたアドレスと手動で構成されたアドレスの両方が含まれています。"
    },
    {
      "indent": 0,
      "text": "5.3. Creation of Link-Local Addresses",
      "section_title": true,
      "ja": "5.3. リンクローカルアドレスの作成"
    },
    {
      "indent": 3,
      "text": "A node forms a link-local address whenever an interface becomes enabled. An interface may become enabled after any of the following events:",
      "ja": "インターフェイスが有効になると、ノードはリンクローカルアドレスを形成します。インターフェイスは、次のいずれかのイベントの後に有効になる場合があります。"
    },
    {
      "indent": 6,
      "text": "- The interface is initialized at system startup time.",
      "ja": "- インターフェイスはシステムの起動時に初期化されます。"
    },
    {
      "indent": 6,
      "text": "- The interface is reinitialized after a temporary interface failure or after being temporarily disabled by system management.",
      "ja": "- 一時的なインターフェイス障害が発生した後、またはシステム管理によって一時的に無効にされた後、インターフェイスは再初期化されます。"
    },
    {
      "indent": 6,
      "text": "- The interface attaches to a link for the first time.",
      "ja": "- インターフェイスは初めてリンクに接続します。"
    },
    {
      "indent": 6,
      "text": "- The interface becomes enabled by system management after having been administratively disabled.",
      "ja": "- インターフェイスは、管理上無効にされた後、システム管理によって有効になります。"
    },
    {
      "indent": 3,
      "text": "A link-local address is formed by prepending the well-known link-local prefix FE80::0 [ADDR-ARCH] (of appropriate length) to the interface identifier. If the interface identifier has a length of N bits, the interface identifier replaces the right-most N zero bits of the link-local prefix. If the interface identifier is more than 118 bits in length, autoconfiguration fails and manual configuration is required. Note that interface identifiers will typically be 64-bits long and based on EUI-64 identifiers as described in [ADDR-ARCH].",
      "ja": "リンクローカルアドレスは、既知のリンクローカルプレフィックスFE80 :: 0 [ADDR-ARCH]（適切な長さ）をインターフェイス識別子の前に付加することによって形成されます。インターフェイス識別子の長さがNビットの場合、インターフェイス識別子はリンクローカルプレフィックスの右端のNゼロビットを置き換えます。インターフェイス識別子の長さが118ビットを超える場合、自動設定は失敗し、手動設定が必要になります。 [ADDR-ARCH]で説明されているように、インターフェイス識別子は通常64ビット長で、EUI-64識別子に基づいていることに注意してください。"
    },
    {
      "indent": 3,
      "text": "A link-local address has an infinite preferred and valid lifetime; it is never timed out.",
      "ja": "リンクローカルアドレスには、有効期間が無限にあり、有効です。タイムアウトすることはありません。"
    },
    {
      "indent": 0,
      "text": "5.4. Duplicate Address Detection",
      "section_title": true,
      "ja": "5.4. 重複アドレス検出"
    },
    {
      "indent": 3,
      "text": "Duplicate Address Detection is performed on unicast addresses prior to assigning them to an interface whose DupAddrDetectTransmits variable is greater than zero. Duplicate Address Detection MUST take place on all unicast addresses, regardless of whether they are obtained through stateful, stateless or manual configuration, with the exception of the following cases:",
      "ja": "重複アドレス検出は、DupAddrDetectTransmits変数がゼロより大きいインターフェイスに割り当てる前に、ユニキャストアドレスで実行されます。重複アドレス検出は、次の場合を除いて、ステートフル、ステートレス、または手動のいずれの構成で取得されたかに関係なく、すべてのユニキャストアドレスで実行する必要があります。"
    },
    {
      "indent": 6,
      "text": "- Duplicate Address Detection MUST NOT be performed on anycast addresses.",
      "ja": "- 重複アドレス検出は、エニーキャストアドレスに対して実行してはなりません。"
    },
    {
      "indent": 6,
      "text": "- Each individual unicast address SHOULD be tested for uniqueness. However, when stateless address autoconfiguration is used, address uniqueness is determined solely by the interface identifier, assuming that subnet prefixes are assigned correctly (i.e., if all of an interface's addresses are generated from the same identifier, either all addresses or none of them will be duplicates). Thus, for a set of addresses formed from the same interface identifier, it is sufficient to check that the link-local address generated from the identifier is unique on the link. In such cases, the link-local address MUST be tested for uniqueness, and if no duplicate address is detected, an implementation MAY choose to skip Duplicate Address Detection for additional addresses derived from the same interface identifier.",
      "ja": "- 個々のユニキャストアドレスの一意性をテストする必要があります。ただし、ステートレスアドレス自動構成が使用される場合、サブネットプレフィックスが正しく割り当てられていることを前提として、アドレスの一意性はインターフェース識別子のみによって決定されます（つまり、インターフェースのすべてのアドレスが同じ識別子から生成された場合、すべてのアドレスまたはそれらのどれもが重複する）。したがって、同じインターフェイス識別子から形成されたアドレスのセットの場合、識別子から生成されたリンクローカルアドレスがリンク上で一意であることを確認するだけで十分です。そのような場合、リンクローカルアドレスの一意性をテストする必要があります。重複アドレスが検出されない場合、実装は、同じインターフェイス識別子から派生した追加アドレスの重複アドレス検出をスキップすることを選択できます。"
    },
    {
      "indent": 0,
      "text": " The procedure for detecting duplicate addresses uses Neighbor Solicitation and Advertisement messages as described below. If a duplicate address is discovered during the procedure, the address cannot be assigned to the interface. If the address is derived from an interface identifier, a new identifier will need to be assigned to the interface, or all IP addresses for the interface will need to be manually configured. Note that the method for detecting duplicates is not completely reliable, and it is possible that duplicate addresses will still exist (e.g., if the link was partitioned while Duplicate Address Detection was performed).",
      "ja": "重複アドレスを検出するための手順では、以下に説明するように、近隣要請およびアドバタイズメッセージを使用します。手順中に重複アドレスが検出された場合、そのアドレスをインターフェイスに割り当てることはできません。アドレスがインターフェイス識別子から派生している場合は、新しい識別子をインターフェイスに割り当てるか、インターフェイスのすべてのIPアドレスを手動で構成する必要があります。重複を検出する方法は完全に信頼できるわけではなく、重複アドレスがまだ存在する可能性があることに注意してください（たとえば、重複アドレス検出の実行中にリンクが分割された場合）。"
    },
    {
      "indent": 3,
      "text": "An address on which the duplicate Address Detection Procedure is applied is said to be tentative until the procedure has completed successfully. A tentative address is not considered \"assigned to an interface\" in the traditional sense. That is, the interface must accept Neighbor Solicitation and Advertisement messages containing the tentative address in the Target Address field, but processes such packets differently from those whose Target Address matches an address assigned to the interface. Other packets addressed to the tentative address should be silently discarded.",
      "ja": "重複アドレス検出手順が適用されるアドレスは、手順が正常に完了するまで暫定的であると言われます。仮アドレスは、従来の意味では「インターフェースに割り当てられている」とは見なされません。つまり、インターフェイスは、[Target Address]フィールドに暫定アドレスを含む近隣要請メッセージとアドバタイズメッセージを受け入れる必要がありますが、そのようなパケットは、ターゲットアドレスがインターフェイスに割り当てられたアドレスと一致するパケットとは異なります。仮のアドレスに宛てられた他のパケットは、静かに破棄されるべきです。"
    },
    {
      "indent": 3,
      "text": "It should also be noted that Duplicate Address Detection must be performed prior to assigning an address to an interface in order to prevent multiple nodes from using the same address simultaneously. If a node begins using an address in parallel with Duplicate Address Detection, and another node is already using the address, the node performing Duplicate Address Detection will erroneously process traffic intended for the other node, resulting in such possible negative consequences as the resetting of open TCP connections.",
      "ja": "複数のノードが同じアドレスを同時に使用するのを防ぐために、アドレスをインターフェイスに割り当てる前に重複アドレス検出を実行する必要があることにも注意してください。ノードが重複アドレス検出と並行してアドレスの使用を開始し、別のノードがすでにアドレスを使用している場合、重複アドレス検出を実行するノードは、他のノードを対象とするトラフィックを誤って処理し、オープンのリセットなどの否定的な結果をもたらす可能性がありますTCP接続。"
    },
    {
      "indent": 3,
      "text": "The following subsections describe specific tests a node performs to verify an address's uniqueness. An address is considered unique if none of the tests indicate the presence of a duplicate address within RetransTimer milliseconds after having sent DupAddrDetectTransmits Neighbor Solicitations. Once an address is determined to be unique, it may be assigned to an interface.",
      "ja": "次のサブセクションでは、ノードがアドレスの一意性を検証するために実行する特定のテストについて説明します。 DupAddrDetectTransmits Neighbor Solicitationsを送信した後、どのテストでもRetransTimerミリ秒以内に重複アドレスの存在を示さない場合、アドレスは一意であると見なされます。アドレスが一意であると判断されると、インターフェイスに割り当てることができます。"
    },
    {
      "indent": 0,
      "text": "5.4.1. Message Validation",
      "section_title": true,
      "ja": "5.4.1. メッセージの検証"
    },
    {
      "indent": 3,
      "text": "A node MUST silently discard any Neighbor Solicitation or Advertisement message that does not pass the validity checks specified in [DISCOVERY]. A solicitation that passes these validity checks is called a valid solicitation or valid advertisement.",
      "ja": "ノードは、[DISCOVERY]で指定された有効性チェックに合格しない近隣要請メッセージまたはアドバタイズメントメッセージをサイレントに破棄する必要があります。これらの有効性チェックに合格した請求は、有効な請求または有効な広告と呼ばれます。"
    },
    {
      "indent": 0,
      "text": "5.4.2. Sending Neighbor Solicitation Messages",
      "section_title": true,
      "ja": "5.4.2. 近隣要請メッセージの送信"
    },
    {
      "indent": 3,
      "text": "Before sending a Neighbor Solicitation, an interface MUST join the all-nodes multicast address and the solicited-node multicast address of the tentative address. The former insures that the node receives Neighbor Advertisements from other nodes already using the address; the latter insures that two nodes attempting to use the same address simultaneously detect each other's presence.",
      "ja": "近隣要請を送信する前に、インターフェースは全ノードマルチキャストアドレスと仮アドレスの要請ノードマルチキャストアドレスに参加する必要があります。前者は、ノードがすでにアドレスを使用している他のノードからネイバーアドバタイズを受信することを保証します。後者は、同じアドレスを使用しようとする2つのノードが互いの存在を同時に検出することを保証します。"
    },
    {
      "indent": 0,
      "text": " To check an address, a node sends DupAddrDetectTransmits Neighbor Solicitations, each separated by RetransTimer milliseconds. The solicitation's Target Address is set to the address being checked, the IP source is set to the unspecified address and the IP destination is set to the solicited-node multicast address of the target address.",
      "ja": "アドレスをチェックするために、ノードはDupAddrDetectTransmits Neighbor Solicitationsを送信します。それぞれがRetransTimerミリ秒で区切られています。要請のターゲットアドレスはチェックされているアドレスに設定され、IPソースは未指定アドレスに設定され、IP宛先はターゲットアドレスの要請ノードマルチキャストアドレスに設定されます。"
    },
    {
      "indent": 3,
      "text": "If the Neighbor Solicitation is the first message to be sent from an interface after interface (re)initialization, the node should delay sending the message by a random delay between 0 and MAX_RTR_SOLICITATION_DELAY as specified in [DISCOVERY]. This serves to alleviate congestion when many nodes start up on the link at the same time, such as after a power failure, and may help to avoid race conditions when more than one node is trying to solicit for the same address at the same time. In order to improve the robustness of the Duplicate Address Detection algorithm, an interface MUST receive and process datagrams sent to the all-nodes multicast address or solicited-node multicast address of the tentative address while delaying transmission of the initial Neighbor Solicitation.",
      "ja": "近隣要請がインターフェースの（再）初期化後にインターフェースから送信される最初のメッセージである場合、ノードは、[DISCOVERY]で指定されているように、0からMAX_RTR_SOLICITATION_DELAYまでのランダムな遅延によってメッセージの送信を遅らせる必要があります。これは、停電の後など、多くのノードがリンク上で同時に起動するときの輻輳を緩和するのに役立ち、複数のノードが同時に同じアドレスを要求しようとしたときに競合状態を回避するのに役立つ場合があります。重複アドレス検出アルゴリズムの堅牢性を向上させるために、インターフェイスは、初期近隣要請の送信を遅らせながら、仮アドレスの全ノードマルチキャストアドレスまたは要請ノードマルチキャストアドレスに送信されたデータグラムを受信して​​処理する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.4.3. Receiving Neighbor Solicitation Messages",
      "section_title": true,
      "ja": "5.4.3. 近隣要請メッセージの受信"
    },
    {
      "indent": 3,
      "text": "On receipt of a valid Neighbor Solicitation message on an interface, node behavior depends on whether the target address is tentative or not. If the target address is not tentative (i.e., it is assigned to the receiving interface), the solicitation is processed as described in [DISCOVERY]. If the target address is tentative, and the source address is a unicast address, the solicitation's sender is performing address resolution on the target; the solicitation should be silently ignored. Otherwise, processing takes place as described below. In all cases, a node MUST NOT respond to a Neighbor Solicitation for a tentative address.",
      "ja": "インターフェイスで有効な近隣要請メッセージを受信したときのノードの動作は、ターゲットアドレスが一時的かどうかによって異なります。ターゲットアドレスが暫定的でない（つまり、受信インターフェースに割り当てられている）場合、請求は[ディスカバリー]で説明されているように処理されます。ターゲットアドレスが仮であり、ソースアドレスがユニキャストアドレスである場合、送信請求の送信者はターゲットでアドレス解決を実行しています。勧誘は黙って無視されるべきです。それ以外の場合、処理は次のように行われます。すべての場合において、ノードは仮アドレスの近隣要請に応答してはなりません（MUST NOT）。"
    },
    {
      "indent": 3,
      "text": "If the source address of the Neighbor Solicitation is the unspecified address, the solicitation is from a node performing Duplicate Address Detection. If the solicitation is from another node, the tentative address is a duplicate and should not be used (by either node). If the solicitation is from the node itself (because the node loops back multicast packets), the solicitation does not indicate the presence of a duplicate address.",
      "ja": "近傍要請の送信元アドレスが指定されていないアドレスである場合、要請は重複アドレス検出を実行するノードからのものです。要請が別のノードからのものである場合、仮アドレスは重複しているため、（どちらのノードでも）使用しないでください。要請がノード自体からのものである場合（ノードがマルチキャストパケットをループバックするため）、要請は重複アドレスの存在を示しません。"
    },
    {
      "indent": 3,
      "text": "Implementor's Note: many interfaces provide a way for upper layers to selectively enable and disable the looping back of multicast packets. The details of how such a facility is implemented may prevent Duplicate Address Detection from working correctly. See the Appendix for further discussion.",
      "ja": "実装者の注意：多くのインターフェースは、上位層がマルチキャストパケットのループバックを選択的に有効または無効にする方法を提供します。このような機能の実装方法の詳細により、重複アドレス検出が正しく機能しない場合があります。詳細については、付録を参照してください。"
    },
    {
      "indent": 3,
      "text": "The following tests identify conditions under which a tentative address is not unique:",
      "ja": "次のテストは、仮のアドレスが一意でない条件を特定します。"
    },
    {
      "indent": 6,
      "text": "- If a Neighbor Solicitation for a tentative address is received prior to having sent one, the tentative address is a duplicate. This condition occurs when two nodes run Duplicate Address Detection simultaneously, but transmit initial solicitations at different times (e.g., by selecting different random delay values before transmitting an initial solicitation).",
      "ja": "- 仮アドレスの近隣要請が送信される前に受信された場合、仮アドレスは重複しています。この状態は、2つのノードが重複アドレス検出を同時に実行しているが、初期要請を異なる時間に送信する場合に発生します（たとえば、初期要請を送信する前に異なるランダム遅延値を選択することにより）。"
    },
    {
      "indent": 6,
      "text": "- If the actual number of Neighbor Solicitations received exceeds the number expected based on the loopback semantics (e.g., the interface does not loopback packet, yet one or more solicitations was received), the tentative address is a duplicate. This condition occurs when two nodes run Duplicate Address Detection simultaneously and transmit solicitations at roughly the same time.",
      "ja": "- 受信した近隣要請の実際の数がループバックセマンティクスに基づいて予想される数を超える場合（たとえば、インターフェイスがパケットをループバックせず、1つ以上の要請が受信された場合）、仮アドレスは重複しています。この状態は、2つのノードが重複アドレス検出を同時に実行し、送信請求をほぼ同時に送信したときに発生します。"
    },
    {
      "indent": 0,
      "text": "5.4.4. Receiving Neighbor Advertisement Messages",
      "section_title": true,
      "ja": "5.4.4. ネイバーアドバタイズメントメッセージの受信"
    },
    {
      "indent": 3,
      "text": "On receipt of a valid Neighbor Advertisement message on an interface, node behavior depends on whether the target address is tentative or matches a unicast or anycast address assigned to the interface. If the target address is assigned to the receiving interface, the solicitation is processed as described in [DISCOVERY]. If the target address is tentative, the tentative address is not unique.",
      "ja": "インターフェイスで有効なネイバーアドバタイズメントメッセージを受信したときのノードの動作は、ターゲットアドレスが一時的であるか、インターフェイスに割り当てられたユニキャストアドレスまたはエニーキャストアドレスと一致するかによって異なります。ターゲットアドレスが受信インターフェイスに割り当てられている場合、請求は[DISCOVERY]の説明に従って処理されます。ターゲットアドレスが仮の場合、仮のアドレスは一意ではありません。"
    },
    {
      "indent": 0,
      "text": "5.4.5. When Duplicate Address Detection Fails",
      "section_title": true,
      "ja": "5.4.5. 重複アドレス検出が失敗した場合"
    },
    {
      "indent": 3,
      "text": "A tentative address that is determined to be a duplicate as described above, MUST NOT be assigned to an interface and the node SHOULD log a system management error. If the address is a link-local address formed from an interface identifier, the interface SHOULD be disabled.",
      "ja": "上記のように重複していると判断された仮アドレスは、インターフェースに割り当ててはならず（MUST NOT）、ノードはシステム管理エラーをログに記録する必要があります（SHOULD）。アドレスがインターフェイス識別子から形成されたリンクローカルアドレスである場合、インターフェイスを無効にする必要があります（SHOULD）。"
    },
    {
      "indent": 0,
      "text": "5.5. Creation of Global and Site-Local Addresses",
      "section_title": true,
      "ja": "5.5. グローバルアドレスとサイトローカルアドレスの作成"
    },
    {
      "indent": 3,
      "text": "Global and site-local addresses are formed by appending an interface identifier to a prefix of appropriate length. Prefixes are obtained from Prefix Information options contained in Router Advertisements. Creation of global and site-local addresses and configuration of other parameters as described in this section SHOULD be locally configurable. However, the processing described below MUST be enabled by default.",
      "ja": "グローバルアドレスとサイトローカルアドレスは、適切な長さのプレフィックスにインターフェイス識別子を追加することによって形成されます。プレフィックスは、ルーターアドバタイズメントに含まれるプレフィックス情報オプションから取得されます。このセクションで説明されているグローバルおよびサイトローカルアドレスの作成と他のパラメーターの構成は、ローカルで構成可能である必要があります（SHOULD）。ただし、以下で説明する処理はデフォルトで有効にする必要があります。"
    },
    {
      "indent": 0,
      "text": "5.5.1. Soliciting Router Advertisements",
      "section_title": true,
      "ja": "5.5.1. ルーター広告の要請"
    },
    {
      "indent": 3,
      "text": "Router Advertisements are sent periodically to the all-nodes multicast address. To obtain an advertisement quickly, a host sends out Router Solicitations as described in [DISCOVERY].",
      "ja": "ルーター通知は、全ノードのマルチキャストアドレスに定期的に送信されます。アドバタイズをすばやく取得するために、ホストは[ディスカバリー]で説明されているようにルーター要請を送信します。"
    },
    {
      "indent": 0,
      "text": "5.5.2. Absence of Router Advertisements",
      "section_title": true,
      "ja": "5.5.2. ルータアドバタイズメントの不在"
    },
    {
      "indent": 3,
      "text": "If a link has no routers, a host MUST attempt to use stateful autoconfiguration to obtain addresses and other configuration information. An implementation MAY provide a way to disable the invocation of stateful autoconfiguration in this case, but the default SHOULD be enabled. From the perspective of autoconfiguration, a link has no routers if no Router Advertisements are received after having sent a small number of Router Solicitations as described in [DISCOVERY].",
      "ja": "リンクにルーターがない場合、ホストはステートフル自動構成を使用してアドレスやその他の構成情報を取得しようとする必要があります。この場合、実装はステートフル自動構成の呼び出しを無効にする方法を提供できますが、デフォルトは有効にする必要があります（SHOULD）。自動構成の観点から見ると、[DISCOVERY]で説明されているように少数のルーター要請を送信した後でルーターアドバタイズが受信されない場合、リンクにはルーターがありません。"
    },
    {
      "indent": 0,
      "text": "5.5.3. Router Advertisement Processing",
      "section_title": true,
      "ja": "5.5.3. ルーターアドバタイズメント処理"
    },
    {
      "indent": 3,
      "text": "On receipt of a valid Router Advertisement (as defined in [DISCOVERY]), a host copies the value of the advertisement's M bit into ManagedFlag. If the value of ManagedFlag changes from FALSE to TRUE, and the host is not already running the stateful address autoconfiguration protocol, the host should invoke the stateful address autoconfiguration protocol, requesting both address information and other information. If the value of the ManagedFlag changes from TRUE to FALSE, the host should continue running the stateful address autoconfiguration, i.e., the change in the value of the ManagedFlag has no effect. If the value of the flag stays unchanged, no special action takes place. In particular, a host MUST NOT reinvoke stateful address configuration if it is already participating in the stateful protocol as a result of an earlier advertisement.",
      "ja": "（[DISCOVERY]で定義されている）有効なルーターアドバタイズを受信すると、ホストはアドバタイズのMビットの値をManagedFlagにコピーします。 ManagedFlagの値がFALSEからTRUEに変化し、ホストがまだステートフルアドレス自動構成プロトコルを実行していない場合、ホストはステートフルアドレス自動構成プロトコルを呼び出して、アドレス情報とその他の情報の両方を要求する必要があります。 ManagedFlagの値がTRUEからFALSEに変更された場合、ホストはステートフルアドレス自動構成の実行を継続する必要があります。つまり、ManagedFlagの値を変更しても効果はありません。フラグの値が変更されないままの場合、特別なアクションは行われません。特に、以前の通知の結果としてホストがすでにステートフルプロトコルに参加している場合、ホストはステートフルアドレス構成を再呼び出ししてはなりません（MUST NOT）。"
    },
    {
      "indent": 3,
      "text": "An advertisement's O flag field is processed in an analogous manner. A host copies the value of the O flag into OtherConfigFlag. If the value of OtherConfigFlag changes from FALSE to TRUE, the host should invoke the stateful autoconfiguration protocol, requesting information (excluding addresses if ManagedFlag is set to FALSE). If the value of the OtherConfigFlag changes from TRUE to FALSE, the host should continue running the stateful address autoconfiguration protocol, i.e., the change in the value of OtherConfigFlag has no effect. If the value of the flag stays unchanged, no special action takes place. In particular, a host MUST NOT reinvoke stateful configuration if it is already participating in the stateful protocol as a result of an earlier advertisement.",
      "ja": "広告のOフラグフィールドも同様に処理されます。ホストはOフラグの値をOtherConfigFlagにコピーします。 OtherConfigFlagの値がFALSEからTRUEに変化した場合、ホストはステートフル自動構成プロトコルを呼び出して、情報を要求する必要があります（ManagedFlagがFALSEに設定されている場合はアドレスを除きます）。 OtherConfigFlagの値がTRUEからFALSEに変更された場合、ホストはステートフルアドレス自動構成プロトコルの実行を継続する必要があります。つまり、OtherConfigFlagの値を変更しても効果はありません。フラグの値が変更されないままの場合、特別なアクションは行われません。特に、以前の通知の結果としてホストがすでにステートフルプロトコルに参加している場合、ホストはステートフル構成を再呼び出ししてはなりません（MUST NOT）。"
    },
    {
      "indent": 3,
      "text": "For each Prefix-Information option in the Router Advertisement:",
      "ja": "ルーターアドバタイズメントの各プレフィックス情報オプション："
    },
    {
      "indent": 4,
      "text": "a) If the Autonomous flag is not set, silently ignore the Prefix Information option.",
      "ja": "a) Autonomousフラグが設定されていない場合、暗黙的にPrefix Informationオプションを無視します。"
    },
    {
      "indent": 4,
      "text": "b) If the prefix is the link-local prefix, silently ignore the Prefix Information option.",
      "ja": "b) プレフィックスがリンクローカルプレフィックスである場合、サイレントに[プレフィックス情報]オプションを無視します。"
    },
    {
      "indent": 4,
      "text": "c) If the preferred lifetime is greater than the valid lifetime, silently ignore the Prefix Information option. A node MAY wish to log a system management error in this case.",
      "ja": "c) 優先ライフタイムが有効ライフタイムよりも長い場合、サイレントに[プレフィックス情報]オプションを無視します。この場合、ノードはシステム管理エラーをログに記録する必要があります。"
    },
    {
      "indent": 4,
      "text": "d) If the prefix advertised does not match the prefix of an address already in the list, and the Valid Lifetime is not 0, form an address (and add it to the list) by combining the advertised prefix with the link's interface identifier as follows:",
      "ja": "d) アドバタイズされたプレフィックスが既にリストにあるアドレスのプレフィックスと一致せず、有効期間が0でない場合は、アドバタイズされたプレフィックスとリンクのインターフェース識別子を次のように組み合わせて、アドレスを形成（およびリストに追加）します。"
    },
    {
      "indent": 3,
      "text": "|            128 - N bits               |       N bits           |\n+---------------------------------------+------------------------+\n|            link prefix                |  interface identifier  |\n+----------------------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "If the sum of the prefix length and interface identifier length does not equal 128 bits, the Prefix Information option MUST be ignored. An implementation MAY wish to log a system management error in this case. It is the responsibility of the system administrator to insure that the lengths of prefixes contained in Router Advertisements are consistent with the length of interface identifiers for that link type. Note that interface identifiers will typically be 64-bits long and based on EUI-64 identifiers as described in [ADDR-ARCH].",
      "ja": "プレフィックスの長さとインターフェイス識別子の長さの合計が128ビットに等しくない場合は、プレフィックス情報オプションを無視する必要があります。この場合、実装はシステム管理エラーをログに記録する必要があります。ルーターアドバタイズに含まれるプレフィックスの長さが、そのリンクタイプのインターフェイス識別子の長さと一致していることを確認するのは、システム管理者の責任です。 [ADDR-ARCH]で説明されているように、インターフェイス識別子は通常64ビット長で、EUI-64識別子に基づいていることに注意してください。"
    },
    {
      "indent": 7,
      "text": "If an address is formed successfully, the host adds it to the list of addresses assigned to the interface, initializing its preferred and valid lifetime values from the Prefix Information option.",
      "ja": "アドレスが正常に形成されると、ホストはそのアドレスをインターフェースに割り当てられたアドレスのリストに追加し、プレフィックス情報オプションから優先および有効なライフタイム値を初期化します。"
    },
    {
      "indent": 4,
      "text": "e) If the advertised prefix matches the prefix of an autoconfigured address (i.e., one obtained via stateless or stateful address autoconfiguration) in the list of addresses associated with the interface, the specific action to perform depends on the Valid Lifetime in the received advertisement and the Lifetime associated with the previously autoconfigured address (which we call StoredLifetime in the discussion that follows):",
      "ja": "e) アドバタイズされたプレフィックスが、インターフェイスに関連付けられたアドレスのリストで自動構成されたアドレスのプレフィックス（つまり、ステートレスまたはステートフルアドレスの自動構成によって取得されたもの）と一致する場合、実行する特定のアクションは、受信したアドバタイズメントの有効なライフタイムとライフタイムによって異なります。以前に自動構成されたアドレス（以下の説明ではStoredLifetimeと呼びます）に関連付けられています。"
    },
    {
      "indent": 7,
      "text": "1) If the received Lifetime is greater than 2 hours or greater than StoredLifetime, update the stored Lifetime of the corresponding address.",
      "ja": "1）受信したライフタイムが2時間以上またはStoredLifetimeより大きい場合は、対応するアドレスの保存されたライフタイムを更新します。"
    },
    {
      "indent": 0,
      "text": " 2) If the StoredLifetime is less than or equal to 2 hours and the received Lifetime is less than or equal to StoredLifetime, ignore the prefix, unless the Router Advertisement from which this Prefix Information option was obtained has been authenticated (e.g., via IPSec [RFC2402]). If the Router Advertisment was authenticated, the StoredLifetime should be set to the Lifetime in the received option.",
      "ja": "2）StoredLifetimeが2時間以下で、受信したLifetimeがStoredLifetime以下の場合、このプレフィックス情報オプションの取得元のルーターアドバタイズメントが認証されていない限り（IPSecなどを使用しない場合）[ RFC2402]）。ルーターアドバタイズが認証された場合は、受信オプションでStoredLifetimeをLifetimeに設定する必要があります。"
    },
    {
      "indent": 7,
      "text": "3) Otherwise, reset the stored Lifetime in the corresponding address to two hours.",
      "ja": "3）それ以外の場合は、対応するアドレスに保存されているライフタイムを2時間にリセットします。"
    },
    {
      "indent": 7,
      "text": "The above rules address a specific denial of service attack in which a bogus advertisement could contain prefixes with very small Valid Lifetimes. Without the above rules, a single unauthenticated advertisement containing bogus Prefix Information options with short Lifetimes could cause all of a node's addresses to expire prematurely. The above rules insure that legitimate advertisements (which are sent periodically) will \"cancel\" the short lifetimes before they actually take effect.",
      "ja": "上記のルールは、偽の広告に有効期間が非常に短いプレフィックスが含まれる可能性がある特定のサービス拒否攻撃に対処します。上記のルールがない場合、短いライフタイムの偽のプレフィックス情報オプションを含む単一の認証されていないアドバタイズにより、ノードのすべてのアドレスが早期に期限切れになる可能性があります。上記のルールは、（定期的に送信される）正当なアドバタイズメントが実際に有効になる前に短いライフタイムを「キャンセル」することを保証します。"
    },
    {
      "indent": 0,
      "text": "5.5.4. Address Lifetime Expiry",
      "section_title": true,
      "ja": "5.5.4. ライフタイムの期限切れに対処する"
    },
    {
      "indent": 3,
      "text": "A preferred address becomes deprecated when its preferred lifetime expires. A deprecated address SHOULD continue to be used as a source address in existing communications, but SHOULD NOT be used in new communications if an alternate (non-deprecated) address is available and has sufficient scope. IP and higher layers (e.g., TCP, UDP) MUST continue to accept datagrams destined to a deprecated address since a deprecated address is still a valid address for the interface. An implementation MAY prevent any new communication from using a deprecated address, but system management MUST have the ability to disable such a facility, and the facility MUST be disabled by default.",
      "ja": "優先アドレスは、優先ライフタイムの期限が切れると非推奨になります。非推奨のアドレスは、既存の通信で引き続き送信元アドレスとして使用する必要があります（SHOULD）が、代替（非推奨ではない）アドレスが使用可能で十分なスコープがある場合は、新しい通信で使用しないでください。 IPおよび上位レイヤー（TCP、UDPなど）は、非推奨のアドレスがインターフェースの有効なアドレスであるため、非推奨のアドレス宛てのデータグラムを引き続き受け入れなければなりません（MUST）。実装は新しい通信が非推奨のアドレスを使用するのを防ぐことができますが、システム管理はそのような機能を無効にする機能を持っている必要があり、機能はデフォルトで無効でなければなりません（MUST）。"
    },
    {
      "indent": 3,
      "text": "An address (and its association with an interface) becomes invalid when its valid lifetime expires. An invalid address MUST NOT be used as a source address in outgoing communications and MUST NOT be recognized as a destination on a receiving interface.",
      "ja": "アドレス（およびインターフェースとの関連付け）は、有効な有効期限が切れると無効になります。無効なアドレスは、発信通信の送信元アドレスとして使用してはならず（MUST NOT）、受信インターフェースの宛先として認識されてはなりません（MUST NOT）。"
    },
    {
      "indent": 0,
      "text": "5.6. Configuration Consistency",
      "section_title": true,
      "ja": "5.6. 構成の一貫性"
    },
    {
      "indent": 0,
      "text": " It is possible for hosts to obtain address information using both stateless and stateful protocols since both may be enabled at the same time. It is also possible that the values of other configuration parameters such as MTU size and hop limit will be learned from both Router Advertisements and the stateful autoconfiguration protocol. If the same configuration information is provided by multiple sources, the value of this information should be consistent. However, it is not considered a fatal error if information received from multiple sources is inconsistent. Hosts accept the union of all information received via the stateless and stateful protocols. If inconsistent information is learned different sources, the most recently obtained values always have precedence over information learned earlier.",
      "ja": "ホストは、ステートレスプロトコルとステートフルプロトコルの両方を同時に有効にすることができるため、両方を使用してアドレス情報を取得できます。 MTUサイズやホップ制限などの他の構成パラメーターの値が、ルーターアドバタイズメントとステートフル自動構成プロトコルの両方から学習される可能性もあります。同じ構成情報が複数のソースから提供される場合、この情報の値は一貫している必要があります。ただし、複数のソースから受信した情報に一貫性がない場合、致命的なエラーとは見なされません。ホストは、ステートレスおよびステートフルプロトコルを介して受信したすべての情報の結合を受け入れます。一貫性のない情報が異なるソースから学習された場合、最近取得された値は常に、以前に学習された情報よりも優先されます。"
    },
    {
      "indent": 0,
      "text": "6. SECURITY CONSIDERATIONS",
      "section_title": true,
      "ja": "6. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "Stateless address autoconfiguration allows a host to connect to a network, configure an address and start communicating with other nodes without ever registering or authenticating itself with the local site. Although this allows unauthorized users to connect to and use a network, the threat is inherently present in the Internet architecture. Any node with a physical attachment to a network can generate an address (using a variety of ad hoc techniques) that provides connectivity.",
      "ja": "ステートレスアドレスの自動構成により、ホストはネットワークに接続し、アドレスを構成して、ローカルサイトへの登録や認証を行うことなく、他のノードとの通信を開始できます。これにより、権限のないユーザーがネットワークに接続して使用することが可能になりますが、脅威は本質的にインターネットアーキテクチャに存在します。ネットワークに物理的に接続されているノードは、接続を提供するアドレスを生成できます（さまざまなアドホックテクニックを使用）。"
    },
    {
      "indent": 3,
      "text": "The use of Duplicate Address Detection opens up the possibility of denial of service attacks. Any node can respond to Neighbor Solicitations for a tentative address, causing the other node to reject the address as a duplicate. This attack is similar to other attacks involving the spoofing of Neighbor Discovery messages and can be addressed by requiring that Neighbor Discovery packets be authenticated [RFC2402].",
      "ja": "重複アドレス検出を使用すると、サービス拒否攻撃の可能性が開かれます。どのノードも仮アドレスの近隣要請に応答できるため、他のノードはアドレスを重複として拒否します。この攻撃は、近隣探索メッセージのなりすましを含む他の攻撃に似ており、近隣探索パケットの認証を要求することで対処できます[RFC2402]。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7. 参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC2402] Kent, S. and R. Atkinson, \"IP Authentication Header\", RFC 2402, November 1998.",
      "ja": "[RFC2402]ケント、S。、およびR.アトキンソン、「IP認証ヘッダー」、RFC 2402、1998年11月。"
    },
    {
      "indent": 3,
      "text": "[IPv6-ETHER] Crawford, M., \"A Method for the Transmission of IPv6 Packets over Ethernet Networks\", RFC 2464, December 1998.",
      "ja": "[IPv6-ETHER] Crawford、M。、「A Method for the Transmission of IPv6 Packets over Ethernet Networks」、RFC 2464、1998年12月。"
    },
    {
      "indent": 3,
      "text": "[KEYWORDS] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[キーワード] Bradner、S。、「RFCで使用して要件レベルを示すためのキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC1112] Deering, S., \"Host Extensions for IP Multicasting\", STD 5, RFC 1112, August 1989.",
      "ja": "[RFC1112] Deering、S。、「IP Multicastingのホスト拡張」、STD 5、RFC 1112、1989年8月。"
    },
    {
      "indent": 3,
      "text": "[ADDR-ARCH] Hinden, R. and S. Deering, \"Internet Protocol Version (IPv6) Addressing Architecture\", RFC 2373, July 1998",
      "ja": "[ADDR-ARCH] Hinden、R。およびS. Deering、「インターネットプロトコルバージョン（IPv6）アドレス指定アーキテクチャ」、RFC 2373、1998年7月"
    },
    {
      "indent": 3,
      "text": "[DHCPv6] Bound, J. and C. Perkins, \"Dynamic Host Configuration Protocol for IPv6 (DHCPv6)\", Work in Progress.",
      "ja": "[DHCPv6]バウンドJ.およびC.パーキンス、「IPv6の動的ホスト構成プロトコル（DHCPv6）」、作業中。"
    },
    {
      "indent": 3,
      "text": "[DISCOVERY] Narten, T., Nordmark, E. and W. Simpson, \"Neighbor Discovery for IP Version 6 (IPv6)\", RFC 2461, December 1998.",
      "ja": "[ディスカバリー] Narten、T.、Nordmark、E。およびW. Simpson、「Neighbor Discovery for IP Version 6（IPv6）」、RFC 2461、1998年12月。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgements",
      "section_title": true,
      "ja": "8. 謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank the members of both the IPNG and ADDRCONF working groups for their input. In particular, thanks to Jim Bound, Steve Deering, Richard Draves, and Erik Nordmark. Thanks also goes to John Gilmore for alerting the WG of the \"0 Lifetime Prefix Advertisement\" denial of service attack vulnerability; this document incorporates changes that address this vulnerability.",
      "ja": "著者は、彼らの意見を提供してくれたIPNGとADDRCONFの両方のワーキンググループのメンバーに感謝したいと思います。特に、Jim Bound、Steve Deering、Richard Draves、およびErik Nordmarkに感謝します。 「0ライフタイムプレフィックスアドバタイズメント」サービス拒否攻撃の脆弱性をWGに警告してくれたJohn Gilmoreにも感謝します。このドキュメントには、この脆弱性に対処する変更が組み込まれています。"
    },
    {
      "indent": 0,
      "text": "AUTHORS' ADDRESSES",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Susan Thomson Bellcore 445 South Street Morristown, NJ 07960 USA",
      "ja": "Susan Thomson Bellcore 445 South Street Morristown、NJ 07960 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 201-829-4514\nEMail: set@thumper.bellcore.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Thomas Narten IBM Corporation P.O. Box 12195 Research Triangle Park, NC 27709-2195 USA",
      "ja": "Thomas Narten IBM Corporation P.O. Box 12195 Research Triangle Park、NC 27709-2195 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 919 254 7798\nEMail: narten@raleigh.ibm.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9. APPENDIX A: LOOPBACK SUPPRESSION & DUPLICATE ADDRESS DETECTION",
      "section_title": true,
      "ja": "9. 付録A：ループバック抑制と重複アドレス検出"
    },
    {
      "indent": 3,
      "text": "Determining whether a received multicast solicitation was looped back to the sender or actually came from another node is implementation-dependent. A problematic case occurs when two interfaces attached to the same link happen to have the same identifier and link-layer address, and they both send out packets with identical contents at roughly the same time (e.g., Neighbor Solicitations for a tentative address as part of Duplicate Address Detection messages). Although a receiver will receive both packets, it cannot determine which packet was looped back and which packet came from the other node by simply comparing packet contents (i.e., the contents are identical). In this particular case, it is not necessary to know precisely which packet was looped back and which was sent by another node; if one receives more solicitations than were sent, the tentative address is a duplicate. However, the situation may not always be this straightforward.",
      "ja": "受信したマルチキャスト送信請求が送信者にループバックされたのか、実際に別のノードから送信されたのかは、実装によって異なります。同じリンクに接続された2つのインターフェイスが偶然同じ識別子とリンク層アドレスを持っている場合に問題のあるケースが発生し、両方がほぼ同時に同じ内容のパケットを送信します（例：の一部としての仮アドレスの近隣要請）重複アドレス検出メッセージ）。レシーバーは両方のパケットを受信しますが、パケットの内容を比較するだけでは、ループバックされたパケットと他のノードから送信されたパケットを判別できません（つまり、内容は同一です）。この特定のケースでは、ループバックされたパケットと別のノードによって送信されたパケットを正確に知る必要はありません。送信されたよりも多くの要請を受け取った場合、仮のアドレスは重複しています。ただし、状況は必ずしもこのように単純であるとは限りません。"
    },
    {
      "indent": 3,
      "text": "The IPv4 multicast specification [RFC1112] recommends that the service interface provide a way for an upper-layer protocol to inhibit local delivery of packets sent to a multicast group that the sending host is a member of. Some applications know that there will be no other group members on the same host, and suppressing loopback prevents them from having to receive (and discard) the packets they themselves send out. A straightforward way to implement this facility is to disable loopback at the hardware level (if supported by the hardware), with packets looped back (if requested) by software. On interfaces in which the hardware itself suppresses loopbacks, a node running Duplicate Address Detection simply counts the number of Neighbor Solicitations received for a tentative address and compares them with the number expected. If there is a mismatch, the tentative address is a duplicate.",
      "ja": "IPv4マルチキャスト仕様[RFC1112]では、サービスインターフェイスが上位層プロトコルに、送信ホストがメンバーであるマルチキャストグループに送信されるパケットのローカル配信を禁止する方法を提供することを推奨しています。一部のアプリケーションは、同じホスト上に他のグループメンバーが存在しないことを認識しており、ループバックを抑制することにより、それらが送信するパケットを受信（および破棄）する必要がなくなります。この機能を実装する簡単な方法は、ハードウェアレベル（ハードウェアでサポートされている場合）でループバックを無効にし、パケットが（要求された場合）ソフトウェアでループバックすることです。ハードウェア自体がループバックを抑制するインターフェイスでは、重複アドレス検出を実行しているノードは、仮アドレスに対して受信した近隣要請の数をカウントし、それらを予想される数と比較します。不一致がある場合、仮アドレスは重複しています。"
    },
    {
      "indent": 3,
      "text": "In those cases where the hardware cannot suppress loopbacks, however, one possible software heuristic to filter out unwanted loopbacks is to discard any received packet whose link-layer source address is the same as the receiving interface's. Unfortunately, use of that criteria also results in the discarding of all packets sent by another node using the same link-layer address. Duplicate Address Detection will fail on interfaces that filter received packets in this manner:",
      "ja": "ただし、ハードウェアがループバックを抑制できない場合、不要なループバックをフィルタリングするための1つのソフトウェアヒューリスティックは、リンク層の送信元アドレスが受信インターフェイスと同じである受信パケットを破棄することです。残念ながら、その基準を使用すると、同じリンク層アドレスを使用している別のノードによって送信されたすべてのパケットが破棄されます。重複アドレス検出は、次の方法で受信パケットをフィルタリングするインターフェイスで失敗します。"
    },
    {
      "indent": 0,
      "text": " o If a node performing Duplicate Address Detection discards received packets having the same source link-layer address as the receiving interface, it will also discard packets from other nodes also using the same link-layer address, including Neighbor Advertisement and Neighbor Solicitation messages required to make Duplicate Address Detection work correctly. This particular problem can be avoided by temporarily disabling the software suppression of loopbacks while a node performs Duplicate Address Detection.",
      "ja": "o重複アドレス検出を実行しているノードが、受信インターフェイスと同じソースリンク層アドレスを持つ受信パケットを破棄する場合は、同じリンク層アドレスを使用している他のノードからのパケットも破棄します。これには、近隣アドバタイズと近隣要請メッセージが含まれます。重複アドレス検出を正しく機能させる。この特定の問題は、ノードが重複アドレス検出を実行している間、ソフトウェアによるループバックの抑制を一時的に無効にすることで回避できます。"
    },
    {
      "indent": 6,
      "text": "o If a node that is already using a particular IP address discards received packets having the same link-layer source address as the interface, it will also discard Duplicate Address Detection-related Neighbor Solicitation messages sent by another node also using the same link-layer address. Consequently, Duplicate Address Detection will fail, and the other node will configure a non-unique address. Since it is generally impossible to know when another node is performing Duplicate Address Detection, this scenario can be avoided only if software suppression of loopback is permanently disabled.",
      "ja": "o 特定のIPアドレスを既に使用しているノードが、インターフェイスと同じリンク層送信元アドレスを持つ受信パケットを破棄する場合、同じリンク層アドレスを使用して別のノードから送信された重複アドレス検出関連の近隣要請メッセージも破棄されます。その結果、重複アドレス検出は失敗し、他のノードは一意でないアドレスを構成します。通常、別のノードが重複アドレス検出を実行していることを知ることは不可能であるため、このシナリオは、ソフトウェアによるループバックの抑制が永続的に無効になっている場合にのみ回避できます。"
    },
    {
      "indent": 3,
      "text": "Thus, to perform Duplicate Address Detection correctly in the case where two interfaces are using the same link-layer address, an implementation must have a good understanding of the interface's multicast loopback semantics, and the interface cannot discard received packets simply because the source link-layer address is the same as the interfaces.",
      "ja": "したがって、2つのインターフェイスが同じリンク層アドレスを使用している場合に重複アドレス検出を正しく実行するには、実装がインターフェイスのマルチキャストループバックセマンティクスを十分に理解している必要があり、ソースリンクが原因でインターフェイスが受信パケットを破棄できないレイヤーアドレスはインターフェースと同じです。"
    },
    {
      "indent": 0,
      "text": "10. APPENDIX B: CHANGES SINCE RFC 1971",
      "section_title": true,
      "ja": "10. 付録B：RFC 1971以降の変更"
    },
    {
      "indent": 3,
      "text": "o Changed document to use term \"interface identifier\" rather than \"interface token\" for consistency with other IPv6 documents.",
      "ja": "o 他のIPv6ドキュメントとの一貫性を保つために、「インターフェイストークン」ではなく「インターフェイス識別子」という用語を使用するようにドキュメントを変更しました。"
    },
    {
      "indent": 3,
      "text": "o Clarified definition of deprecated address to make clear it is OK to continue sending to or from deprecated addresses.",
      "ja": "o 非推奨アドレスの定義を明確にして、非推奨アドレスとの間で送受信を続行しても問題がないことを明確にしました。"
    },
    {
      "indent": 3,
      "text": "o Reworded section 5.4 for clarity (no substantive change).",
      "ja": "o 明確にするためにセクション5.4を言い換え（実質的な変更なし）。"
    },
    {
      "indent": 3,
      "text": "o Added rules to Section 5.5.3 Router Advertisement processing to address potential denial-of-service attack when prefixes are advertised with very short Lifetimes.",
      "ja": "o プレフィックスが非常に短いライフタイムでアドバタイズされる場合の潜在的なサービス拒否攻撃に対処するために、セクション5.5.3ルーターアドバタイズメント処理にルールを追加しました。"
    },
    {
      "indent": 3,
      "text": "o Clarified wording in Section 5.5.4 to make clear that all upper layer protocols must process (i.e., send and receive) packets sent to deprecated addresses.",
      "ja": "o すべての上位層プロトコルが非推奨のアドレスに送信されたパケットを処理（つまり、送受信）する必要があることを明確にするために、セクション5.5.4の文言を明確にしました。"
    },
    {
      "indent": 0,
      "text": "11. Full Copyright Statement",
      "section_title": true,
      "ja": "11. 完全な著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "Copyright（C）The Internet Society（1998）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "このドキュメントとその翻訳はコピーして他のユーザーに提供することができ、コメントまたはその他の方法で説明したり、その実装を支援する二次的著作物は、いかなる種類の制限なしに、全体または一部を準備、コピー、公開、および配布することができますただし、上記の著作権表示とこの段落は、そのようなすべてのコピーと派生物に含まれています。ただし、このドキュメント自体は、著作権に関する通知を削除したり、インターネットソサエティや他のインターネット組織への参照を削除したりするなど、いかなる方法でも変更できません。ただし、インターネット標準を開発する目的で必要な場合は除きます。インターネット標準のプロセスに従うか、または必要に応じて、それを英語以外の言語に翻訳する必要があります。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記で付与された制限付きのアクセス許可は永続的であり、インターネットソサエティまたはその後継者または譲受人によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "このドキュメントとここに含まれる情報は「現状有姿」で提供され、インターネット社会およびインターネット技術タスクフォースは、明示または黙示を問わず、ここに記載されている情報の使用が保証するものに限定されないいかなる保証も含め、一切の保証を否認します。商品性または特定の目的への適合性に関する権利または黙示の保証を侵害すること。"
    }
  ]
}