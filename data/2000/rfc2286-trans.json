{
  "title": {
    "text": "RFC 2286 - Test Cases for HMAC-RIPEMD160 and HMAC-RIPEMD128",
    "ja": "RFC 2286 - HMAC-RIPEMD160およびHMAC-RIPEMD128のテストケース"
  },
  "number": 2286,
  "created_at": "2020-08-16 10:28:05.133590+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                            J. Kapp\nRequest for Comments: 2286                           Reaper Technologies\nCategory: Informational                                    February 1998",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Test Cases for HMAC-RIPEMD160 and HMAC-RIPEMD128",
      "ja": "HMAC-RIPEMD160およびHMAC-RIPEMD128のテストケース"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモは、インターネットコミュニティに情報を提供します。いかなる種類のインターネット標準も規定していません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "Copyright（C）The Internet Society（1998）。全著作権所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document provides two sets of test cases for HMAC-RIPEMD160 and HMAC-RIPEMD128, respectively. HMAC-RIPEMD160 and HMAC-RIPEMD128 are two constructs of the HMAC [HMAC] message authentication function using the RIPEMD-160 and RIPEMD-128 [RIPE] hash functions. The test cases and results provided in this document are meant to be used as a conformance test for HMAC-RIPEMD160 and HMAC-RIPEMD128 implementations.",
      "ja": "このドキュメントでは、HMAC-RIPEMD160とHMAC-RIPEMD128のテストケースをそれぞれ2セット提供します。 HMAC-RIPEMD160およびHMAC-RIPEMD128は、RIPEMD-160およびRIPEMD-128 [RIPE]ハッシュ関数を使用したHMAC [HMAC]メッセージ認証関数の2つの構成要素です。このドキュメントで提供されるテストケースと結果は、HMAC-RIPEMD160およびHMAC-RIPEMD128実装の適合性テストとして使用されることを意図しています。"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The general method for constructing a HMAC message authentication function using a particular hash function is described in section 2 of [HMAC].",
      "ja": "特定のハッシュ関数を使用してHMACメッセージ認証関数を構築する一般的な方法は、[HMAC]のセクション2で説明されています。"
    },
    {
      "indent": 3,
      "text": "In sections 2 and 3 test cases for HMAC-RIPEMD160 and HMAC-RIPEMD128, respectively are provided. Each case includes the key, the data, and the result. The values of keys and data are either hexadecimal numbers (prefixed by \"0x\") or ASCII character strings in double quotes. If a value is an ASCII character string, then the HMAC computation for the corresponding test case DOES NOT include the trailing null character ('\\0') in the string.",
      "ja": "セクション2および3では、それぞれHMAC-RIPEMD160およびHMAC-RIPEMD128のテストケースが提供されています。各ケースには、キー、データ、および結果が含まれます。キーとデータの値は、16進数（「0x」で始まる）または二重引用符で囲まれたASCII文字列です。値がASCII文字列の場合、対応するテストケースのHMAC計算では、文字列に末尾のnull文字（ '\\ 0'）は含まれません。"
    },
    {
      "indent": 3,
      "text": "The C source code of the functions used to generate HMAC-RIPEMD160 and HMAC-RIPEMD128 results is listed in the Appendix. Please Note that the functions provided are implemented in such a way as to be simple and easy to understand as a result they are not optimized in any way. The C source code for computing HMAC-MD5 can be found in [MD5].",
      "ja": "HMAC-RIPEMD160およびHMAC-RIPEMD128の結果を生成するために使用される関数のCソースコードは、付録にリストされています。提供されている機能は、シンプルで理解しやすいように実装されているため、最適化されていないことに注意してください。 HMAC-MD5を計算するためのCソースコードは、[MD5]にあります。"
    },
    {
      "indent": 0,
      "text": "2. Test Cases for HMAC-RIPEMD160",
      "section_title": true,
      "ja": "2. HMAC-RIPEMD160のテストケース"
    },
    {
      "indent": 0,
      "text": "test_case =         1\nkey =               0x0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b\nkey_len =           20\ndata =              \"Hi There\"\ndata_len =          8\ndigest =            0x24cb4bd67d20fc1a5d2ed7732dcc39377f0a5668",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "test_case =         2\nkey =               \"Jefe\"\nkey_len =           4\ndata =              \"what do ya want for nothing?\"\ndata_len =          28\ndigest =            0xdda6c0213a485a9e24f4742064a7f033b43c4069",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "test_case =         3\nkey =               0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\nkey_len =           20\ndata =              0xdd repeated 50 times\ndata_len =          50\ndigest =            0xb0b105360de759960ab4f35298e116e295d8e7c1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "test_case =         4\nkey =               0x0102030405060708090a0b0c0d0e0f10111213141516171819\nkey_len =           25\ndata =              0xcd repeated 50 times\ndata_len =          50\ndigest =            0xd5ca862f4d21d5e610e18b4cf1beb97a4365ecf4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "test_case = 5 key = 0x0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c key_len = 20 data = \"Test With Truncation\" data_len = 20 digest = 0x7619693978f91d90539ae786500ff3d8e0518e39 digest-96 = 0x7619693978f91d90539ae786",
      "ja": "test_case = 5 key = 0x0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c key_len = 20 data = \"Test With Truncation\" data_len = 20 digest = 0x7619693978f91d90539ae786500ff3d8e0518e96d96ae9696ae7896f39e39ae39f3d3d9e9e9e9e9e9e9e9e9e3ee4ee96"
    },
    {
      "indent": 0,
      "text": "test_case =         6\nkey =               0xaa repeated 80 times\nkey_len =           80\ndata =              \"Test Using Larger Than Block-Size Key - Hash Key\n                    First\"\ndata_len =          54\ndigest =            0x6466ca07ac5eac29e1bd523e5ada7605b791fd8b",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "test_case =         7\nkey =               0xaa repeated 80 times\nkey_len =           80\ndata =              \"Test Using Larger Than Block-Size Key and Larger\n                    Than One Block-Size Data\"\ndata_len =          73\ndigest =            0x69ea60798d71616cce5fd0871e23754cd75d5a0a",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3. Test Cases for HMAC-RIPEMD128",
      "section_title": true,
      "ja": "3. HMAC-RIPEMD128のテストケース"
    },
    {
      "indent": 0,
      "text": "test_case =         1\nkey =               0x0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b\nkey_len =           16\ndata =              \"Hi There\"\ndata_len =          8\ndigest =            0xfbf61f9492aa4bbf81c172e84e0734db",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "test_case =         2\nkey =               \"Jefe\"\nkey_len =           4\ndata =              \"what do ya want for nothing?\"\ndata_len =          28\ndigest =            0x875f828862b6b334b427c55f9f7ff09b",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "test_case =         3\nkey =               0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\nkey_len =           16\ndata =              0xdd repeated 50 times\ndata_len =          50\ndigest =            0x09f0b2846d2f543da363cbec8d62a38d",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "test_case =         4\nkey =               0x0102030405060708090a0b0c0d0e0f10111213141516171819\nkey_len =           25\ndata =              0xcd repeated 50 times\ndata_len =          50\ndigest =            0xbdbbd7cf03e44b5aa60af815be4d2294",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "test_case = 5 key = 0x0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c key_len = 16 data = \"Test With Truncation\" data_len = 20 digest = 0xe79808f24b25fd031c155f0d551d9a3a digest-96 = 0xe79808f24b25fd031c155f0d",
      "ja": "test_case = 5 key = 0x0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c key_len = 16 data = \"Test With Truncation\" data_len = 20 digest = 0xe79808f24b25fd031c155f0d551d9a3a digest-96 = 0xe798080324c"
    },
    {
      "indent": 0,
      "text": "test_case = 6 key = 0xaa repeated 80 times key_len = 80 data = \"Test Using Larger Than Block-Size Key - Hash Key",
      "ja": "test_case = 6 key = 0xaaが80回繰り返されましたkey_len = 80 data = \"ブロックサイズより大きいキーを使用したテスト-ハッシュキー"
    },
    {
      "indent": 0,
      "text": "                    First\"\ndata_len =          54\ndigest =            0xdc732928de98104a1f59d373c150acbb",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "test_case =         7\nkey =               0xaa repeated 80 times\nkey_len =           80\ndata =              \"Test Using Larger Than Block-Size Key and Larger\n                    Than One Block-Size Data\"\ndata_len =          73\ndigest =            0x5c6bec96793e16d40690c237635f30c5",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4. Security Considerations",
      "section_title": true,
      "ja": "4. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document raises no security issues. Discussion on the strength of the HMAC construction can be found in [HMAC].",
      "ja": "このドキュメントはセキュリティ上の問題を引き起こしません。 HMAC構築の強さに関する議論は[HMAC]にあります。"
    },
    {
      "indent": 0,
      "text": "References",
      "ja": "参考文献"
    },
    {
      "indent": 3,
      "text": "[HMAC] Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC: Keyed-Hashing for Message Authentication\", RFC 2104, February 1997.",
      "ja": "[HMAC] Krawczyk、H.、Bellare、M。、およびR. Canetti、「HMAC：Keyed-Hashing for Message Authentication」、RFC 2104、1997年2月。"
    },
    {
      "indent": 3,
      "text": "[MD5] Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC 1321, April 1992.",
      "ja": "[MD5] Rivest、R。、「MD5メッセージダイジェストアルゴリズム」、RFC 1321、1992年4月。"
    },
    {
      "indent": 3,
      "text": "[OG] Oehler, M., and R. Glenn, \"HMAC-MD5 IP Authentication with Replay Prevention\", RFC 2085, February 1997",
      "ja": "[OG] Oehler、M。、およびR. Glenn、「HMAC-MD5 IP Authentication with Replay Prevention」、RFC 2085、1997年2月"
    },
    {
      "indent": 3,
      "text": "[CG] Chang, S., and R. Glenn, \"Test Cases for HMAC-MD5 and HMAC-SHA-1\", RFC 2202, September 1997.",
      "ja": "[CG] Chang、S。、およびR. Glenn、「HMAC-MD5およびHMAC-SHA-1のテストケース」、RFC 2202、1997年9月。"
    },
    {
      "indent": 3,
      "text": "[RIPE] Dobbertin, H., Bosselaers A., and Preneel, B. \"RIPEMD-160: A Strengthened Version of RIPEMD\" April 1996",
      "ja": "[RIPE] Dobbertin、H.、Bosselaers A.、およびPreneel、B。「RIPEMD-160：RIPEMDの強化バージョン」1996年4月"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Justin S. Kapp Reaper Technologies The Post Office, Dunsop Bridge Clitheroe, Lancashire. BB7 3BB. United Kingdom",
      "ja": "Justin S. Kapp Reaper Technologies郵便局、ダンソップブリッジクレドロー、ランカシャー。 BB7 3BB。イギリス"
    },
    {
      "indent": 3,
      "text": "EMail: skapp@reapertech.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix",
      "ja": "付録"
    },
    {
      "indent": 3,
      "text": "This code which implements HMAC-RIPEMD160 using an existing RIPEMD-160 library. It assumes that the RIPEMD-160 library has similar API's as those of the MD5 code described in RFC 1321. The code for HMAC-MD5, is similar, this HMAC-MD5 code is also listed in RFC 2104. To adapt this example to produce the HMAC-RIPEMD128 then replace each occurance of 'RMD160' with 'RMD128'.",
      "ja": "このコードは、既存のRIPEMD-160ライブラリを使用してHMAC-RIPEMD160を実装します。これは、RIPEMD-160ライブラリがRFC 1321で説明されているMD5コードと同様のAPIを持っていることを前提としています。HMAC-MD5のコードも同様であり、このHMAC-MD5コードはRFC 2104にもリストされています。次に、HMAC-RIPEMD128は、「RMD160」が出現するたびに「RMD128」に置き換えます。"
    },
    {
      "indent": 0,
      "text": "#ifndef RMD160_DIGESTSIZE #define RMD160_DIGESTSIZE 20 #endif",
      "ja": "#ifndef RMD160_DIGESTSIZE #define RMD160_DIGESTSIZE 20 #endif"
    },
    {
      "indent": 0,
      "text": "#ifndef RMD128_DIGESTSIZE #define RMD128_DIGESTSIZE 16 #endif",
      "ja": "#ifndef RMD128_DIGESTSIZE #define RMD128_DIGESTSIZE 16 #endif"
    },
    {
      "indent": 0,
      "text": "/*  HMAC_RMD160 implements HMAC-RIPEMD160 */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "void HMAC_RMD160(input, len, key, keylen, digest)\nunsigned char *input;                       /* pointer to data stream */\nint len;                                     /* length of data stream */\nunsigned char *key;                  /* pointer to authentication key */\nint keylen;                           /* length of authentication key */\nunsigned char *digest;                        /* resulting MAC digest */\n{\n    RMD160_CTX context;\n    unsigned char k_ipad[65];  /* inner padding - key XORd with ipad */\n    unsigned char k_opad[65];  /* outer padding - key XORd with opad */\n    unsigned char tk[RMD160_DIGESTSIZE];\n    int i;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "/* if key is longer than 64 bytes reset it to key=SHA1(key) */\nif (keylen > 64) {\n    RMD160_CTX      tctx;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "RMD160Init(&tctx);\nRMD160Update(&tctx, key, keylen);\nRMD160Final(tk, &tctx);",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "    key = tk;\n    keylen = RMD160_DIGESTSIZE;\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "/* The HMAC_SHA1 transform looks like:",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "           RMD160(K XOR opad, RMD160(K XOR ipad, text))\n           where K is an n byte key\n           ipad is the byte 0x36 repeated 64 times\n           opad is the byte 0x5c repeated 64 times\n           and text is the data being protected */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "    /* start out by storing key in pads */\nmemset(k_ipad, 0x36, sizeof(k_ipad));\nmemset(k_opad, 0x5c, sizeof(k_opad));",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "    /* XOR key with ipad and opad values */\nfor (i=0; i<keylen; i++) {\n    k_ipad[i] ^= key[i];\n    k_opad[i] ^= key[i];\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "/* perform inner RIPEMD-160 */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "RMD160Init(&context);           /* init context for 1st pass */\nRMD160Update(&context, k_ipad, 64);  /* start with inner pad */\nRMD160Update(&context, input, len); /* then text of datagram */\nRMD160Final(digest, &context);         /* finish up 1st pass */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "    /* perform outer RIPEMD-160 */\nRMD160Init(&context);           /* init context for 2nd pass */\nRMD160Update(&context, k_opad, 64);  /* start with outer pad */\n/* then results of 1st hash */\nRMD160Update(&context, digest, RMD160_DIGESTSIZE);\nRMD160Final(digest, &context);         /* finish up 2nd pass */",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "    memset(k_ipad, 0x00, sizeof(k_ipad));\n    memset(k_opad, 0x00, sizeof(k_opad));\n}\nFull Copyright Statement",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1998). All Rights Reserved.",
      "ja": "Copyright（C）The Internet Society（1998）。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "このドキュメントとその翻訳はコピーして他のユーザーに提供することができ、コメントまたはその他の方法で説明したり、その実装を支援する二次的著作物は、いかなる種類の制限なしに、全体または一部を準備、コピー、公開、および配布することができますただし、上記の著作権表示とこの段落は、そのようなすべてのコピーと派生物に含まれています。ただし、このドキュメント自体は、著作権に関する通知を削除したり、インターネットソサエティや他のインターネット組織への参照を削除したりするなど、いかなる方法でも変更できません。ただし、インターネット標準を開発する目的で必要な場合は除きます。インターネット標準のプロセスに従うか、または必要に応じて、それを英語以外の言語に翻訳する必要があります。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記で付与された制限付きのアクセス許可は永続的であり、インターネットソサエティまたはその後継者または譲受人によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "このドキュメントとここに含まれる情報は「現状有姿」で提供され、インターネット社会およびインターネット技術タスクフォースは、明示または黙示を問わず、ここに記載されている情報の使用が保証するものに限定されない一切の保証を含みません。商品性または特定の目的への適合性に関する権利または黙示の保証を侵害すること。"
    }
  ]
}