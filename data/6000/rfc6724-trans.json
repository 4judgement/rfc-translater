{
  "title": {
    "text": "RFC 6724 - Default Address Selection for Internet Protocol Version 6 (IPv6)",
    "ja": "RFC 6724 - インターネットプロトコルバージョン6（IPv6）のデフォルトアドレス選択"
  },
  "number": 6724,
  "created_at": "2020-09-06 08:56:15.560410+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                    D. Thaler, Ed.\nRequest for Comments: 6724                                     Microsoft\nObsoletes: 3484                                                R. Draves\nCategory: Standards Track                             Microsoft Research\nISSN: 2070-1721                                             A. Matsumoto\n                                                                     NTT\n                                                                T. Chown\n                                               University of Southampton\n                                                          September 2012",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "Default Address Selection for Internet Protocol Version 6 (IPv6)",
      "ja": "インターネットプロトコルバージョン6（IPv6）のデフォルトアドレス選択"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document describes two algorithms, one for source address selection and one for destination address selection. The algorithms specify default behavior for all Internet Protocol version 6 (IPv6) implementations. They do not override choices made by applications or upper-layer protocols, nor do they preclude the development of more advanced mechanisms for address selection. The two algorithms share a common context, including an optional mechanism for allowing administrators to provide policy that can override the default behavior. In dual-stack implementations, the destination address selection algorithm can consider both IPv4 and IPv6 addresses -- depending on the available source addresses, the algorithm might prefer IPv6 addresses over IPv4 addresses, or vice versa.",
      "ja": "このドキュメントでは、送信元アドレス選択用と宛先アドレス選択用の2つのアルゴリズムについて説明します。アルゴリズムは、すべてのインターネットプロトコルバージョン6（IPv6）実装のデフォルトの動作を指定します。これらは、アプリケーションまたは上位層プロトコルによる選択を上書きせず、アドレス選択のためのより高度なメカニズムの開発を妨げません。 2つのアルゴリズムは、管理者がデフォルトの動作を上書きできるポリシーを提供できるようにするオプションのメカニズムを含む、共通のコンテキストを共有します。デュアルスタック実装では、宛先アドレス選択アルゴリズムはIPv4アドレスとIPv6アドレスの両方を考慮することができます。使用可能なソースアドレスに応じて、アルゴリズムはIPv4アドレスよりもIPv6アドレスを優先する場合があり、その逆の場合もあります。"
    },
    {
      "indent": 3,
      "text": "Default address selection as defined in this specification applies to all IPv6 nodes, including both hosts and routers. This document obsoletes RFC 3484.",
      "ja": "この仕様で定義されているデフォルトのアドレス選択は、ホストとルーターの両方を含むすべてのIPv6ノードに適用されます。このドキュメントはRFC 3484を廃止します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 5741のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6724.",
      "ja": "このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、http：//www.rfc-editor.org/info/rfc6724で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2012 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2012 IETF Trustおよびドキュメントの作成者として特定された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびこの文書の発行日に有効なIETF文書に関するIETFトラストの法的規定（http://trustee.ietf.org/license-info）の対象となります。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Conventions Used in This Document ..........................4\n2. Context in Which the Algorithms Operate .........................4\n   2.1. Policy Table ...............................................6\n   2.2. Common Prefix Length .......................................7\n3. Address Properties ..............................................7\n   3.1. Scope Comparisons ..........................................8\n   3.2. IPv4 Addresses and IPv4-Mapped Addresses ...................8\n   3.3. Other IPv6 Addresses with Embedded IPv4 Addresses ..........9\n   3.4. IPv6 Loopback Address and Other Format Prefixes ............9\n   3.5. Mobility Addresses .........................................9\n4. Candidate Source Addresses .....................................10\n5. Source Address Selection .......................................11\n6. Destination Address Selection ..................................14\n7. Interactions with Routing ......................................16\n8. Implementation Considerations ..................................16\n9. Security Considerations ........................................17\n10. Examples ......................................................18\n   10.1. Default Source Address Selection .........................18\n   10.2. Default Destination Address Selection ....................19\n   10.3. Configuring Preference for IPv6 or IPv4 ..................20\n        10.3.1. Handling Broken IPv6 ..............................21\n   10.4. Configuring Preference for Link-Local Addresses ..........21\n   10.5. Configuring a Multi-Homed Site ...........................22\n   10.6. Configuring ULA Preference ...............................24\n   10.7. Configuring 6to4 Preference ..............................25\n11. References ....................................................26\n   11.1. Normative References .....................................26\n   11.2. Informative References ...................................27\nAppendix A.  Acknowledgements .....................................29\nAppendix B.  Changes since RFC 3484 ...............................29",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The IPv6 addressing architecture [RFC4291] allows multiple unicast addresses to be assigned to interfaces. These addresses might have different reachability scopes (link-local, site-local, or global). These addresses might also be \"preferred\" or \"deprecated\" [RFC4862]. Privacy considerations have introduced the concepts of \"public addresses\" and \"temporary addresses\" [RFC4941]. The mobility architecture introduces \"home addresses\" and \"care-of addresses\" [RFC6275]. In addition, multi-homing situations will result in more addresses per node. For example, a node might have multiple interfaces, some of them tunnels or virtual interfaces, or a site might have multiple ISP attachments with a global prefix per ISP.",
      "ja": "IPv6アドレス指定アーキテクチャ[RFC4291]では、複数のユニキャストアドレスをインターフェイスに割り当てることができます。これらのアドレスは、異なる到達可能性スコープ（リンクローカル、サイトローカル、またはグローバル）を持つ場合があります。これらのアドレスは、「推奨」または「非推奨」の場合もあります[RFC4862]。プライバシーに関する考慮事項により、「パブリックアドレス」と「一時アドレス」[RFC4941]の概念が導入されました。モビリティアーキテクチャは、「ホームアドレス」と「気付アドレス」[RFC6275]を導入しています。さらに、マルチホーミングの状況では、ノードあたりのアドレスが多くなります。たとえば、ノードに複数のインターフェースがあり、その一部がトンネルまたは仮想インターフェースである場合や、サイトに複数のISPアタッチメントがあり、ISPごとにグローバルプレフィックスが付いている場合があります。"
    },
    {
      "indent": 3,
      "text": "The end result is that IPv6 implementations will very often be faced with multiple possible source and destination addresses when initiating communication. It is desirable to have default algorithms, common across all implementations, for selecting source and destination addresses so that developers and administrators can reason about and predict the behavior of their systems.",
      "ja": "最終結果として、IPv6実装は、通信を開始するときに、複数の可能な送信元アドレスと宛先アドレスに直面することがよくあります。開発者と管理者がシステムの動作を推論して予測できるように、送信元アドレスと宛先アドレスを選択するために、すべての実装で共通のデフォルトアルゴリズムを使用することが望ましい。"
    },
    {
      "indent": 3,
      "text": "Furthermore, dual- or hybrid-stack implementations, which support both IPv6 and IPv4, will very often need to choose between IPv6 and IPv4 when initiating communication, for example, when DNS name resolution yields both IPv6 and IPv4 addresses and the network protocol stack has available both IPv6 and IPv4 source addresses. In such cases, a simple policy to always prefer IPv6 or always prefer IPv4 can produce poor behavior. As one example, suppose a DNS name resolves to a global IPv6 address and a global IPv4 address. If the node has assigned a global IPv6 address and a 169.254/16 auto-configured IPv4 address [RFC3927], then IPv6 is the best choice for communication. But if the node has assigned only a link-local IPv6 address and a global IPv4 address, then IPv4 is the best choice for communication. The destination address selection algorithm solves this with a unified procedure for choosing among both IPv6 and IPv4 addresses.",
      "ja": "さらに、IPv6とIPv4の両方をサポートするデュアルスタックまたはハイブリッドスタックの実装は、通信を開始するとき、たとえば、DNS名前解決でIPv6とIPv4の両方のアドレスが生成され、ネットワークプロトコルスタックがIPv6とIPv4の両方の送信元アドレスを使用できます。このような場合、常にIPv6を優先するか、常にIPv4を優先するという単純なポリシーでは、動作が低下する可能性があります。一例として、DNS名がグローバルIPv6アドレスとグローバルIPv4アドレスに解決されるとします。ノードがグローバルIPv6アドレスと169.254 / 16自動構成IPv4アドレス[RFC3927]を割り当てている場合、IPv6が通信に最適です。ただし、ノードがリンクローカルIPv6アドレスとグローバルIPv4アドレスのみを割り当てている場合、通信にはIPv4が最適です。宛先アドレス選択アルゴリズムは、IPv6アドレスとIPv4アドレスの両方から選択するための統一された手順でこれを解決します。"
    },
    {
      "indent": 3,
      "text": "The algorithms in this document are specified as a set of rules that define a partial ordering on the set of addresses that are available for use. In the case of source address selection, a node typically has multiple addresses assigned to its interfaces, and the source address ordering rules in Section 5 define which address is the \"best\" one to use. In the case of destination address selection, the DNS might return a set of addresses for a given name, and an application needs to decide which one to use first and in what order to try others if the first one is not reachable. The destination address ordering rules in Section 6, when applied to the set of addresses returned by the DNS, provide such a recommended ordering.",
      "ja": "このドキュメントのアルゴリズムは、使用可能な一連のアドレスの部分的な順序を定義する一連のルールとして指定されています。送信元アドレスの選択の場合、ノードには通常、そのインターフェースに割り当てられた複数のアドレスがあり、セクション5の送信元アドレスの順序付けルールは、どのアドレスを使用するのが「最適」かを定義します。宛先アドレスの選択の場合、DNSは指定された名前のアドレスのセットを返す可能性があり、アプリケーションは最初に使用するアドレスと、最初のアドレスに到達できない場合に他のアドレスを試す順序を決定する必要があります。セクション6の宛先アドレスの順序付け規則は、DNSによって返されるアドレスのセットに適用されると、そのような推奨される順序付けを提供します。"
    },
    {
      "indent": 3,
      "text": "This document specifies source address selection and destination address selection separately but uses a common context so that together the two algorithms yield useful results. The algorithms attempt to choose source and destination addresses of appropriate scope and configuration status (\"preferred\" or \"deprecated\" in the RFC 4862 sense). Furthermore, this document suggests a preferred method, longest matching prefix, for choosing among otherwise equivalent addresses in the absence of better information.",
      "ja": "このドキュメントでは、送信元アドレスの選択と宛先アドレスの選択を個別に指定していますが、2つのアルゴリズムを組み合わせると有用な結果が得られるように、共通のコンテキストを使用しています。アルゴリズムは、適切なスコープと構成ステータス（RFC 4862の意味で「推奨」または「非推奨」）の送信元アドレスと宛先アドレスを選択しようとします。さらに、このドキュメントでは、より適切な情報がない場合に同等のアドレスを選択するための推奨される方法、最長一致プレフィックスを提案しています。"
    },
    {
      "indent": 3,
      "text": "This document also specifies policy hooks to allow administrative override of the default behavior. For example, using these hooks, an administrator can specify a preferred source prefix for use with a destination prefix or prefer destination addresses with one prefix over addresses with another prefix. These hooks give an administrator flexibility in dealing with some multi-homing and transition scenarios, but they are certainly not a panacea.",
      "ja": "このドキュメントでは、デフォルトの動作を管理上オーバーライドできるようにするポリシーフックも指定しています。たとえば、これらのフックを使用して、管理者は宛先プレフィックスで使用する優先ソースプレフィックスを指定したり、あるプレフィックスを持つ宛先アドレスを別のプレフィックスを持つアドレスよりも優先したりできます。これらのフックは、管理者にいくつかのマルチホーミングおよび移行シナリオを柔軟に処理できるようにしますが、万能薬ではありません。"
    },
    {
      "indent": 3,
      "text": "The selection rules specified in this document MUST NOT be construed to override an application or upper layer's explicit choice of a legal destination or source address.",
      "ja": "このドキュメントで指定されている選択規則は、アプリケーションまたは上位層の明示的な選択の正当な宛先または送信元アドレスをオーバーライドするものと解釈してはなりません。"
    },
    {
      "indent": 0,
      "text": "1.1. Conventions Used in This Document",
      "section_title": true,
      "ja": "1.1. このドキュメントで使用される規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14, RFC 2119 [RFC2119].",
      "ja": "このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は、 BCP 14、RFC 2119 [RFC2119]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. Context in Which the Algorithms Operate",
      "section_title": true,
      "ja": "2. アルゴリズムが動作するコンテキスト"
    },
    {
      "indent": 3,
      "text": "Our context for address selection derives from the most common implementation architecture, which separates the choice of destination address from the choice of source address. Consequently, we have two separate algorithms for these tasks. The algorithms are designed to work well together, and they share a mechanism for administrative policy override.",
      "ja": "アドレス選択のコンテキストは、宛先アドレスの選択と送信元アドレスの選択を分離する最も一般的な実装アーキテクチャから派生しています。したがって、これらのタスクには2つの別々のアルゴリズムがあります。アルゴリズムは連携して機能するように設計されており、管理ポリシーを上書きするメカニズムを共有しています。"
    },
    {
      "indent": 0,
      "text": " In this implementation architecture, applications use APIs such as getaddrinfo() [RFC3493] that return a list of addresses to the application. This list might contain both IPv6 and IPv4 addresses (sometimes represented as IPv4-mapped addresses). The application then passes a destination address to the network stack with connect() or sendto(). The application would then typically try the first address in the list, looping over the list of addresses until it finds a working address. In any case, the network layer is never in a situation where it needs to choose a destination address from several alternatives. The application might also specify a source address with bind(), but often the source address is left unspecified. Therefore, the network layer does often choose a source address from several alternatives.",
      "ja": "この実装アーキテクチャでは、アプリケーションは、アプリケーションにアドレスのリストを返すgetaddrinfo()[RFC3493]などのAPIを使用します。このリストには、IPv6とIPv4の両方のアドレスが含まれる場合があります（IPv4マッピングアドレスとして表される場合もあります）。次に、アプリケーションは、connect()またはsendto()を使用して宛先アドレスをネットワークスタックに渡します。次に、アプリケーションは通常、リストの最初のアドレスを試し、有効なアドレスが見つかるまでアドレスのリストをループします。いずれにせよ、ネットワーク層は、いくつかの選択肢から宛先アドレスを選択する必要がある状況には決してなりません。アプリケーションはbind()で送信元アドレスを指定することもありますが、多くの場合、送信元アドレスは指定されないままになります。したがって、ネットワーク層は多くの場合、いくつかの選択肢から送信元アドレスを選択します。"
    },
    {
      "indent": 3,
      "text": "As a consequence, we intend that implementations of APIs such as getaddrinfo() will use the destination address selection algorithm specified here to sort the list of IPv6 and IPv4 addresses that they return. Separately, the IPv6 network layer will use the source address selection algorithm when an application or upper layer has not specified a source address. Application of this specification to source address selection in an IPv4 network layer might be possible, but this is not explored further here.",
      "ja": "結果として、getaddrinfo()などのAPIの実装では、ここで指定された宛先アドレス選択アルゴリズムを使用して、返されるIPv6およびIPv4アドレスのリストをソートすることを意図しています。これとは別に、アプリケーションまたは上位層が送信元アドレスを指定していない場合、IPv6ネットワーク層は送信元アドレス選択アルゴリズムを使用します。この仕様をIPv4ネットワーク層の送信元アドレス選択に適用することは可能かもしれませんが、これについてはここでは詳しく説明しません。"
    },
    {
      "indent": 3,
      "text": "Well-behaved applications SHOULD NOT simply use the first address returned from an API such as getaddrinfo() and then give up if it fails. For many applications, it is appropriate to iterate through the list of addresses returned from getaddrinfo() until a working address is found. For other applications, it might be appropriate to try multiple addresses in parallel (e.g., with some small delay in between) and use the first one to succeed.",
      "ja": "正常に動作するアプリケーションは、getaddrinfo()などのAPIから返された最初のアドレスを単純に使用してはならず、失敗した場合はあきらめないでください。多くのアプリケーションでは、有効なアドレスが見つかるまで、getaddrinfo()から返されたアドレスのリストを反復処理するのが適切です。他のアプリケーションでは、複数のアドレスを並行して試行し（その間に多少の遅延があるなど）、最初のアドレスを使用して成功することが適切な場合があります。"
    },
    {
      "indent": 3,
      "text": "Although source and destination address selection is most typically done when initiating communication, a responder also must deal with address selection. In many cases, this is trivially dealt with by an application using the source address of a received packet as the response destination and the destination address of the received packet as the response source. Other cases, however, are handled like an initiator, such as when the request is multicast and hence source address selection must still occur when generating a response or when the request includes a list of the initiator's addresses from which to choose a destination. Finally, a third application scenario is that of a listening application choosing on what local addresses to listen. This third scenario is out of the scope of this document.",
      "ja": "発信元と宛先のアドレス選択は、通信を開始するときに最も一般的に行われますが、レスポンダもアドレス選択を処理する必要があります。多くの場合、これは、受信パケットの送信元アドレスを応答先として使用し、受信パケットの宛先アドレスを応答元として使用するアプリケーションによって簡単に処理されます。ただし、その他のケースは、要求がマルチキャストである場合など、イニシエーターのように処理されるため、応答の生成時、または要求に宛先を選択するためのイニシエーターのアドレスのリストが含まれる場合でも、ソースアドレスの選択が必要です。最後に、3番目のアプリケーションシナリオは、リッスンするアプリケーションがリッスンするローカルアドレスを選択するシナリオです。この3番目のシナリオは、このドキュメントの範囲外です。"
    },
    {
      "indent": 3,
      "text": "The algorithms use several criteria in making their decisions. The combined effect is to prefer destination/source address pairs for which the two addresses are of equal scope or type, prefer smaller scopes over larger scopes for the destination address, prefer non-deprecated source addresses, avoid the use of transitional addresses when native addresses are available, and all else being equal, prefer address pairs having the longest possible common prefix. For source address selection, temporary addresses [RFC4941] are preferred over public addresses. In mobile situations [RFC6275], home addresses are preferred over care-of addresses. If an address is simultaneously a home address and a care-of address (indicating the mobile node is \"at home\" for that address), then the home/care-of address is preferred over addresses that are solely a home address or solely a care-of address.",
      "ja": "アルゴリズムは、決定を行う際にいくつかの基準を使用します。組み合わされた効果は、2つのアドレスが同じスコープまたはタイプである宛先/ソースアドレスのペアを優先し、宛先アドレスの大きなスコープよりも小さなスコープを優先し、廃止されていないソースアドレスを優先し、ネイティブアドレスの場合は移行アドレスの使用を回避することです。が利用可能であり、他のすべてが等しい場合、可能な限り最長の共通プレフィックスを持つアドレスペアを優先します。送信元アドレスの選択では、一時アドレス[RFC4941]がパブリックアドレスよりも優先されます。モバイル状況[RFC6275]では、気付アドレスよりもホームアドレスが優先されます。アドレスが同時にホームアドレスと気付アドレスである場合（モバイルノードがそのアドレスに対して「在宅」であることを示す）、ホーム/気付アドレスは、ホームアドレスのみまたはアドレスのみのアドレスよりも優先されます。気付アドレス。"
    },
    {
      "indent": 3,
      "text": "This specification optionally allows for the possibility of administrative configuration of policy (e.g., via manual configuration or a DHCP option such as that proposed in [ADDR-SEL-OPT]) that can override the default behavior of the algorithms. The policy override consists of the following set of state, which SHOULD be configurable:",
      "ja": "この仕様はオプションで、アルゴリズムのデフォルトの動作を上書きできるポリシーの管理構成の可能性を許可します（たとえば、[ADDR-SEL-OPT]で提案されているような手動構成またはDHCPオプションを介して）。ポリシーのオーバーライドは、次の状態セットで構成され、構成可能である必要があります（SHOULD）。"
    },
    {
      "indent": 3,
      "text": "o Policy Table (Section 2.1): a table that specifies precedence values and preferred source prefixes for destination prefixes.",
      "ja": "o ポリシーテーブル（セクション2.1）：宛先プレフィックスの優先値と優先ソースプレフィックスを指定するテーブル。"
    },
    {
      "indent": 3,
      "text": "o Automatic Row Additions flag (Section 2.1): a flag that specifies whether the implementation is permitted to automatically add site-specific rows for certain types of addresses.",
      "ja": "o 自動行追加フラグ（2.1）：特定のタイプのアドレスに対してサイト固有の行を自動的に追加することを実装に許可するかどうかを指定するフラグ。"
    },
    {
      "indent": 3,
      "text": "o Privacy Preference flag (Section 5): a flag that specifies whether temporary source addresses or stable source addresses are preferred by default when both types exist.",
      "ja": "o プライバシー設定フラグ（セクション5）：両方のタイプが存在する場合、一時的な送信元アドレスまたは安定した送信元アドレスがデフォルトで優先されるかどうかを指定するフラグ。"
    },
    {
      "indent": 0,
      "text": "2.1. Policy Table",
      "section_title": true,
      "ja": "2.1. ポリシーテーブル"
    },
    {
      "indent": 3,
      "text": "The policy table is a longest-matching-prefix lookup table, much like a routing table. Given an address A, a lookup in the policy table produces two values: a precedence value denoted Precedence(A) and a classification or label denoted Label(A).",
      "ja": "ポリシーテーブルは、ルーティングテーブルによく似た、最長一致プレフィックスルックアップテーブルです。アドレスAが与えられると、ポリシーテーブルのルックアップは2つの値を生成します。Precedence（A）で示される優先値とLabel（A）で示される分類またはラベルです。"
    },
    {
      "indent": 3,
      "text": "The precedence value Precedence(A) is used for sorting destination addresses. If Precedence(A) > Precedence(B), we say that address A has higher precedence than address B, meaning that our algorithm will prefer to sort destination address A before destination address B.",
      "ja": "precedence値Precedence（A）は、宛先アドレスのソートに使用されます。 Precedence（A）> Precedence（B）の場合、アドレスAの方がアドレスBよりも優先順位が高いと言います。つまり、このアルゴリズムでは、宛先アドレスAを宛先アドレスBの前にソートすることを好みます。"
    },
    {
      "indent": 3,
      "text": "The label value Label(A) allows for policies that prefer a particular source address prefix for use with a destination address prefix. The algorithms prefer to use a source address S with a destination address D if Label(S) = Label(D).",
      "ja": "ラベル値Label（A）は、宛先アドレスプレフィックスで使用するために特定の送信元アドレスプレフィックスを優先するポリシーを許可します。 Label（S）= Label（D）の場合、アルゴリズムは送信元アドレスSと宛先アドレスDを使用することを優先します。"
    },
    {
      "indent": 3,
      "text": "IPv6 implementations SHOULD support configurable address selection via a mechanism at least as powerful as the policy tables defined here. It is important that implementations provide a way to change the default policies as more experience is gained. Sections 10.3 through 10.7 provide examples of the kind of changes that might be needed.",
      "ja": "IPv6実装は、少なくともここで定義されたポリシーテーブルと同じくらい強力なメカニズムを介して、構成可能なアドレス選択をサポートする必要があります（SHOULD）。より多くの経験が得られたときに、実装がデフォルトのポリシーを変更する方法を提供することが重要です。セクション10.3から10.7は、必要になる可能性のある変更の種類の例を示しています。"
    },
    {
      "indent": 3,
      "text": "If an implementation is not configurable or has not been configured, then it SHOULD operate according to the algorithms specified here in conjunction with the following default policy table:",
      "ja": "実装が構成可能でない場合、または構成されていない場合は、ここで指定されたアルゴリズムに従って、次のデフォルトのポリシーテーブルとともに動作する必要があります（SHOULD）。"
    },
    {
      "indent": 6,
      "text": "Prefix        Precedence Label\n::1/128               50     0\n::/0                  40     1\n::ffff:0:0/96         35     4\n2002::/16             30     2\n2001::/32              5     5\nfc00::/7               3    13\n::/96                  1     3\nfec0::/10              1    11\n3ffe::/16              1    12",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "An implementation MAY automatically add additional site-specific rows to the default table based on its configured addresses, such as for Unique Local Addresses (ULAs) [RFC4193] and 6to4 [RFC3056] addresses, for instance (see Sections 10.6 and 10.7 for examples). Any such rows automatically added by the implementation as a result of address acquisition MUST NOT override a row for the same prefix configured via other means. That is, rows can be added but never updated automatically. An implementation SHOULD provide a means (the Automatic Row Additions flag) for an administrator to disable automatic row additions.",
      "ja": "実装は、たとえば、固有のローカルアドレス（ULA）[RFC4193]および6to4 [RFC3056]アドレスなどの構成済みアドレスに基づいて、デフォルトのテーブルにサイト固有の行を自動的に追加する場合があります（例についてはセクション10.6および10.7を参照）。 。アドレス取得の結果として実装によって自動的に追加されたそのような行は、他の方法で構成された同じプレフィックスの行をオーバーライドしてはなりません（MUST NOT）。つまり、行を追加できますが、自動的に更新されることはありません。実装は、管理者が自動行追加を無効にする手段（自動行追加フラグ）を提供する必要があります（SHOULD）。"
    },
    {
      "indent": 3,
      "text": "As will become apparent later, one effect of the default policy table is to prefer using native source addresses with native destination addresses, 6to4 source addresses with 6to4 destination addresses, etc. Another effect of the default policy table is to prefer communication using IPv6 addresses to communication using IPv4 addresses, if matching source addresses are available.",
      "ja": "後で明らかになるように、デフォルトのポリシーテーブルの1つの効果は、ネイティブの送信元アドレスとネイティブの宛先アドレス、6to4の送信元アドレスと6to4の宛先アドレスなどを使用することです。デフォルトのポリシーテーブルのもう1つの効果は、IPv6アドレスを使用した通信を優先することです。 IPv4アドレスを使用した通信（一致する送信元アドレスが使用可能な場合）。"
    },
    {
      "indent": 3,
      "text": "Policy table entries for address prefixes that are not of global scope MAY be qualified with an optional zone index. If so, a prefix table entry only matches against an address during a lookup if the zone index also matches the address's zone index.",
      "ja": "グローバルスコープではないアドレスプレフィックスのポリシーテーブルエントリは、オプションのゾーンインデックスで修飾できます。その場合、プレフィックステーブルエントリは、ゾーンインデックスがアドレスのゾーンインデックスにも一致する場合、ルックアップ中にアドレスに対してのみ一致します。"
    },
    {
      "indent": 0,
      "text": "2.2. Common Prefix Length",
      "section_title": true,
      "ja": "2.2. 共通のプレフィックス長"
    },
    {
      "indent": 3,
      "text": "We define the common prefix length CommonPrefixLen(S, D) of a source address S and a destination address D as the length of the longest prefix (looking at the most significant, or leftmost, bits) that the two addresses have in common, up to the length of S's prefix (i.e., the portion of the address not including the interface ID). For example, CommonPrefixLen(fe80::1, fe80::2) is 64.",
      "ja": "送信元アドレスSと宛先アドレスDの共通プレフィックス長CommonPrefixLen（S、D）を、2つのアドレスが共通して持つ最長のプレフィックス（最上位ビットまたは左端のビットを見て）の長さとして定義します。 Sのプレフィックスの長さ（つまり、インターフェースIDを含まないアドレスの部分）。たとえば、CommonPrefixLen（fe80 :: 1、fe80 :: 2）は64です。"
    },
    {
      "indent": 0,
      "text": "3. Address Properties",
      "section_title": true,
      "ja": "3. アドレスのプロパティ"
    },
    {
      "indent": 0,
      "text": " In the rules given in later sections, addresses of different types (e.g., IPv4, IPv6, multicast, and unicast) are compared against each other. Some of these address types have properties that aren't directly comparable to each other. For example, IPv6 unicast addresses can be \"preferred\" or \"deprecated\" [RFC4862], while IPv4 addresses have no such notion. To compare such addresses using the ordering rules (e.g., to use \"preferred\" addresses in preference to \"deprecated\" addresses), the following mappings are defined.",
      "ja": "後のセクションで示すルールでは、さまざまなタイプ（IPv4、IPv6、マルチキャスト、ユニキャストなど）のアドレスが互いに比較されます。これらのアドレスタイプの一部には、互いに直接比較できないプロパティがあります。たとえば、IPv6ユニキャストアドレスは「推奨」または「非推奨」[RFC4862]にすることができますが、IPv4アドレスにはそのような概念はありません。順序付けルールを使用してそのようなアドレスを比較する（たとえば、「非推奨」アドレスよりも「優先」アドレスを使用する）ために、次のマッピングが定義されています。"
    },
    {
      "indent": 0,
      "text": "3.1. Scope Comparisons",
      "section_title": true,
      "ja": "3.1. スコープの比較"
    },
    {
      "indent": 3,
      "text": "Multicast destination addresses have a 4-bit scope field that controls the propagation of the multicast packet. The IPv6 addressing architecture defines scope field values for interface-local (0x1), link-local (0x2), admin-local (0x4), site-local (0x5), organization-local (0x8), and global (0xE) scopes (Section 2.7 of [RFC4291]).",
      "ja": "マルチキャスト宛先アドレスには、マルチキャストパケットの伝播を制御する4ビットのスコープフィールドがあります。 IPv6アドレス指定アーキテクチャは、インターフェースローカル（0x1）、リンクローカル（0x2）、管理ローカル（0x4）、サイトローカル（0x5）、組織ローカル（0x8）、およびグローバル（0xE）スコープのスコープフィールド値を定義します（[RFC4291]のセクション2.7）。"
    },
    {
      "indent": 3,
      "text": "Use of the source address selection algorithm in the presence of multicast destination addresses requires the comparison of a unicast address scope with a multicast address scope. We map unicast link-local to multicast link-local, unicast site-local to multicast site-local, and unicast global scope to multicast global scope. For example, unicast site-local is equal to multicast site-local, which is smaller than multicast organization-local, which is smaller than unicast global, which is equal to multicast global. (Note that IPv6 site-local unicast addresses are deprecated [RFC4291]. However, some existing implementations and deployments may still use these addresses; they are therefore included in the procedures in this specification. Also, note that ULAs are considered as global, not site-local, scope but are handled via the prefix policy table as discussed in Section 10.6.)",
      "ja": "マルチキャスト宛先アドレスが存在する場合にソースアドレス選択アルゴリズムを使用するには、ユニキャストアドレススコープとマルチキャストアドレススコープを比較する必要があります。ユニキャストリンクローカルをマルチキャストリンクローカルに、ユニキャストサイトローカルをマルチキャストサイトローカルに、ユニキャストグローバルスコープをマルチキャストグローバルスコープにマッピングします。たとえば、ユニキャストサイトローカルは、マルチキャストサイトローカルと同じです。これは、マルチキャストグローバルに等しいユニキャストグローバルよりも小さいマルチキャスト組織ローカルよりも小さいです。 （IPv6サイトローカルユニキャストアドレスは非推奨[RFC4291]であることに注意してください。ただし、一部の既存の実装と展開ではこれらのアドレスが引き続き使用される可能性があるため、この仕様の手順に含まれています。また、ULAはグローバルではなく、サイトローカル、スコープですが、セクション10.6で説明されているように、プレフィックスポリシーテーブルを介して処理されます。"
    },
    {
      "indent": 3,
      "text": "We write Scope(A) to mean the scope of address A. For example, if A is a link-local unicast address and B is a site-local multicast address, then Scope(A) < Scope(B).",
      "ja": "Scope（A）は、アドレスAのスコープを意味するように記述します。たとえば、Aがリンクローカルユニキャストアドレスで、Bがサイトローカルマルチキャストアドレスである場合、Scope（A）<Scope（B）です。"
    },
    {
      "indent": 3,
      "text": "This mapping implicitly conflates unicast site boundaries and multicast site boundaries [RFC4007].",
      "ja": "このマッピングは、ユニキャストサイト境界とマルチキャストサイト境界を暗黙的に統合します[RFC4007]。"
    },
    {
      "indent": 0,
      "text": "3.2. IPv4 Addresses and IPv4-Mapped Addresses",
      "section_title": true,
      "ja": "3.2. IPv4アドレスとIPv4マップアドレス"
    },
    {
      "indent": 3,
      "text": "The destination address selection algorithm operates on both IPv6 and IPv4 addresses. For this purpose, IPv4 addresses MUST be represented as IPv4-mapped addresses [RFC4291]. For example, to look up the precedence or other attributes of an IPv4 address in the policy table, look up the corresponding IPv4-mapped IPv6 address.",
      "ja": "宛先アドレス選択アルゴリズムは、IPv6アドレスとIPv4アドレスの両方で動作します。この目的のために、IPv4アドレスはIPv4マップアドレス[RFC4291]として表現されなければなりません（MUST）。たとえば、ポリシーテーブルでIPv4アドレスの優先順位または他の属性を検索するには、対応するIPv4にマップされたIPv6アドレスを検索します。"
    },
    {
      "indent": 0,
      "text": " IPv4 addresses are assigned scopes as follows. IPv4 auto-configuration addresses [RFC3927], which have the prefix 169.254/16, are assigned link-local scope. IPv4 loopback addresses (Section 4.2.2.11 of [RFC1812]), which have the prefix 127/8, are assigned link-local scope (analogously to the treatment of the IPv6 loopback address (Section 4 of [RFC4007])). Other IPv4 addresses (including IPv4 private addresses [RFC1918] and Shared Address Space addresses [RFC6598]) are assigned global scope.",
      "ja": "IPv4アドレスには、次のようにスコープが割り当てられます。接頭辞が169.254 / 16のIPv4自動構成アドレス[RFC3927]には、リンクローカルスコープが割り当てられています。接頭辞が127/8のIPv4ループバックアドレス（[RFC1812]のセクション4.2.2.11）には、リンクローカルスコープが割り当てられています（IPv6ループバックアドレスの扱い（[RFC4007]のセクション4）と同様に）。その他のIPv4アドレス（IPv4プライベートアドレス[RFC1918]および共有アドレススペースアドレス[RFC6598]を含む）には、グローバルスコープが割り当てられます。"
    },
    {
      "indent": 3,
      "text": "IPv4 addresses MUST be treated as having \"preferred\" (in the RFC 4862 sense) configuration status.",
      "ja": "IPv4アドレスは、「RFC 4862の意味で」「推奨」構成ステータスを持つものとして扱う必要があります。"
    },
    {
      "indent": 0,
      "text": "3.3. Other IPv6 Addresses with Embedded IPv4 Addresses",
      "section_title": true,
      "ja": "3.3. IPv4アドレスが埋め込まれたその他のIPv6アドレス"
    },
    {
      "indent": 3,
      "text": "IPv4-compatible addresses [RFC4291], IPv4-mapped [RFC4291], IPv4- converted [RFC6145], IPv4-translatable [RFC6145], and 6to4 addresses [RFC3056] contain an embedded IPv4 address. For the purposes of this document, these addresses MUST be treated as having global scope.",
      "ja": "IPv4互換アドレス[RFC4291]、IPv4マッピング[RFC4291]、IPv4変換[RFC6145]、IPv4-translatable [RFC6145]、6to4アドレス[RFC3056]には、埋め込まれたIPv4アドレスが含まれています。このドキュメントでは、これらのアドレスをグローバルスコープとして扱う必要があります。"
    },
    {
      "indent": 3,
      "text": "IPv4-compatible, IPv4-mapped, and IPv4-converted addresses MUST be treated as having \"preferred\" (in the RFC 4862 sense) configuration status.",
      "ja": "IPv4互換、IPv4マッピング、およびIPv4変換のアドレスは、「RFC 4862の意味で」「推奨」構成ステータスを持つものとして扱う必要があります。"
    },
    {
      "indent": 0,
      "text": "3.4. IPv6 Loopback Address and Other Format Prefixes",
      "section_title": true,
      "ja": "3.4. IPv6ループバックアドレスとその他の形式のプレフィックス"
    },
    {
      "indent": 3,
      "text": "The loopback address MUST be treated as having link-local scope (Section 4 of [RFC4007]) and \"preferred\" (in the RFC 4862 sense) configuration status.",
      "ja": "ループバックアドレスは、リンクローカルスコープ（[RFC4007]のセクション4）と「推奨」（RFC 4862の意味で）構成ステータスを持つものとして扱う必要があります。"
    },
    {
      "indent": 3,
      "text": "NSAP addresses and other addresses with as-yet-undefined format prefixes MUST be treated as having global scope and \"preferred\" (in the RFC 4862) configuration status. Later standards might supersede this treatment.",
      "ja": "NSAPアドレスと、まだ未定義のフォーマットプレフィックスを持つ他のアドレスは、グローバルスコープと「推奨」（RFC 4862）構成ステータスを持つものとして扱われる必要があります。後の基準はこの扱いに取って代わるかもしれません。"
    },
    {
      "indent": 0,
      "text": "3.5. Mobility Addresses",
      "section_title": true,
      "ja": "3.5. モビリティアドレス"
    },
    {
      "indent": 3,
      "text": "Some nodes might support mobility using the concepts of home address and care-of address (for example, see [RFC6275]). Conceptually, a home address is an IP address assigned to a mobile node and used as the permanent address of the mobile node. A care-of address is an IP address associated with a mobile node while visiting a foreign link. When a mobile node is on its home link, it might have an address that is simultaneously a home address and a care-of address.",
      "ja": "一部のノードは、ホームアドレスと気付アドレスの概念を使用してモビリティをサポートする場合があります（たとえば、[RFC6275]を参照）。概念的には、ホームアドレスは、モバイルノードに割り当てられ、モバイルノードの永続アドレスとして使用されるIPアドレスです。気付アドレスは、外部リンクにアクセスしている間のモバイルノードに関連付けられたIPアドレスです。モバイルノードがホームリンク上にある場合、ホームアドレスと気付アドレスを同時に兼ねているアドレスが存在する可能性があります。"
    },
    {
      "indent": 3,
      "text": "For the purposes of this document, it is sufficient to know whether one's own addresses are designated as home addresses or care-of addresses. Whether an address ought to be designated a home address or care-of address is outside the scope of this document.",
      "ja": "このドキュメントでは、自分のアドレスがホームアドレスと気付アドレスのどちらとして指定されているかを知っていれば十分です。住所を自宅住所または気付住所として指定する必要があるかどうかは、このドキュメントの範囲外です。"
    },
    {
      "indent": 0,
      "text": "4. Candidate Source Addresses",
      "section_title": true,
      "ja": "4. 候補ソースアドレス"
    },
    {
      "indent": 3,
      "text": "The source address selection algorithm uses the concept of a \"candidate set\" of potential source addresses for a given destination address. The candidate set is the set of all addresses that could be used as a source address; the source address selection algorithm will pick an address out of that set. We write CandidateSource(A) to denote the candidate set for the address A.",
      "ja": "送信元アドレス選択アルゴリズムは、特定の宛先アドレスの潜在的な送信元アドレスの「候補セット」の概念を使用します。候補セットは、送信元アドレスとして使用できるすべてのアドレスのセットです。ソースアドレス選択アルゴリズムは、そのセットからアドレスを選択します。 CandidateSource（A）を記述して、住所Aの候補セットを示します。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that the candidate source addresses be the set of unicast addresses assigned to the interface that will be used to send to the destination (the \"outgoing\" interface). On routers, the candidate set MAY include unicast addresses assigned to any interface that forwards packets, subject to the restrictions described below. Implementations that wish to support the use of global source addresses assigned to a loopback interface MUST behave as if the loopback interface originates and forwards the packet.",
      "ja": "候補の送信元アドレスは、宛先（「発信」インターフェース）への送信に使用されるインターフェースに割り当てられたユニキャストアドレスのセットであることが推奨されます。ルーターでは、候補セットには、パケットを転送する任意のインターフェースに割り当てられたユニキャストアドレスが含まれる場合がありますが、これは以下で説明する制限に従います。ループバックインターフェイスに割り当てられたグローバルソースアドレスの使用をサポートする実装は、ループバックインターフェイスがパケットを発信および転送するかのように動作する必要があります。"
    },
    {
      "indent": 6,
      "text": "Discussion: The Neighbor Discovery Redirect mechanism [RFC4861] requires that routers verify that the source address of a packet identifies a neighbor before generating a Redirect, so it is advantageous for hosts to choose source addresses assigned to the outgoing interface.",
      "ja": "ディスカッション：近隣探索リダイレクトメカニズム[RFC4861]では、ルーターがリダイレクトを生成する前に、パケットの送信元アドレスがネイバーを識別することを確認する必要があるため、発信インターフェイスに割り当てられている送信元アドレスをホストが選択すると便利です。"
    },
    {
      "indent": 3,
      "text": "In some cases, the destination address might be qualified with a zone index or other information that will constrain the candidate set.",
      "ja": "場合によっては、宛先アドレスがゾーンインデックスまたは候補セットを制約するその他の情報で修飾されることがあります。"
    },
    {
      "indent": 3,
      "text": "For all multicast and link-local destination addresses, the set of candidate source addresses MUST only include addresses assigned to interfaces belonging to the same link as the outgoing interface.",
      "ja": "すべてのマルチキャストおよびリンクローカル宛先アドレスの場合、候補送信元アドレスのセットには、発信インターフェースと同じリンクに属するインターフェースに割り当てられたアドレスのみを含める必要があります。"
    },
    {
      "indent": 6,
      "text": "Discussion: The restriction for multicast destination addresses is necessary because currently deployed multicast forwarding algorithms use Reverse Path Forwarding (RPF) checks.",
      "ja": "説明：現在展開されているマルチキャスト転送アルゴリズムは、Reverse Path Forwarding（RPF）チェックを使用するため、マルチキャスト宛先アドレスの制限が必要です。"
    },
    {
      "indent": 3,
      "text": "For site-local unicast destination addresses, the set of candidate source addresses MUST only include addresses assigned to interfaces belonging to the same site as the outgoing interface.",
      "ja": "サイトローカルユニキャスト宛先アドレスの場合、候補送信元アドレスのセットには、発信インターフェイスと同じサイトに属するインターフェイスに割り当てられたアドレスのみを含める必要があります。"
    },
    {
      "indent": 3,
      "text": "In any case, multicast addresses and the unspecified address MUST NOT be included in a candidate set.",
      "ja": "いずれの場合も、マルチキャストアドレスと未指定のアドレスを候補セットに含めることはできません。"
    },
    {
      "indent": 3,
      "text": "On IPv6-only nodes that support Stateless IP/ICMP Translation (SIIT) [RFC6145], if the destination address is an IPv4-converted address, then the candidate set MUST contain only IPv4-translatable addresses.",
      "ja": "ステートレスIP / ICMP変換（SIIT）[RFC6145]をサポートするIPv6のみのノードでは、宛先アドレスがIPv4変換アドレスの場合、候補セットにはIPv4変換可能アドレスのみが含まれている必要があります。"
    },
    {
      "indent": 3,
      "text": "If an application or upper layer specifies a source address, it may affect the choice of outgoing interface. Regardless, if the application or upper layer specifies a source address that is not in the candidate set for the destination, then the network layer MUST treat this as an error. If the application or upper layer specifies a source address that is in the candidate set for the destination, then the network layer MUST respect that choice. If the application or upper layer does not specify a source address, then the network layer uses the source address selection algorithm specified in the next section.",
      "ja": "アプリケーションまたは上位層が送信元アドレスを指定する場合、発信インターフェイスの選択に影響を与える可能性があります。とにかく、アプリケーションまたは上位層が宛先の候補セットにない送信元アドレスを指定する場合、ネットワーク層はこれをエラーとして扱わなければなりません（MUST）。アプリケーションまたは上位層が宛先の候補セットにある送信元アドレスを指定する場合、ネットワーク層はその選択を尊重しなければなりません（MUST）。アプリケーションまたは上位層が送信元アドレスを指定しない場合、ネットワーク層は次のセクションで指定される送信元アドレス選択アルゴリズムを使用します。"
    },
    {
      "indent": 0,
      "text": "5. Source Address Selection",
      "section_title": true,
      "ja": "5. 送信元アドレスの選択"
    },
    {
      "indent": 3,
      "text": "The source address selection algorithm produces as output a single source address for use with a given destination address. This algorithm only applies to IPv6 destination addresses, not IPv4 addresses.",
      "ja": "ソースアドレス選択アルゴリズムは、特定の宛先アドレスで使用する単一のソースアドレスを出力として生成します。このアルゴリズムはIPv6宛先アドレスにのみ適用され、IPv4アドレスには適用されません。"
    },
    {
      "indent": 3,
      "text": "The algorithm is specified here in terms of a list of pair-wise comparison rules that (for a given destination address D) imposes a \"greater than\" ordering on the addresses in the candidate set CandidateSource(D). The address at the front of the list after the algorithm completes is the one the algorithm selects.",
      "ja": "アルゴリズムは、ペアワイズ比較ルールのリストの観点からここで指定されます（特定の宛先アドレスDに対して）、候補セットCandidateSource（D）のアドレスに「より大きい」順序を課します。アルゴリズムが完了した後のリストの先頭にあるアドレスは、アルゴリズムが選択したアドレスです。"
    },
    {
      "indent": 3,
      "text": "Note that conceptually, a sort of the candidate set is being performed, where a set of rules define the ordering among addresses. But because the output of the algorithm is a single source address, an implementation need not actually sort the set; it need only identify the \"maximum\" value that ends up at the front of the sorted list.",
      "ja": "概念的には、候補セットの一種が実行されており、ルールのセットがアドレス間の順序付けを定義していることに注意してください。ただし、アルゴリズムの出力は単一の送信元アドレスであるため、実装は実際にセットをソートする必要はありません。ソートされたリストの前に来る「最大」値を特定するだけです。"
    },
    {
      "indent": 3,
      "text": "The ordering of the addresses in the candidate set is defined by a list of eight pair-wise comparison rules, with each rule placing a \"greater than\", \"less than\", or \"equal to\" ordering on two source addresses with respect to each other (and that rule). In the case that a given rule produces a tie, i.e., provides an \"equal to\" result for the two addresses, the remaining rules MUST be applied (in order) to just those addresses that are tied to break the tie. Note that if a rule produces a single clear \"winner\" (or set of \"winners\" in the case of ties), those addresses not in the winning set can be discarded from further consideration, with subsequent rules applied only to the remaining addresses. If the eight rules fail to choose a single address, the tiebreaker is implementation-specific.",
      "ja": "候補セット内のアドレスの順序は、8つのペアワイズ比較ルールのリストによって定義されます。各ルールは、2つのソースアドレスに対して「より大きい」、「より小さい」、または「等しい」の順序で配置されます。お互い（そしてそのルール）。特定のルールがタイを生成する場合、つまり2つのアドレスに「等しい」結果を提供する場合、タイを破るためにタイされているアドレスのみに残りのルールを（順番に）適用する必要があります。ルールによって1つの明確な「勝者」（または同点の場合は「勝者」のセット）が生成される場合、勝者セットにないそれらのアドレスは、以降のルールが残りのアドレスにのみ適用され、それ以上の検討から破棄されます。 8つのルールが単一のアドレスを選択できない場合、タイブレーカーは実装固有です。"
    },
    {
      "indent": 3,
      "text": "When comparing two addresses SA and SB from the candidate set, we say \"prefer SA\" to mean that SA is \"greater than\" SB, and similarly, we say \"prefer SB\" to mean that SA is \"less than\" SB. If neither is stated to be preferred, this means that SA is \"equal to\" SB, and the remaining rules apply as noted above.",
      "ja": "候補セットの2つのアドレスSAとSBを比較する場合、SAがSBより「大きい」ことを意味する「SAを優先する」と言い、同様に、SAがSBを「下回る」ことを意味する「SBを優先する」と言います。どちらも優先であると述べられていない場合、これはSAがSBに「等しい」ことを意味し、残りのルールは上記のように適用されます。"
    },
    {
      "indent": 3,
      "text": "Rule 1: Prefer same address. If SA = D, then prefer SA. Similarly, if SB = D, then prefer SB.",
      "ja": "ルール1：同じ住所を優先する。 SA = Dの場合、SAを優先します。同様に、SB = Dの場合、SBを優先します。"
    },
    {
      "indent": 3,
      "text": "Rule 2: Prefer appropriate scope. If Scope(SA) < Scope(SB): If Scope(SA) < Scope(D), then prefer SB and otherwise prefer SA. Similarly, if Scope(SB) < Scope(SA): If Scope(SB) < Scope(D), then prefer SA and otherwise prefer SB.",
      "ja": "ルール2：適切なスコープを優先します。 Scope（SA）<Scope（SB）の場合：Scope（SA）<Scope（D）の場合、SBを優先し、それ以外の場合はSAを優先します。同様に、Scope（SB）<Scope（SA）の場合：Scope（SB）<Scope（D）の場合、SAを優先し、それ以外の場合はSBを優先します。"
    },
    {
      "indent": 6,
      "text": "Discussion: This rule must be given high priority because it can affect interoperability.",
      "ja": "ディスカッション：このルールは相互運用性に影響を与える可能性があるため、優先度を高くする必要があります。"
    },
    {
      "indent": 3,
      "text": "Rule 3: Avoid deprecated addresses. If one of the two source addresses is \"preferred\" and one of them is \"deprecated\" (in the RFC 4862 sense), then prefer the one that is \"preferred\".",
      "ja": "ルール3：非推奨のアドレスを避けます。 2つの送信元アドレスの1つが「推奨」であり、それらの1つが「非推奨」である（RFC 4862の意味で）場合は、「推奨」の方を優先します。"
    },
    {
      "indent": 3,
      "text": "Rule 4: Prefer home addresses. If SA is simultaneously a home address and care-of address and SB is not, then prefer SA. Similarly, if SB is simultaneously a home address and care-of address and SA is not, then prefer SB. If SA is just a home address and SB is just a care-of address, then prefer SA. Similarly, if SB is just a home address and SA is just a care-of address, then prefer SB.",
      "ja": "ルール4：自宅の住所を優先します。 SAが同時にホームアドレスと気付アドレスであり、SBがそうでない場合は、SAを優先します。同様に、SBが同時にホームアドレスと気付アドレスであり、SAがそうでない場合は、SBを優先します。 SAがホームアドレスにすぎず、SBが気付アドレスにすぎない場合は、SAを優先します。同様に、SBが単なるホームアドレスであり、SAが単なる気付アドレスである場合、SBを優先します。"
    },
    {
      "indent": 3,
      "text": "Implementations supporting home addresses MUST provide a mechanism allowing an application to reverse the sense of this preference and prefer care-of addresses over home addresses (e.g., via appropriate API extensions such as [RFC5014]). Use of the mechanism MUST only affect the selection rules for the invoking application.",
      "ja": "ホームアドレスをサポートする実装は、アプリケーションがこの設定の意味を逆転させ、ホームアドレスよりも気付アドレスを優先できるようにするメカニズムを提供する必要があります（たとえば、[RFC5014]などの適切なAPI拡張を介して）。メカニズムの使用は、起動するアプリケーションの選択ルールにのみ影響を与える必要があります。"
    },
    {
      "indent": 3,
      "text": "Rule 5: Prefer outgoing interface. If SA is assigned to the interface that will be used to send to D and SB is assigned to a different interface, then prefer SA. Similarly, if SB is assigned to the interface that will be used to send to D and SA is assigned to a different interface, then prefer SB.",
      "ja": "ルール5：発信インターフェースを優先します。 Dへの送信に使用されるインターフェースにSAが割り当てられ、SBが別のインターフェースに割り当てられている場合は、SAを優先します。同様に、SBがDへの送信に使用されるインターフェースに割り当てられ、SAが別のインターフェースに割り当てられている場合、SBを優先します。"
    },
    {
      "indent": 3,
      "text": "Rule 5.5: Prefer addresses in a prefix advertised by the next-hop. If SA or SA's prefix is assigned by the selected next-hop that will be used to send to D and SB or SB's prefix is assigned by a different next-hop, then prefer SA. Similarly, if SB or SB's prefix is assigned by the next-hop that will be used to send to D and SA or SA's prefix is assigned by a different next-hop, then prefer SB.",
      "ja": "ルール5.5：ネクストホップによってアドバタイズされるプレフィックスのアドレスを優先します。 Dへの送信に使用される選択したネクストホップによってSAまたはSAのプレフィックスが割り当てられ、SBまたはSBのプレフィックスが別のネクストホップによって割り当てられる場合は、SAを優先します。同様に、SBまたはSBのプレフィックスがDへの送信に使用されるネクストホップによって割り当てられ、SAまたはSAのプレフィックスが別のネクストホップによって割り当てられる場合、SBを優先します。"
    },
    {
      "indent": 6,
      "text": "Discussion: An IPv6 implementation is not required to remember which next-hops advertised which prefixes. The conceptual models of IPv6 hosts in Section 5 of [RFC4861] and Section 3 of [RFC4191] have no such requirement. Hence, Rule 5.5 is only applicable to implementations that track this information.",
      "ja": "考察：IPv6実装は、どのネクストホップがどのプレフィックスをアドバタイズしたかを覚えておく必要はありません。 [RFC4861]のセクション5と[RFC4191]のセクション3のIPv6ホストの概念モデルには、そのような要件はありません。したがって、ルール5.5は、この情報を追跡する実装にのみ適用されます。"
    },
    {
      "indent": 3,
      "text": "Rule 6: Prefer matching label. If Label(SA) = Label(D) and Label(SB) <> Label(D), then prefer SA. Similarly, if Label(SB) = Label(D) and Label(SA) <> Label(D), then prefer SB.",
      "ja": "ルール6：一致するラベルを優先します。 Label（SA）= Label（D）およびLabel（SB）<> Label（D）の場合、SAを優先します。同様に、Label（SB）= Label（D）およびLabel（SA）<> Label（D）の場合、SBを優先します。"
    },
    {
      "indent": 3,
      "text": "Rule 7: Prefer temporary addresses. If SA is a temporary address and SB is a public address, then prefer SA. Similarly, if SB is a temporary address and SA is a public address, then prefer SB.",
      "ja": "ルール7：一時アドレスを優先します。 SAが一時アドレスで、SBがパブリックアドレスの場合、SAを優先します。同様に、SBが一時アドレスであり、SAがパブリックアドレスである場合、SBを優先します。"
    },
    {
      "indent": 3,
      "text": "Implementations MUST provide a mechanism allowing an application to reverse the sense of this preference and prefer public addresses over temporary addresses (e.g., via appropriate API extensions such as [RFC5014]). Use of the mechanism MUST only affect the selection rules for the invoking application. This default is intended to address privacy concerns as discussed in [RFC4941] but introduces a risk of applications potentially failing due to the relatively short lifetime of temporary addresses or due to the possibility of the reverse lookup of a temporary address either failing or returning a randomized name. Implementations for which application compatibility considerations outweigh these privacy concerns MAY reverse the sense of this rule and by default prefer public addresses over temporary addresses. There SHOULD be an administrative option (the Privacy Preference flag) to change this preference, if the implementation supports temporary addresses. If there is no such option, there MUST be an administrative option to disable temporary addresses.",
      "ja": "実装は、アプリケーションがこの設定の意味を逆転させ、一時アドレスよりもパブリックアドレスを優先できるようにするメカニズムを提供する必要があります（たとえば、[RFC5014]などの適切なAPI拡張を介して）。メカニズムの使用は、起動するアプリケーションの選択ルールにのみ影響を与える必要があります。このデフォルトは、[RFC4941]で説明されているプラ​​イバシーの問題に対処することを目的としていますが、一時アドレスのライフタイムが比較的短いため、または一時アドレスの逆ルックアップが失敗するかランダム化された結果を返す可能性があるため、アプリケーションが失敗する可能性があります。名前。アプリケーションの互換性に関する考慮事項がこれらのプライバシーの懸念を上回る実装は、このルールの意味を逆転させ、デフォルトでは一時アドレスよりもパブリックアドレスを優先する場合があります。実装が一時アドレスをサポートしている場合、この設定を変更するための管理オプション（プライバシー設定フラグ）が必要です（SHOULD）。そのようなオプションがない場合は、一時アドレスを無効にする管理オプションが必要です。"
    },
    {
      "indent": 3,
      "text": "Rule 8: Use longest matching prefix. If CommonPrefixLen(SA, D) > CommonPrefixLen(SB, D), then prefer SA. Similarly, if CommonPrefixLen(SB, D) > CommonPrefixLen(SA, D), then prefer SB.",
      "ja": "ルール8：一致する最長のプレフィックスを使用します。 CommonPrefixLen（SA、D）> CommonPrefixLen（SB、D）の場合、SAを優先します。同様に、CommonPrefixLen（SB、D）> CommonPrefixLen（SA、D）の場合、SBを優先します。"
    },
    {
      "indent": 3,
      "text": "Rule 8 MAY be superseded if the implementation has other means of choosing among source addresses. For example, if the implementation somehow knows which source address will result in the \"best\" communications performance.",
      "ja": "ルール8は、実装に送信元アドレスから選択する他の手段がある場合は、置き換えられる場合があります。たとえば、実装が何らかの方法でどの送信元アドレスが「最良の」通信パフォーマンスをもたらすかを知っている場合。"
    },
    {
      "indent": 0,
      "text": "6. Destination Address Selection",
      "section_title": true,
      "ja": "6. 宛先アドレスの選択"
    },
    {
      "indent": 3,
      "text": "The destination address selection algorithm takes a list of destination addresses and sorts the addresses to produce a new list. It is specified here in terms of the pair-wise comparison of addresses DA and DB, where DA appears before DB in the original list.",
      "ja": "宛先アドレス選択アルゴリズムは、宛先アドレスのリストを受け取り、アドレスをソートして新しいリストを作成します。ここでは、アドレスDAとDBのペアごとの比較に関して指定されています。DAは、元のリストでDBの前に表示されます。"
    },
    {
      "indent": 3,
      "text": "The algorithm sorts together both IPv6 and IPv4 addresses. To find the attributes of an IPv4 address in the policy table, the IPv4 address MUST be represented as an IPv4-mapped address.",
      "ja": "アルゴリズムは、IPv6アドレスとIPv4アドレスの両方を一緒にソートします。ポリシーテーブルでIPv4アドレスの属性を見つけるには、IPv4アドレスをIPv4マップアドレスとして表現する必要があります。"
    },
    {
      "indent": 3,
      "text": "We write Source(D) to indicate the selected source address for a destination D. For IPv6 addresses, the previous section specifies the source address selection algorithm. Source address selection for IPv4 addresses is not specified in this document.",
      "ja": "Source（D）を書き込んで、宛先Dの選択されたソースアドレスを示します。IPv6アドレスの場合、前のセクションではソースアドレス選択アルゴリズムを指定します。 IPv4アドレスの送信元アドレスの選択は、このドキュメントでは指定されていません。"
    },
    {
      "indent": 3,
      "text": "We say that Source(D) is undefined if there is no source address available for destination D. For IPv6 addresses, this is only the case if CandidateSource(D) is the empty set.",
      "ja": "宛先Dに使用可能なソースアドレスがない場合、Source（D）は未定義であると言います。IPv6アドレスの場合、これはCandidateSource（D）が空のセットの場合にのみ当てはまります。"
    },
    {
      "indent": 3,
      "text": "The pair-wise comparison of destination addresses consists of ten rules, which MUST be applied in order. If a rule determines a result, then the remaining rules are not relevant and MUST be ignored. Subsequent rules act as tiebreakers for earlier rules. See the previous section for a lengthier description of how pair-wise comparison tiebreaker rules can be used to sort a list.",
      "ja": "宛先アドレスのペアごとの比較は10個のルールで構成されており、順番に適用する必要があります。ルールが結果を決定する場合、残りのルールは関係がなく、無視する必要があります。後続のルールは、以前のルールのタイブレーカーとして機能します。ペアワイズ比較タイブレーカールールを使用してリストを並べ替える方法の詳細については、前のセクションを参照してください。"
    },
    {
      "indent": 3,
      "text": "Rule 1: Avoid unusable destinations. If DB is known to be unreachable or if Source(DB) is undefined, then prefer DA. Similarly, if DA is known to be unreachable or if Source(DA) is undefined, then prefer DB.",
      "ja": "ルール1：使用できない宛先を回避します。 DBに到達できないことがわかっている場合、またはSource（DB）が定義されていない場合は、DAを優先します。同様に、DAに到達できないことがわかっている場合、またはSource（DA）が定義されていない場合は、DBを優先します。"
    },
    {
      "indent": 6,
      "text": "Discussion: An implementation might know that a particular destination is unreachable in several ways. For example, the destination might be reached through a network interface that is currently unplugged. For example, the implementation might retain information from Neighbor Unreachability Detection [RFC4861] for some period of time. In any case, the determination of unreachability for the purposes of this rule is implementation-dependent.",
      "ja": "ディスカッション：特定の宛先がいくつかの方法で到達できないことを実装が知っている場合があります。たとえば、現在接続されていないネットワークインターフェイスを介して宛先に到達する場合があります。たとえば、実装では、近隣到達不能検出[RFC4861]からの情報を一定期間保持する場合があります。いずれの場合も、このルールの目的のための到達不能の決定は実装依存です。"
    },
    {
      "indent": 3,
      "text": "Rule 2: Prefer matching scope. If Scope(DA) = Scope(Source(DA)) and Scope(DB) <> Scope(Source(DB)), then prefer DA. Similarly, if Scope(DA) <> Scope(Source(DA)) and Scope(DB) = Scope(Source(DB)), then prefer DB.",
      "ja": "ルール2：一致するスコープを優先します。 Scope（DA）= Scope（Source（DA））およびScope（DB）<> Scope（Source（DB））の場合、DAを優先します。同様に、Scope（DA）<> Scope（Source（DA））およびScope（DB）= Scope（Source（DB））の場合、DBを優先します。"
    },
    {
      "indent": 3,
      "text": "Rule 3: Avoid deprecated addresses. If Source(DA) is deprecated and Source(DB) is not, then prefer DB. Similarly, if Source(DA) is not deprecated and Source(DB) is deprecated, then prefer DA.",
      "ja": "ルール3：非推奨のアドレスを避けます。 Source（DA）が廃止され、Source（DB）が廃止されない場合は、DBを優先してください。同様に、Source（DA）が非推奨ではなく、Source（DB）が非推奨である場合は、DAを優先します。"
    },
    {
      "indent": 3,
      "text": "Rule 4: Prefer home addresses. If Source(DA) is simultaneously a home address and care-of address and Source(DB) is not, then prefer DA. Similarly, if Source(DB) is simultaneously a home address and care-of address and Source(DA) is not, then prefer DB.",
      "ja": "ルール4：自宅の住所を優先します。 Source（DA）が同時にホームアドレスと気付アドレスであり、Source（DB）がそうでない場合、DAを優先します。同様に、Source（DB）が同時にホームアドレスと気付アドレスであり、Source（DA）がそうでない場合、DBを優先します。"
    },
    {
      "indent": 3,
      "text": "If Source(DA) is just a home address and Source(DB) is just a care-of address, then prefer DA. Similarly, if Source(DA) is just a care-of address and Source(DB) is just a home address, then prefer DB.",
      "ja": "Source（DA）がホームアドレスにすぎず、Source（DB）が気付アドレスにすぎない場合は、DAを優先します。同様に、Source（DA）が単なる気付アドレスであり、Source（DB）が単なるホームアドレスである場合、DBを優先します。"
    },
    {
      "indent": 3,
      "text": "Rule 5: Prefer matching label. If Label(Source(DA)) = Label(DA) and Label(Source(DB)) <> Label(DB), then prefer DA. Similarly, if Label(Source(DA)) <> Label(DA) and Label(Source(DB)) = Label(DB), then prefer DB.",
      "ja": "ルール5：一致するラベルを優先します。 Label（Source（DA））= Label（DA）およびLabel（Source（DB））<> Label（DB）の場合、DAを優先します。同様に、Label（Source（DA））<> Label（DA）およびLabel（Source（DB））= Label（DB）の場合、DBを優先します。"
    },
    {
      "indent": 3,
      "text": "Rule 6: Prefer higher precedence. If Precedence(DA) > Precedence(DB), then prefer DA. Similarly, if Precedence(DA) < Precedence(DB), then prefer DB.",
      "ja": "ルール6：優先順位を高くする。 Precedence（DA）> Precedence（DB）の場合、DAを優先します。同様に、Precedence（DA）<Precedence（DB）の場合、DBを優先します。"
    },
    {
      "indent": 3,
      "text": "Rule 7: Prefer native transport. If DA is reached via an encapsulating transition mechanism (e.g., IPv6 in IPv4) and DB is not, then prefer DB. Similarly, if DB is reached via encapsulation and DA is not, then prefer DA.",
      "ja": "ルール7：ネイティブトランスポートを優先します。カプセル化移行メカニズム（たとえば、IPv4のIPv6）を介してDAに到達し、DBに到達しない場合は、DBを優先します。同様に、カプセル化によってDBに到達し、DAに到達しない場合は、DAを優先します。"
    },
    {
      "indent": 6,
      "text": "Discussion: The IPv6 Rapid Deployment on IPv4 Infrastructures (6rd) Protocol [RFC5969], the Intra-Site Automatic Tunnel Addressing Protocol (ISATAP) [RFC5214], and configured tunnels [RFC4213] are examples of encapsulating transition mechanisms for which the destination address does not have a specific prefix and hence can not be assigned a lower precedence in the policy table. An implementation MAY generalize this rule by using a concept of interface preference and giving virtual interfaces (like the IPv6- in-IPv4 encapsulating interfaces) a lower preference than native interfaces (like ethernet interfaces).",
      "ja": "ディスカッション：IPv4インフラストラクチャでのIPv6高速展開（第6）プロトコル[RFC5969]、サイト内自動トンネルアドレスプロトコル（ISATAP）[RFC5214]、および構成済みトンネル[RFC4213]は、宛先アドレスが行うカプセル化移行メカニズムの例です特定のプレフィックスがないため、ポリシーテーブルでより低い優先順位を割り当てることができません。実装は、インターフェース設定の概念を使用し、仮想インターフェース（IPv6-in-IPv4カプセル化インターフェースなど）をネイティブインターフェース（イーサネットインターフェースなど）よりも低い設定にすることで、このルールを一般化できます（MAY）。"
    },
    {
      "indent": 3,
      "text": "Rule 8: Prefer smaller scope. If Scope(DA) < Scope(DB), then prefer DA. Similarly, if Scope(DA) > Scope(DB), then prefer DB.",
      "ja": "ルール8：小さいスコープを優先します。 Scope（DA）<Scope（DB）の場合、DAを優先します。同様に、Scope（DA）> Scope（DB）の場合、DBを優先します。"
    },
    {
      "indent": 3,
      "text": "Rule 9: Use longest matching prefix. When DA and DB belong to the same address family (both are IPv6 or both are IPv4): If CommonPrefixLen(Source(DA), DA) > CommonPrefixLen(Source(DB), DB), then prefer DA. Similarly, if CommonPrefixLen(Source(DA), DA) < CommonPrefixLen(Source(DB), DB), then prefer DB.",
      "ja": "ルール9：一致する最長のプレフィックスを使用します。 DAとDBが同じアドレスファミリーに属している場合（両方ともIPv6または両方がIPv4です）：CommonPrefixLen（Source（DA）、DA）> CommonPrefixLen（Source（DB）、DB）の場合、DAを優先します。同様に、CommonPrefixLen（Source（DA）、DA）<CommonPrefixLen（Source（DB）、DB）の場合、DBを優先します。"
    },
    {
      "indent": 3,
      "text": "Rule 10: Otherwise, leave the order unchanged. If DA preceded DB in the original list, prefer DA. Otherwise, prefer DB.",
      "ja": "ルール10：それ以外の場合は、順序を変更しないでください。元のリストでDAがDBの前にあった場合は、DAを優先します。それ以外の場合は、DBを優先します。"
    },
    {
      "indent": 3,
      "text": "Rules 9 and 10 MAY be superseded if the implementation has other means of sorting destination addresses. For example, if the implementation somehow knows which destination addresses will result in the \"best\" communications performance.",
      "ja": "ルール9と10は、実装に宛先アドレスをソートする他の手段がある場合は、置き換えられる場合があります。たとえば、実装が何らかの宛先アドレスを知っている場合、「最良の」通信パフォーマンスが得られます。"
    },
    {
      "indent": 0,
      "text": "7. Interactions with Routing",
      "section_title": true,
      "ja": "7. ルーティングとの相互作用"
    },
    {
      "indent": 3,
      "text": "This specification of source address selection assumes that routing (more precisely, selecting an outgoing interface on a node with multiple interfaces) is done before source address selection. However, implementations MAY use source address considerations as a tiebreaker when choosing among otherwise equivalent routes.",
      "ja": "送信元アドレス選択のこの仕様は、ルーティング（より正確には、複数のインターフェースを持つノード上の発信インターフェースの選択）が送信元アドレス選択の前に行われることを前提としています。ただし、実装は、他の点では同等のルートから選択する際に、タイブレーカーとしてソースアドレスの考慮事項を使用する場合があります。"
    },
    {
      "indent": 3,
      "text": "For example, suppose a node has interfaces on two different links, with both links having a working default router. Both of the interfaces have preferred (in the RFC 4862 sense) global addresses. When sending to a global destination address, if there's no routing reason to prefer one interface over the other, then an implementation MAY preferentially choose the outgoing interface that will allow it to use the source address that shares a longer common prefix with the destination.",
      "ja": "たとえば、ノードの2つの異なるリンクにインターフェースがあり、両方のリンクにデフォルトのルーターが機能しているとします。どちらのインターフェースにも（RFC 4862の意味で）優先グローバルアドレスがあります。グローバル宛先アドレスに送信するときに、一方のインターフェースを他方よりも優先するルーティング理由がない場合、実装は、宛先とより長い共通のプレフィックスを共有する送信元アドレスを使用できるようにする送信インターフェースを優先的に選択できます。"
    },
    {
      "indent": 3,
      "text": "Implementations that support Rule 5.5 of source address selection (Section 5) also use the choice of router to influence the choice of source address. For example, suppose a host is on a link with two routers. One router is advertising a global prefix A and the other router is advertising global prefix B. Then, when sending via the first router, the host might prefer source addresses with prefix A and when sending via the second router, prefer source addresses with prefix B.",
      "ja": "送信元アドレス選択の規則5.5（セクション5）をサポートする実装でも、ルーターの選択を使用して送信元アドレスの選択に影響を与えます。たとえば、ホストが2つのルーターとのリンク上にあるとします。一方のルーターはグローバルプレフィックスAをアドバタイズし、もう一方のルーターはグローバルプレフィックスBをアドバタイズします。次に、最初のルーター経由で送信する場合、ホストはプレフィックスAの送信元アドレスを優先し、2番目のルーター経由で送信する場合はプレフィックスBの送信元アドレスを優先します。 。"
    },
    {
      "indent": 0,
      "text": "8. Implementation Considerations",
      "section_title": true,
      "ja": "8. 実装に関する考慮事項"
    },
    {
      "indent": 0,
      "text": " The destination address selection algorithm needs information about potential source addresses. One possible implementation strategy is for getaddrinfo() to call down to the network layer with a list of destination addresses, sort the list in the network layer with full current knowledge of available source addresses, and return the sorted list to getaddrinfo(). This is simple and gives the best results, but it introduces the overhead of another system call. One way to reduce this overhead is to cache the sorted address list in the resolver, so that subsequent calls for the same name do not need to re-sort the list.",
      "ja": "宛先アドレス選択アルゴリズムには、潜在的な送信元アドレスに関する情報が必要です。考えられる1つの実装戦略は、getaddrinfo()が宛先アドレスのリストを使用してネットワーク層を呼び出し、使用可能なソースアドレスの現在の完全な知識でネットワーク層のリストをソートし、ソートされたリストをgetaddrinfo()に返すことです。これは単純であり、最良の結果が得られますが、別のシステムコールのオーバーヘッドが発生します。このオーバーヘッドを削減する1つの方法は、リゾルバーにソートされたアドレスリストをキャッシュすることです。これにより、同じ名前に対する後続の呼び出しでリストを再ソートする必要がなくなります。"
    },
    {
      "indent": 3,
      "text": "Another implementation strategy is to call down to the network layer to retrieve source address information and then sort the list of addresses directly in the context of getaddrinfo(). To reduce overhead in this approach, the source address information can be cached, amortizing the overhead of retrieving it across multiple calls to getaddrinfo(). In this approach, the implementation might not have knowledge of the outgoing interface for each destination, so it MAY use a looser definition of the candidate set during destination address ordering.",
      "ja": "別の実装戦略は、ネットワークレイヤーを呼び出してソースアドレス情報を取得し、アドレスのリストをgetaddrinfo()のコンテキストで直接ソートすることです。この方法でオーバーヘッドを削減するために、送信元アドレス情報をキャッシュして、getaddrinfo()への複数の呼び出しにわたって取得するオーバーヘッドを分散することができます。このアプローチでは、実装は各宛先の発信インターフェースを認識していない可能性があるため、宛先アドレスの順序付け中に候補セットのより緩い定義を使用する場合があります。"
    },
    {
      "indent": 3,
      "text": "In any case, if the implementation uses cached and possibly stale information in its implementation of destination address selection or if the ordering of a cached list of destination addresses is possibly stale, then it MUST ensure that the destination address ordering returned to the application is no more than one second out of date. For example, an implementation might make a system call to check if any routing table entries, source address assignments, or prefix policy table entries that might affect these algorithms have changed. Another strategy is to use an invalidation counter that is incremented whenever any underlying state is changed. By caching the current invalidation counter value with derived state and then later comparing against the current value, the implementation could detect if the derived state is potentially stale.",
      "ja": "いずれにせよ、実装が宛先アドレス選択の実装でキャッシュされた、おそらく古くなった情報を使用する場合、または宛先アドレスのキャッシュされたリストの順序が古くなっている可能性がある場合、アプリケーションに返される宛先アドレスの順序が1秒以上古い。たとえば、実装は、これらのアルゴリズムに影響を与える可能性のあるルーティングテーブルエントリ、送信元アドレス割り当て、またはプレフィックスポリシーテーブルエントリが変更されたかどうかを確認するためにシステムコールを実行する場合があります。別の戦略は、基礎となる状態が変更されるたびに増分される無効化カウンターを使用することです。現在の無効化カウンター値を派生状態と共にキャッシュし、後で現在値と比較することにより、実装は派生状態が古くなっている可能性があるかどうかを検出できます。"
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "ja": "9. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no direct impact on Internet infrastructure security.",
      "ja": "このドキュメントは、インターネットインフラストラクチャのセキュリティには直接影響しません。"
    },
    {
      "indent": 3,
      "text": "Note that most source address selection algorithms, including the one specified in this document, expose a potential privacy concern. An unfriendly node can infer correlations among a target node's addresses by probing the target node with request packets that force the target host to choose its source address for the reply packets (perhaps because the request packets are sent to an anycast or multicast address or perhaps because the upper-layer protocol chosen for the attack does not specify a particular source address for its reply packets). By using different addresses for itself, the unfriendly node can cause the target node to expose the target's own addresses. The source address selection default preference for temporary addresses helps mitigate this concern.",
      "ja": "このドキュメントで指定されているものを含むほとんどの送信元アドレス選択アルゴリズムは、潜在的なプライバシーの懸念を露呈することに注意してください。フレンドリでないノードは、ターゲットホストに応答パケットのソースアドレスを選択させる要求パケットでターゲットノードをプローブすることにより、ターゲットノードのアドレス間の相関を推測できます（おそらく、要求パケットがエニーキャストアドレスまたはマルチキャストアドレスに送信されるか、または攻撃のために選択された上位層プロトコルは、応答パケットの特定の送信元アドレスを指定していません。それ自体に異なるアドレスを使用することにより、不親切なノードは、ターゲットノードにターゲット自身のアドレスを公開させる可能性があります。一時アドレスの送信元アドレス選択のデフォルト設定は、この懸念を軽減するのに役立ちます。"
    },
    {
      "indent": 3,
      "text": "Similarly, most source and destination address selection algorithms, including the one specified in this document, influence the choice of network path taken (as do routing algorithms that are orthogonal to, but used together with, such algorithms) and hence whether data might be sent over a path or network that might be more or less trusted than other paths or networks. Administrators should consider the security impact of the rows they configure in the prefix policy table, just as they should consider the security impact of the interface metrics used in the routing algorithms.",
      "ja": "同様に、このドキュメントで指定されているものを含め、ほとんどの送信元および宛先アドレス選択アルゴリズムは、使用されるネットワークパスの選択（このようなアルゴリズムと直交するが、そのようなアルゴリズムと一緒に使用されるルーティングアルゴリズムと同様）に影響を及ぼし、したがってデータが送信されるかどうか他のパスまたはネットワークよりも多かれ少なかれ信頼されている可能性があるパスまたはネットワークを介して。管理者は、ルーティングアルゴリズムで使用されるインターフェイスメトリックのセキュリティへの影響を考慮する必要があるのと同様に、プレフィックスポリシーテーブルで構成する行のセキュリティへの影響を考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "In addition, some address selection rules might be administratively configurable. Care must be taken to make sure that all administrative options are secured against illicit modification, or else an attacker could redirect and/or block traffic.",
      "ja": "さらに、一部のアドレス選択ルールは管理上構成可能である場合があります。すべての管理オプションが不正な変更から保護されていることを確認するように注意する必要があります。そうしないと、攻撃者がトラフィックをリダイレクトまたはブロックする可能性があります。"
    },
    {
      "indent": 0,
      "text": "10. Examples",
      "section_title": true,
      "ja": "10. 例"
    },
    {
      "indent": 3,
      "text": "This section contains a number of examples, first showing default behavior and then demonstrating the utility of policy table configuration. These examples are provided for illustrative purposes; they are not to be construed as normative.",
      "ja": "このセクションにはいくつかの例が含まれています。最初にデフォルトの動作を示し、次にポリシーテーブル設定のユーティリティを示します。これらの例は、説明のために提供されています。それらは規範的であると解釈されるべきではありません。"
    },
    {
      "indent": 0,
      "text": "10.1. Default Source Address Selection",
      "section_title": true,
      "ja": "10.1. デフォルトの送信元アドレスの選択"
    },
    {
      "indent": 3,
      "text": "The source address selection rules, in conjunction with the default policy table, produce the following behavior:",
      "ja": "送信元アドレス選択規則は、デフォルトのポリシーテーブルとともに、次の動作を生成します。"
    },
    {
      "indent": 3,
      "text": "Destination: 2001:db8:1::1\nCandidate Source Addresses: 2001:db8:3::1 or fe80::1\nResult: 2001:db8::1 (prefer appropriate scope)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Destination: ff05::1\nCandidate Source Addresses: 2001:db8:3::1 or fe80::1\nResult: 2001:db8:3::1 (prefer appropriate scope)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Destination: 2001:db8:1::1\nCandidate Source Addresses: 2001:db8:1::1 (deprecated) or\n2001:db8:2::1\nResult: 2001:db8:1::1 (prefer same address)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Destination: fe80::1\nCandidate Source Addresses: fe80::2 (deprecated) or 2001:db8:1::1\nResult: fe80::2 (prefer appropriate scope)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "   Destination: 2001:db8:1::1\n   Candidate Source Addresses: 2001:db8:1::2 or 2001:db8:3::2\n   Result: 2001:db8:1:::2 (longest matching prefix)\n   Destination: 2001:db8:1::1\n   Candidate Source Addresses: 2001:db8:1::2 (care-of address) or 2001:\n   db8:3::2 (home address)\n   Result: 2001:db8:3::2 (prefer home address)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Destination: 2002:c633:6401::1\nCandidate Source Addresses: 2002:c633:6401::d5e3:7953:13eb:22e8\n(temporary) or 2001:db8:1::2\nResult: 2002:c633:6401::d5e3:7953:13eb:22e8 (prefer matching label)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Destination: 2001:db8:1::d5e3:0:0:1\nCandidate Source Addresses: 2001:db8:1::2 (public) or\n2001:db8:1::d5e3:7953:13eb:22e8 (temporary)\nResult: 2001:db8:1::d5e3:7953:13eb:22e8 (prefer temporary address)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10.2. Default Destination Address Selection",
      "section_title": true,
      "ja": "10.2. デフォルトの宛先アドレスの選択"
    },
    {
      "indent": 3,
      "text": "The destination address selection rules, in conjunction with the default policy table and the source address selection rules, produce the following behavior:",
      "ja": "宛先アドレス選択規則は、デフォルトのポリシーテーブルおよび送信元アドレス選択規則とともに、次の動作を生成します。"
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2001:db8:1::2 or fe80::1 or 169.254.13.78\nDestination Address List: 2001:db8:1::1 or 198.51.100.121\nResult: 2001:db8:1::1 (src 2001:db8:1::2) then 198.51.100.121 (src\n169.254.13.78) (prefer matching scope)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: fe80::1 or 198.51.100.117\nDestination Address List: 2001:db8:1::1 or 198.51.100.121\nResult: 198.51.100.121 (src 198.51.100.117) then 2001:db8:1::1 (src\nfe80::1) (prefer matching scope)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2001:db8:1::2 or fe80::1 or 10.1.2.4\nDestination Address List: 2001:db8:1::1 or 10.1.2.3\nResult: 2001:db8:1::1 (src 2001:db8:1::2) then 10.1.2.3 (src\n10.1.2.4) (prefer higher precedence)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2001:db8:1::2 or fe80::2\nDestination Address List: 2001:db8:1::1 or fe80::1\nResult: fe80::1 (src fe80::2) then 2001:db8:1::1 (src 2001:db8:1::2)\n(prefer smaller scope)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "   Candidate Source Addresses: 2001:db8:1::2 (care-of address) or 2001:\n   db8:3::1 (home address) or fe80::2 (care-of address)\n   Destination Address List: 2001:db8:1::1 or fe80::1\n   Result: 2001:db8:1::1 (src 2001:db8:3::1) then fe80::1 (src fe80::2)\n   (prefer home address)\n   Candidate Source Addresses: 2001:db8:1::2 or fe80::2 (deprecated)\n   Destination Address List: 2001:db8:1::1 or fe80::1\n   Result: 2001:db8:1::1 (src 2001:db8:1::2) then fe80::1 (src fe80::2)\n   (avoid deprecated addresses)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2001:db8:1::2 or 2001:db8:3f44::2 or\nfe80::2\nDestination Address List: 2001:db8:1::1 or 2001:db8:3ffe::1\nResult: 2001:db8:1::1 (src 2001:db8:1::2) then 2001:db8:3ffe::1 (src\n2001:db8:3f44::2) (longest matching prefix)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2002:c633:6401::2 or fe80::2\nDestination Address List: 2002:c633:6401::1 or 2001:db8:1::1\nResult: 2002:c633:6401::1 (src 2002:c633:6401::2) then 2001:db8:1::1\n(src 2002:c633:6401::2) (prefer matching label)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2002:c633:6401::2 or 2001:db8:1::2 or\nfe80::2\nDestination Address List: 2002:c633:6401::1 or 2001:db8:1::1\nResult: 2001:db8:1::1 (src 2001:db8:1::2) then 2002:c633:6401::1 (src\n2002:c633:6401::2) (prefer higher precedence)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10.3. Configuring Preference for IPv6 or IPv4",
      "section_title": true,
      "ja": "10.3. IPv6またはIPv4のプリファレンスの構成"
    },
    {
      "indent": 3,
      "text": "The default policy table gives IPv6 addresses higher precedence than IPv4 addresses. This means that applications will use IPv6 in preference to IPv4 when the two are equally suitable. An administrator can change the policy table to prefer IPv4 addresses by giving the ::ffff:0.0.0.0/96 prefix a higher precedence:",
      "ja": "デフォルトのポリシーテーブルは、IPv6アドレスにIPv4アドレスよりも高い優先順位を与えます。つまり、2つが同等に適している場合、アプリケーションはIPv4よりもIPv6を使用します。管理者は、:: ffff：0.0.0.0/96プレフィックスの優先順位を高くすることで、IPv4アドレスを優先するようにポリシーテーブルを変更できます。"
    },
    {
      "indent": 6,
      "text": "Prefix        Precedence Label\n::1/128               50     0\n::/0                  40     1\n::ffff:0:0/96        100     4\n2002::/16             30     2\n2001::/32              5     5\nfc00::/7               3    13\n::/96                  1     3\nfec0::/10              1    11\n3ffe::/16              1    12",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This change to the default policy table produces the following behavior:",
      "ja": "デフォルトのポリシーテーブルに対するこの変更により、次の動作が発生します。"
    },
    {
      "indent": 0,
      "text": "   Candidate Source Addresses: 2001:db8::2 or fe80::1 or 169.254.13.78\n   Destination Address List: 2001:db8::1 or 198.51.100.121\n   Unchanged Result: 2001:db8::1 (src 2001:db8::2) then 198.51.100.121\n   (src 169.254.13.78) (prefer matching scope)\n   Candidate Source Addresses: fe80::1 or 198.51.100.117\n   Destination Address List: 2001:db8::1 or 198.51.100.121\n   Unchanged Result: 198.51.100.121 (src 198.51.100.117) then\n   2001:db8::1 (src fe80::1) (prefer matching scope)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2001:db8::2 or fe80::1 or 10.1.2.4\nDestination Address List: 2001:db8::1 or 10.1.2.3\nNew Result: 10.1.2.3 (src 10.1.2.4) then 2001:db8::1 (src\n2001:db8::2) (prefer higher precedence)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10.3.1. Handling Broken IPv6",
      "section_title": true,
      "ja": "10.3.1. 壊れたIPv6の処理"
    },
    {
      "indent": 3,
      "text": "One problem in practice that has been recently observed occurs when a host has IPv4 connectivity to the Internet but has \"broken\" IPv6 connectivity to the Internet in that it has a global IPv6 address but is disconnected from the IPv6 Internet. Since the default policy table prefers IPv6, this can result in unwanted timeouts.",
      "ja": "ホストがインターネットにIPv4接続しているが、グローバルIPv6アドレスを持っているがIPv6インターネットから切断されているという点で、インターネットへのIPv6接続が「壊れている」場合に、最近観察された1つの問題が発生します。デフォルトのポリシーテーブルはIPv6を優先するため、これにより不要なタイムアウトが発生する可能性があります。"
    },
    {
      "indent": 3,
      "text": "This can be solved by configuring the table to prefer IPv4 as shown above. An implementation that has some means to detect that it is not connected to the IPv6 Internet MAY do this automatically. An implementation could instead treat it as part of its implementation of Rule 1 (avoid unusable destinations).",
      "ja": "これは、上記のようにIPv4を優先するようにテーブルを構成することで解決できます。 IPv6インターネットに接続されていないことを検出する何らかの手段を持つ実装は、これを自動的に実行してもよい（MAY）。代わりに、実装では、ルール1の実装の一部として扱うことができます（使用できない宛先を避けます）。"
    },
    {
      "indent": 0,
      "text": "10.4. Configuring Preference for Link-Local Addresses",
      "section_title": true,
      "ja": "10.4. リンクローカルアドレスの設定"
    },
    {
      "indent": 3,
      "text": "The destination address selection rules give preference to destinations of smaller scope. For example, a link-local destination will be sorted before a global scope destination when the two are otherwise equally suitable. An administrator can change the policy table to reverse this preference and sort global destinations before link-local destinations:",
      "ja": "宛先アドレス選択ルールは、より小さなスコープの宛先を優先します。たとえば、リンクローカルの宛先は、グローバルスコープの宛先の前にソートされます。管理者は、ポリシーテーブルを変更してこの設定を元に戻し、リンクローカル宛先の前にグローバル宛先をソートできます。"
    },
    {
      "indent": 6,
      "text": "Prefix        Precedence Label\n::1/128               50     0\n::/0                  40     1\n::ffff:0:0/96         35     4\nfe80::/10             33     1\n2002::/16             30     2\n2001::/32              5     5\nfc00::/7               3    13\n::/96                  1     3\nfec0::/10              1    11\n3ffe::/16              1    12",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This change to the default policy table produces the following behavior:",
      "ja": "デフォルトのポリシーテーブルに対するこの変更により、次の動作が発生します。"
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2001:db8::2 or fe80::2\nDestination Address List: 2001:db8::1 or fe80::1\nNew Result: 2001:db8::1 (src 2001:db8::2) then fe80::1 (src fe80::2)\n(prefer higher precedence)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2001:db8::2 (deprecated) or fe80::2\nDestination Address List: 2001:db8::1 or fe80::1\nUnchanged Result: fe80::1 (src fe80::2) then 2001:db8::1 (src 2001:\ndb8::2) (avoid deprecated addresses)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10.5. Configuring a Multi-Homed Site",
      "section_title": true,
      "ja": "10.5. マルチホームサイトの構成"
    },
    {
      "indent": 3,
      "text": "Consider a site A that has a business-critical relationship with another site B. To support their business needs, the two sites have contracted for service with a special high-performance ISP. This is in addition to the normal Internet connection that both sites have with different ISPs. The high-performance ISP is expensive, and the two sites wish to use it only for their business-critical traffic with each other.",
      "ja": "別のサイトBとビジネスクリティカルな関係にあるサイトAを考えてみます。ビジネスニーズをサポートするために、2つのサイトは特別な高性能ISPとのサービスを契約しています。これは、両方のサイトが異なるISPを使用する通常のインターネット接続に追加されるものです。高性能ISPは高価であり、2つのサイトは相互にビジネスクリティカルなトラフィックにのみ使用することを望んでいます。"
    },
    {
      "indent": 3,
      "text": "Each site has two global prefixes, one from the high-performance ISP and one from their normal ISP. Site A has prefix 2001:db8:1aaa::/48 from the high-performance ISP and prefix 2001:db8:70aa::/48 from its normal ISP. Site B has prefix 2001:db8:1bbb::/48 from the high-performance ISP and prefix 2001:db8:70bb::/48 from its normal ISP. All hosts in both sites register two addresses in the DNS.",
      "ja": "各サイトには2つのグローバルプレフィックスがあり、1つは高性能ISPからのもので、もう1つは通常のISPからのものです。サイトAには、高性能ISPからのプレフィックス2001：db8：1aaa :: / 48と、通常のISPからのプレフィックス2001：db8：70aa :: / 48があります。サイトBには、高性能ISPのプレフィックス2001：db8：1bbb :: / 48と、通常のISPのプレフィックス2001：db8：70bb :: / 48があります。両方のサイトのすべてのホストは、DNSに2つのアドレスを登録します。"
    },
    {
      "indent": 3,
      "text": "The routing within both sites directs most traffic to the egress to the normal ISP, but the routing directs traffic sent to the other site's 2001 prefix to the egress to the high-performance ISP. To prevent unintended use of their high-performance ISP connection, the two sites implement ingress filtering to discard traffic entering from the high-performance ISP that is not from the other site.",
      "ja": "両方のサイト内のルーティングは、ほとんどのトラフィックを通常のISPへの出力に転送しますが、ルーティングは、他のサイトの2001プレフィックスに送信されたトラフィックを高性能ISPへの出力に転送します。高性能ISP接続の意図しない使用を防ぐために、2つのサイトは、他のサイトからではなく、高性能ISPから入ってくるトラフィックを破棄するために、入口フィルタリングを実装します。"
    },
    {
      "indent": 3,
      "text": "The default policy table and address selection rules produce the following behavior:",
      "ja": "デフォルトのポリシーテーブルとアドレス選択ルールは、次の動作を生成します。"
    },
    {
      "indent": 0,
      "text": " Candidate Source Addresses: 2001:db8:1aaa::a or 2001:db8:70aa::a or fe80::a Destination Address List: 2001:db8:1bbb::b or 2001:db8:70bb::b Result: 2001:db8:70bb::b (src 2001:db8:70aa::a) then 2001:db8:1bbb::b (src 2001:db8:1aaa::a) (longest matching prefix) In other words, when a host in site A initiates a connection to a host in site B, the traffic does not take advantage of their connections to the high-performance ISP. This is not their desired behavior.",
      "ja": "候補ソースアドレス：2001：db8：1aaa :: aまたは2001：db8：70aa :: aまたはfe80 :: a宛先アドレスリスト：2001：db8：1bbb :: bまたは2001：db8：70bb :: b結果：2001 ：db8：70bb :: b（src 2001：db8：70aa :: a）then 2001：db8：1bbb :: b（src 2001：db8：1aaa :: a）（最長一致プレフィックス）つまり、ホストがサイトAでサイトBのホストへの接続を開始する場合、トラフィックは高性能ISPへの接続を利用しません。これは望ましい動作ではありません。"
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2001:db8:1aaa::a or 2001:db8:70aa::a or\nfe80::a\nDestination Address List: 2001:db8:1ccc::c or 2001:db8:6ccc::c\nResult: 2001:db8:1ccc::c (src 2001:db8:1aaa::a) then 2001:db8:6ccc::c\n(src 2001:db8:70aa::a) (longest matching prefix)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In other words, when a host in site A initiates a connection to a host in some other site C, the reverse traffic might come back through the high-performance ISP. Again, this is not their desired behavior.",
      "ja": "つまり、サイトAのホストが他のサイトCのホストへの接続を開始すると、リバーストラフィックが高性能ISPを経由して戻ってくる可能性があります。繰り返しますが、これは望ましい動作ではありません。"
    },
    {
      "indent": 3,
      "text": "This predicament demonstrates the limitations of the longest-matching-prefix heuristic in multi-homed situations.",
      "ja": "この苦境は、マルチホームの状況での最長一致プレフィックスヒューリスティックの制限を示しています。"
    },
    {
      "indent": 3,
      "text": "However, the administrators of sites A and B can achieve their desired behavior via policy table configuration. For example, they can use the following policy table:",
      "ja": "ただし、サイトAとサイトBの管理者は、ポリシーテーブルの構成を介して目的の動作を実現できます。たとえば、次のポリシーテーブルを使用できます。"
    },
    {
      "indent": 6,
      "text": "Prefix        Precedence Label\n::1/128               50     0\n2001:db8:1aaa::/48    43     6\n2001:db8:1bbb::/48    43     6\n::/0                  40     1\n::ffff:0:0/96         35     4\n2002::/16             30     2\n2001::/32              5     5\nfc00::/7               3    13\n::/96                  1     3\nfec0::/10              1    11\n3ffe::/16              1    12",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This policy table produces the following behavior:",
      "ja": "このポリシーテーブルは、次の動作を生成します。"
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2001:db8:1aaa::a or 2001:db8:70aa::a or\nfe80::a\nDestination Address List: 2001:db8:1bbb::b or 2001:db8:70bb::b\nNew Result: 2001:db8:1bbb::b (src 2001:db8:1aaa::a) then 2001:db8:\n70bb::b (src 2001:db8:70aa::a) (prefer higher precedence)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In other words, when a host in site A initiates a connection to a host in site B, the traffic uses the high-performance ISP as desired.",
      "ja": "つまり、サイトAのホストがサイトBのホストへの接続を開始すると、トラフィックは必要に応じて高性能ISPを使用します。"
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2001:db8:1aaa::a or 2001:db8:70aa::a or\nfe80::a\nDestination Address List: 2001:db8:1ccc::c or 2001:db8:6ccc::c\nNew Result: 2001:db8:6ccc::c (src 2001:db8:70aa::a) then 2001:db8:\n1ccc::c (src 2001:db8:70aa::a) (longest matching prefix)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In other words, when a host in site A initiates a connection to a host in some other site C, the traffic uses the normal ISP as desired.",
      "ja": "つまり、サイトAのホストが他のサイトCのホストへの接続を開始すると、トラフィックは必要に応じて通常のISPを使用します。"
    },
    {
      "indent": 0,
      "text": "10.6. Configuring ULA Preference",
      "section_title": true,
      "ja": "10.6. ULA設定の構成"
    },
    {
      "indent": 3,
      "text": "Sections 2.1.4, 2.2.2, and 2.2.3 of RFC 5220 [RFC5220] describe address selection problems related to Unique Local Addresses (ULAs) [RFC4193]. By default, global IPv6 destinations are preferred over ULA destinations, since an arbitrary ULA is not necessarily reachable:",
      "ja": "RFC 5220 [RFC5220]のセクション2.1.4、2.2.2、および2.2.3では、固有ローカルアドレス（ULA）[RFC4193]に関連するアドレス選択の問題について説明しています。デフォルトでは、任意のULAは必ずしも到達可能ではないため、グローバルIPv6宛先がULA宛先よりも優先されます。"
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2001:db8:1::1 or fd11:1111:1111:1::1\nDestination Address List: 2001:db8:2::2 or fd22:2222:2222:2::2\nResult: 2001:db8:2::2 (src 2001:db8:1::1) then fd22:2222:2222:2::2\n(src fd11:1111:1111:1::1) (prefer higher precedence)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "However, a site-specific policy entry can be used to cause ULAs within a site to be preferred over global addresses as follows.",
      "ja": "ただし、次のように、サイト固有のポリシーエントリを使用して、サイト内のULAをグローバルアドレスよりも優先させることができます。"
    },
    {
      "indent": 6,
      "text": "Prefix        Precedence Label\n::1/128               50     0\nfd11:1111:1111::/48   45    14\n::/0                  40     1\n::ffff:0:0/96         35     4\n2002::/16             30     2\n2001::/32              5     5\nfc00::/7               3    13\n::/96                  1     3\nfec0::/10              1    11\n3ffe::/16              1    12",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Such a configuration would have the following effect:",
      "ja": "このような構成には次の効果があります。"
    },
    {
      "indent": 0,
      "text": "   Candidate Source Addresses: 2001:db8:1::1 or fd11:1111:1111:1::1\n   Destination Address List: 2001:db8:2::2 or fd22:2222:2222:2::2\n   Unchanged Result: 2001:db8:2::2 (src 2001:db8:1::1) then fd22:2222:\n   2222:2::2 (src fd11:1111:1111:1::1) (prefer higher precedence)\n   Candidate Source Addresses: 2001:db8:1::1 or fd11:1111:1111:1::1\n   Destination Address List: 2001:db8:2::2 or fd11:1111:1111:2::2\n   New Result: fd11:1111:1111:2::2 (src fd11:1111:1111:1::1) then 2001:\n   db8:2::2 (src 2001:db8:1::1) (prefer higher precedence)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Since ULAs are defined to have a /48 site prefix, an implementation might choose to add such a row automatically on a machine with a ULA.",
      "ja": "ULAは/ 48サイトプレフィックスを持つように定義されているため、実装では、ULAを備えたマシンにそのような行を自動的に追加することを選択する場合があります。"
    },
    {
      "indent": 3,
      "text": "It is also worth noting that ULAs are assigned global scope. As such, the existence of one or more rows in the prefix policy table is important so that source address selection does not choose a ULA purely based on longest match:",
      "ja": "ULAにはグローバルスコープが割り当てられていることにも注意してください。そのため、プレフィックスポリシーテーブルに1つ以上の行が存在することが重要です。これにより、送信元アドレスの選択で、最も長い一致に基づいてのみULAが選択されなくなります。"
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2001:db8:1::1 or fd11:1111:1111:1::1\nDestination Address List: ff00:1\nResult: 2001:db8:1::1 (prefer matching label)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10.7. Configuring 6to4 Preference",
      "section_title": true,
      "ja": "10.7. 6to4設定の構成"
    },
    {
      "indent": 3,
      "text": "By default, NATed IPv4 is preferred over 6to4-relayed connectivity:",
      "ja": "デフォルトでは、NATされたIPv4が6to4リレー接続よりも優先されます。"
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2002:c633:6401::2 or 10.1.2.3\nDestination Address List: 2001:db8:1::1 or 203.0.113.1\nResult: 203.0.113.1 (src 10.1.2.3) then 2001:db8:1::1 (src 2002:c633:\n6401::2) (prefer matching label)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "However, NATed IPv4 is now also preferred over 6to4-to-6to4 connectivity by default. Since a 6to4 prefix might be used natively within an organization, a site-specific policy entry can be used to cause native IPv6 communication (using a 6to4 prefix) to be preferred over NATed IPv4 as follows.",
      "ja": "ただし、デフォルトでは、NATされたIPv4も6to4から6to4への接続よりも優先されます。 6to4プレフィックスは組織内でネイティブに使用される可能性があるため、サイト固有のポリシーエントリを使用して、ネイティブIPv6通信（6to4プレフィックスを使用）を次のようにNATed IPv4よりも優先させることができます。"
    },
    {
      "indent": 6,
      "text": "Prefix        Precedence Label\n::1/128               50     0\n2002:c633:6401::/48   45    14\n::/0                  40     1\n::ffff:0:0/96         35     4\n2002::/16             30     2\n2001::/32              5     5\nfc00::/7               3    13\n::/96                  1     3\nfec0::/10              1    11\n3ffe::/16              1    12",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Such a configuration would have the following effect:",
      "ja": "このような構成には次の効果があります。"
    },
    {
      "indent": 3,
      "text": "Candidate Source Addresses: 2002:c633:6401:1::1 or 10.1.2.3\nDestination Address List: 2002:c633:6401:2::2 or 203.0.113.1\nNew Result: 2002:c633:6401:2::2 (src 2002:c633:6401:1::1) then\n203.0.113.1 (sec 10.1.2.3) (prefer higher precedence)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Since 6to4 addresses are defined to have a /48 site prefix, an implementation might choose to add such a row automatically on a machine with a native IPv6 address with a 6to4 prefix.",
      "ja": "6to4アドレスは/ 48サイトプレフィックスを持つように定義されているため、実装では、6to4プレフィックスを持つネイティブIPv6アドレスを持つマシンにそのような行を自動的に追加することを選択できます。"
    },
    {
      "indent": 0,
      "text": "11. References",
      "section_title": true,
      "ja": "11. 参考文献"
    },
    {
      "indent": 0,
      "text": "11.1. Normative References",
      "section_title": true,
      "ja": "11.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3056] Carpenter, B. and K. Moore, \"Connection of IPv6 Domains via IPv4 Clouds\", RFC 3056, February 2001.",
      "ja": "[RFC3056]カーペンター、B。およびK.ムーア、「IPv4クラウドを介したIPv6ドメインの接続」、RFC 3056、2001年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC3879] Huitema, C. and B. Carpenter, \"Deprecating Site Local Addresses\", RFC 3879, September 2004.",
      "ja": "[RFC3879] Huitema、C。およびB. Carpenter、「Deprecating Site Local Addresses」、RFC 3879、2004年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC4193] Hinden, R. and B. Haberman, \"Unique Local IPv6 Unicast Addresses\", RFC 4193, October 2005.",
      "ja": "[RFC4193] Hinden、R。およびB. Haberman、「Unique Local IPv6 Unicast Addresses」、RFC 4193、2005年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC4291] Hinden, R. and S. Deering, \"IP Version 6 Addressing Architecture\", RFC 4291, February 2006.",
      "ja": "[RFC4291] Hinden、R。およびS. Deering、「IPバージョン6アドレッシングアーキテクチャ」、RFC 4291、2006年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC4380] Huitema, C., \"Teredo: Tunneling IPv6 over UDP through Network Address Translations (NATs)\", RFC 4380, February 2006.",
      "ja": "[RFC4380] Huitema、C。、「Teredo：Tunneling IPv6 over UDP through Network Address Translations（NATs）」、RFC 4380、2006年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC4862] Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless Address Autoconfiguration\", RFC 4862, September 2007.",
      "ja": "[RFC4862] Thomson、S.、Narten、T。、およびT. Jinmei、「IPv6 Stateless Address Autoconfiguration」、RFC 4862、2007年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC4941] Narten, T., Draves, R., and S. Krishnan, \"Privacy Extensions for Stateless Address Autoconfiguration in IPv6\", RFC 4941, September 2007.",
      "ja": "[RFC4941] Narten、T.、Draves、R。、およびS. Krishnan、「IPv6でのステートレスアドレス自動構成のプライバシー拡張」、RFC 4941、2007年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC6145] Li, X., Bao, C., and F. Baker, \"IP/ICMP Translation Algorithm\", RFC 6145, April 2011.",
      "ja": "[RFC6145] Li、X.、Bao、C。、およびF. Baker、「IP / ICMP変換アルゴリズム」、RFC 6145、2011年4月。"
    },
    {
      "indent": 0,
      "text": "11.2. Informative References",
      "section_title": true,
      "ja": "11.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[ADDR-SEL-OPT] Matsumoto, A., Fujisaki, T., Kato, J., and T. Chown, \"Distributing Address Selection Policy using DHCPv6\", Work in Progress, August 2012.",
      "ja": "[ADDR-SEL-OPT]松本明、藤崎武、加藤順、T。チョン、「DHCPv6を使用したアドレス選択ポリシーの配布」、2012年8月、作業中。"
    },
    {
      "indent": 3,
      "text": "[RFC1794] Brisco, T., \"DNS Support for Load Balancing\", RFC 1794, April 1995.",
      "ja": "[RFC1794] Brisco、T。、「DNS Support for Load Balancing」、RFC 1794、1995年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC1812] Baker, F., \"Requirements for IP Version 4 Routers\", RFC 1812, June 1995.",
      "ja": "[RFC1812]ベイカー、F。、「IPバージョン4ルーターの要件」、RFC 1812、1995年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC1918] Rekhter, Y., Moskowitz, R., Karrenberg, D., Groot, G., and E. Lear, \"Address Allocation for Private Internets\", BCP 5, RFC 1918, February 1996.",
      "ja": "[RFC1918] Rekhter、Y.、Moskowitz、R.、Karrenberg、D.、Groot、G。、およびE. Lear、「プライベートインターネットのアドレス割り当て」、BCP 5、RFC 1918、1996年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC2827] Ferguson, P. and D. Senie, \"Network Ingress Filtering: Defeating Denial of Service Attacks which employ IP Source Address Spoofing\", BCP 38, RFC 2827, May 2000.",
      "ja": "[RFC2827]ファーガソン、P。およびD.セニー、「ネットワーク入力フィルタリング：IP送信元アドレスのスプーフィングを採用するサービス拒否攻撃の打破」、BCP 38、RFC 2827、2000年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC3484] Draves, R., \"Default Address Selection for Internet Protocol version 6 (IPv6)\", RFC 3484, February 2003.",
      "ja": "[RFC3484] Draves、R。、「インターネットプロトコルバージョン6（IPv6）のデフォルトアドレス選択」、RFC 3484、2003年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC3493] Gilligan, R., Thomson, S., Bound, J., McCann, J., and W. Stevens, \"Basic Socket Interface Extensions for IPv6\", RFC 3493, February 2003.",
      "ja": "[RFC3493] Gilligan、R.、Thomson、S.、Bound、J.、McCann、J.、and W. Stevens、 \"Basic Socket Interface Extensions for IPv6\"、RFC 3493、2003年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC3701] Fink, R. and R. Hinden, \"6bone (IPv6 Testing Address Allocation) Phaseout\", RFC 3701, March 2004.",
      "ja": "[RFC3701] Fink、R。およびR. Hinden、「6bone（IPv6 Testing Address Allocation）Phaseout」、RFC 3701、2004年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3927] Cheshire, S., Aboba, B., and E. Guttman, \"Dynamic Configuration of IPv4 Link-Local Addresses\", RFC 3927, May 2005.",
      "ja": "[RFC3927] Cheshire、S.、Aboba、B。、およびE. Guttman、「Dynamic Configuration of IPv4 Link-Local Addresses」、RFC 3927、2005年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC4007] Deering, S., Haberman, B., Jinmei, T., Nordmark, E., and B. Zill, \"IPv6 Scoped Address Architecture\", RFC 4007, March 2005.",
      "ja": "[RFC4007] Deering、S.、Haberman、B.、Jinmei、T.、Nordmark、E。、およびB. Zill、「IPv6 Scoped Address Architecture」、RFC 4007、2005年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4191] Draves, R. and D. Thaler, \"Default Router Preferences and More-Specific Routes\", RFC 4191, November 2005.",
      "ja": "[RFC4191] Draves、R。およびD. Thaler、「デフォルトのルーター設定とより具体的なルート」、RFC 4191、2005年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC4213] Nordmark, E. and R. Gilligan, \"Basic Transition Mechanisms for IPv6 Hosts and Routers\", RFC 4213, October 2005.",
      "ja": "[RFC4213] Nordmark、E。およびR. Gilligan、「IPv6ホストおよびルーターの基本的な移行メカニズム」、RFC 4213、2005年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC4861] Narten, T., Nordmark, E., Simpson, W., and H. Soliman, \"Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861, September 2007.",
      "ja": "[RFC4861] Narten、T.、Nordmark、E.、Simpson、W。、およびH. Soliman、「Neighbor Discovery for IP version 6（IPv6）」、RFC 4861、2007年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC5014] Nordmark, E., Chakrabarti, S., and J. Laganier, \"IPv6 Socket API for Source Address Selection\", RFC 5014, September 2007.",
      "ja": "[RFC5014] Nordmark、E.、Chakrabarti、S。、およびJ. Laganier、「IPv6 Socket API for Source Address Selection」、RFC 5014、2007年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC5214] Templin, F., Gleeson, T., and D. Thaler, \"Intra-Site Automatic Tunnel Addressing Protocol (ISATAP)\", RFC 5214, March 2008.",
      "ja": "[RFC5214] Templin、F.、Gleeson、T。、およびD. Thaler、「Intra-Site Automatic Tunnel Addressing Protocol（ISATAP）」、RFC 5214、2008年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5220] Matsumoto, A., Fujisaki, T., Hiromi, R., and K. Kanayama, \"Problem Statement for Default Address Selection in Multi-Prefix Environments: Operational Issues of RFC 3484 Default Rules\", RFC 5220, July 2008.",
      "ja": "[RFC5220]マツモトA.、藤崎T.、ヒロミR.、およびカナヤマK.「マルチプレフィックス環境におけるデフォルトアドレス選択の問題ステートメント：RFC 3484デフォルトルールの運用上の問題」、RFC 5220、2008年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC5969] Townsley, W. and O. Troan, \"IPv6 Rapid Deployment on IPv4 Infrastructures (6rd) -- Protocol Specification\", RFC 5969, August 2010.",
      "ja": "[RFC5969] Townsley、W.およびO. Troan、「IPv4 Infrastructures on IPv4 Infrastructures（6rd）-Protocol Specification」、RFC 5969、2010年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC6275] Perkins, C., Johnson, D., and J. Arkko, \"Mobility Support in IPv6\", RFC 6275, July 2011.",
      "ja": "[RFC6275] Perkins、C.、Johnson、D。、およびJ. Arkko、「IPv6でのモビリティサポート」、RFC 6275、2011年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC6598] Weil, J., Kuarsingh, V., Donley, C., Liljenstolpe, C., and M. Azinger, \"IANA-Reserved IPv4 Prefix for Shared Address Space\", BCP 153, RFC 6598, April 2012.",
      "ja": "[RFC6598] Weil、J.、Kuarsingh、V.、Donley、C.、Liljenstolpe、C。、およびM. Azinger、「IANA-Reserved IPv4 Prefix for Shared Address Space」、BCP 153、RFC 6598、2012年4月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Acknowledgements",
      "section_title": true,
      "ja": "付録A謝辞"
    },
    {
      "indent": 3,
      "text": "RFC 3484 [RFC3484] acknowledged the contributions of the IPng Working Group, particularly Marc Blanchet, Brian Carpenter, Matt Crawford, Alain Durand, Steve Deering, Robert Elz, Jun-ichiro itojun Hagino, Tony Hain, M.T. Hollinger, JINMEI Tatuya, Thomas Narten, Erik Nordmark, Ken Powell, Markku Savela, Pekka Savola, Hesham Soliman, Dave Thaler, Mauro Tortonesi, Ole Troan, and Stig Venaas. In addition, the anonymous IESG reviewers had many great comments and suggestions for clarification.",
      "ja": "RFC 3484 [RFC3484]は、IPngワーキンググループ、特にマークブランシェット、ブライアンカーペンター、マットクロフォード、アランデュランド、スティーブディアリング、ロバートエルズ、イトジュンイトジュンハギノ、トニーハイン、M.T。 Hollinger、JINMEI Tatuya、Thomas Narten、Erik Nordmark、Ken Powell、Markku Savela、Pekka Savola、Hesham Soliman、Dave Thaler、Mauro Tortonesi、Ole Troan、Stig Venaas。さらに、匿名のIESGレビューアには、明確にするために多くのすばらしいコメントと提案がありました。"
    },
    {
      "indent": 3,
      "text": "This revision was heavily influenced by the work by Arifumi Matsumoto, Jun-ya Kato, and Tomohiro Fujisaki in a working document that made proposals for this revision to adopt, with input from Pekka Savola, Remi Denis-Courmont, Francois-Xavier Le Bail, and the 6man Working Group. Dmitry Anipko, Mark Andrews, Ray Hunter, and Wes George also provided valuable feedback on this revision.",
      "ja": "この改訂は、Pekka Savola、Remi Denis-Courmont、Francois-Xavier Le Bail、 6manワーキンググループ。 Dmitry Anipko、Mark Andrews、Ray Hunter、およびWes Georgeも、この改訂に関する貴重なフィードバックを提供しました。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Changes since RFC 3484",
      "section_title": true,
      "ja": "付録B. RFC 3484以降の変更"
    },
    {
      "indent": 3,
      "text": "Some changes were made to the default policy table that were deemed to be universally useful and cause no harm in every reasonable network environment. In doing so, care was taken to use the same preference and label values as in RFC 3484 whenever possible and for new rows to use label values less likely to collide with values that might already be in use in additional rows on some hosts. These changes are:",
      "ja": "デフォルトのポリシーテーブルにいくつかの変更が加えられましたが、それらは普遍的に有用であり、あらゆる合理的なネットワーク環境に害を及ぼすことはないと見なされていました。その際、可能な限りRFC 3484と同じ設定とラベル値を使用し、新しい行が一部のホストの追加行ですでに使用されている可能性のある値と衝突する可能性が低いラベル値を使用するように注意が払われました。これらの変更は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. Added the Teredo [RFC4380] prefix (2001::/32), with the preference and label values already widely used in popular implementations.",
      "ja": "1. Teredo [RFC4380]プレフィックス（2001 :: / 32）を追加しました。一般的な実装ですでに広く使用されている設定とラベルの値が含まれています。"
    },
    {
      "indent": 3,
      "text": "2. Added a row for ULAs (fc00::/7) below native IPv6 since they are not globally reachable, as discussed in Section 10.6.",
      "ja": "2. セクション10.6で説明されているように、グローバルに到達できないため、ネイティブIPv6の下にULA（fc00 :: / 7）の行を追加しました。"
    },
    {
      "indent": 3,
      "text": "3. Added a row for site-local addresses (fec0::/10) in order to depreference them, for consistency with the example in Section 10.3, since they are deprecated [RFC3879].",
      "ja": "3. サイトローカルアドレス（fec0 :: / 10）の行を追加しました。これらは非推奨であるため、セクション10.3の例との一貫性を保つために使用されていません[RFC3879]。"
    },
    {
      "indent": 3,
      "text": "4. Depreferenced 6to4 (2002::/32) below native IPv4 since 6to4 connectivity is less reliable today (and is expected to be phased out over time, rather than becoming more reliable). It remains above Teredo since 6to4 is more efficient in terms of connection establishment time, bandwidth, and server load.",
      "ja": "4. 現在、6to4接続は信頼性が低いため、ネイティブIPv4よりも優先度が低い6to4（2002 :: / 32）。 6to4の方が接続確立時間、帯域幅、サーバー負荷の点でより効率的であるため、Teredoを上回っています。"
    },
    {
      "indent": 3,
      "text": "5. Depreferenced IPv4-Compatible addresses (::/96) since they are now deprecated [RFC4291] and not in common use.",
      "ja": "5. IPv4互換アドレス（:: / 96）は非推奨。[RFC4291]は非推奨となり、一般的に使用されなくなりました。"
    },
    {
      "indent": 3,
      "text": "6. Added a row for 6bone testing addresses (3ffe::/16) in order to depreference them as they have also been phased out [RFC3701].",
      "ja": "6. 6boneテストアドレス（3ffe :: / 16）の行を追加しました。これらも廃止されたため、優先度を下げるためです[RFC3701]。"
    },
    {
      "indent": 3,
      "text": "7. Added optional ability for an implementation to add automatic rows to the table for site-specific ULA prefixes and site-specific native 6to4 prefixes.",
      "ja": "7. サイト固有のULAプレフィックスとサイト固有のネイティブ6to4プレフィックスのテーブルに自動行を追加する実装のオプション機能が追加されました。"
    },
    {
      "indent": 3,
      "text": "Similarly, some changes were made to the rules, as follows:",
      "ja": "同様に、次のようにルールにいくつかの変更が加えられました。"
    },
    {
      "indent": 3,
      "text": "1. Changed the definition of CommonPrefixLen() to only compare bits up to the source address's prefix length. The previous definition used the entire source address, rather than only its prefix. As a result, when a source and destination addresses had the same prefix, common bits in the interface ID would previously result in overriding DNS load balancing [RFC1794] by forcing the destination address with the most bits in common to be always chosen. The updated definition allows DNS load balancing to continue to be used as a tie breaker.",
      "ja": "1. CommonPrefixLen()の定義を変更して、送信元アドレスのプレフィックス長までのビットのみを比較するようにしました。前の定義では、プレフィックスだけではなく、送信元アドレス全体を使用していました。その結果、送信元アドレスと宛先アドレスが同じプレフィックスを持っている場合、インターフェースIDの共通ビットにより、以前はほとんどのビットが共通の宛先アドレスが常に選択されるように強制することで、DNSロードバランシング[RFC1794]が上書きされていました。更新された定義により、DNSロードバランシングをタイブレーカーとして引き続き使用できます。"
    },
    {
      "indent": 3,
      "text": "2. Added Rule 5.5 to allow choosing a source address from a prefix advertised by the chosen next-hop for a given destination. This allows better connectivity in the presence of BCP 38 [RFC2827] ingress filtering and egress filtering. Previously, RFC 3484 had issues with multiple egress networks reached via the same interface, as discussed in [RFC5220].",
      "ja": "2. ルール5.5が追加され、指定された宛先の選択されたネクストホップによってアドバタイズされたプレフィックスから送信元アドレスを選択できるようになりました。これにより、BCP 38 [RFC2827]の入力フィルタリングと出力フィルタリングが存在する場合の接続性が向上します。以前は、RFC 3484には、[RFC5220]で説明されているように、同じインターフェイスを介して到達する複数の出力ネットワークに関する問題がありました。"
    },
    {
      "indent": 3,
      "text": "3. Removed restriction against anycast addresses in the candidate set of source addresses, since the restriction against using IPv6 anycast addresses as source addresses was removed in Section 2.6 of RFC 4291 [RFC4291].",
      "ja": "3. RFC 4291 [RFC4291]のセクション2.6でIPv6エニーキャストアドレスをソースアドレスとして使用することに対する制限が削除されたため、ソースアドレスの候補セット内のエニーキャストアドレスに対する制限を削除しました。"
    },
    {
      "indent": 3,
      "text": "4. Changed mapping of RFC 1918 [RFC1918] addresses to global scope in Section 3.2. Previously, they were mapped to site-local scope. However, experience has resulted in current implementations already using global scope instead. When they were mapped to site-local, Destination Address Selection Rule 2 (Prefer matching scope) would cause IPv6 to be preferred in scenarios such as that described in Section 10.7. The change to global scope allows configurability via the prefix policy table.",
      "ja": "4. セクション3.2で、RFC 1918 [RFC1918]アドレスのマッピングをグローバルスコープに変更しました。以前は、サイトローカルスコープにマップされていました。ただし、経験上、現在の実装ではすでに代わりにグローバルスコープを使用しています。それらがサイトローカルにマップされた場合、宛先アドレス選択ルール2（一致スコープを優先）により、セクション10.7で説明されているようなシナリオでIPv6が優先されます。グローバルスコープへの変更により、プレフィックスポリシーテーブルを介した構成が可能になります。"
    },
    {
      "indent": 3,
      "text": "5. Changed the default recommendation for Source Address Selection Rule 7 to prefer temporary addresses rather than public addresses, while providing an administrative override (in addition to the application-specific override that was already specified). This change was made because of the increasing importance of privacy considerations, as well as the fact that widely deployed implementations have preferred temporary addresses for many years without major application issues.",
      "ja": "5. 送信元アドレス選択ルール7のデフォルトの推奨事項を変更し、（すでに指定されているアプリケーション固有のオーバーライドに加えて）管理オーバーライドを提供しながら、パブリックアドレスではなく一時アドレスを優先するようにしました。この変更は、プライバシーへの配慮の重要性が増していることに加えて、広く展開されている実装では、アプリケーションに大きな問題がなく、長年にわたって一時アドレスを優先していたためです。"
    },
    {
      "indent": 3,
      "text": "Finally, some editorial changes were made, including:",
      "ja": "最後に、以下を含むいくつかの編集上の変更が行われました。"
    },
    {
      "indent": 3,
      "text": "1. Changed global IP addresses in examples to use ranges reserved for documentation.",
      "ja": "1. ドキュメントで予約されている範囲を使用するように、例のグローバルIPアドレスを変更しました。"
    },
    {
      "indent": 3,
      "text": "2. Added additional examples in Sections 10.6 and 10.7.",
      "ja": "2. セクション10.6および10.7に追加の例を追加しました。"
    },
    {
      "indent": 3,
      "text": "3. Added Section 10.3.1 on \"broken\" IPv6.",
      "ja": "3. 「壊れた」IPv6に関するセクション10.3.1を追加。"
    },
    {
      "indent": 3,
      "text": "4. Updated references.",
      "ja": "4. 更新された参照。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Dave Thaler (editor) Microsoft One Microsoft Way Redmond, WA 98052 USA",
      "ja": "だゔぇ てゃぇｒ （えぢとｒ） みｃろそｆｔ おね みｃろそｆｔ わｙ れｄもんｄ、 わ ９８０５２ うさ"
    },
    {
      "indent": 3,
      "text": "Phone: +1 425 703 8835\nEMail: dthaler@microsoft.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Richard Draves Microsoft Research One Microsoft Way Redmond, WA 98052 USA",
      "ja": "Richard Dravesマイクロソフトリサーチワンマイクロソフトウェイレドモンド、ワシントン98052米国"
    },
    {
      "indent": 3,
      "text": "Phone: +1 425 706 2268\nEMail: richdr@microsoft.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Arifumi Matsumoto NTT SI Lab Midori-Cho 3-9-11 Musashino-shi, Tokyo 180-8585 Japan",
      "ja": "ありふみ まつもと んっｔ し ぁｂ みどりーちょ ３ー９ー１１ むさしのーし、 ときょ １８０ー８５８５ じゃぱん"
    },
    {
      "indent": 3,
      "text": "Phone: +81 422 59 3334\nEMail: arifumi@nttv6.net",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Tim Chown University of Southampt on Southampton, Hampshire SO17 1BJ United Kingdom",
      "ja": "Tim Chownサウサンプトン大学サウサンプトン、ハンプシャーSO17 1BJイギリス"
    },
    {
      "indent": 3,
      "text": "EMail: tjc@ecs.soton.ac.uk",
      "raw": true,
      "ja": ""
    }
  ]
}