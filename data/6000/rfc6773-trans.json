{
  "title": {
    "text": "RFC 6773 - DCCP-UDP: A Datagram Congestion Control Protocol UDP Encapsulation for NAT Traversal",
    "ja": "RFC 6773 - DCCP-UDP：NATトラバーサル用のデータグラム輻輳制御プロトコルUDPカプセル化"
  },
  "number": 6773,
  "created_at": "2020-09-06 11:09:09.547254+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         T. Phelan\nRequest for Comments: 6773                                         Sonus\nUpdates: 4340, 5762                                         G. Fairhurst\nCategory: Standards Track                         University of Aberdeen\nISSN: 2070-1721                                               C. Perkins\n                                                   University of Glasgow\n                                                           November 2012",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "DCCP-UDP: A Datagram Congestion Control Protocol UDP Encapsulation for NAT Traversal",
      "ja": "DCCP-UDP：NATトラバーサル用のデータグラム輻輳制御プロトコルUDPカプセル化"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document specifies an alternative encapsulation of the Datagram Congestion Control Protocol (DCCP), referred to as DCCP-UDP. This encapsulation allows DCCP to be carried through the current generation of Network Address Translation (NAT) middleboxes without modification of those middleboxes. This document also updates the Session Description Protocol (SDP) information for DCCP defined in RFC 5762.",
      "ja": "このドキュメントでは、DCCP-UDPと呼ばれる、データグラム輻輳制御プロトコル（DCCP）の代替カプセル化について説明します。このカプセル化により、DCCPは、ミドルボックスを変更せずに、現世代のネットワークアドレス変換（NAT）ミドルボックスを介して実行できます。このドキュメントは、RFC 5762で定義されているDCCPのセッション記述プロトコル（SDP）情報も更新します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 5741のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6773.",
      "ja": "このドキュメントの現在のステータス、エラッタ、およびフィードバックの提供方法に関する情報は、http：//www.rfc-editor.org/info/rfc6773で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2012 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2012 IETF Trustおよびドキュメントの作成者として特定された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびこの文書の発行日に有効なIETF文書に関するIETFトラストの法的規定（http://trustee.ietf.org/license-info）の対象となります。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n2.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  4\n3.  DCCP-UDP . . . . . . . . . . . . . . . . . . . . . . . . . . .  4\n  3.1.  The UDP Header . . . . . . . . . . . . . . . . . . . . . .  5\n  3.2.  The DCCP Generic Header  . . . . . . . . . . . . . . . . .  5\n  3.3.  DCCP-UDP Checksum Procedures . . . . . . . . . . . . . . .  6\n    3.3.1.  Partial Checksums and the Minimum Checksum\n            Coverage Feature . . . . . . . . . . . . . . . . . . .  7\n  3.4.  Network-Layer Options  . . . . . . . . . . . . . . . . . .  8\n  3.5.  Explicit Congestion Notification . . . . . . . . . . . . .  8\n  3.6.  ICMP Handling for Messages Relating to DCCP-UDP  . . . . .  8\n  3.7.  Path Maximum Transmission Unit Discovery . . . . . . . . .  9\n  3.8.  Usage of the UDP Port by DCCP-UDP  . . . . . . . . . . . .  9\n  3.9.  Service Codes and the DCCP Port Registry . . . . . . . . . 11\n4.  DCCP-UDP and Higher-Layer Protocols  . . . . . . . . . . . . . 11\n  5.1.  Protocol Identification  . . . . . . . . . . . . . . . . . 12\n  5.2.  Signalling Encapsulated DCCP Ports . . . . . . . . . . . . 13\n  5.3.  Connection Management  . . . . . . . . . . . . . . . . . . 14\n  5.4.  Negotiating the DCCP-UDP Encapsulation versus Native\n        DCCP . . . . . . . . . . . . . . . . . . . . . . . . . . . 14\n  5.5.  Example of SDP Use . . . . . . . . . . . . . . . . . . . . 15\n6.  Security Considerations  . . . . . . . . . . . . . . . . . . . 16\n7.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 17\n  7.1.  UDP Port Allocation  . . . . . . . . . . . . . . . . . . . 17\n  7.2.  DCCP Reset . . . . . . . . . . . . . . . . . . . . . . . . 17\n  7.3.  SDP Attribute Allocation . . . . . . . . . . . . . . . . . 17\n8.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 18\n9.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 18\n  9.1.  Normative References . . . . . . . . . . . . . . . . . . . 18\n  9.2.  Informative References . . . . . . . . . . . . . . . . . . 18",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The Datagram Congestion Control Protocol (DCCP) [RFC4340] is a transport-layer protocol that provides upper layers with the ability to use non-reliable congestion-controlled flows. The current specification for DCCP [RFC4340] specifies a direct native encapsulation in IPv4 or IPv6 packets.",
      "ja": "データグラム輻輳制御プロトコル（DCCP）[RFC4340]は、信頼性のない輻輳制御フローを使用する機能を上位層に提供するトランスポート層プロトコルです。 DCCP [RFC4340]の現在の仕様では、IPv4またはIPv6パケットでの直接ネイティブカプセル化が指定されています。"
    },
    {
      "indent": 3,
      "text": "DCCP support has been specified for devices that use Network Address Translation (NAT) or Network Address and Port Translation (NAPT) [RFC5597]. However, there is a significant installed base of NAT/ NAPT devices that do not support [RFC5597]. It is therefore useful to have an encapsulation for DCCP that is compatible with this installed base of NAT/NAPT devices that support [RFC4787] but do not support [RFC5597]. This document specifies that encapsulation, which is referred to as DCCP-UDP. For convenience, the standard encapsulation for DCCP [RFC4340] (including [RFC5596] as required) is referred to as DCCP-STD.",
      "ja": "DCCPサポートは、ネットワークアドレス変換（NAT）またはネットワークアドレスとポート変換（NAPT）[RFC5597]を使用するデバイスに対して指定されています。ただし、[RFC5597]をサポートしないNAT / NAPTデバイスの重要なインストールベースがあります。したがって、[RFC4787]をサポートするが[RFC5597]をサポートしない、NAT / NAPTデバイスのこのインストール済みベースと互換性のあるDCCPのカプセル化があると便利です。このドキュメントでは、DCCP-UDPと呼ばれるカプセル化を指定しています。便宜上、DCCPの標準カプセル化[RFC4340]（必要に応じて[RFC5596]を含む）は、DCCP-STDと呼ばれます。"
    },
    {
      "indent": 3,
      "text": "The encapsulation described in this document may also be used as a transition mechanism to enable support for DCCP in devices that support UDP but do not yet natively support DCCP. This also allows the DCCP transport to be implemented within an application using DCCP-UDP.",
      "ja": "このドキュメントで説明されているカプセル化は、UDPをサポートしているが、まだDCCPをネイティブでサポートしていないデバイスでDCCPのサポートを有効にする移行メカニズムとしても使用できます。これにより、DCCP-UDPを使用するアプリケーション内にDCCPトランスポートを実装することもできます。"
    },
    {
      "indent": 3,
      "text": "This document also updates the SDP specification for DCCP [RFC5762] to convey the encapsulation type. In this respect only, it updates the method in [RFC5762].",
      "ja": "このドキュメントは、カプセル化タイプを伝えるために、DCCP [RFC5762]のSDP仕様も更新します。この点でのみ、[RFC5762]のメソッドを更新します。"
    },
    {
      "indent": 3,
      "text": "The DCCP-UDP encapsulation specified in this document supports all of the features contained in DCCP-STD, but with limited functionality for partial checksums.",
      "ja": "このドキュメントで指定されているDCCP-UDPカプセル化は、DCCP-STDに含まれるすべての機能をサポートしていますが、部分的なチェックサムの機能は制限されています。"
    },
    {
      "indent": 3,
      "text": "Network optimisations for DCCP-STP and UDP may need to be updated to allow these optimisations to take advantage of DCCP-UDP. Encapsulation with an additional UDP protocol header can complicate or prevent inspection of DCCP header fields by equipment along the network path in the case where multiple DCCP connections share the same UDP 4-tuple, for example, routers that wish to identify DCCP ports to perform Equal-Cost Multi-Path (ECMP) routing, network devices that wish to inspect DCCP ports to inform algorithms for sharing the network load across multiple links, firewalls that wish to inspect DCCP ports and service codes to inform algorithms that implement access rules, media gateways that inspect SDP information to derive characteristics of the transport and session, etc.",
      "ja": "DCCP-STPおよびUDPのネットワーク最適化は、これらの最適化がDCCP-UDPを利用できるように更新する必要がある場合があります。追加のUDPプロトコルヘッダーを使用したカプセル化により、複数のDCCP接続が同じUDP 4タプルを共有している場合（たとえば、DCCPポートを識別して同等を実行するルーター）、ネットワークパスに沿った機器によるDCCPヘッダーフィールドの検査が複雑または防止される可能性があります-コストマルチパス（ECMP）ルーティング、DCCPポートを検査して複数のリンク間でネットワーク負荷を共有するアルゴリズムを通知するネットワークデバイス、DCCPポートを検査するファイアウォール、およびアクセスルールを実装するアルゴリズムを通知するサービスコード、メディアゲートウェイSDP情報を検査して、トランスポートやセッションなどの特性を導き出します。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2. 用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は、 [RFC2119]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. DCCP-UDP",
      "section_title": true,
      "ja": "3. DCCP-UDP"
    },
    {
      "indent": 3,
      "text": "The basic approach is to insert a UDP [RFC0768] header between the IP header and the DCCP packet. Note that this is not a tunneling approach. The IP addresses of the communicating end systems are carried in the IP header. The method does not embed additional IP addresses.",
      "ja": "基本的なアプローチは、IPヘッダーとDCCPパケットの間にUDP [RFC0768]ヘッダーを挿入することです。これはトンネリングアプローチではないことに注意してください。通信するエンドシステムのIPアドレスは、IPヘッダーで伝達されます。この方法では、追加のIPアドレスは埋め込まれません。"
    },
    {
      "indent": 3,
      "text": "The method is designed to support use when these addresses are modified by a device that implements NAT/NAPT. A NAT translates the IP addresses, which impacts the transport-layer checksum. A NAPT device may also translate the port values (usually the source port). In both cases, the outer transport header that includes these values would need to be updated by the NAT/NAPT.",
      "ja": "この方法は、NAT / NAPTを実装するデバイスによってこれらのアドレスが変更された場合の使用をサポートするように設計されています。 NATはIPアドレスを変換し、トランスポート層のチェックサムに影響を与えます。 NAPTデバイスは、ポート値（通常は送信元ポート）も変換します。どちらの場合も、これらの値を含む外部トランスポートヘッダーは、NAT / NAPTによって更新される必要があります。"
    },
    {
      "indent": 3,
      "text": "A device offering or using DCCP services via DCCP-UDP encapsulation listens on a UDP port (default port, 6511) or may bind to a specified port utilising out-of-band signalling, such as the Session Description Protocol (SDP). The DCCP-UDP server accepts incoming packets over the UDP transport and passes the received packets to the DCCP protocol module, after removing the UDP encapsulation.",
      "ja": "DCCP-UDPカプセル化を介してDCCPサービスを提供または使用しているデバイスは、UDPポート（デフォルトポート、6511）でリッスンするか、セッション記述プロトコル（SDP）などの帯域外シグナリングを利用して指定されたポートにバインドします。 DCCP-UDPサーバーは、UDPトランスポートを介して着信パケットを受け入れ、UDPカプセル化を削除した後、受信したパケットをDCCPプロトコルモジュールに渡します。"
    },
    {
      "indent": 3,
      "text": "A DCCP implementation endpoint may simultaneously provide services over any or all combinations of DCCP-STD and/or DCCP-UDP encapsulations with IPv4 and/or IPv6.",
      "ja": "DCCP実装エンドポイントは、DCCP-STDおよび/またはDCCP-UDPカプセル化とIPv4および/またはIPv6のいずれかまたはすべての組み合わせで同時にサービスを提供できます。"
    },
    {
      "indent": 3,
      "text": "The basic format of a DCCP-UDP packet is:",
      "ja": "DCCP-UDPパケットの基本的な形式は次のとおりです。"
    },
    {
      "indent": 4,
      "text": "+-----------------------------------+\n|     IP Header (IPv4 or IPv6)      |  Variable length\n+-----------------------------------+\n|            UDP Header             |  8 bytes\n+-----------------------------------+\n|       DCCP Generic Header         |  12 or 16 bytes\n+-----------------------------------+\n| Additional (type-specific) Fields |  Variable length (could be 0)\n+-----------------------------------+\n|           DCCP Options            |  Variable length (could be 0)\n+-----------------------------------+\n|      Application Data Area        |  Variable length (could be 0)\n+-----------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Section 3.8 describes usage of UDP ports. This includes implementation of a DCCP-UDP encapsulation service as a daemon that listens on a well-known port, allowing multiplexing of different DCCP applications over the same port.",
      "ja": "セクション3.8では、UDPポートの使用法について説明します。これには、既知のポートでリッスンするデーモンとしてのDCCP-UDPカプセル化サービスの実装が含まれ、同じポートを介した異なるDCCPアプリケーションの多重化が可能になります。"
    },
    {
      "indent": 0,
      "text": "3.1. The UDP Header",
      "section_title": true,
      "ja": "3.1. UDPヘッダー"
    },
    {
      "indent": 3,
      "text": "The format of the UDP header is specified in [RFC0768]:",
      "ja": "UDPヘッダーのフォーマットは[RFC0768]で指定されています："
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          Source Port          |           Dest Port           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             Length            |           Checksum            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "For DCCP-UDP, the fields are interpreted as follows:",
      "ja": "DCCP-UDPの場合、フィールドは次のように解釈されます。"
    },
    {
      "indent": 3,
      "text": "Source and Dest(ination) Ports: 16 bits each",
      "ja": "送信元と宛先）ポート：各16ビット"
    },
    {
      "indent": 6,
      "text": "These fields identify the UDP ports on which the source and destination (respectively) of the packet are listening for incoming DCCP-UDP packets. The UDP port values do not identify the DCCP source and destination ports.",
      "ja": "これらのフィールドは、パケットの送信元と宛先（それぞれ）が着信DCCP-UDPパケットをリッスンしているUDPポートを識別します。 UDPポートの値は、DCCPの送信元ポートと宛先ポートを識別しません。"
    },
    {
      "indent": 3,
      "text": "Length: 16 bits",
      "ja": "長さ：16ビット"
    },
    {
      "indent": 6,
      "text": "This field is the length of the UDP datagram, including the UDP header and the payload (for DCCP-UDP, the payload is a DCCP-UDP datagram).",
      "ja": "このフィールドは、UDPヘッダーとペイロードを含むUDPデータグラムの長さです（DCCP-UDPの場合、ペイロードはDCCP-UDPデータグラムです）。"
    },
    {
      "indent": 3,
      "text": "Checksum: 16 bits",
      "ja": "チェックサム：16ビット"
    },
    {
      "indent": 6,
      "text": "This field is the Internet checksum of a network-layer pseudoheader and Length bytes of the UDP packet [RFC0768]. The UDP checksum MUST NOT be zero for a UDP packet that carries DCCP-UDP.",
      "ja": "このフィールドは、ネットワーク層の疑似ヘッダーのインターネットチェックサムとUDPパケットの長さバイトです[RFC0768]。 UDPチェックサムは、DCCP-UDPを伝送するUDPパケットに対してゼロであってはなりません。"
    },
    {
      "indent": 0,
      "text": "3.2. The DCCP Generic Header",
      "section_title": true,
      "ja": "3.2. DCCP汎用ヘッダー"
    },
    {
      "indent": 3,
      "text": "The DCCP Generic Header [RFC4340] takes two forms, one with long sequence numbers (48 bits) and the other with short sequence numbers (24 bits).",
      "ja": "DCCPジェネリックヘッダー[RFC4340]には、長いシーケンス番号（48ビット）と短いシーケンス番号（24ビット）の2つの形式があります。"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          Source Port          |           Dest Port           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Data Offset  | CCVal | CsCov |           Checksum            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     |       |X|               |                               .\n| Res | Type  |=|   Reserved    |  Sequence Number (high bits)  .\n|     |       |1|               |                               .\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                  Sequence Number (low bits)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "The Generic DCCP Header with Long Sequence Numbers [RFC4340]",
      "ja": "長いシーケンス番号を持つ汎用DCCPヘッダー[RFC4340]"
    },
    {
      "indent": 6,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          Source Port          |           Dest Port           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Data Offset  | CCVal | CsCov |           Checksum            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     |       |X|                                               |\n| Res | Type  |=|   Sequence Number (low bits)                  |\n|     |       |0|                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "The Generic DCCP Header with Short Sequence Numbers [RFC4340]",
      "ja": "短いシーケンス番号を持つ汎用DCCPヘッダー[RFC4340]"
    },
    {
      "indent": 3,
      "text": "All generic header fields, except for the Checksum field, have the meaning specified in [RFC4340], updated by [RFC5596].",
      "ja": "チェックサムフィールドを除くすべての汎用ヘッダーフィールドの意味は、[RFC4340]で指定されており、[RFC5596]によって更新されています。"
    },
    {
      "indent": 3,
      "text": "Section 3.8 describes how a DCCP-UDP implementation treats UDP and DCCP ports.",
      "ja": "セクション3.8では、DCCP-UDP実装がUDPおよびDCCPポートを処理する方法について説明します。"
    },
    {
      "indent": 0,
      "text": "3.3. DCCP-UDP Checksum Procedures",
      "section_title": true,
      "ja": "3.3. DCCP-UDPチェックサム手順"
    },
    {
      "indent": 3,
      "text": "DCCP-UDP employs a checksum at the UDP level and eliminates the use of the DCCP checksum. This approach was chosen to enable use of current NAT/NATP traversal methods developed for UDP. Such methods will generally be unaware whether DCCP is being encapsulated and hence do not update the inner checksum in the DCCP header. Standard DCCP requires protection of the DCCP header fields; this justifies any processing overhead incurred from calculating the UDP checksum.",
      "ja": "DCCP-UDPは、UDPレベルでチェックサムを採用し、DCCPチェックサムの使用を排除します。このアプローチは、UDP用に開発された現在のNAT / NATPトラバーサル方式の使用を可能にするために選択されました。このような方法は、一般に、DCCPがカプセル化されているかどうかを認識しないため、DCCPヘッダーの内部チェックサムを更新しません。標準のDCCPでは、DCCPヘッダーフィールドの保護が必要です。これにより、UDPチェックサムの計算によって発生する処理オーバーヘッドが正当化されます。"
    },
    {
      "indent": 3,
      "text": "In addition, UDP NAT traversal does not support partial checksums. Although this is still permitted end-to-end in the encapsulated DCCP datagram, links along the path will treat these as UDP packets and can not enable special partial checksum processing.",
      "ja": "さらに、UDP NATトラバーサルは部分的なチェックサムをサポートしていません。これはカプセル化されたDCCPデータグラムでエンドツーエンドで許可されていますが、パスに沿ったリンクはこれらをUDPパケットとして扱い、特別な部分チェックサム処理を有効にすることはできません。"
    },
    {
      "indent": 3,
      "text": "DCCP-UDP does not update or modify the operation of UDP. The UDP transport protocol is used in the following way:",
      "ja": "DCCP-UDPは、UDPの動作を更新または変更しません。 UDPトランスポートプロトコルは次のように使用されます。"
    },
    {
      "indent": 3,
      "text": "For DCCP-UDP, the function of the DCCP Checksum field is performed by the UDP Checksum field. On transmission, the DCCP Checksum field SHOULD be set to zero. On receipt, the DCCP Checksum field MUST be ignored.",
      "ja": "DCCP-UDPの場合、DCCPチェックサムフィールドの機能は、UDPチェックサムフィールドによって実行されます。送信時に、DCCPチェックサムフィールドはゼロに設定する必要があります。受け取ったら、DCCPチェックサムフィールドを無視する必要があります。"
    },
    {
      "indent": 3,
      "text": "The UDP checksum MUST NOT be zero for a UDP packet that is sent using DCCP-UDP. If the received UDP Checksum field is zero, the packet MUST be dropped.",
      "ja": "UDPチェックサムは、DCCP-UDPを使用して送信されるUDPパケットに対してゼロであってはなりません。受信したUDPチェックサムフィールドがゼロの場合、パケットをドロップする必要があります。"
    },
    {
      "indent": 3,
      "text": "If the UDP Length field of a received packet is less than 20 (the UDP header length and minimum DCCP-UDP header length), the packet MUST be dropped.",
      "ja": "受信したパケットのUDP長さフィールドが20（UDPヘッダー長と最小のDCCP-UDPヘッダー長）未満の場合、パケットをドロップする必要があります。"
    },
    {
      "indent": 3,
      "text": "If the UDP Checksum field, computed using standard UDP methods, is invalid, the received packet MUST be dropped.",
      "ja": "標準のUDPメソッドを使用して計算されたUDPチェックサムフィールドが無効な場合、受信したパケットをドロップする必要があります。"
    },
    {
      "indent": 3,
      "text": "If the UDP Length field in a received packet is less than the length of the UDP header plus the entire DCCP-UDP header (including the generic header and type-specific fields and options, if present) or if the UDP Length field is greater than the length of the packet from the beginning of the UDP header to the end of the packet, the packet MUST be dropped.",
      "ja": "受信したパケットのUDP長さフィールドが、UDPヘッダーの長さとDCCP-UDPヘッダー全体（存在する場合は、一般的なヘッダーとタイプ固有のフィールドとオプションを含む）を下回る場合、またはUDP長さフィールドがより大きい場合UDPヘッダーの先頭からパケットの末尾までのパケットの長さ。パケットはドロップする必要があります。"
    },
    {
      "indent": 0,
      "text": "3.3.1. Partial Checksums and the Minimum Checksum Coverage Feature",
      "section_title": true,
      "ja": "3.3.1. 部分的なチェックサムと最小チェックサムカバレッジ機能"
    },
    {
      "indent": 3,
      "text": "This document requires the UDP checksum to be enabled when using DCCP-UDP. This checksum provides coverage of the entire encapsulated DCCP datagram.",
      "ja": "このドキュメントでは、DCCP-UDPを使用するときにUDPチェックサムを有効にする必要があります。このチェックサムは、カプセル化されたDCCPデータグラム全体をカバーします。"
    },
    {
      "indent": 3,
      "text": "DCCP-UDP supports the syntax of partial checksums. It also supports negotiation of the Minimum Checksum Coverage feature and settings of the CsCov field. However, the UDP Checksum field in DCCP-UDP always covers the entire DCCP datagram, and the DCCP checksum is ignored on receipt. An application that enables the partial checksums feature in the DCCP module will therefore experience a service that is functionally identical to using full DCCP checksum coverage. This is also the service that the application would have received if it had used a network path that did not provide optimised processing for DCCP partial checksums.",
      "ja": "DCCP-UDPは、部分的なチェックサムの構文をサポートしています。また、最小チェックサムカバレッジ機能のネゴシエーションとCsCovフィールドの設定もサポートします。ただし、DCCP-UDPのUDPチェックサムフィールドは常にDCCPデータグラム全体をカバーし、DCCPチェックサムは受信時に無視されます。したがって、DCCPモジュールの部分的なチェックサム機能を有効にするアプリケーションは、DCCPチェックサムカバレッジ全体を使用することと機能的に同じサービスを体験します。これは、DCCP部分チェックサムの最適化された処理を提供しないネットワークパスを使用した場合にアプリケーションが受け取るサービスでもあります。"
    },
    {
      "indent": 0,
      "text": "3.4. Network-Layer Options",
      "section_title": true,
      "ja": "3.4. ネットワーク層オプション"
    },
    {
      "indent": 3,
      "text": "A DCCP-UDP implementation MAY transfer network-layer options intended for DCCP to the network-layer header of the encapsulating UDP packet.",
      "ja": "DCCP-UDP実装は、DCCP向けのネットワーク層オプションを、カプセル化するUDPパケットのネットワーク層ヘッダーに転送してもよい（MAY）。"
    },
    {
      "indent": 3,
      "text": "A DCCP-UDP endpoint that receives IP-options for the encapsulating UDP packet MAY forward these to the DCCP protocol module. If the endpoint forwards a specific network-layer option to the DCCP module, it MUST also forward all subsequent packets with this option. Consistent forwarding is essential for correct operation of many end-to-end options.",
      "ja": "カプセル化するUDPパケットのIPオプションを受信するDCCP-UDPエンドポイントは、これらをDCCPプロトコルモジュールに転送できます（MAY）。エンドポイントが特定のネットワーク層オプションをDCCPモジュールに転送する場合は、このオプションを使用して後続のすべてのパケットも転送する必要があります。多くのエンドツーエンドオプションを正しく動作させるには、一貫した転送が不可欠です。"
    },
    {
      "indent": 0,
      "text": "3.5. Explicit Congestion Notification",
      "section_title": true,
      "ja": "3.5. 明示的な輻輳通知"
    },
    {
      "indent": 3,
      "text": "A DCCP-UDP endpoint SHOULD follow the procedures of DCCP-STD in [RFC4340], Section 12 by setting the Explicit Congestion Notification (ECN) in the IP headers of outgoing packets and examining the values received in the ECN fields of incoming IP packets, relaying any packet markings to the DCCP module.",
      "ja": "DCCP-UDPエンドポイントは、[RFC4340]のセクション12のDCCP-STDの手順に従う必要があります（SHOULD）。送信パケットのIPヘッダーに明示的輻輳通知（ECN）を設定し、受信IPパケットのECNフィールドで受信した値を調べます。パケットマーキングをDCCPモジュールに中継します。"
    },
    {
      "indent": 3,
      "text": "Implementations that do not support ECN MUST follow the procedures of DCCP-STD in [RFC4340], Section 12.1 with regard to implementations that are not ECN capable.",
      "ja": "ECNをサポートしない実装は、ECNに対応していない実装に関して、[RFC4340]、セクション12.1のDCCP-STDの手順に従う必要があります。"
    },
    {
      "indent": 0,
      "text": "3.6. ICMP Handling for Messages Relating to DCCP-UDP",
      "section_title": true,
      "ja": "3.6. DCCP-UDPに関連するメッセージのICMP処理"
    },
    {
      "indent": 3,
      "text": "To allow ICMP messages to be demultiplexed by the receiving endpoint, part of the original packet that resulted in the message is included in the payload of the ICMP error message. The receiving endpoint can therefore use this information to associate the ICMP error with the transport protocol instance that resulted in the ICMP message. When DCCP-UDP is used, the error message and the payload of the ICMP error message relate to the UDP transport.",
      "ja": "ICMPメッセージを受信エンドポイントで逆多重化できるようにするために、メッセージを生成した元のパケットの一部がICMPエラーメッセージのペイロードに含まれています。したがって、受信エンドポイントは、この情報を使用して、ICMPエラーを、ICMPメッセージの原因となったトランスポートプロトコルインスタンスに関連付けることができます。 DCCP-UDPを使用する場合、エラーメッセージとICMPエラーメッセージのペイロードは、UDPトランスポートに関連しています。"
    },
    {
      "indent": 3,
      "text": "DCCP-UDP endpoints SHOULD forward ICMP messages relating to a UDP packet that carries a DCCP-UDP to the DCCP module. This may imply translation of the payload of the ICMP message into a form that is recognised by the DCCP stack. [RFC5927] describes precautions that are desirable before TCP acts on the receipt of an ICMP message. Similar precautions are desirable prior to forwarding by DCCP-UDP to the DCCP module.",
      "ja": "DCCP-UDPエンドポイントは、DCCP-UDPを運ぶUDPパケットに関連するICMPメッセージをDCCPモジュールに転送する必要があります（SHOULD）。これは、ICMPメッセージのペイロードを、DCCPスタックによって認識される形式に変換することを意味する場合があります。 [RFC5927]は、TCPがICMPメッセージの受信を処理する前に望ましい予防策について説明しています。 DCCP-UDPからDCCPモジュールに転送する前に、同様の予防策が必要です。"
    },
    {
      "indent": 0,
      "text": " The minimal length ICMP error message generated in response to processing a UDP datagram only identifies the UDP source port and UDP destination port. This ICMP message does not carry sufficient information to discover the encapsulated DCCP Port values. A DCCP- UDP endpoint that supports multiple DCCP connections over the same pair of UDP ports (see Section 3.8) may not therefore be able to associate an ICMP message with a unique DCCP-UDP connection.",
      "ja": "UDPデータグラムの処理に応答して生成される最小長のICMPエラーメッセージは、UDP送信元ポートとUDP宛先ポートのみを識別します。このICMPメッセージは、カプセル化されたDCCPポート値を検出するのに十分な情報を含んでいません。したがって、UDPポートの同じペア（セクション3.8を参照）を介した複数のDCCP接続をサポートするDCCP- UDPエンドポイントは、ICMPメッセージを一意のDCCP-UDP接続に関連付けることができない場合があります。"
    },
    {
      "indent": 0,
      "text": "3.7. Path Maximum Transmission Unit Discovery",
      "section_title": true,
      "ja": "3.7. パス最大転送ユニットの検出"
    },
    {
      "indent": 3,
      "text": "DCCP-UDP implementations MUST follow DCCP-STD [RFC4340], Section 14 with regard to determining the maximum packet size and the use of Path Maximum Transmission Unit Discovery (PMTUD). This requires the processing of ICMP Destination Unreachable messages with a code that indicates that an unfragmentable packet was too large to be forwarded (a \"Datagram Too Big\" message), as defined in RFC 4340.",
      "ja": "DCCP-UDP実装は、最大パケットサイズの決定とパス最大伝送ユニット検出（PMTUD）の使用に関して、DCCP-STD [RFC4340]、セクション14に従う必要があります。これには、RFC 4340で定義されているように、フラグメント化できないパケットが大きすぎて転送できないことを示すコード（「データグラムが大きすぎます」メッセージ）を含むICMP宛先到達不能メッセージの処理が必要です。"
    },
    {
      "indent": 3,
      "text": "An effect of encapsulation is to incur additional datagram overhead. This will reduce the Maximum Packet Size (MPS) at the DCCP level.",
      "ja": "カプセル化の効果は、追加のデータグラムオーバーヘッドを招くことです。これにより、DCCPレベルでの最大パケットサイズ（MPS）が削減されます。"
    },
    {
      "indent": 0,
      "text": "3.8. Usage of the UDP Port by DCCP-UDP",
      "section_title": true,
      "ja": "3.8. DCCP-UDPによるUDPポートの使用"
    },
    {
      "indent": 3,
      "text": "A DCCP-UDP server (that is, an initially passive endpoint that wishes to receive DCCP-Request packets [RFC4340] over DCCP-UDP) listens for connections on one or more UDP ports. UDP port number 6511 has been allocated as the default listening UDP port for a DCCP-UDP server. Some NAT/NAPT topologies may require using a non-default listening port.",
      "ja": "DCCP-UDPサーバー（つまり、DCCP-UDPを介してDCCP-Requestパケット[RFC4340]を受信したい最初のパッシブエンドポイント）は、1つ以上のUDPポートで接続をリッスンします。 UDPポート番号6511は、DCCP-UDPサーバーのデフォルトの待機UDPポートとして割り当てられています。一部のNAT / NAPTトポロジでは、デフォルト以外のリスニングポートを使用する必要がある場合があります。"
    },
    {
      "indent": 3,
      "text": "The purpose of this IANA-assigned port is for the operating system or a framework to receive and process DCCP-UDP datagrams for delivery to the DCCP module (e.g., to support a system-wide DCCP-UDP daemon serving multiple DCCP applications or a DCCP-UDP server placed behind a firewall).",
      "ja": "このIANA割り当てポートの目的は、オペレーティングシステムまたはフレームワークがDCCP-UDPデータグラムを受信して​​処理し、DCCPモジュールに配信することです（たとえば、複数のDCCPアプリケーションまたはDCCPを提供するシステム全体のDCCP-UDPデーモンをサポートするため）。 -UDPサーバーがファイアウォールの背後に配置されている）。"
    },
    {
      "indent": 3,
      "text": "An application-specific implementation SHOULD use an ephemeral port and advertise this port using outside means, e.g., SDP. This method of implementation SHOULD NOT use the IANA-assigned port to listen for incoming DCCP-UDP packets.",
      "ja": "アプリケーション固有の実装は、エフェメラルポートを使用して、SDPなどの外部手段を使用してこのポートをアドバタイズする必要があります（SHOULD）。この実装方法では、IANAが割り当てたポートを使用して着信DCCP-UDPパケットをリッスンしないでください（SHOULD NOT）。"
    },
    {
      "indent": 3,
      "text": "A DCCP-UDP client provides UDP source and destination ports as well as DCCP source and destination ports at connection initiation time. A client SHOULD ensure that each DCCP connection maps to a single DCCP-UDP connection by setting the UDP source port. Choosing a distinct UDP source port for each distinct DCCP connection ensures that UDP-based flow identifiers differ whenever DCCP-based flow identifiers differ. Specifically, two connections with different <source IP address, source DCCP port, destination IP address, destination DCCP port> DCCP 4-tuples will have different <source IP address, source UDP port, destination IP address, destination UDP port> UDP 4-tuples.",
      "ja": "DCCP-UDPクライアントは、UDP送信元ポートと宛先ポート、および接続開始時にDCCP送信元ポートと宛先ポートを提供します。クライアントは、UDP送信元ポートを設定することにより、各DCCP接続が単一のDCCP-UDP接続に確実にマップされるようにする必要があります（SHOULD）。個別のDCCP接続ごとに個別のUDP送信元ポートを選択すると、DCCPベースのフロー識別子が異なる場合は常に、UDPベースのフロー識別子も異なるようになります。具体的には、<送信元IPアドレス、送信元DCCPポート、宛先IPアドレス、宛先DCCPポート>の異なる2つの接続のDCCP 4タプルには、異なる<送信元IPアドレス、送信元UDPポート、宛先IPアドレス、宛先UDPポート> UDP 4があります。タプル。"
    },
    {
      "indent": 3,
      "text": "A DCCP-UDP server SHOULD accept datagrams from any UDP source port. There is a risk that the same DCCP source port number could be used by two endpoints, each behind a NAPT. A DCCP-UDP server MUST therefore demultiplex a DCCP-UDP flow using both the UDP source and destination port numbers and the encapsulated DCCP ports. This ensures than an active DCCP connection is uniquely identified by the 6-tuple <source IP address, source UDP port, source DCCP port, destination IP address, destination UDP port, destination DCCP port>. (The active state of a DCCP connection is defined in Section 3.8: a DCCP connection becomes active following transmission of a DCCP-Request and becomes inactive after sending a DCCP-Close.)",
      "ja": "DCCP-UDPサーバーは、任意のUDP送信元ポートからのデータグラムを受け入れる必要があります（SHOULD）。 NAPTの背後にある2つのエンドポイントが同じDCCP送信元ポート番号を使用するリスクがあります。したがって、DCCP-UDPサーバーは、UDP送信元および宛先ポート番号とカプセル化されたDCCPポートの両方を使用して、DCCP-UDPフローを逆多重化する必要があります。これにより、アクティブなDCCP接続が6タプル<送信元IPアドレス、送信元UDPポート、送信元DCCPポート、宛先IPアドレス、宛先UDPポート、宛先DCCPポート>によって一意に識別されることが保証されます。 （DCCP接続のアクティブ状態はセクション3.8で定義されています。DCCP接続は、DCCP-Requestの送信後にアクティブになり、DCCP-Closeの送信後に非アクティブになります。）"
    },
    {
      "indent": 3,
      "text": "This demultiplexing at a DCCP-UDP endpoint occurs in two stages:",
      "ja": "DCCP-UDPエンドポイントでのこの逆多重化は、2つの段階で発生します。"
    },
    {
      "indent": 3,
      "text": "1. In the first stage, DCCP-UDP packets are demultiplexed using the UDP 4-tuple: <source IP address, source UDP port, destination IP address, destination UDP port>.",
      "ja": "1. 最初の段階では、DCCP-UDPパケットは、UDP 4タプル（<送信元IPアドレス、送信元UDPポート、宛先IPアドレス、宛先UDPポート>）を使用して逆多重化されます。"
    },
    {
      "indent": 3,
      "text": "2. In the second stage, a receiving endpoint MUST ensure that two independent DCCP connections that were multiplexed to the same UDP 4-tuple are not associated with the same connection in the DCCP module. The endpoint therefore needs to keep state for the set of active DCCP-UDP endpoints using each combination of a UDP 4-tuple: <source IP address, source UDP port, destination IP address, destination UDP port>. Two DCCP endpoint methods are specified. A DCCP-UDP implementation MUST implement exactly one of these:",
      "ja": "2. 2番目の段階では、受信エンドポイントは、同じUDP 4タプルに多重化された2つの独立したDCCP接続がDCCPモジュールの同じ接続に関連付けられていないことを確認する必要があります。したがって、エンドポイントは、UDP 4タプルの各組み合わせを使用して、アクティブなDCCP-UDPエンドポイントのセットの状態を維持する必要があります：<ソースIPアドレス、ソースUDPポート、宛先IPアドレス、宛先UDPポート>。 2つのDCCPエンドポイント方式が指定されています。 DCCP-UDP実装は、次のいずれか1つを実装する必要があります。"
    },
    {
      "indent": 7,
      "text": "* The DCCP server may accept only one active 6-tuple at any one time for a given UDP 4-tuple. In this method, DCCP-UDP packets that do not match an active 6-tuple MUST NOT be passed to the DCCP module and the DCCP Server SHOULD send a DCCP-Reset with Reset Code 12, \"Encapsulated Port Reuse\". An endpoint that receives a DCCP-Reset with this reset code will clear its connection state but MAY immediately try again using a different 4-tuple. This provides protection should the same UDP 4-tuple be re-used by multiple DCCP connections, ensuring that only one DCCP connection is established at one time.",
      "ja": "* DCCPサーバーは、特定のUDP 4タプルに対して一度に1つのアクティブな6タプルのみを受け入れることができます。この方法では、アクティブな6タプルと一致しないDCCP-UDPパケットをDCCPモジュールに渡してはならず（MUST NOT）、DCCPサーバーは、リセットコード12「カプセル化されたポートの再利用」でDCCPリセットを送信する必要があります。このリセットコードでDCCP-Resetを受信するエンドポイントは、その接続状態をクリアしますが、別の4タプルを使用してすぐに再試行できます（MAY）。これにより、同じUDP 4タプルが複数のDCCP接続で再利用された場合の保護が提供され、一度に1つのDCCP接続のみが確立されます。"
    },
    {
      "indent": 0,
      "text": " * The DCCP server may support multiple DCCP connections over the same UDP 4-tuple. In this method, the endpoint MUST then associate each 6-tuple with a single DCCP connection. If an endpoint is unable to demultiplex the 6-tuple (e.g., due to internal resource limits), it MUST discard DCCP-UDP packets that do not match an active 6-tuple instead of forwarding them to the DCCP module. The DCCP endpoint MAY send a DCCP-Reset with Reset Code 12, \"Encapsulated Port Reuse\", indicating the connection has been closed but may be retried using a different UDP 4-tuple.",
      "ja": "* DCCPサーバーは、同じUDP 4タプルを介した複数のDCCP接続をサポートする場合があります。この方法では、エンドポイントは各6タプルを単一のDCCP接続に関連付ける必要があります。エンドポイントが6タプルを逆多重化できない場合（たとえば、内部リソースの制限のため）、エンドポイントは、アクティブな6タプルと一致しないDCCP-UDPパケットを、DCCPモジュールに転送する代わりに破棄する必要があります。 DCCPエンドポイントは、接続が閉じられたことを示すリセットコード12「カプセル化されたポートの再利用」を含むDCCPリセットを送信できますが、別のUDP 4タプルを使用して再試行できます。"
    },
    {
      "indent": 0,
      "text": "3.9. Service Codes and the DCCP Port Registry",
      "section_title": true,
      "ja": "3.9. サービスコードとDCCPポートレジストリ"
    },
    {
      "indent": 3,
      "text": "This section clarifies the usage of DCCP Service Codes and the registration of server ports by DCCP-UDP. The section is not intended to update the procedures for allocating Service Codes or server ports.",
      "ja": "このセクションでは、DCCPサービスコードの使用方法と、DCCP-UDPによるサーバーポートの登録について説明します。このセクションは、サービスコードまたはサーバーポートの割り当て手順を更新するためのものではありません。"
    },
    {
      "indent": 3,
      "text": "There is one Service Code registry and one DCCP port registration that apply to all combinations of encapsulation and IP version. A DCCP Service Code specifies an application using DCCP regardless of the combination of DCCP encapsulation and IP version. An application may choose not to support some combinations of encapsulation and IP version, but its Service Code will remain registered for those combinations, and the Service Code must not be used by other applications. An application should not register different Service Codes for different combinations of encapsulation and IP version. [RFC5595] provides additional information about DCCP Service Codes.",
      "ja": "カプセル化とIPバージョンのすべての組み合わせに適用される1つのサービスコードレジストリと1つのDCCPポート登録があります。 DCCPサービスコードは、DCCPカプセル化とIPバージョンの組み合わせに関係なく、DCCPを使用するアプリケーションを指定します。アプリケーションは、カプセル化とIPバージョンの一部の組み合わせをサポートしないことを選択する場合がありますが、そのサービスコードはそれらの組み合わせに対して登録されたままであり、サービスコードは他のアプリケーションで使用できません。アプリケーションは、カプセル化とIPバージョンの異なる組み合わせに対して異なるサービスコードを登録しないでください。 [RFC5595]は、DCCPサービスコードに関する追加情報を提供します。"
    },
    {
      "indent": 3,
      "text": "Similarly, a DCCP port registration is applicable to all combinations of encapsulation and IP version. Again, an application may choose not to support some combinations of encapsulation and IP version on its registered DCCP port, although the port will remain registered for those combinations. Applications should not register different DCCP ports just for the purpose of using different combinations of encapsulation.",
      "ja": "同様に、DCCPポート登録は、カプセル化とIPバージョンのすべての組み合わせに適用できます。この場合も、アプリケーションは、登録されたDCCPポートでカプセル化とIPバージョンの一部の組み合わせをサポートしないことを選択できますが、ポートはそれらの組み合わせに対して登録されたままです。カプセル化のさまざまな組み合わせを使用するためだけに、アプリケーションでさまざまなDCCPポートを登録しないでください。"
    },
    {
      "indent": 0,
      "text": "4. DCCP-UDP and Higher-Layer Protocols",
      "section_title": true,
      "ja": "4. DCCP-UDPおよび上位層プロトコル"
    },
    {
      "indent": 3,
      "text": "The encapsulation of a higher-layer protocol within DCCP MUST be the same for both DCCP-STD and DCCP-UDP. Encapsulation of Datagram Transport Layer Security (DTLS) over DCCP is defined in [RFC5238] and RTP over DCCP is defined in [RFC5762]. This document therefore does not update these encapsulations when using DCCP-UDP.",
      "ja": "DCCP内の上位層プロトコルのカプセル化は、DCCP-STDとDCCP-UDPの両方で同じである必要があります。 DCCPを介したデータグラムトランスポート層セキュリティ（DTLS）のカプセル化は[RFC5238]で定義されており、RTP over DCCPは[RFC5762]で定義されています。したがって、このドキュメントでは、DCCP-UDPを使用するときにこれらのカプセル化を更新しません。"
    },
    {
      "indent": 0,
      "text": "5. Signalling the Use of DCCP-UDP",
      "section_title": true,
      "ja": "5. DCCP-UDPの使用のシグナリング"
    },
    {
      "indent": 3,
      "text": "Applications often signal transport connection parameters through outside means, such as SDP. Applications that define such methods for DCCP MUST define how the DCCP encapsulation is chosen and MUST allow either encapsulation to be signalled. Where DCCP-STD and DCCP-UDP are both supported, DCCP-STD SHOULD be preferred.",
      "ja": "多くの場合、アプリケーションはSDPなどの外部手段を介してトランスポート接続パラメータを通知します。 DCCPのそのようなメソッドを定義するアプリケーションは、DCCPカプセル化の選択方法を定義しなければならず、どちらかのカプセル化が通知されることを許可しなければなりません（MUST）。 DCCP-STDとDCCP-UDPの両方がサポートされている場合、DCCP-STDが推奨されます。"
    },
    {
      "indent": 0,
      "text": " The Session Description Protocol (SDP) [RFC4566] and the offer/answer model [RFC3264] can be used to negotiate DCCP sessions, and [RFC5762] defines SDP extensions for signalling the use of an RTP session running over DCCP connections. However, since [RFC5762] predates this document, it does not define a mechanism for signalling that the DCCP-UDP encapsulation is to be used. This section updates [RFC5762] to describe how SDP can be used to signal RTP sessions running over the DCCP-UDP encapsulation.",
      "ja": "セッション記述プロトコル（SDP）[RFC4566]およびオファー/アンサーモデル[RFC3264]は、DCCPセッションのネゴシエーションに使用でき、[RFC5762]は、DCCP接続で実行されるRTPセッションの使用を通知するためのSDP拡張を定義します。ただし、[RFC5762]はこのドキュメントよりも古いため、DCCP-UDPカプセル化が使用されることを通知するメカニズムは定義されていません。このセクションでは、[RFC5762]を更新して、SDPを使用してDCCP-UDPカプセル化で実行されているRTPセッションを通知する方法を説明します。"
    },
    {
      "indent": 3,
      "text": "The new SDP support specified in this section is expected to be useful when the offering party is on the public Internet or in the same private addressing realm as the answering party. In this case, the DCCP-UDP server has a public address. The client may either have a public address or be behind a NAT/NAPT. This scenario has the potential to be an important use case. Some other NAT/NAPT topologies may result in the advertised port being unreachable via the NAT/NAPT.",
      "ja": "このセクションで指定されている新しいSDPサポートは、提供側が公衆インターネット上または応答側と同じプライベートアドレッシングレルム内にある場合に役立ちます。この場合、DCCP-UDPサーバーにはパブリックアドレスがあります。クライアントはパブリックアドレスを持っているか、NAT / NAPTの背後にいる可能性があります。このシナリオは、重要なユースケースになる可能性があります。他の一部のNAT / NAPTトポロジでは、NAT / NAPTを介してアドバタイズされたポートに到達できない場合があります。"
    },
    {
      "indent": 0,
      "text": "5.1. Protocol Identification",
      "section_title": true,
      "ja": "5.1. プロトコルの識別"
    },
    {
      "indent": 3,
      "text": "SDP uses a media (\"m=\") line to convey details of the media format and transport protocol used. The ABNF syntax [RFC5234] of a media line for DCCP is as follows (from [RFC4566]):",
      "ja": "SDPはメディア（ \"m =\"）行を使用して、使用されるメディア形式とトランスポートプロトコルの詳細を伝えます。 DCCPのメディアラインのABNF構文[RFC5234]は次のとおりです（[RFC4566]から）。"
    },
    {
      "indent": 6,
      "text": "media-field =         %x6d \"=\" media SP port [\"/\" integer]\n                      SP proto 1*(SP fmt) CRLF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The proto field denotes the transport protocol used for the media, while the port indicates the transport port to which the media is sent, following [RFC5762]. This document defines the following five values of the proto field to indicate media transported using DCCP-UDP encapsulation:",
      "ja": "protoフィールドは、メディアに使用されるトランスポートプロトコルを示し、portは、[RFC5762]に従って、メディアの送信先のトランスポートポートを示します。このドキュメントでは、DCCP-UDPカプセル化を使用して転送されるメディアを示すために、protoフィールドの次の5つの値を定義しています。"
    },
    {
      "indent": 6,
      "text": "UDP/DCCP",
      "ja": "UDP / DCCP"
    },
    {
      "indent": 6,
      "text": "UDP/DCCP/RTP/AVP",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "UDP/DCCP/RTP/SAVP",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "UDP/DCCP/RTP/AVPF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "UDP/DCCP/RTP/SAVPF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The \"UDP/DCCP\" protocol identifier is similar to the \"DCCP\" protocol identifier defined in [RFC5762] and denotes the DCCP transport protocol encapsulated in UDP, but not its upper-layer protocol.",
      "ja": "「UDP / DCCP」プロトコル識別子は、[RFC5762]で定義されている「DCCP」プロトコル識別子に似ており、UDPでカプセル化されたDCCPトランスポートプロトコルを示しますが、その上位層プロトコルは示しません。"
    },
    {
      "indent": 3,
      "text": "The \"UDP/DCCP/RTP/AVP\" protocol identifier refers to RTP using the RTP Profile for Audio and Video Conferences with Minimal Control [RFC3551] running over the DCCP-UDP encapsulation.",
      "ja": "「UDP / DCCP / RTP / AVP」プロトコル識別子は、DCCP-UDPカプセル化上で実行される最小制御のオーディオおよびビデオ会議[RFC3551]のRTPプロファイルを使用するRTPを指します。"
    },
    {
      "indent": 3,
      "text": "The \"UDP/DCCP/RTP/SAVP\" protocol identifier refers to RTP using the Secure Real-time Transport Protocol [RFC3711] running over the DCCP-UDP encapsulation.",
      "ja": "「UDP / DCCP / RTP / SAVP」プロトコル識別子は、DCCP-UDPカプセル化で実行されるセキュアリアルタイムトランスポートプロトコル[RFC3711]を使用したRTPを指します。"
    },
    {
      "indent": 3,
      "text": "The \"UDP/DCCP/RTP/AVPF\" protocol identifier refers to RTP using the Extended RTP Profile for RTCP-based Feedback [RFC4585] running over the DCCP-UDP encapsulation.",
      "ja": "「UDP / DCCP / RTP / AVPF」プロトコル識別子は、DCCP-UDPカプセル化上で実行されるRTCPベースのフィードバック[RFC4585]の拡張RTPプロファイルを使用するRTPを指します。"
    },
    {
      "indent": 3,
      "text": "The \"UDP/DCCP/RTP/SAVPF\" protocol identifier refers to RTP using the Extended Secure RTP Profile for RTCP-based Feedback [RFC5124] running over the DCCP-UDP encapsulation.",
      "ja": "「UDP / DCCP / RTP / SAVPF」プロトコル識別子は、DCCP-UDPカプセル化上で実行されるRTCPベースのフィードバック[RFC5124]の拡張セキュアRTPプロファイルを使用するRTPを指します。"
    },
    {
      "indent": 3,
      "text": "The fmt value in the \"m=\" line is used as described in [RFC5762].",
      "ja": "「m =」行のfmt値は、[RFC5762]で説明されているように使用されます。"
    },
    {
      "indent": 3,
      "text": "The port number specified in the \"m=\" line indicates the UDP port that is used for the DCCP-UDP encapsulation service. The DCCP port number MUST be sent using an associated \"a=dccp-port:\" attribute, as described in Section 5.2.",
      "ja": "「m =」行で指定されたポート番号は、DCCP-UDPカプセル化サービスに使用されるUDPポートを示します。セクション5.2で説明されているように、DCCPポート番号は、関連する「a = dccp-port：」属性を使用して送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "The use of ports with DCCP-UDP encapsulation is described further in Section 3.8.",
      "ja": "DCCP-UDPカプセル化でのポートの使用については、セクション3.8で詳しく説明します。"
    },
    {
      "indent": 0,
      "text": "5.2. Signalling Encapsulated DCCP Ports",
      "section_title": true,
      "ja": "5.2. シグナリングカプセル化DCCPポート"
    },
    {
      "indent": 3,
      "text": "When using DCCP-UDP, the UDP port used for the encapsulation is signalled using the SDP \"m=\" line. The DCCP ports MUST NOT be included in the \"m=\" line but are instead signalled using a new SDP attribute (\"dccp-port\") defined according to the following ABNF:",
      "ja": "DCCP-UDPを使用する場合、カプセル化に使用されるUDPポートは、SDP \"m =\"行を使用して通知されます。 DCCPポートは「m =」行に含めることはできませんが、代わりに、次のABNFに従って定義された新しいSDP属性（「dccp-port」）を使用して通知されます。"
    },
    {
      "indent": 10,
      "text": "dccp-port-attr = %x61 \"=dccp-port:\" dccp-port",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "dccp-port = 1*DIGIT",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "where DIGIT is as defined in [RFC5234]. This is a media-level attribute that is not subject to the charset attribute. The \"a=dccp-port:\" attribute MUST be included when the protocol identifiers described in Section 5.1 are used.",
      "ja": "ここで、DIGITは[RFC5234]で定義されています。これは、charset属性の影響を受けないメディアレベルの属性です。 「a = dccp-port：」属性は、セクション5.1で説明されているプロトコル識別子を使用するときに含める必要があります。"
    },
    {
      "indent": 3,
      "text": "The use of ports with DCCP-UDP encapsulation is described further in Section 3.8.",
      "ja": "DCCP-UDPカプセル化でのポートの使用については、セクション3.8で詳しく説明します。"
    },
    {
      "indent": 3,
      "text": "o If the \"a=rtcp:\" attribute [RFC3605] is used, then the signalled port is the DCCP port used for RTCP.",
      "ja": "o 「a = rtcp：」属性[RFC3605]が使用されている場合、信号ポートはRTCPに使用されるDCCPポートです。"
    },
    {
      "indent": 3,
      "text": "o If the \"a=rtcp-mux\" attribute [RFC5761] is negotiated, then RTP and RTCP are multiplexed onto a single DCCP port; otherwise, separate DCCP ports are used for RTP and RTCP [RFC5762].",
      "ja": "o 「a = rtcp-mux」属性[RFC5761]がネゴシエートされる場合、RTPおよびRTCPは単一のDCCPポートに多重化されます。それ以外の場合、RTPとRTCPには別々のDCCPポートが使用されます[RFC5762]。"
    },
    {
      "indent": 6,
      "text": "NOTE: In each case, only a single UDP port is used for the DCCP-UDP encapsulation.",
      "ja": "注：いずれの場合も、DCCP-UDPカプセル化に使用されるUDPポートは1つだけです。"
    },
    {
      "indent": 3,
      "text": "o If the \"a=rtcp-mux\" attribute is not present, then the second of the two demultiplexing methods described in Section 3.8 MUST be implemented; otherwise, the second DCCP connection for the RTCP flow will be rejected. For this reason, using \"a=rtcp-mux\" is RECOMMENDED when using RTP over DCCP-UDP.",
      "ja": "o 「a = rtcp-mux」属性が存在しない場合は、セクション3.8で説明されている2つの逆多重化メソッドの2番目を実装する必要があります。そうでない場合、RTCPフローの2番目のDCCP接続は拒否されます。このため、DCCP-UDPでRTPを使用する場合は、「a = rtcp-mux」を使用することをお勧めします。"
    },
    {
      "indent": 0,
      "text": "5.3. Connection Management",
      "section_title": true,
      "ja": "5.3. 接続管理"
    },
    {
      "indent": 3,
      "text": "The \"a=setup:\" attribute is used in a manner compatible with [RFC5762], Section 5.3 to indicate which of the DCCP-UDP endpoints should initiate the DCCP-UDP connection establishment.",
      "ja": "「a = setup：」属性は、[RFC5762]のセクション5.3と互換性のある方法で使用され、どのDCCP-UDPエンドポイントがDCCP-UDP接続の確立を開始するかを示します。"
    },
    {
      "indent": 0,
      "text": "5.4. Negotiating the DCCP-UDP Encapsulation versus Native DCCP",
      "section_title": true,
      "ja": "5.4. DCCP-UDPカプセル化とネイティブDCCPの交渉"
    },
    {
      "indent": 3,
      "text": "An endpoint that supports both native DCCP and the DCCP-UDP encapsulation may wish to signal support for both options in an SDP offer, allowing the answering party the option of using native DCCP where possible, while falling back to the DCCP-UDP encapsulation otherwise.",
      "ja": "ネイティブDCCPとDCCP-UDPカプセル化の両方をサポートするエンドポイントは、SDPオファーの両方のオプションのサポートを通知し、応答側が可能な場合はネイティブDCCPを使用するオプションを許可し、それ以外の場合はDCCP-UDPカプセル化にフォールバックします。"
    },
    {
      "indent": 3,
      "text": "An approach to doing this might be to include candidates for the DCCP-UDP encapsulation and native DCCP into an Interactive Connectivity Establishment (ICE) [RFC5245] exchange. Since DCCP is connection-oriented, these candidates would need to be encoded into ICE in a manner analogous to TCP candidates defined in [RFC6544]. Both active and passive candidates could be supported for native DCCP and DCCP-UDP encapsulation, as may DCCP simultaneous-open candidates [RFC5596]. In choosing local preference values, it may make sense to prefer DCCP-UDP over native DCCP in cases where low connection setup time is important and to prioritise native DCCP in cases where low overhead is preferred (on the assumption that DCCP-UDP is more likely to work through legacy NAT but has higher overhead). The details of this encoding into ICE are left for future study.",
      "ja": "これを行うためのアプローチは、DCCP-UDPカプセル化の候補とネイティブDCCPをInteractive Connectivity Establishment（ICE）[RFC5245]交換に含めることです。 DCCPは接続指向であるため、これらの候補は、[RFC6544]で定義されているTCP候補と同様の方法でICEにエンコードする必要があります。 DCCP同時オープン候補[RFC5596]と同様に、アクティブおよびパッシブの両方の候補をネイティブDCCPおよびDCCP-UDPカプセル化でサポートできます。ローカルプリファレンス値を選択する場合、接続のセットアップ時間が短いことが重要な場合はネイティブDCCPよりもDCCP-UDPを優先し、オーバーヘッドが少ない方が望ましい場合はネイティブDCCPを優先することをお勧めします（DCCP-UDPがより可能性が高いと想定）レガシーNATを介して動作しますが、オーバーヘッドが高くなります）。このICEへのエンコードの詳細は、今後の研究に残します。"
    },
    {
      "indent": 3,
      "text": "While ICE is appropriate for selecting basic use of DCCP-UDP versus DCCP-STD, it may not be appropriate for negotiating different RTP profiles with each transport encapsulation. The SDP Capability Negotiation framework [RFC5939] may be more suitable. Section 3.7 of RFC 5939 specifies how to provide attributes and transport protocols as capabilities and negotiate them using the framework. The details of the use of SDP Capability Negotiation with DCCP are left for future study.",
      "ja": "ICEは、DCCP-UDPとDCCP-STDの基本的な使用を選択するのに適していますが、各トランスポートカプセル化で異なる​​RTPプロファイルをネゴシエートするのには適していない場合があります。 SDP機能交渉フレームワーク[RFC5939]の方が適している場合があります。 RFC 5939のセクション3.7は、属性とトランスポートプロトコルを機能として提供し、フレームワークを使用してそれらをネゴシエートする方法を指定しています。 DCCPでのSDP機能ネゴシエーションの使用の詳細は、今後の調​​査に委ねられます。"
    },
    {
      "indent": 0,
      "text": "5.5. Example of SDP Use",
      "section_title": true,
      "ja": "5.5. SDPの使用例"
    },
    {
      "indent": 3,
      "text": "The example below shows an SDP offer, where an application signals support for DCCP-UDP:",
      "ja": "次の例は、アプリケーションがDCCP-UDPのサポートを通知するSDPオファーを示しています。"
    },
    {
      "indent": 10,
      "text": "v=0\no=alice 1129377363 1 IN IP4 192.0.2.47\ns=-\nc=IN IP4 192.0.2.47\nt=0 0\nm=video 50234 UDP/DCCP/RTP/AVP 99\na=rtpmap:99 h261/90000\na=dccp-service-code:SC=x52545056\na=dccp-port:5004\na=rtcp:5005\na=setup:passive\na=connection:new",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The answering party at 192.0.2.128 receives this offer and responds with the following answer:",
      "ja": "192.0.2.128の応答側はこのオファーを受け取り、次の応答で応答します。"
    },
    {
      "indent": 10,
      "text": "v=0\no=bob 1129377364 1 IN IP4 192.0.2.128\ns=-\nc=IN IP4 192.0.2.128\nt=0 0\nm=video 40123 UDP/DCCP/RTP/AVP 99\na=rtpmap:99 h261/90000\na=dccp-service-code:SC:RTPV\na=dccp-port:9\na=setup:active\na=connection:new",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Note that the \"m=\" line in the answer includes the UDP port number of the encapsulation service. The DCCP service code is set to \"RTPV\", signalled using the \"a=dccp-service-code\" attribute [RFC5762]. The \"a=dccp-port:\" attribute in the answer is set to 9 (the discard port) in the usual manner for an active connection-oriented endpoint.",
      "ja": "回答の「m =」行には、カプセル化サービスのUDPポート番号が含まれていることに注意してください。 DCCPサービスコードは「RTPV」に設定され、「a = dccp-service-code」属性[RFC5762]を使用して通知されます。回答の「a = dccp-port：」属性は、アクティブなコネクション型エンドポイントの通常の方法で9（廃棄ポート）に設定されています。"
    },
    {
      "indent": 3,
      "text": "The answering party will then attempt to establish a DCCP-UDP connection to the offering party. The connection request will use an ephemeral DCCP source port and DCCP destination port 5004. The UDP packet encapsulating that request will have UDP source port 40123 and UDP destination port 50234.",
      "ja": "次に、応答側は、提供側へのDCCP-UDP接続の確立を試みます。接続要求は、エフェメラルDCCP送信元ポートとDCCP宛先ポート5004を使用します。その要求をカプセル化するUDPパケットには、UDP送信元ポート40123とUDP宛先ポート50234があります。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "DCCP-UDP provides all of the security risk-mitigation measures present in DCCP-STD and also all of the security risks. It does not maintain additional state at the encapsulation layer.",
      "ja": "DCCP-UDPは、DCCP-STDに存在するすべてのセキュリティリスク軽減策と、すべてのセキュリティリスクを提供します。カプセル化層で追加の状態を維持しません。"
    },
    {
      "indent": 3,
      "text": "The tunnel encapsulation recommends processing of ICMP messages received for packets sent using DCCP-UDP and translation to allow use by DCCP. [RFC5927] describes precautions that are desirable before TCP acts on receipt of ICMP messages. Similar precautions are desirable for endpoints processing ICMP for DCCP-UDP. The purpose of DCCP-UDP is to allow DCCP to pass through NAT/NAPT devices; therefore, it exposes DCCP to the risks associated with passing through NAT devices. It does not create any new risks with regard to NAT/NAPT devices.",
      "ja": "トンネルカプセル化では、DCCPによる使用を許可するために、DCCP-UDPおよび変換を使用して送信されたパケットに対して受信したICMPメッセージの処理を推奨しています。 [RFC5927]は、TCPがICMPメッセージの受信を処理する前に望ましい予防策について説明しています。 DCCP-UDPのICMPを処理するエンドポイントにも同様の予防策が必要です。 DCCP-UDPの目的は、DCCPがNAT / NAPTデバイスを通過できるようにすることです。したがって、DCCPをNATデバイスの通過に関連するリスクにさらします。 NAT / NAPTデバイスに関する新しいリスクは発生しません。"
    },
    {
      "indent": 3,
      "text": "DCCP-UDP may also allow DCCP applications to pass through existing firewall devices using rules for UDP, if the administrators of the devices so choose. A simple use may either allow all DCCP applications or allow none.",
      "ja": "DCCP-UDPは、デバイスの管理者が選択した場合、DCCPアプリケーションがUDPのルールを使用して既存のファイアウォールデバイスを通過することもできます。単純な使い方では、すべてのDCCPアプリケーションを許可するか、まったく許可しないかのどちらかです。"
    },
    {
      "indent": 3,
      "text": "A firewall that interprets this specification could inspect the encapsulated DCCP header to filter based on the inner DCCP header information. Full control of DCCP connections by applications will require enhancements to firewalls, as discussed in [RFC4340] and related RFCs (e.g., [RFC5595]).",
      "ja": "この仕様を解釈するファイアウォールは、カプセル化されたDCCPヘッダーを検査して、内部DCCPヘッダー情報に基づいてフィルタリングできます。アプリケーションによるDCCP接続の完全な制御には、[RFC4340]と関連するRFC（[RFC5595]など）で説明されているように、ファイアウォールの強化が必要です。"
    },
    {
      "indent": 3,
      "text": "Datagram Transport Layer Security (DTLS) provides mechanisms that can be used to provide security protection for the encapsulated DCCP packets. DTLS may be used in two ways:",
      "ja": "データグラムトランスポート層セキュリティ（DTLS）は、カプセル化されたDCCPパケットのセキュリティ保護を提供するために使用できるメカニズムを提供します。 DTLSは次の2つの方法で使用できます。"
    },
    {
      "indent": 3,
      "text": "o Individual DCCP connections may be protected in the same way that DTLS is used with native DCCP [RFC5595]. This does not encrypt the UDP transport header added by DCCP-UDP.",
      "ja": "o 個々のDCCP接続は、ネイティブDCCPでDTLSを使用するのと同じ方法で保護できます[RFC5595]。これは、DCCP-UDPによって追加されたUDPトランスポートヘッダーを暗号化しません。"
    },
    {
      "indent": 3,
      "text": "o This specification also permits the use of DTLS with the UDP transport that encapsulates DCCP packets. When DTLS is used at the encapsulation layer, this protects the DCCP headers. This prevents the headers from being inspected or updated by network middleboxes (such as firewalls and NAPT). It also eliminates the need for a separate DTLS handshake for each DCCP connection.",
      "ja": "o この仕様では、DCCPパケットをカプセル化するUDPトランスポートでDTLSを使用することもできます。カプセル化層でDTLSを使用すると、DCCPヘッダーが保護されます。これにより、ヘッダーがネットワークミドルボックス（ファイアウォールやNAPTなど）によって検査または更新されなくなります。また、DCCP接続ごとに個別のDTLSハンドシェイクが不要になります。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has made the allocations described in the following sections.",
      "ja": "IANAは、次のセクションで説明する割り当てを行いました。"
    },
    {
      "indent": 0,
      "text": "7.1. UDP Port Allocation",
      "section_title": true,
      "ja": "7.1. UDPポートの割り当て"
    },
    {
      "indent": 3,
      "text": "IANA has allocated a UDP port (6511) for the DCCP-UDP service. This port is allocated for use by a transport service rather than an application. In this case, the name of the transport should explicitly appear in the registry. Use of this port is defined in Section 3.8",
      "ja": "IANAは、DCCP-UDPサービスにUDPポート（6511）を割り当てました。このポートは、アプリケーションではなくトランスポートサービスで使用するために割り当てられます。この場合、トランスポートの名前がレジストリに明示的に表示されます。このポートの使用はセクション3.8で定義されています"
    },
    {
      "indent": 0,
      "text": "7.2. DCCP Reset",
      "section_title": true,
      "ja": "7.2. DCCPリセット"
    },
    {
      "indent": 3,
      "text": "IANA has assigned a new DCCP reset code (12) in the DCCP Reset Codes Registry, with the short description \"Encapsulated Port Reuse\". This code applies to all DCCP congestion control IDs. Use of this reset code is defined in Section 3.8. Section 5.6 of [RFC4340] defines three \"Data\" bytes that are carried by a DCCP Reset. For this reset code, these are defined as follows:",
      "ja": "IANAは、DCCPリセットコードレジストリで新しいDCCPリセットコード（12）を割り当て、短い説明「カプセル化ポートの再利用」を付けました。このコードは、すべてのDCCP輻輳制御IDに適用されます。このリセットコードの使用はセクション3.8で定義されています。 [RFC4340]のセクション5.6は、DCCPリセットによって伝送される3つの「データ」バイトを定義しています。このリセットコードでは、これらは次のように定義されています。"
    },
    {
      "indent": 3,
      "text": "o Data byte 1: The DCCP Packet Type of the DCCP datagram that resulted in the error message.",
      "ja": "o データバイト1：エラーメッセージの原因となったDCCPデータグラムのDCCPパケットタイプ。"
    },
    {
      "indent": 3,
      "text": "o Data bytes 2 & 3: The encapsulated UDP source port from the DCCP-UDP datagram that triggered the ICMP message, in network order.",
      "ja": "o データバイト2および3：ネットワークの順序で、ICMPメッセージをトリガーしたDCCP-UDPデータグラムからのカプセル化されたUDPソースポート。"
    },
    {
      "indent": 0,
      "text": "7.3. SDP Attribute Allocation",
      "section_title": true,
      "ja": "7.3. SDP属性の割り当て"
    },
    {
      "indent": 3,
      "text": "IANA has allocated the following new SDP attribute (\"att-field\"):",
      "ja": "IANAは、次の新しいSDP属性（「att-field」）を割り当てました。"
    },
    {
      "indent": 6,
      "text": "Contact name: DCCP Working Group",
      "ja": "連絡先名：DCCPワーキンググループ"
    },
    {
      "indent": 6,
      "text": "Attribute name: dccp-port",
      "ja": "属性名：dccp-port"
    },
    {
      "indent": 6,
      "text": "Long-form attribute name in English: Encapsulated DCCP Port",
      "ja": "英語の長い形式の属性名：カプセル化されたDCCPポート"
    },
    {
      "indent": 6,
      "text": "Type of attribute: Media level only",
      "ja": "属性のタイプ：メディアレベルのみ"
    },
    {
      "indent": 6,
      "text": "Subject to charset attribute? No",
      "ja": "文字セット属性の対象ですか？番号"
    },
    {
      "indent": 6,
      "text": "Purpose of the attribute: See this document, Section 5.1",
      "ja": "属性の目的：このドキュメントのセクション5.1を参照してください"
    },
    {
      "indent": 6,
      "text": "Allowed attribute values: See this document, Section 5.1",
      "ja": "許可された属性値：このドキュメントのセクション5.1を参照してください"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgments",
      "section_title": true,
      "ja": "8. 謝辞"
    },
    {
      "indent": 3,
      "text": "This document was produced by the DCCP WG. The following individuals contributed during the working group last call: Andrew Lentvorski, Lloyd Wood, Pasi Sarolahti, Gerrit Renker, Eddie Kohler, and Dan Wing.",
      "ja": "このドキュメントは、DCCP WGによって作成されました。前回のワーキンググループでの参加者は、Andrew Lentvorski、Lloyd Wood、Pasi Sarolahti、Gerrit Renker、Eddie Kohler、Dan Wingでした。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9. 参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC0768] Postel, J., \"User Datagram Protocol\", STD 6, RFC 768, August 1980.",
      "ja": "[RFC0768] Postel、J。、「User Datagram Protocol」、STD 6、RFC 768、1980年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3605] Huitema, C., \"Real Time Control Protocol (RTCP) attribute in Session Description Protocol (SDP)\", RFC 3605, October 2003.",
      "ja": "[RFC3605] Huitema、C。、「Session Description Protocol（SDP）のReal Time Control Protocol（RTCP）属性」、RFC 3605、2003年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC4340] Kohler, E., Handley, M., and S. Floyd, \"Datagram Congestion Control Protocol (DCCP)\", RFC 4340, March 2006.",
      "ja": "[RFC4340] Kohler、E.、Handley、M。、およびS. Floyd、「Datagram Congestion Control Protocol（DCCP）」、RFC 4340、2006年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, January 2008.",
      "ja": "[RFC5234] Crocker、D。およびP. Overell、「構文仕様の拡張BNF：ABNF」、STD 68、RFC 5234、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5762] Perkins, C., \"RTP and the Datagram Congestion Control Protocol (DCCP)\", RFC 5762, April 2010.",
      "ja": "[RFC5762]パーキンス、C。、「RTPおよびデータグラム輻輳制御プロトコル（DCCP）」、RFC 5762、2010年4月。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC3264] Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model with Session Description Protocol (SDP)\", RFC 3264, June 2002.",
      "ja": "[RFC3264] Rosenberg、J。およびH. Schulzrinne、「オファー/アンサーモデルとセッション記述プロトコル（SDP）」、RFC 3264、2002年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3551] Schulzrinne, H. and S. Casner, \"RTP Profile for Audio and Video Conferences with Minimal Control\", STD 65, RFC 3551, July 2003.",
      "ja": "[RFC3551] Schulzrinne、H。およびS. Casner、「最小制御のオーディオおよびビデオ会議のRTPプロファイル」、STD 65、RFC 3551、2003年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC3711] Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K. Norrman, \"The Secure Real-time Transport Protocol (SRTP)\", RFC 3711, March 2004.",
      "ja": "[RFC3711]バウアー、M。、マクルー、D。、ナスルンド、M。、カララ、E。、およびK.ノーマン、「セキュアなリアルタイム転送プロトコル（SRTP）」、RFC 3711、2004年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4566] Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session Description Protocol\", RFC 4566, July 2006.",
      "ja": "[RFC4566] Handley、M.、Jacobson、V。、およびC. Perkins、「SDP：Session Description Protocol」、RFC 4566、2006年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC4585] Ott, J., Wenger, S., Sato, N., Burmeister, C., and J. Rey, \"Extended RTP Profile for Real-time Transport Control Protocol (RTCP)-Based Feedback (RTP/AVPF)\", RFC 4585, July 2006.",
      "ja": "[RFC4585] Ott、J.、Wenger、S.、Sato、N.、Burmeister、C。、およびJ. Rey、「​​リアルタイム転送制御プロトコル（RTCP）ベースのフィードバック用の拡張RTPプロファイル（RTP / AVPF） \"、RFC 4585、2006年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC4787] Audet, F. and C. Jennings, \"Network Address Translation (NAT) Behavioral Requirements for Unicast UDP\", BCP 127, RFC 4787, January 2007.",
      "ja": "[RFC4787]オーデットF.およびC.ジェニングス、「ユニキャストUDPのネットワークアドレス変換（NAT）動作要件」、BCP 127、RFC 4787、2007年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5124] Ott, J. and E. Carrara, \"Extended Secure RTP Profile for Real-time Transport Control Protocol (RTCP)-Based Feedback (RTP/SAVPF)\", RFC 5124, February 2008.",
      "ja": "[RFC5124] Ott、J。およびE. Carrara、「リアルタイムトランスポートコントロールプロトコル（RTCP）ベースのフィードバック用の拡張セキュアRTPプロファイル（RTP / SAVPF）」、RFC 5124、2008年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC5238] Phelan, T., \"Datagram Transport Layer Security (DTLS) over the Datagram Congestion Control Protocol (DCCP)\", RFC 5238, May 2008.",
      "ja": "[RFC5238] Phelan、T。、「Datagram Congestion Control Protocol（DCCP）over Datagram Transport Layer Security（DTLS）over the Datagram Congestion Control Protocol（DCCP）」、RFC 5238、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC5245] Rosenberg, J., \"Interactive Connectivity Establishment (ICE): A Protocol for Network Address Translator (NAT) Traversal for Offer/Answer Protocols\", RFC 5245, April 2010.",
      "ja": "[RFC5245] Rosenberg、J。、「Interactive Connectivity Establishment（ICE）：A Protocol for Network Address Translator（NAT）Traversal for Offer / Answer Protocols」、RFC 5245、2010年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC5595] Fairhurst, G., \"The Datagram Congestion Control Protocol (DCCP) Service Codes\", RFC 5595, September 2009.",
      "ja": "[RFC5595]フェアハースト、G。、「データグラム輻輳制御プロトコル（DCCP）サービスコード」、RFC 5595、2009年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC5596] Fairhurst, G., \"Datagram Congestion Control Protocol (DCCP) Simultaneous-Open Technique to Facilitate NAT/ Middlebox Traversal\", RFC 5596, September 2009.",
      "ja": "[RFC5596]フェアハースト、G。、「NAT /ミドルボックストラバーサルを容易にするためのデータグラム輻輳制御プロトコル（DCCP）同時オープンテクニック」、RFC 5596、2009年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC5597] Denis-Courmont, R., \"Network Address Translation (NAT) Behavioral Requirements for the Datagram Congestion Control Protocol\", BCP 150, RFC 5597, September 2009.",
      "ja": "[RFC5597] Denis-Courmont、R。、「データグラム輻輳制御プロトコルのネットワークアドレス変換（NAT）動作要件」、BCP 150、RFC 5597、2009年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC5761] Perkins, C. and M. Westerlund, \"Multiplexing RTP Data and Control Packets on a Single Port\", RFC 5761, April 2010.",
      "ja": "[RFC5761] Perkins、C。およびM. Westerlund、「Multiplexing RTP Data and Control Packets on a Single Port」、RFC 5761、2010年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC5927] Gont, F., \"ICMP Attacks against TCP\", RFC 5927, July 2010.",
      "ja": "[RFC5927] Gont、F。、「TCPに対するICMP攻撃」、RFC 5927、2010年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC5939] Andreasen, F., \"Session Description Protocol (SDP) Capability Negotiation\", RFC 5939, September 2010.",
      "ja": "[RFC5939] Andreasen、F。、「Session Description Protocol（SDP）Capability Negotiation」、RFC 5939、2010年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC6544] Rosenberg, J., Keranen, A., Lowekamp, B., and A. B. Roach, \"TCP Candidates with Interactive Connectivity Establishment (ICE)\", RFC 6544, March 2012.",
      "ja": "[RFC6544] Rosenberg、J.、Kerenen、A.、Lowekamp、B。、およびA. B. Roach、「Interactive Connectivity Establishment（ICE）を使用したTCP候補」、RFC 6544、2012年3月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Tom Phelan Sonus Networks 7 Technology Dr. Westford, MA 01886 US",
      "ja": "Tom Phelan Sonus Networks 7 Technology Dr. Westford、MA 01886 US"
    },
    {
      "indent": 3,
      "text": "Phone: +1 978 614 8456\nEMail: tphelan@sonusnet.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Godred Fairhurst University of Aberdeen School of Engineering Fraser Noble Building Aberdeen, Scotland AB24 3UE UK",
      "ja": "Godred Fairhurst University of Aberdeen School of Engineeringフレーザーノーブルビルディングアバディーン、スコットランドAB24 3UE UK"
    },
    {
      "indent": 3,
      "text": "EMail: gorry@erg.abdn.ac.uk\nURI:   http://www.erg.abdn.ac.uk",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Colin Perkins University of Glasgow School of Computing Science Glasgow, Scotland G12 8QQ UK",
      "ja": "Colin Perkins University of Glasgow School of Computing Science Glasgow、Scotland G12 8QQ UK"
    },
    {
      "indent": 3,
      "text": "EMail: csp@csperkins.org\nURI:   http://csperkins.org/",
      "raw": true,
      "ja": ""
    }
  ]
}