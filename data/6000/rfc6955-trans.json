{
  "title": {
    "text": "RFC 6955 - Diffie-Hellman Proof-of-Possession Algorithms",
    "ja": "RFC 6955 - Diffie-Hellman所有証明アルゴリズム"
  },
  "number": 6955,
  "created_at": "2020-09-04 16:35:47.662319+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         J. Schaad\nRequest for Comments: 6955                       Soaring Hawk Consulting\nObsoletes: 2875                                        H. Prafullchandra\nCategory: Standards Track                                  HyTrust, Inc.\nISSN: 2070-1721                                                 May 2013",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Diffie-Hellman Proof-of-Possession Algorithms",
      "ja": "Diffie-Hellman所有証明アルゴリズム"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document describes two methods for producing an integrity check value from a Diffie-Hellman key pair and one method for producing an integrity check value from an Elliptic Curve key pair. This behavior is needed for such operations as creating the signature of a Public-Key Cryptography Standards (PKCS) #10 Certification Request. These algorithms are designed to provide a Proof-of-Possession of the private key and not to be a general purpose signing algorithm.",
      "ja": "このドキュメントでは、Diffie-Hellman鍵ペアから整合性チェック値を生成する2つの方法と、楕円曲線鍵ペアから整合性チェック値を生成する1つの方法について説明します。この動作は、公開鍵暗号化標準（PKCS）＃10証明書要求の署名を作成するなどの操作に必要です。これらのアルゴリズムは、秘密鍵の所有証明を提供するように設計されており、汎用の署名アルゴリズムではありません。"
    },
    {
      "indent": 3,
      "text": "This document obsoletes RFC 2875.",
      "ja": "このドキュメントはRFC 2875を廃止します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 5741のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6955.",
      "ja": "このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、http：//www.rfc-editor.org/info/rfc6955で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2013 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2013 IETF Trustおよびドキュメントの作成者として識別された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびこの文書の発行日に有効なIETF文書に関するIETFトラストの法的規定（http://trustee.ietf.org/license-info）の対象となります。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 3,
      "text": "This document may contain material from IETF Documents or IETF Contributions published or made publicly available before November 10, 2008. The person(s) controlling the copyright in some of this material may not have granted the IETF Trust the right to allow modifications of such material outside the IETF Standards Process. Without obtaining an adequate license from the person(s) controlling the copyright in such materials, this document may not be modified outside the IETF Standards Process, and derivative works of it may not be created outside the IETF Standards Process, except to format it for publication as an RFC or to translate it into languages other than English.",
      "ja": "このドキュメントには、2008年11月10日より前に公開または公開されたIETFドキュメントまたはIETFコントリビューションの素材が含まれている場合があります。 IETF標準プロセス外。このような資料の著作権を管理する人から適切なライセンスを取得せずに、このドキュメントをIETF標準プロセス外で変更したり、その派生物をIETF標準プロセス外で作成したりすることはできません。 RFCとして、またはそれを英語以外の言語に翻訳するための出版物。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Changes since RFC 2875 .....................................4\n   1.2. Requirements Terminology ...................................5\n2. Terminology .....................................................5\n3. Notation ........................................................5\n4. Static DH Proof-of-Possession Process ...........................6\n   4.1. ASN.1 Encoding .............................................8\n5. Discrete Logarithm Signature ...................................11\n   5.1. Expanding the Digest Value ................................11\n   5.2. Signature Computation Algorithm ...........................12\n   5.3. Signature Verification Algorithm ..........................13\n   5.4. ASN.1 Encoding ............................................14\n6. Static ECDH Proof-of-Possession Process ........................16\n   6.1. ASN.1 Encoding ............................................18\n7. Security Considerations ........................................20\n8. References .....................................................21\n   8.1. Normative References ......................................21\n   8.2. Informative References ....................................21\nAppendix A. ASN.1 Modules .........................................23\n  A.1. 2008 ASN.1 Module ..........................................23\n  A.2. 1988 ASN.1 Module ..........................................28\nAppendix B. Example of Static DH Proof-of-Possession ..............30\nAppendix C. Example of Discrete Log Signature .....................38",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Among the responsibilities of a Certification Authority (CA) in issuing certificates is a requirement that it verifies the identity for the entity to which it is issuing a certificate and that the private key for the public key to be placed in the certificate is in the possession of that entity. The process of validating that the private key is held by the requester of the certificate is called Proof-of-Possession (POP). Further details on why POP is important can be found in Appendix C of RFC 4211 [CRMF].",
      "ja": "証明書の発行における認証局（CA）の責任には、証明書の発行先であるエンティティーのIDを検証し、証明書に配置される公開鍵の秘密鍵を所有しているという要件があります。そのエンティティの。秘密鍵が証明書の要求者によって保持されていることを検証するプロセスは、所有証明（POP）と呼ばれます。 POPが重要である理由の詳細については、RFC 4211 [CRMF]の付録Cをご覧ください。"
    },
    {
      "indent": 3,
      "text": "This document is designed to deal with the problem of how to support POP for encryption-only keys. PKCS #10 [RFC2986] and the Certificate Request Message Format (CRMF) [CRMF] both define syntaxes for Certification Requests. However, while CRMF supports an alternative method to support POP for encryption-only keys, PKCS #10 does not. PKCS #10 assumes that the public key being requested for certification corresponds to an algorithm that is capable of producing a POP by a signature operation. Diffie-Hellman (DH) and Elliptic Curve Diffie-Hellman (ECDH) are key agreement algorithms and, as such, cannot be directly used for signing or encryption.",
      "ja": "このドキュメントは、暗号化専用キーのPOPをサポートする方法の問題に対処することを目的としています。 PKCS＃10 [RFC2986]と証明書要求メッセージ形式（CRMF）[CRMF]はどちらも、証明書要求の構文を定義します。ただし、CRMFは暗号化のみの鍵のPOPをサポートする代替方法をサポートしていますが、PKCS＃10はサポートしていません。 PKCS＃10は、認証のために要求されている公開鍵が、署名操作によってPOPを生成できるアルゴリズムに対応していると想定しています。 Diffie-Hellman（DH）とElliptic Curve Diffie-Hellman（ECDH）は、鍵合意アルゴリズムであるため、署名や暗号化に直接使用することはできません。"
    },
    {
      "indent": 3,
      "text": "This document describes a set of three POP algorithms. Two methods use the key agreement process (one for DH and one for ECDH) to provide a shared secret as the basis of an integrity check value. For these methods, the value is constructed for a specific recipient/ verifier by using a public key of that verifier. The third method uses a modified signature algorithm (for DH). This method allows for arbitrary verifiers.",
      "ja": "このドキュメントでは、3つのPOPアルゴリズムのセットについて説明します。 2つの方法では、キー合意プロセス（DH用とECDH用）を使用して、整合性チェック値の基礎として共有秘密を提供します。これらのメソッドの場合、値はその検証者の公開鍵を使用して特定の受信者/検証者用に構築されます。 3番目の方法は、変更された署名アルゴリズム（DH用）を使用します。このメソッドは、任意の検証者を許可します。"
    },
    {
      "indent": 3,
      "text": "It should be noted that we did not create an algorithm that parallels the Elliptical Curve Digital Signature Algorithm (ECDSA) as was done for the Digital Signature Algorithm (DSA). When using ECDH, the common practice is to use one of a set of predefined curves; each of these curves has been designed to be paired with one of the commonly used hash algorithms. This differs in practice from the DH case where the common practice is to generate a set of group parameters, either on a single machine or for a given community, that are aligned to encryption algorithms rather than hash algorithms. The implication is that, if a key has the ability to perform the modified DSA algorithm for ECDSA, it should be able to use the correct hash algorithm and perform the regular ECDSA signature algorithm with the correctly sized hash.",
      "ja": "デジタル署名アルゴリズム（DSA）の場合のように、楕円曲線デジタル署名アルゴリズム（ECDSA）に対応するアルゴリズムを作成していないことに注意してください。 ECDHを使用する場合の一般的な方法は、事前定義された一連の曲線の1つを使用することです。これらの曲線のそれぞれは、一般的に使用されるハッシュアルゴリズムの1つとペアになるように設計されています。これは、実際には、ハッシュアルゴリズムではなく暗号化アルゴリズムに合わせて、単一のマシンまたは特定のコミュニティでグループパラメーターのセットを生成するDHの場合とは異なります。つまり、鍵にECDSAの変更されたDSAアルゴリズムを実行する機能がある場合、正しいハッシュアルゴリズムを使用し、適切なサイズのハッシュで通常のECDSA署名アルゴリズムを実行できるはずです。"
    },
    {
      "indent": 0,
      "text": "1.1. Changes since RFC 2875",
      "section_title": true,
      "ja": "1.1. RFC 2875以降の変更"
    },
    {
      "indent": 3,
      "text": "The following changes have been made:",
      "ja": "次の変更が行われました。"
    },
    {
      "indent": 3,
      "text": "o The Static DH POP algorithm has been rewritten for parameterization of the hash algorithm and the Message Authentication Code (MAC) algorithm.",
      "ja": "o 静的DH POPアルゴリズムは、ハッシュアルゴリズムとメッセージ認証コード（MAC）アルゴリズムのパラメーター化のために書き直されました。"
    },
    {
      "indent": 3,
      "text": "o New instances of the Static DH POP algorithm have been created using the Hashed Message Authentication Code (HMAC) paired with the SHA-224, SHA-256, SHA-384, and SHA-512 hash algorithms. However, the current SHA-1 algorithm remains identical.",
      "ja": "o 静的DH POPアルゴリズムの新しいインスタンスは、SHA-224、SHA-256、SHA-384、およびSHA-512ハッシュアルゴリズムと組み合わせたハッシュメッセージ認証コード（HMAC）を使用して作成されています。ただし、現在のSHA-1アルゴリズムは同じままです。"
    },
    {
      "indent": 3,
      "text": "o The Discrete Logarithm Signature algorithm has been rewritten for parameterization of the hash algorithm.",
      "ja": "o ハッシュアルゴリズムのパラメーター化のために、離散対数署名アルゴリズムが書き直されました。"
    },
    {
      "indent": 3,
      "text": "o New instances of the Discrete Logarithm Signature have been created for the SHA-224, SHA-256, SHA-384, and SHA-512 hash functions. However, the current SHA-1 algorithm remains identical.",
      "ja": "o SHA-224、SHA-256、SHA-384、およびSHA-512ハッシュ関数用に、離散対数署名の新しいインスタンスが作成されました。ただし、現在のSHA-1アルゴリズムは同じままです。"
    },
    {
      "indent": 3,
      "text": "o A new Static ECDH POP algorithm has been added.",
      "ja": "o 新しい静的ECDH POPアルゴリズムが追加されました。"
    },
    {
      "indent": 3,
      "text": "o New instances of the Static ECDH POP algorithm have been created using HMAC paired with the SHA-224, SHA-256, SHA-384, and SHA-512 hash functions.",
      "ja": "o 静的ECDH POPアルゴリズムの新しいインスタンスは、SHA-224、SHA-256、SHA-384、およびSHA-512ハッシュ関数とペアになったHMACを使用して作成されました。"
    },
    {
      "indent": 0,
      "text": "1.2. Requirements Terminology",
      "section_title": true,
      "ja": "1.2. 要件の用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は、 [RFC2119]で説明されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "When the words are in lower case they have their natural language meaning.",
      "ja": "単語が小文字の場合、自然言語の意味があります。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2. 用語"
    },
    {
      "indent": 3,
      "text": "The following definitions will be used in this document:",
      "ja": "このドキュメントでは、次の定義が使用されます。"
    },
    {
      "indent": 3,
      "text": "DH certificate = a certificate whose SubjectPublicKey is a DH public value and is signed with any signature algorithm (e.g., RSA or DSA).",
      "ja": "DH証明書= SubjectPublicKeyがDHパブリック値であり、任意の署名アルゴリズム（RSAまたはDSAなど）で署名されている証明書"
    },
    {
      "indent": 3,
      "text": "ECDH certificate = a certificate whose SubjectPublicKey is an ECDH public value and is signed with any signature algorithm (e.g., RSA or ECDSA).",
      "ja": "ECDH証明書= SubjectPublicKeyがECDHパブリック値であり、任意の署名アルゴリズム（RSAまたはECDSAなど）で署名されている証明書。"
    },
    {
      "indent": 3,
      "text": "Proof-of-Possession (POP) = a means that provides a method for a second party to perform an algorithm to establish with some degree of assurance that the first party does possess and has the ability to use a private key. The reasoning behind doing POP can be found in Appendix C in [CRMF].",
      "ja": "所有証明（POP）=第二者がアルゴリズムを実行して、第一者が秘密鍵を所有し、その能力を持っていることをある程度の保証をもって確立する方法を提供する手段。 POPを行う理由は[CRMF]の付録Cにあります。"
    },
    {
      "indent": 0,
      "text": "3. Notation",
      "section_title": true,
      "ja": "3. 表記"
    },
    {
      "indent": 3,
      "text": "This section describes mathematical notations, conventions, and symbols used throughout this document.",
      "ja": "このセクションでは、このドキュメント全体で使用される数学的表記、規則、記号について説明します。"
    },
    {
      "indent": 5,
      "text": "a | b : Concatenation of a and b a ^ b : a raised to the power of b a mod b : a modulo b a / b : a divided by b using integer division a * b : a times b Depending on context, multiplication may be within an EC or normal multiplication",
      "ja": "a | b：aとbaの連結^ b：aの累乗mod mod b：a modulo ba / b：a除算を使用してbで除算a * b：a回bコンテキストによっては、EC内で乗算が行われるまたは通常の乗算"
    },
    {
      "indent": 5,
      "text": "KDF(a)         : Key Derivation Function producing a value from a\nMAC(a, b)      : Message Authentication Code function where\n                 a is the key and b is the text\nLEFTMOST(a, b) : Return the b left most bits of a\nFLOOR(a)       : Return n where n is the largest integer such that\n                 n <= a",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Details on how to implement the HMAC version of a MAC function used in this document can be found in RFC 2104 [RFC2104], RFC 6234 [RFC6234], and RFC 4231 [RFC4231].",
      "ja": "このドキュメントで使用されているMAC関数のHMACバージョンを実装する方法の詳細は、RFC 2104 [RFC2104]、RFC 6234 [RFC6234]、およびRFC 4231 [RFC4231]に記載されています。"
    },
    {
      "indent": 0,
      "text": "4. Static DH Proof-of-Possession Process",
      "section_title": true,
      "ja": "4. 静的DHの所有証明プロセス"
    },
    {
      "indent": 3,
      "text": "The Static DH POP algorithm is set up to use a Key Derivation Function (KDF) and a MAC. This algorithm requires that a common set of group parameters be used by both the creator and verifier of the POP value.",
      "ja": "静的DH POPアルゴリズムは、鍵導出関数（KDF）とMACを使用するように設定されています。このアルゴリズムでは、POP値の作成者と検証者の両方が共通のグループパラメータセットを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "The steps for creating a DH POP are:",
      "ja": "DH POPを作成する手順は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. An entity (E) chooses the group parameters for a DH key agreement.",
      "ja": "1. エンティティ（E）は、DH鍵合意のグループパラメータを選択します。"
    },
    {
      "indent": 7,
      "text": "This is done simply by selecting the group parameters from a certificate for the recipient of the POP process. A certificate with the correct group parameters has to be available.",
      "ja": "これは、POPプロセスの受信者の証明書からグループパラメータを選択するだけで実行できます。正しいグループパラメータを持つ証明書が使用可能である必要があります。"
    },
    {
      "indent": 7,
      "text": "Let the common DH parameters be g and p; and let the DH key pair from the certificate be known as the recipient (R) key pair (Rpub and Rpriv).",
      "ja": "共通のDHパラメータをgとpとします。証明書のDHキーペアを受信者（R）キーペア（RpubおよびRpriv）と呼びます。"
    },
    {
      "indent": 7,
      "text": "Rpub = g^x mod p (where x=Rpriv, the private DH value)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2. The entity generates a DH public/private key pair using the group parameters from step 1.",
      "ja": "2. エンティティは、手順1のグループパラメータを使用してDH公開/秘密鍵ペアを生成します。"
    },
    {
      "indent": 7,
      "text": "For an entity (E):",
      "ja": "エンティティ（E）の場合："
    },
    {
      "indent": 7,
      "text": "Epriv = DH private value = y\nEpub = DH public value = g^y mod p",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3. The POP computation process will then consist of the following steps:",
      "ja": "3. POP計算プロセスは、次の手順で構成されます。"
    },
    {
      "indent": 7,
      "text": "(a) The value to be signed (text) is obtained. (For a PKCS #10 object, the value is the DER-encoded certificationRequestInfo field represented as an octet string.)",
      "ja": "（a）署名する値（テキスト）を取得します。 （PKCS＃10オブジェクトの場合、値はオクテット文字列として表されるDERエンコードのauthenticationRequestInfoフィールドです。）"
    },
    {
      "indent": 7,
      "text": "(b) A shared DH secret is computed as follows:",
      "ja": "（b）共有DHシークレットは次のように計算されます。"
    },
    {
      "indent": 12,
      "text": "shared secret = ZZ = g^(x*y) mod p",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "[This is done by E as Rpub^y and by the recipient as Epub^x, where Rpub is retrieved from the recipient's DH certificate (or is provided in the protocol) and Epub is retrieved from the Certification Request.]",
      "ja": "[これは、EによってRpub ^ yとして、受信者によってEpub ^ xとして行われます。Rpubは受信者のDH証明書から取得され（またはプロトコルで提供されます）、Epubは認証要求から取得されます。]"
    },
    {
      "indent": 7,
      "text": "(c) A temporary key K is derived from the shared secret ZZ as follows:",
      "ja": "（c）一時鍵Kは、次のように共有秘密ZZから導出されます。"
    },
    {
      "indent": 15,
      "text": "K = KDF(LeadingInfo | ZZ | TrailingInfo)",
      "ja": "K = KDF（LeadingInfo | ZZ | TrailingInfo）"
    },
    {
      "indent": 15,
      "text": "LeadingInfo ::= Subject Distinguished Name from\nrecipient's certificate",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 15,
      "text": "TrailingInfo ::= Issuer Distinguished Name from\nrecipient's certificate",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "(d) Using the defined MAC function, compute MAC(K, text).",
      "ja": "（d）定義されたMAC関数を使用して、MAC（K、text）を計算します。"
    },
    {
      "indent": 3,
      "text": "The POP verification process requires the recipient to carry out steps (a) through (d) and then simply compare the result of step (d) with what it received as the signature component. If they match, then the following can be concluded:",
      "ja": "POP検証プロセスでは、受信者が手順（a）〜（d）を実行し、手順（d）の結果を署名コンポーネントとして受け取った結果と単純に比較する必要があります。それらが一致する場合、次のことが結論付けられます。"
    },
    {
      "indent": 3,
      "text": "(a) The entity possesses the private key corresponding to the public key in the Certification Request because it needs the private key to calculate the shared secret; and",
      "ja": "（a）エンティティは、共有秘密を計算するために秘密鍵を必要とするため、認証要求の公開鍵に対応する秘密鍵を所有しています。そして"
    },
    {
      "indent": 3,
      "text": "(b) Only the recipient that the entity sent the request to could actually verify the request because it would require its own private key to compute the same shared secret. In the case where the recipient is a CA, this protects the entity from rogue CAs.",
      "ja": "（b）エンティティがリクエストを送信した受信者のみが実際にリクエストを検証できます。これは、同じ共有シークレットを計算するために独自のプライベートキーが必要になるためです。受信者がCAである場合、これはエンティティを不正なCAから保護します。"
    },
    {
      "indent": 0,
      "text": "4.1. ASN.1 Encoding",
      "section_title": true,
      "ja": "4.1. ASN.1エンコーディング"
    },
    {
      "indent": 3,
      "text": "The algorithm outlined above allows for the use of an arbitrary hash function in computing the temporary key and the MAC algorithm. In this specification, we define object identifiers for the SHA-1, SHA-224, SHA-256, SHA-384, and SHA-512 hash values and use HMAC for the MAC algorithm. The ASN.1 structures associated with the Static DH POP algorithm are:",
      "ja": "上記のアルゴリズムでは、一時キーとMACアルゴリズムの計算に任意のハッシュ関数を使用できます。この仕様では、SHA-1、SHA-224、SHA-256、SHA-384、およびSHA-512ハッシュ値のオブジェクト識別子を定義し、MACアルゴリズムにHMACを使用します。静的DH POPアルゴリズムに関連付けられているASN.1構造は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "DhSigStatic ::= SEQUENCE {\n    issuerAndSerial IssuerAndSerialNumber OPTIONAL,\n    hashValue       MessageDigest\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-static-sha1-hmac-sha1 SIGNATURE-ALGORITHM ::= {\n     IDENTIFIER id-dhPop-static-sha1-hmac-sha1\n     VALUE DhSigStatic\n     PARAMS ARE absent\n     PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-dh-sig-hmac-sha1 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 3\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-dhPop-static-sha1-hmac-sha1 OBJECT IDENTIFIER ::=\n     id-dh-sig-hmac-sha1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-static-sha224-hmac-sha224 SIGNATURE-ALGORITHM ::= {\n     IDENTIFIER id-alg-dhPop-static-sha224-hmac-sha224\n     VALUE DhSigStatic\n     PARAMS ARE absent\n     PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-static-sha224-hmac-sha224 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 15\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "      sa-dhPop-static-sha256-hmac-sha256 SIGNATURE-ALGORITHM ::= {\n           IDENTIFIER id-alg-dhPop-static-sha256-hmac-sha256\n           VALUE DhSigStatic\n           PARAMS ARE absent\n           PUBLIC-KEYS { pk-dh }\n      }\n      id-alg-dhPop-static-sha256-hmac-sha256 OBJECT IDENTIFIER ::= {\n           id-pkix id-alg(6) 16\n      }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-static-sha384-hmac-sha384 SIGNATURE-ALGORITHM ::= {\n     IDENTIFIER id-alg-dhPop-static-sha384-hmac-sha384\n     VALUE DhSigStatic\n     PARAMS ARE absent\n     PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-static-sha384-hmac-sha384 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 17\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-static-sha512-hmac-sha512 SIGNATURE-ALGORITHM ::= {\n     IDENTIFIER id-alg-dhPop-static-sha512-hmac-sha512\n     VALUE DhSigStatic\n     PARAMS ARE absent\n     PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-static-sha512-hmac-sha512 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 18\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In the above ASN.1, the following items are defined:",
      "ja": "上記のASN.1では、次の項目が定義されています。"
    },
    {
      "indent": 3,
      "text": "DhSigStatic This ASN.1 type structure holds the information describing the signature. The structure has the following fields:",
      "ja": "DhSigStaticこのASN.1タイプの構造は、署名を説明する情報を保持します。この構造には次のフィールドがあります。"
    },
    {
      "indent": 6,
      "text": "issuerAndSerial This field contains the issuer name and serial number of the certificate from which the public key was obtained. The issuerAndSerial field is omitted if the public key did not come from a certificate.",
      "ja": "issuerAndSerialこのフィールドには、公開鍵を取得した証明書の発行者名とシリアル番号が含まれます。公開鍵が証明書からのものでない場合、issuerAndSerialフィールドは省略されます。"
    },
    {
      "indent": 6,
      "text": "hashValue This field contains the result of the MAC operation in step 3(d) (Section 4).",
      "ja": "hashValueこのフィールドには、ステップ3（d）（セクション4）でのMAC操作の結果が含まれます。"
    },
    {
      "indent": 3,
      "text": "sa-dhPop-static-sha1-hmac-sha1 An ASN.1 SIGNATURE-ALGORITHM object that associates together the information describing a signature algorithm. The structure DhSigStatic represents the signature value, and the parameters MUST be absent.",
      "ja": "sa-dhPop-static-sha1-hmac-sha1署名アルゴリズムを記述する情報を一緒に関連付けるASN.1 SIGNATURE-ALGORITHMオブジェクト。構造DhSigStaticは署名値を表し、パラメーターは存在しない必要があります。"
    },
    {
      "indent": 3,
      "text": "id-dhPop-static-sha1-hmac-sha1 This OID identifies the Static DH POP algorithm that uses SHA-1 as the KDF and HMAC-SHA1 as the MAC function. The new OID was created for naming consistency with the other OIDs defined here. The value of the OID is the same value as id-dh-sig-hmac-sha1, which was defined in the previous version of this document [RFC2875].",
      "ja": "id-dhPop-static-sha1-hmac-sha1このOIDは、SHA-1をKDFとして使用し、HMAC-SHA1をMAC関数として使用する静的DH POPアルゴリズムを識別します。新しいOIDは、ここで定義されている他のOIDとの一貫性を保つために作成されました。 OIDの値は、このドキュメントの以前のバージョン[RFC2875]で定義されたid-dh-sig-hmac-sha1と同じ値です。"
    },
    {
      "indent": 3,
      "text": "sa-dhPop-static-sha224-hmac-sha224 An ASN.1 SIGNATURE-ALGORITHM object that associates together the information describing this signature algorithm. The structure DhSigStatic represents the signature value, and the parameters MUST be absent.",
      "ja": "sa-dhPop-static-sha224-hmac-sha224この署名アルゴリズムを説明する情報を一緒に関連付けるASN.1 SIGNATURE-ALGORITHMオブジェクト。構造DhSigStaticは署名値を表し、パラメーターは存在しない必要があります。"
    },
    {
      "indent": 3,
      "text": "id-dhPop-static-sha224-hmac-sha224 This OID identifies the Static DH POP algorithm that uses SHA-224 as the KDF and HMAC-SHA224 as the MAC function.",
      "ja": "id-dhPop-static-sha224-hmac-sha224このOIDは、SHA-224をKDFとして使用し、HMAC-SHA224をMAC機能として使用する静的DH POPアルゴリズムを識別します。"
    },
    {
      "indent": 3,
      "text": "sa-dhPop-static-sha256-hmac-sha256 An ASN.1 SIGNATURE-ALGORITHM object that associates together the information describing this signature algorithm. The structure DhSigStatic represents the signature value, and the parameters MUST be absent.",
      "ja": "sa-dhPop-static-sha256-hmac-sha256この署名アルゴリズムを説明する情報を関連付けるASN.1 SIGNATURE-ALGORITHMオブジェクト。構造体DhSigStaticは署名値を表し、パラメーターは存在しない必要があります。"
    },
    {
      "indent": 3,
      "text": "id-dhPop-static-sha256-hmac-sha256 This OID identifies the Static DH POP algorithm that uses SHA-256 as the KDF and HMAC-SHA256 as the MAC function.",
      "ja": "id-dhPop-static-sha256-hmac-sha256このOIDは、SHA-256をKDFとして使用し、HMAC-SHA256をMAC関数として使用する静的DH POPアルゴリズムを識別します。"
    },
    {
      "indent": 3,
      "text": "sa-dhPop-static-sha384-hmac-sha384 An ASN.1 SIGNATURE-ALGORITHM object that associates together the information describing this signature algorithm. The structure DhSigStatic represents the signature value, and the parameters MUST be absent.",
      "ja": "sa-dhPop-static-sha384-hmac-sha384この署名アルゴリズムを説明する情報を関連付けるASN.1 SIGNATURE-ALGORITHMオブジェクト。構造体DhSigStaticは署名値を表し、パラメーターは存在しない必要があります。"
    },
    {
      "indent": 3,
      "text": "id-dhPop-static-sha384-hmac-sha384 This OID identifies the Static DH POP algorithm that uses SHA-384 as the KDF and HMAC-SHA384 as the MAC function.",
      "ja": "id-dhPop-static-sha384-hmac-sha384このOIDは、SHA-384をKDFとして使用し、HMAC-SHA384をMAC関数として使用する静的DH POPアルゴリズムを識別します。"
    },
    {
      "indent": 3,
      "text": "sa-dhPop-static-sha512-hmac-sha512 An ASN.1 SIGNATURE-ALGORITHM object that associates together the information describing this signature algorithm. The structure DhSigStatic represents the signature value, and the parameters MUST be absent.",
      "ja": "sa-dhPop-static-sha512-hmac-sha512この署名アルゴリズムを説明する情報を一緒に関連付けるASN.1 SIGNATURE-ALGORITHMオブジェクト。構造体DhSigStaticは署名値を表し、パラメーターは存在しない必要があります。"
    },
    {
      "indent": 3,
      "text": "id-dhPop-static-sha512-hmac-sha512 This OID identifies the Static DH POP algorithm that uses SHA-512 as the KDF and HMAC-SHA512 as the MAC function.",
      "ja": "id-dhPop-static-sha512-hmac-sha512このOIDは、SHA-512をKDFとして使用し、HMAC-SHA512をMAC関数として使用する静的DH POPアルゴリズムを識別します。"
    },
    {
      "indent": 0,
      "text": "5. Discrete Logarithm Signature",
      "section_title": true,
      "ja": "5. 離散対数署名"
    },
    {
      "indent": 3,
      "text": "When a single set of parameters is used for a large group of keys, the chance that a collision will occur in the set of keys, either by accident or design, increases as the number of keys used increases. A large number of keys from a single parameter set also encourages the use of brute force methods of attack, as the entire set of keys in the parameters can be attacked in a single operation rather than having to attack each key parameter set individually.",
      "ja": "多数のキーのグループに単一のパラメーターセットを使用すると、使用するキーの数が増えると、偶然または意図的に、キーのセットで衝突が発生する可能性が高くなります。単一のパラメーターセットから多数のキーを使用すると、ブルートフォース攻撃方法の使用も奨励されます。パラメーターのキーセット全体を、各キーパラメーターセットを個別に攻撃する必要なく、1回の操作で攻撃できるためです。"
    },
    {
      "indent": 3,
      "text": "For this reason, we need to create a POP for DH keys that does not require the use of a common set of parameters.",
      "ja": "このため、共通のパラメーターセットの使用を必要としないDHキーのPOPを作成する必要があります。"
    },
    {
      "indent": 3,
      "text": "This POP algorithm is based on DSA, but we have removed the restrictions dealing with the hash and key sizes imposed by the [FIPS-186-3] standard. The use of this method does impose some additional restrictions on the set of keys that may be used; however, if the key-generation algorithm documented in [RFC2631] is used, the required restrictions are met. The additional restrictions are the requirement for the existence of a q parameter. Adding the q parameter is generally accepted as a good practice, as it allows for checking of small subgroup attacks.",
      "ja": "このPOPアルゴリズムはDSAに基づいていますが、[FIPS-186-3]標準によって課されるハッシュとキーのサイズに関する制限を取り除きました。このメソッドを使用すると、使用できるキーのセットに追加の制限が課せられます。ただし、[RFC2631]で文書化されている鍵生成アルゴリズムが使用される場合、必要な制限は満たされます。追加の制限は、qパラメーターが存在するための要件です。 qパラメータを追加することは、小さなサブグループ攻撃のチェックを可能にするため、通常は良い方法として受け入れられます。"
    },
    {
      "indent": 3,
      "text": "The following definitions are used in the rest of this section:",
      "ja": "このセクションの残りの部分では、次の定義が使用されます。"
    },
    {
      "indent": 3,
      "text": "p is a large prime\ng = h^((p-1)/q) mod p,\nwhere h is any integer 1 < h < p-1 such that h^((p-1)/q) mod p > 1\n(g has order q mod p)\nq is a large prime\nj is a large integer such that p = q*j + 1\nx is a randomly or pseudo-randomly generated integer with 1 < x < q\ny = g^x mod p\nHASH is a hash function such that\nb = the output size of HASH in bits",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Note: These definitions match the ones in [RFC2631].",
      "ja": "注：これらの定義は[RFC2631]の定義と一致します。"
    },
    {
      "indent": 0,
      "text": "5.1. Expanding the Digest Value",
      "section_title": true,
      "ja": "5.1. ダイジェスト値の拡大"
    },
    {
      "indent": 3,
      "text": "Besides the addition of a q parameter, [FIPS-186-3] also imposes size restrictions on the parameters. The length of q must be 160 bits (matching the output length of the SHA-1 digest algorithm), and the length of p must be 1024 bits. The size restriction on p is eliminated in this document, but the size restriction on q is replaced with the requirement that q must be at least b bits in length. (If the hash function is SHA-1, then b=160 bits and the size restriction on b is identical with that in [FIPS-186-3].) Given that",
      "ja": "qパラメータの追加に加えて、[FIPS-186-3]はパラメータにサイズ制限を課します。 qの長さは160ビット（SHA-1ダイジェストアルゴリズムの出力長に一致）である必要があり、pの長さは1024ビットである必要があります。このドキュメントでは、pのサイズ制限は削除されていますが、qのサイズ制限は、qが少なくともbビットの長さでなければならないという要件に置き換えられています。 （ハッシュ関数がSHA-1の場合、b = 160ビットで、bのサイズ制限は[FIPS-186-3]のサイズ制限と同じです。）"
    },
    {
      "indent": 3,
      "text": "there is not a random length-hashing algorithm, a hash value of the message will need to be derived such that the hash is in the range from 0 to q-1. If the length of q is greater than b, then a method must be provided to expand the hash.",
      "ja": "ランダムな長さハッシュアルゴリズムはありません。メッセージのハッシュ値は、ハッシュが0からq-1の範囲になるように導出する必要があります。 qの長さがbより大きい場合は、ハッシュを拡張するメソッドを提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "The method for expanding the digest value used in this section does not provide any additional security beyond the b bits provided by the hash algorithm. For this reason, the hash algorithm should be the largest size possible to match q. The value being signed is increased mainly to enhance the difficulty of reversing the signature process.",
      "ja": "このセクションで使用されるダイジェスト値を拡張する方法では、ハッシュアルゴリズムによって提供されるbビットを超える追加のセキュリティは提供されません。このため、ハッシュアルゴリズムは、qに一致させるために可能な最大サイズである必要があります。署名される値は、主に署名プロセスを元に戻す難しさを高めるために増加します。"
    },
    {
      "indent": 3,
      "text": "This algorithm produces m, the value to be signed.",
      "ja": "このアルゴリズムは、署名される値であるmを生成します。"
    },
    {
      "indent": 3,
      "text": "Let L = the size of q (i.e., 2^L <= q < 2^(L+1)). Let M be the original message to be signed. Let b be the length of HASH output.",
      "ja": "L = qのサイズとします（つまり、2 ^ L <= q <2 ^（L + 1））。署名する元のメッセージをMとします。 bをHASH出力の長さとします。"
    },
    {
      "indent": 3,
      "text": "1. Compute d = HASH(M), the digest of the original message.",
      "ja": "1. 元のメッセージのダイジェストであるd = HASH（M）を計算します。"
    },
    {
      "indent": 3,
      "text": "2. If L == b, then m = d.",
      "ja": "2. L == bの場合、m = dです。"
    },
    {
      "indent": 3,
      "text": "3. If L > b, then follow steps (a) through (d) below.",
      "ja": "3. L> bの場合は、以下の（a）から（d）の手順に従ってください。"
    },
    {
      "indent": 7,
      "text": "(a)  Set n = FLOOR(L / b)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "(b) Set m = d, the initial computed digest value",
      "ja": "（b）計算された初期ダイジェスト値であるm = dを設定する"
    },
    {
      "indent": 7,
      "text": "(c)  For i = 0 to n - 1\n     m = m | HASH(m)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "(d) m = LEFTMOST(m, L-1)",
      "ja": "（d）m = LEFTMOST（m、L-1）"
    },
    {
      "indent": 3,
      "text": "Thus, the final result of the process meets the criteria that 0 <= m < q.",
      "ja": "したがって、プロセスの最終結果は、0 <= m <qという基準を満たします。"
    },
    {
      "indent": 0,
      "text": "5.2. Signature Computation Algorithm",
      "section_title": true,
      "ja": "5.2. 署名計算アルゴリズム"
    },
    {
      "indent": 3,
      "text": "The signature algorithm produces the pair of values (r, s), which is the signature. The signature is computed as follows:",
      "ja": "署名アルゴリズムは、署名である値のペア（r、s）を生成します。署名は次のように計算されます。"
    },
    {
      "indent": 3,
      "text": "Given m, the value to be signed, as well as the parameters defined earlier in Section 5:",
      "ja": "m、署名する値、およびセクション5で前に定義したパラメーターを指定します。"
    },
    {
      "indent": 3,
      "text": "1. Generate a random or pseudo-random integer k, such that 0 < k-1 < q.",
      "ja": "1. ランダムまたは疑似ランダム整数kを生成します（0 <k-1 <qなど）。"
    },
    {
      "indent": 3,
      "text": "2. Compute r = (g^k mod p) mod q.",
      "ja": "2. r =（g ^ k mod p）mod qを計算します。"
    },
    {
      "indent": 3,
      "text": "3. If r is zero, repeat from step 1.",
      "ja": "3. rがゼロの場合は、手順1から繰り返します。"
    },
    {
      "indent": 3,
      "text": "4. Compute s = ((k^-1) * (m + x*r)) mod q.",
      "ja": "4. s =（（k ^ -1）*（m + x * r））mod qを計算します。"
    },
    {
      "indent": 3,
      "text": "5. If s is zero, repeat from step 1.",
      "ja": "5. sがゼロの場合は、手順1から繰り返します。"
    },
    {
      "indent": 0,
      "text": "5.3. Signature Verification Algorithm",
      "section_title": true,
      "ja": "5.3. 署名検証アルゴリズム"
    },
    {
      "indent": 3,
      "text": "The signature verification process is far more complicated than is normal for DSA, as some assumptions about the validity of parameters cannot be taken for granted.",
      "ja": "パラメータの有効性に関するいくつかの仮定は当然とは言えないため、署名検証プロセスはDSAの通常のプロセスよりもはるかに複雑です。"
    },
    {
      "indent": 3,
      "text": "Given a value m to be validated, the signature value pair (r, s) and the parameters for the key:",
      "ja": "検証する値m、署名値のペア（r、s）、およびキーのパラメーターを指定します。"
    },
    {
      "indent": 3,
      "text": "1. Perform a strong verification that p is a prime number.",
      "ja": "1. pが素数であることを強力に検証します。"
    },
    {
      "indent": 3,
      "text": "2. Perform a strong verification that q is a prime number.",
      "ja": "2. qが素数であることを強力に検証します。"
    },
    {
      "indent": 3,
      "text": "3. Verify that q is a factor of p-1; if any of the above checks fail, then the signature cannot be verified and must be considered a failure.",
      "ja": "3. qがp-1の因数であることを確認します。上記のチェックのいずれかが失敗した場合、署名は検証できず、失敗と見なす必要があります。"
    },
    {
      "indent": 3,
      "text": "4. Verify that r and s are in the range [1, q-1].",
      "ja": "4. rとsが[1、q-1]の範囲にあることを確認します。"
    },
    {
      "indent": 3,
      "text": "5. Compute w = (s^-1) mod q.",
      "ja": "5. w =（s ^ -1）mod qを計算します。"
    },
    {
      "indent": 3,
      "text": "6. Compute u1 = m*w mod q.",
      "ja": "6. u1 = m * w mod qを計算します。"
    },
    {
      "indent": 3,
      "text": "7. Compute u2 = r*w mod q.",
      "ja": "7. u2 = r * w mod qを計算します。"
    },
    {
      "indent": 3,
      "text": "8. Compute v = ((g^u1 * y^u2) mod p) mod q.",
      "ja": "8. v =（（g ^ u1 * y ^ u2）mod p）mod qを計算します。"
    },
    {
      "indent": 3,
      "text": "9. Compare v and r; if they are the same, then the signature verified correctly.",
      "ja": "9. vとrを比較します。それらが同じ場合、署名は正しく検証されました。"
    },
    {
      "indent": 0,
      "text": "5.4. ASN.1 Encoding",
      "section_title": true,
      "ja": "5.4. ASN.1エンコーディング"
    },
    {
      "indent": 3,
      "text": "The signature algorithm is parameterized by the hash algorithm. The ASN.1 structures associated with the Discrete Logarithm Signature algorithm are:",
      "ja": "署名アルゴリズムは、ハッシュアルゴリズムによってパラメーター化されます。離散対数署名アルゴリズムに関連するASN.1構造は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "sa-dhPop-SHA1 SIGNATURE-ALGORITHM ::= {\n   IDENTIFIER id-alg-dh-pop\n   VALUE DSA-Sig-Value\n   PARAMS TYPE DomainParameters ARE preferredAbsent\n   HASHES { mda-sha1 }\n   PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-sha1 OBJECT IDENTIFIER ::= id-alg-dh-pop",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dh-pop OBJECT IDENTIFIER ::= { id-pkix id-alg(6) 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-sha224 SIGNATURE-ALGORITHM ::= {\n   IDENTIFIER id-alg-dhPop-sha224\n   VALUE DSA-Sig-Value\n   PARAMS TYPE DomainParameters ARE preferredAbsent\n   HASHES { mda-sha224 }\n   PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-sha224 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 5\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-sha256 SIGNATURE-ALGORITHM ::= {\n   IDENTIFIER id-alg-dhPop-sha256\n   VALUE DSA-Sig-Value\n   PARAMS TYPE DomainParameters ARE preferredAbsent\n   HASHES { mda-sha256 }\n   PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "      id-alg-dhPop-sha256 OBJECT IDENTIFIER ::= {\n           id-pkix id-alg(6) 6\n      }\n      sa-dhPop-sha384 SIGNATURE-ALGORITHM ::= {\n         IDENTIFIER id-alg-dhPop-sha384\n         VALUE DSA-Sig-Value\n         PARAMS TYPE DomainParameters ARE preferredAbsent\n         HASHES { mda-sha384 }\n         PUBLIC-KEYS { pk-dh }\n      }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-sha384 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 7\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-sha512 SIGNATURE-ALGORITHM ::= {\n   IDENTIFIER id-alg-dhPop-sha512\n   VALUE DSA-Sig-Value\n   PARAMS TYPE DomainParameters ARE preferredAbsent\n   HASHES { mda-sha512 }\n   PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-sha512 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 8\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In the above ASN.1, the following items are defined:",
      "ja": "上記のASN.1では、次の項目が定義されています。"
    },
    {
      "indent": 3,
      "text": "sa-dhPop-sha1 A SIGNATURE-ALGORITHM object that associates together the information describing this signature algorithm. The structure DSA-Sig-Value represents the signature value, and the structure DomainParameters SHOULD be omitted in the signature but MUST be present in the associated key request.",
      "ja": "sa-dhPop-sha1この署名アルゴリズムを説明する情報を関連付けるSIGNATURE-ALGORITHMオブジェクト。構造DSA-Sig-Valueは署名値を表し、構造DomainParametersは署名では省略されるべきですが、関連するキー要求に存在しなければなりません（MUST）。"
    },
    {
      "indent": 3,
      "text": "id-alg-dhPop-sha1 This OID identifies the Discrete Logarithm Signature using SHA-1 as the hash algorithm. The new OID was created for naming consistency with the others defined here. The value of the OID is the same as id-alg-dh-pop, which was defined in the previous version of this document [RFC2875].",
      "ja": "id-alg-dhPop-sha1このOIDは、ハッシュアルゴリズムとしてSHA-1を使用して離散対数署名を識別します。新しいOIDは、ここで定義されている他のOIDとの名前の整合性のために作成されました。 OIDの値は、このドキュメントの以前のバージョン[RFC2875]で定義されたid-alg-dh-popと同じです。"
    },
    {
      "indent": 3,
      "text": "sa-dhPop-sha224 A SIGNATURE-ALGORITHM object that associates together the information describing this signature algorithm. The structure DSA-Sig-Value represents the signature value, and the structure DomainParameters SHOULD be omitted in the signature but MUST be present in the associated key request.",
      "ja": "sa-dhPop-sha224この署名アルゴリズムを説明する情報を関連付けるSIGNATURE-ALGORITHMオブジェクト。構造DSA-Sig-Valueは署名値を表し、構造DomainParametersは署名では省略されるべきですが、関連するキー要求に存在しなければなりません（MUST）。"
    },
    {
      "indent": 3,
      "text": "id-alg-dhPop-sha224 This OID identifies the Discrete Logarithm Signature using SHA-224 as the hash algorithm.",
      "ja": "id-alg-dhPop-sha224このOIDは、ハッシュアルゴリズムとしてSHA-224を使用して離散対数署名を識別します。"
    },
    {
      "indent": 3,
      "text": "sa-dhPop-sha256 A SIGNATURE-ALGORITHM object that associates together the information describing this signature algorithm. The structure DSA-Sig-Value represents the signature value, and the structure DomainParameters SHOULD be omitted in the signature but MUST be present in the associated key request.",
      "ja": "sa-dhPop-sha256この署名アルゴリズムを説明する情報を関連付けるSIGNATURE-ALGORITHMオブジェクト。構造DSA-Sig-Valueは署名値を表し、構造DomainParametersは署名では省略されるべきですが、関連するキー要求に存在しなければなりません（MUST）。"
    },
    {
      "indent": 3,
      "text": "id-alg-dhPop-sha256 This OID identifies the Discrete Logarithm Signature using SHA-256 as the hash algorithm.",
      "ja": "id-alg-dhPop-sha256このOIDは、ハッシュアルゴリズムとしてSHA-256を使用して離散対数署名を識別します。"
    },
    {
      "indent": 3,
      "text": "sa-dhPop-sha384 A SIGNATURE-ALGORITHM object that associates together the information describing this signature algorithm. The structure DSA-Sig-Value represents the signature value, and the structure DomainParameters SHOULD be omitted in the signature but MUST be present in the associated key request.",
      "ja": "sa-dhPop-sha384この署名アルゴリズムを説明する情報を関連付けるSIGNATURE-ALGORITHMオブジェクト。構造DSA-Sig-Valueは署名値を表し、構造DomainParametersは署名では省略されるべきですが、関連するキー要求に存在しなければなりません（MUST）。"
    },
    {
      "indent": 3,
      "text": "id-alg-dhPop-sha384 This OID identifies the Discrete Logarithm Signature using SHA-384 as the hash algorithm.",
      "ja": "id-alg-dhPop-sha384このOIDは、ハッシュアルゴリズムとしてSHA-384を使用して離散対数署名を識別します。"
    },
    {
      "indent": 3,
      "text": "sa-dhPop-sha512 A SIGNATURE-ALGORITHM object that associates together the information describing this signature algorithm. The structure DSA-Sig-Value represents the signature value, and the structure DomainParameters SHOULD be omitted in the signature but MUST be present in the associated key request.",
      "ja": "sa-dhPop-sha512この署名アルゴリズムを説明する情報を関連付けるSIGNATURE-ALGORITHMオブジェクト。構造DSA-Sig-Valueは署名値を表し、構造DomainParametersは署名では省略されるべきですが、関連するキー要求に存在しなければなりません（MUST）。"
    },
    {
      "indent": 3,
      "text": "id-alg-dhPop-sha512 This OID identifies the Discrete Logarithm Signature using SHA-512 as the hash algorithm.",
      "ja": "id-alg-dhPop-sha512このOIDは、ハッシュアルゴリズムとしてSHA-512を使用して離散対数署名を識別します。"
    },
    {
      "indent": 0,
      "text": "6. Static ECDH Proof-of-Possession Process",
      "section_title": true,
      "ja": "6. 静的ECDH所有証明プロセス"
    },
    {
      "indent": 3,
      "text": "The Static ECDH POP algorithm is set up to use a KDF and a MAC. This algorithm requires that a common set of group parameters be used by both the creator and the verifier of the POP value. Full details of how Elliptic Curve Cryptography (ECC) works can be found in RFC 6090 [RFC6090].",
      "ja": "静的ECDH POPアルゴリズムは、KDFとMACを使用するように設定されています。このアルゴリズムでは、POP値の作成者と検証者の両方が共通のグループパラメータセットを使用する必要があります。楕円曲線暗号（ECC）の仕組みの詳細は、RFC 6090 [RFC6090]に記載されています。"
    },
    {
      "indent": 3,
      "text": "The steps for creating an ECDH POP are:",
      "ja": "ECDH POPを作成する手順は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. An entity (E) chooses the group parameters for an ECDH key agreement.",
      "ja": "1. エンティティ（E）は、ECDH鍵合意のグループパラメータを選択します。"
    },
    {
      "indent": 7,
      "text": "This is done simply by selecting the group parameters from a certificate for the recipient of the POP process. A certificate with the correct group parameters has to be available.",
      "ja": "これは、POPプロセスの受信者の証明書からグループパラメータを選択するだけで実行できます。正しいグループパラメータを持つ証明書が使用可能である必要があります。"
    },
    {
      "indent": 7,
      "text": "The ECDH parameters can be identified either by a named group or by a set of curve parameters. Section 2.3.5 of RFC 3279 [RFC3279] documents how the parameters are encoded for PKIX certificates. For PKIX-based applications, the parameters will almost always be defined by a named group. Designate G as the group from the ECDH parameters. Let the ECDH key pair associated with the certificate be known as the recipient key pair (Rpub and Rpriv).",
      "ja": "ECDHパラメータは、名前付きグループまたはカーブパラメータのセットのいずれかによって識別できます。 RFC 3279 [RFC3279]のセクション2.3.5は、PKIX証明書のパラメーターがどのようにエンコードされるかを説明しています。 PKIXベースのアプリケーションの場合、ほとんどの場合、パラメーターは名前付きグループによって定義されます。 ECDHパラメータからグループとしてGを指定します。証明書に関連付けられたECDHキーペアを受信者キーペア（RpubおよびRpriv）と呼びます。"
    },
    {
      "indent": 7,
      "text": "Rpub = Rpriv * G",
      "ja": "Rpub = Rpriv * G"
    },
    {
      "indent": 3,
      "text": "2. The entity generates an ECDH public/private key pair using the parameters from step 1.",
      "ja": "2. エンティティは、手順1のパラメーターを使用してECDH公開/秘密キーのペアを生成します。"
    },
    {
      "indent": 7,
      "text": "For an entity (E):",
      "ja": "エンティティ（E）の場合："
    },
    {
      "indent": 7,
      "text": "Epriv = entity private value\nEpub = ECDH public point = Epriv * G",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3. The POP computation process will then consist of the following steps:",
      "ja": "3. POP計算プロセスは、次の手順で構成されます。"
    },
    {
      "indent": 7,
      "text": "(a) The value to be signed (text) is obtained. (For a PKCS #10 object, the value is the DER-encoded certificationRequestInfo field represented as an octet string.)",
      "ja": "（a）署名する値（テキスト）を取得します。 （PKCS＃10オブジェクトの場合、値はオクテット文字列として表されるDERエンコードされたcertificateRequestInfoフィールドです。）"
    },
    {
      "indent": 7,
      "text": "(b) A shared ECDH secret is computed as follows:",
      "ja": "（b）共有ECDHシークレットは次のように計算されます。"
    },
    {
      "indent": 12,
      "text": "shared secret point (x, y) = Epriv * Rpub = Rpriv * Epub",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "shared secret value ZZ is the x coordinate of the computed point",
      "ja": "共有秘密値ZZは、計算された点のx座標です"
    },
    {
      "indent": 7,
      "text": "(c) A temporary key K is derived from the shared secret ZZ as follows:",
      "ja": "（c）一時鍵Kは、次のように共有秘密ZZから導出されます。"
    },
    {
      "indent": 12,
      "text": "K = KDF(LeadingInfo | ZZ | TrailingInfo)",
      "ja": "K = KDF（LeadingInfo | ZZ | TrailingInfo）"
    },
    {
      "indent": 12,
      "text": "LeadingInfo ::= Subject Distinguished Name from certificate\nTrailingInfo ::= Issuer Distinguished Name from certificate",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "(d) Compute MAC(K, text).",
      "ja": "（d）MAC（K、text）を計算します。"
    },
    {
      "indent": 3,
      "text": "The POP verification process requires the recipient to carry out steps (a) through (d) and then simply compare the result of step (d) with what it received as the signature component. If they match, then the following can be concluded:",
      "ja": "POP検証プロセスでは、受信者が手順（a）〜（d）を実行し、手順（d）の結果を署名コンポーネントとして受け取った結果と単純に比較する必要があります。それらが一致する場合、次のことが結論付けられます。"
    },
    {
      "indent": 3,
      "text": "(a) The entity possesses the private key corresponding to the public key in the Certification Request because it needed the private key to calculate the shared secret; and",
      "ja": "（a）エンティティは、共有秘密を計算するために秘密鍵を必要としたため、認証要求の公開鍵に対応する秘密鍵を所有しています。そして"
    },
    {
      "indent": 3,
      "text": "(b) Only the recipient that the entity sent the request to could actually verify the request because it would require its own private key to compute the same shared secret. In the case where the recipient is a CA, this protects the entity from rogue CAs.",
      "ja": "（b）エンティティがリクエストを送信した受信者のみが実際にリクエストを検証できます。これは、同じ共有シークレットを計算するために独自のプライベートキーが必要になるためです。受信者がCAである場合、これはエンティティを不正なCAから保護します。"
    },
    {
      "indent": 0,
      "text": "6.1. ASN.1 Encoding",
      "section_title": true,
      "ja": "6.1. ASN.1エンコーディング"
    },
    {
      "indent": 3,
      "text": "The algorithm outlined above allows for the use of an arbitrary hash function in computing the temporary key and the MAC value. In this specification, we define object identifiers for the SHA-1, SHA-224, SHA-256, SHA-384, and SHA-512 hash values. The ASN.1 structures associated with the Static ECDH POP algorithm are:",
      "ja": "上記のアルゴリズムでは、一時キーとMAC値の計算に任意のハッシュ関数を使用できます。この仕様では、SHA-1、SHA-224、SHA-256、SHA-384、およびSHA-512ハッシュ値のオブジェクト識別子を定義します。静的ECDH POPアルゴリズムに関連付けられているASN.1構造は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "id-alg-ecdhPop-static-sha224-hmac-sha224 OBJECT IDENTIFIER ::= {\n   id-pkix id-alg(6) 25\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "      sa-ecdhPop-sha224-hmac-sha224 SIGNATURE-ALGORITHM ::= {\n         IDENTIFIER id-alg-ecdhPop-static-sha224-hmac-sha224\n         VALUE DhSigStatic\n         PARAMS ARE absent\n         PUBLIC-KEYS { pk-ec }\n      }\n      id-alg-ecdhPop-static-sha256-hmac-sha256 OBJECT IDENTIFIER ::= {\n         id-pkix id-alg(6) 26\n      }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-ecdhPop-sha256-hmac-sha256 SIGNATURE-ALGORITHM ::= {\n   IDENTIFIER id-alg-ecdhPop-static-sha256-hmac-sha256\n   VALUE DhSigStatic\n   PARAMS ARE absent\n   PUBLIC-KEYS { pk-ec }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-ecdhPop-static-sha384-hmac-sha384 OBJECT IDENTIFIER ::= {\n   id-pkix id-alg(6) 27\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-ecdhPop-sha384-hmac-sha384 SIGNATURE-ALGORITHM ::= {\n   IDENTIFIER id-alg-ecdhPop-static-sha384-hmac-sha384\n   VALUE DhSigStatic\n   PARAMS ARE absent\n   PUBLIC-KEYS { pk-ec }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-ecdhPop-static-sha512-hmac-sha512 OBJECT IDENTIFIER ::= {\n   id-pkix id-alg(6) 28\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-ecdhPop-sha512-hmac-sha512 SIGNATURE-ALGORITHM ::= {\n   IDENTIFIER id-alg-ecdhPop-static-sha512-hmac-sha512\n   VALUE DhSigStatic\n   PARAMS ARE absent\n   PUBLIC-KEYS { pk-ec }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "These items reuse the DhSigStatic structure defined in Section 4. When used with these algorithms, the value to be placed in the field hashValue is that computed in step 3(d) (Section 6). In the above ASN.1, the following items are defined:",
      "ja": "これらの項目は、セクション4で定義されたDhSigStatic構造を再利用します。これらのアルゴリズムで使用される場合、フィールドhashValueに配置される値は、ステップ3（d）（セクション6）で計算された値です。上記のASN.1では、次の項目が定義されています。"
    },
    {
      "indent": 3,
      "text": "sa-ecdhPop-static-sha224-hmac-sha224 An ASN.1 SIGNATURE-ALGORITHM object that associates together the information describing this signature algorithm. The structure DhSigStatic represents the signature value, and the parameters MUST be absent.",
      "ja": "sa-ecdhPop-static-sha224-hmac-sha224この署名アルゴリズムを説明する情報を一緒に関連付けるASN.1 SIGNATURE-ALGORITHMオブジェクト。構造DhSigStaticは署名値を表し、パラメーターは存在しない必要があります。"
    },
    {
      "indent": 3,
      "text": "id-ecdhPop-static-sha224-hmac-sha224 This OID identifies the Static ECDH POP algorithm that uses SHA-224 as the KDF and HMAC-SHA224 as the MAC function.",
      "ja": "id-ecdhPop-static-sha224-hmac-sha224このOIDは、SHA-224をKDFとして使用し、HMAC-SHA224をMAC機能として使用する静的ECDH POPアルゴリズムを識別します。"
    },
    {
      "indent": 3,
      "text": "sa-ecdhPop-static-sha256-hmac-sha256 An ASN.1 SIGNATURE-ALGORITHM object that associates together the information describing this signature algorithm. The structure DhSigStatic represents the signature value, and the parameters MUST be absent.",
      "ja": "sa-ecdhPop-static-sha256-hmac-sha256この署名アルゴリズムを説明する情報を関連付けるASN.1 SIGNATURE-ALGORITHMオブジェクト。構造DhSigStaticは署名値を表し、パラメーターは存在しない必要があります。"
    },
    {
      "indent": 3,
      "text": "id-ecdhPop-static-sha256-hmac-sha256 This OID identifies the Static ECDH POP algorithm that uses SHA-256 as the KDF and HMAC-SHA256 as the MAC function.",
      "ja": "id-ecdhPop-static-sha256-hmac-sha256このOIDは、SHA-256をKDFとして使用し、HMAC-SHA256をMAC関数として使用する静的ECDH POPアルゴリズムを識別します。"
    },
    {
      "indent": 3,
      "text": "sa-ecdhPop-static-sha384-hmac-sha384 An ASN.1 SIGNATURE-ALGORITHM object that associates together the information describing this signature algorithm. The structure DhSigStatic represents the signature value, and the parameters MUST be absent.",
      "ja": "sa-ecdhPop-static-sha384-hmac-sha384この署名アルゴリズムを説明する情報を関連付けるASN.1 SIGNATURE-ALGORITHMオブジェクト。構造体DhSigStaticは署名値を表し、パラメーターは存在しない必要があります。"
    },
    {
      "indent": 3,
      "text": "id-ecdhPop-static-sha384-hmac-sha384 This OID identifies the Static ECDH POP algorithm that uses SHA-384 as the KDF and HMAC-SHA384 as the MAC function.",
      "ja": "id-ecdhPop-static-sha384-hmac-sha384このOIDは、SHA-384をKDFとして使用し、HMAC-SHA384をMAC関数として使用する静的ECDH POPアルゴリズムを識別します。"
    },
    {
      "indent": 3,
      "text": "sa-ecdhPop-static-sha512-hmac-sha512 An ASN.1 SIGNATURE-ALGORITHM object that associates together the information describing this signature algorithm. The structure DhSigStatic represents the signature value, and the parameters MUST be absent.",
      "ja": "sa-ecdhPop-static-sha512-hmac-sha512この署名アルゴリズムを説明する情報を関連付けるASN.1 SIGNATURE-ALGORITHMオブジェクト。構造DhSigStaticは署名値を表し、パラメーターは存在しない必要があります。"
    },
    {
      "indent": 3,
      "text": "id-ecdhPop-static-sha512-hmac-sha512 This OID identifies the Static ECDH POP algorithm that uses SHA-512 as the KDF and HMAC-SHA512 as the MAC function.",
      "ja": "id-ecdhPop-static-sha512-hmac-sha512このOIDは、SHA-512をKDFとして、HMAC-SHA512をMAC関数として使用する静的ECDH POPアルゴリズムを識別します。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "None of the algorithms defined in this document are meant for use in general purpose situations. These algorithms are designed and purposed solely for use in doing POP with PKCS #10 and CRMF constructs.",
      "ja": "このドキュメントで定義されているアルゴリズムはいずれも、一般的な目的での使用を意図したものではありません。これらのアルゴリズムは、PKCS＃10およびCRMFコンストラクトでPOPを実行する場合にのみ使用することを目的として設計されています。"
    },
    {
      "indent": 3,
      "text": "In the Static DH POP and Static ECDH POP algorithms, an appropriate value can be produced by either party. Thus, these algorithms only provide integrity and not origination service. The Discrete Logarithm Signature algorithm provides both integrity checking and origination checking.",
      "ja": "静的DH POPおよび静的ECDH POPアルゴリズムでは、適切な値をどちらの側でも生成できます。したがって、これらのアルゴリズムは整合性のみを提供し、オリジネーションサービスは提供しません。離散対数署名アルゴリズムは、整合性チェックと発生チェックの両方を提供します。"
    },
    {
      "indent": 3,
      "text": "All the security in this system is provided by the secrecy of the private keying material. If either sender or recipient private keys are disclosed, all messages sent or received using those keys are compromised. Similarly, the loss of a private key results in an inability to read messages sent using that key.",
      "ja": "このシステムのすべてのセキュリティは、秘密鍵情報の機密性によって提供されます。送信者または受信者の秘密鍵が開示されている場合、それらの鍵を使用して送受信されるすべてのメッセージが危険にさらされます。同様に、秘密鍵を紛失すると、その鍵を使用して送信されたメッセージを読み取ることができなくなります。"
    },
    {
      "indent": 3,
      "text": "Selection of parameters can be of paramount importance. In the selection of parameters, one must take into account the community/ group of entities that one wishes to be able to communicate with. In choosing a set of parameters, one must also be sure to avoid small groups. [FIPS-186-3] Appendixes A and B.2 contain information on the selection of parameters for DH. Section 10 of [RFC6090] contains information on the selection of parameters for ECC. The practices outlined in these documents will lead to better selection of parameters.",
      "ja": "パラメータの選択は非常に重要です。パラメータの選択では、通信できるようにしたいコミュニティ/エンティティのグループを考慮する必要があります。パラメータのセットを選択する際には、小さなグループを避けてください。 [FIPS-186-3]付録AおよびB.2には、DHのパラメーターの選択に関する情報が含まれています。 [RFC6090]のセクション10には、ECCのパラメーターの選択に関する情報が含まれています。これらの文書で概説されているプラ​​クティスは、パラメーターのより良い選択につながります。"
    },
    {
      "indent": 0,
      "text": "8. References",
      "section_title": true,
      "ja": "8. 参考文献"
    },
    {
      "indent": 0,
      "text": "8.1. Normative References",
      "section_title": true,
      "ja": "8.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2104] Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC: Keyed-Hashing for Message Authentication\", RFC 2104, February 1997.",
      "ja": "[RFC2104] Krawczyk、H.、Bellare、M。、およびR. Canetti、「HMAC：Keyed-Hashing for Message Authentication」、RFC 2104、1997年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2631] Rescorla, E., \"Diffie-Hellman Key Agreement Method\", RFC 2631, June 1999.",
      "ja": "[RFC2631] Rescorla、E。、「Diffie-Hellman Key Agreement Method」、RFC 2631、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC2986] Nystrom, M. and B. Kaliski, \"PKCS #10: Certification Request Syntax Specification Version 1.7\", RFC 2986, November 2000.",
      "ja": "[RFC2986] Nystrom、M。およびB. Kaliski、「PKCS＃10：Certification Request Syntax Specification Version 1.7」、RFC 2986、2000年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC4231] Nystrom, M., \"Identifiers and Test Vectors for HMAC-SHA-224, HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512\", RFC 4231, December 2005.",
      "ja": "[RFC4231] Nystrom、M。、「HMAC-SHA-224、HMAC-SHA-256、HMAC-SHA-384、およびHMAC-SHA-512の識別子とテストベクトル」、RFC 4231、2005年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC6234] Eastlake, D. and T. Hansen, \"US Secure Hash Algorithms (SHA and SHA-based HMAC and HKDF)\", RFC 6234, May 2011.",
      "ja": "[RFC6234] Eastlake、D。およびT. Hansen、「US Secure Hash Algorithms（SHA and SHA-based HMAC and HKDF）」、RFC 6234、2011年5月。"
    },
    {
      "indent": 0,
      "text": "8.2. Informative References",
      "section_title": true,
      "ja": "8.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[CRMF] Schaad, J., \"Internet X.509 Public Key Infrastructure Certificate Request Message Format (CRMF)\", RFC 4211, September 2005.",
      "ja": "[CRMF] Schaad、J。、「Internet X.509 Public Key Infrastructure Certificate Request Message Format（CRMF）」、RFC 4211、2005年9月。"
    },
    {
      "indent": 3,
      "text": "[FIPS-186-3] National Institute of Standards and Technology, \"Digital Signature Standard (DSS)\", Federal Information Processing Standards Publication 186-3, June 2009, <http://www.nist.gov/>.",
      "ja": "[FIPS-186-3]米国国立標準技術研究所、「デジタル署名標準（DSS）」、連邦情報処理標準出版物186-3、2009年6月、<http://www.nist.gov/>。"
    },
    {
      "indent": 3,
      "text": "[RFC2875] Prafullchandra, H. and J. Schaad, \"Diffie-Hellman Proof-of-Possession Algorithms\", RFC 2875, July 2000.",
      "ja": "[RFC2875] Prafullchandra、H。およびJ. Schaad、「Diffie-Hellman Proof-of-Possession Algorithms」、RFC 2875、2000年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC3279] Bassham, L., Polk, W., and R. Housley, \"Algorithms and Identifiers for the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 3279, April 2002.",
      "ja": "[RFC3279] Bassham、L.、Polk、W.、and R. Housley、 \"Algorithms and Identifiers for the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List（CRL）Profile\"、RFC 3279、April 2002。"
    },
    {
      "indent": 3,
      "text": "[RFC5912] Hoffman, P. and J. Schaad, \"New ASN.1 Modules for the Public Key Infrastructure Using X.509 (PKIX)\", RFC 5912, June 2010.",
      "ja": "[RFC5912] Hoffman、P。およびJ. Schaad、「X.509（PKIX）を使用した公開鍵インフラストラクチャ用の新しいASN.1モジュール」、RFC 5912、2010年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC6090] McGrew, D., Igoe, K., and M. Salter, \"Fundamental Elliptic Curve Cryptography Algorithms\", RFC 6090, February 2011.",
      "ja": "[RFC6090] McGrew、D.、Igoe、K。、およびM. Salter、「Fundamental Elliptic Curve Cryptography Algorithms」、RFC 6090、2011年2月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. ASN.1 Modules",
      "section_title": true,
      "ja": "付録A. ASN.1モジュール"
    },
    {
      "indent": 0,
      "text": "A.1. 2008 ASN.1 Module",
      "section_title": true,
      "ja": "A.1. 2008 ASN.1モジュール"
    },
    {
      "indent": 3,
      "text": "This appendix contains an ASN.1 module that is conformant with the 2008 version of ASN.1. This module references the object classes defined by [RFC5912] to more completely describe all of the associations between the elements defined in this document. Where a difference exists between the module in this section and the 1988 module, the 2008 module is the definitive module.",
      "ja": "この付録には、ASN.1の2008バージョンに準拠したASN.1モジュールが含まれています。このモジュールは、[RFC5912]によって定義されたオブジェクトクラスを参照して、このドキュメントで定義されている要素間のすべての関連付けをより完全に説明します。このセクションのモジュールと1988モジュールの間に違いがある場合、2008モジュールが決定的なモジュールです。"
    },
    {
      "indent": 3,
      "text": "DH-Sign\n   { iso(1) identified-organization(3) dod(6) internet(1)\n     security(5) mechanisms(5) pkix(7) id-mod(0)\n     id-mod-dhSign-2012-08(80) }\nDEFINITIONS IMPLICIT TAGS ::=",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "BEGIN\n-- EXPORTS ALL\n-- The types and values defined in this module are exported for use\n-- in the other ASN.1 modules.  Other applications may use them\n-- for their own purposes.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "IMPORTS\n   SIGNATURE-ALGORITHM\n   FROM AlgorithmInformation-2009\n      { iso(1) identified-organization(3) dod(6) internet(1)\n      security(5) mechanisms(5) pkix(7) id-mod(0)\n       id-mod-algorithmInformation-02(58) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "IssuerAndSerialNumber, MessageDigest\nFROM CryptographicMessageSyntax-2010\n   { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)\n     pkcs-9(9) smime(16) modules(0) id-mod-cms-2009(58) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "DSA-Sig-Value, DomainParameters, ECDSA-Sig-Value,\nmda-sha1, mda-sha224, mda-sha256, mda-sha384, mda-sha512,\npk-dh, pk-ec\nFROM PKIXAlgs-2009\n   { iso(1) identified-organization(3) dod(6) internet(1)\n     security(5) mechanisms(5) pkix(7) id-mod(0)\n     id-mod-pkix1-algorithms2008-02(56) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-pkix\nFROM PKIX1Explicit-2009\n   { iso(1) identified-organization(3) dod(6) internet(1)\n     security(5) mechanisms(5) pkix(7) id-mod(0)\n     id-mod-pkix1-explicit-02(51) };",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "DhSigStatic ::= SEQUENCE {\n    issuerAndSerial IssuerAndSerialNumber OPTIONAL,\n    hashValue       MessageDigest\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-static-sha1-hmac-sha1 SIGNATURE-ALGORITHM ::= {\n     IDENTIFIER id-dhPop-static-sha1-hmac-sha1\n     VALUE DhSigStatic\n     PARAMS ARE absent\n     PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-dh-sig-hmac-sha1 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 3\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-dhPop-static-sha1-hmac-sha1 OBJECT IDENTIFIER ::=\n     id-dh-sig-hmac-sha1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-static-sha224-hmac-sha224 SIGNATURE-ALGORITHM ::= {\n     IDENTIFIER id-alg-dhPop-static-sha224-hmac-sha224\n     VALUE DhSigStatic\n     PARAMS ARE absent\n     PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-static-sha224-hmac-sha224 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 15\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-static-sha256-hmac-sha256 SIGNATURE-ALGORITHM ::= {\n     IDENTIFIER id-alg-dhPop-static-sha256-hmac-sha256\n     VALUE DhSigStatic\n     PARAMS ARE absent\n     PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-static-sha256-hmac-sha256 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 16\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "      sa-dhPop-static-sha384-hmac-sha384 SIGNATURE-ALGORITHM ::= {\n           IDENTIFIER id-alg-dhPop-static-sha384-hmac-sha384\n           VALUE DhSigStatic\n           PARAMS ARE absent\n           PUBLIC-KEYS { pk-dh }\n      }\n      id-alg-dhPop-static-sha384-hmac-sha384 OBJECT IDENTIFIER ::= {\n           id-pkix id-alg(6) 17\n      }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-static-sha512-hmac-sha512 SIGNATURE-ALGORITHM ::= {\n     IDENTIFIER id-alg-dhPop-static-sha512-hmac-sha512\n     VALUE DhSigStatic\n     PARAMS ARE absent\n     PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-static-sha512-hmac-sha512 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 18\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-SHA1 SIGNATURE-ALGORITHM ::= {\n   IDENTIFIER id-alg-dh-pop\n   VALUE DSA-Sig-Value\n   PARAMS TYPE DomainParameters ARE preferredAbsent\n   HASHES { mda-sha1 }\n   PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-sha1 OBJECT IDENTIFIER ::= id-alg-dh-pop",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dh-pop OBJECT IDENTIFIER ::= { id-pkix id-alg(6) 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-sha224 SIGNATURE-ALGORITHM ::= {\n   IDENTIFIER id-alg-dhPop-sha224\n   VALUE DSA-Sig-Value\n   PARAMS TYPE DomainParameters ARE preferredAbsent\n   HASHES { mda-sha224 }\n   PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-sha224 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 5\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "      sa-dhPop-sha256 SIGNATURE-ALGORITHM ::= {\n         IDENTIFIER id-alg-dhPop-sha256\n         VALUE DSA-Sig-Value\n         PARAMS TYPE DomainParameters ARE preferredAbsent\n         HASHES { mda-sha256 }\n         PUBLIC-KEYS { pk-dh }\n      }\n      id-alg-dhPop-sha256 OBJECT IDENTIFIER ::= {\n           id-pkix id-alg(6) 6\n      }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-sha384 SIGNATURE-ALGORITHM ::= {\n   IDENTIFIER id-alg-dhPop-sha384\n   VALUE DSA-Sig-Value\n   PARAMS TYPE DomainParameters ARE preferredAbsent\n   HASHES { mda-sha384 }\n   PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-sha384 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 7\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-dhPop-sha512 SIGNATURE-ALGORITHM ::= {\n   IDENTIFIER id-alg-dhPop-sha512\n   VALUE DSA-Sig-Value\n   PARAMS TYPE DomainParameters ARE preferredAbsent\n   HASHES { mda-sha512 }\n   PUBLIC-KEYS { pk-dh }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-sha512 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 8\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-ecdhPop-static-sha224-hmac-sha224 OBJECT IDENTIFIER ::= {\n   id-pkix id-alg(6) 25\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-ecdhPop-sha224-hmac-sha224 SIGNATURE-ALGORITHM ::= {\n   IDENTIFIER id-alg-ecdhPop-static-sha224-hmac-sha224\n   VALUE DhSigStatic\n   PARAMS ARE absent\n   PUBLIC-KEYS { pk-ec }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "      id-alg-ecdhPop-static-sha256-hmac-sha256 OBJECT IDENTIFIER ::= {\n         id-pkix id-alg(6) 26\n      }\n      sa-ecdhPop-sha256-hmac-sha256 SIGNATURE-ALGORITHM ::= {\n         IDENTIFIER id-alg-ecdhPop-static-sha256-hmac-sha256\n         VALUE DhSigStatic\n         PARAMS ARE absent\n         PUBLIC-KEYS { pk-ec }\n      }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-ecdhPop-static-sha384-hmac-sha384 OBJECT IDENTIFIER ::= {\n   id-pkix id-alg(6) 27\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-ecdhPop-sha384-hmac-sha384 SIGNATURE-ALGORITHM ::= {\n   IDENTIFIER id-alg-ecdhPop-static-sha384-hmac-sha384\n   VALUE DhSigStatic\n   PARAMS ARE absent\n   PUBLIC-KEYS { pk-ec }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-ecdhPop-static-sha512-hmac-sha512 OBJECT IDENTIFIER ::= {\n   id-pkix id-alg(6) 28\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "sa-ecdhPop-sha512-hmac-sha512 SIGNATURE-ALGORITHM ::= {\n   IDENTIFIER id-alg-ecdhPop-static-sha512-hmac-sha512\n   VALUE DhSigStatic\n   PARAMS ARE absent\n   PUBLIC-KEYS { pk-ec }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 0,
      "text": "A.2. 1988 ASN.1 Module",
      "section_title": true,
      "ja": "A.2. 1988 ASN.1モジュール"
    },
    {
      "indent": 3,
      "text": "This appendix contains an ASN.1 module that is conformant with the 1988 version of ASN.1, which represents an informational version of the ASN.1 module for this document. Where a difference exists between the module in this section and the 2008 module, the 2008 module is the definitive module.",
      "ja": "この付録には、1988年版のASN.1に準拠したASN.1モジュールが含まれています。これは、このドキュメントのASN.1モジュールの情報バージョンを表しています。このセクションのモジュールと2008モジュールの間に違いがある場合、2008モジュールが最も信頼できるモジュールです。"
    },
    {
      "indent": 3,
      "text": "DH-Sign\n   { iso(1) identified-organization(3) dod(6) internet(1)\n     security(5) mechanisms(5) pkix(7) id-mod(0)\n     id-mod-dhSign-2012-88(79) }\nDEFINITIONS IMPLICIT TAGS ::=",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "BEGIN\n-- EXPORTS ALL\n-- The types and values defined in this module are exported for use\n-- in the other ASN.1 modules.  Other applications may use them\n-- for their own purposes.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "IMPORTS\n   IssuerAndSerialNumber, MessageDigest\n   FROM CryptographicMessageSyntax2004\n      { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)\n        pkcs-9(9) smime(16) modules(0) cms-2004(24) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-pkix\nFROM PKIX1Explicit88\n   { iso(1) identified-organization(3) dod(6) internet(1)\n     security(5) mechanisms(5) pkix(7) id-mod(0)\n     id-pkix1-explicit(18) }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Dss-Sig-Value, DomainParameters\nFROM PKIX1Algorithms88\n   { iso(1) identified-organization(3) dod(6) internet(1)\n     security(5) mechanisms(5) pkix(7) id-mod(0)\n     id-mod-pkix1-algorithms(17) };",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-dh-sig-hmac-sha1 OBJECT IDENTIFIER ::= {id-pkix id-alg(6) 3}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "DhSigStatic ::= SEQUENCE {\n    issuerAndSerial IssuerAndSerialNumber OPTIONAL,\n    hashValue       MessageDigest\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "      id-alg-dh-pop OBJECT IDENTIFIER ::= { id-pkix id-alg(6) 4 }\n      id-dhPop-static-sha1-hmac-sha1 OBJECT IDENTIFIER ::=\n           id-dh-sig-hmac-sha1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-static-sha224-hmac-sha224 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 15 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-static-sha256-hmac-sha256 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 16 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-static-sha384-hmac-sha384 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 17 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-static-sha512-hmac-sha512 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 18 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-sha1 OBJECT IDENTIFIER ::= id-alg-dh-pop",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-sha224 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-sha256 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-sha384 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-dhPop-sha512 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 8 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-ecdhPop-static-sha224-hmac-sha224 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 25 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-ecdhPop-static-sha256-hmac-sha256 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 26 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-ecdhPop-static-sha384-hmac-sha384 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 27 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "id-alg-ecdhPop-static-sha512-hmac-sha512 OBJECT IDENTIFIER ::= {\n     id-pkix id-alg(6) 28 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 0,
      "text": "Appendix B. Example of Static DH Proof-of-Possession",
      "section_title": true,
      "ja": "付録B.静的DHの所有証明"
    },
    {
      "indent": 3,
      "text": "The following example follows the steps described earlier in Section 4.",
      "ja": "次の例は、前のセクション4で説明した手順に従います。"
    },
    {
      "indent": 3,
      "text": "Step 1. Establishing common DH parameters: Assume the parameters are as in the DER-encoded certificate. The certificate contains a DH public key signed by a CA with a DSA signing key.",
      "ja": "ステップ1.共通のDHパラメーターを確立する：パラメーターがDERエンコードされた証明書と同じであると想定します。証明書には、DSA署名鍵でCAによって署名されたDH公開鍵が含まれています。"
    },
    {
      "indent": 1,
      "text": " 0 30 939: SEQUENCE {\n 4 30 872:   SEQUENCE {\n 8 A0   3:     [0] {\n10 02   1:       INTEGER 2\n         :       }\n13 02   6:     INTEGER\n         :       00 DA 39 B6 E2 CB\n21 30  11:     SEQUENCE {\n23 06   7:       OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)\n32 05   0:       NULL\n         :       }\n34 30  72:     SEQUENCE {\n36 31  11:       SET {\n38 30   9:         SEQUENCE {\n40 06   3:           OBJECT IDENTIFIER countryName (2 5 4 6)\n45 13   2:           PrintableString 'US'\n         :           }\n         :         }\n49 31  17:       SET {\n51 30  15:         SEQUENCE {\n53 06   3:           OBJECT IDENTIFIER organizationName (2 5 4 10)\n58 13   8:           PrintableString 'XETI Inc'\n         :           }\n         :         }\n68 31  16:       SET {\n70 30  14:         SEQUENCE {\n72 06   3:           OBJECT IDENTIFIER organizationalUnitName (2 5 4\n                               11)\n77 13   7:           PrintableString 'Testing'\n         :           }\n         :         }\n86 31  20:       SET {\n88 30  18:         SEQUENCE {\n90 06   3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n95 13  11:           PrintableString 'Root DSA CA'\n         :           }\n         :         }\n         :       }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "108 30  30:     SEQUENCE {\n110 17  13:       UTCTime '990914010557Z'\n125 17  13:       UTCTime '991113010557Z'\n          :       }\n140 30  70:     SEQUENCE {\n142 31  11:       SET {\n144 30   9:         SEQUENCE {\n146 06   3:           OBJECT IDENTIFIER countryName (2 5 4 6)\n151 13   2:           PrintableString 'US'\n          :           }\n          :         }\n155 31  17:       SET {\n157 30  15:         SEQUENCE {\n159 06   3:           OBJECT IDENTIFIER organizationName (2 5 4 10)\n164 13   8:           PrintableString 'XETI Inc'\n          :           }\n          :         }\n174 31  16:       SET {\n176 30  14:         SEQUENCE {\n178 06   3:           OBJECT IDENTIFIER organizationalUnitName (2 5 4\n                                11)\n183 13   7:           PrintableString 'Testing'\n          :           }\n          :         }\n192 31  18:       SET {\n194 30  16:         SEQUENCE {\n196 06   3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n201 13   9:           PrintableString 'DH TestCA'\n          :           }\n          :         }\n          :       }\n212 30 577:     SEQUENCE {\n216 30 438:       SEQUENCE {\n220 06   7:         OBJECT IDENTIFIER dhPublicKey (1 2 840 10046 2 1)\n229 30 425:         SEQUENCE {\n233 02 129:           INTEGER\n          :             00 94 84 E0 45 6C 7F 69 51 62 3E 56 80 7C 68 E7\n          :             C5 A9 9E 9E 74 74 94 ED 90 8C 1D C4 E1 4A 14 82\n          :             F5 D2 94 0C 19 E3 B9 10 BB 11 B9 E5 A5 FB 8E 21\n          :             51 63 02 86 AA 06 B8 21 36 B6 7F 36 DF D1 D6 68\n          :             5B 79 7C 1D 5A 14 75 1F 6A 93 75 93 CE BB 97 72\n          :             8A F0 0F 23 9D 47 F6 D4 B3 C7 F0 F4 E6 F6 2B C2\n          :             32 E1 89 67 BE 7E 06 AE F8 D0 01 6B 8B 2A F5 02\n          :             D7 B6 A8 63 94 83 B0 1B 31 7D 52 1A DE E5 03 85\n          :             27",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "365 02 128:           INTEGER\n          :             26 A6 32 2C 5A 2B D4 33 2B 5C DC 06 87 53 3F 90\n          :             06 61 50 38 3E D2 B9 7D 81 1C 12 10 C5 0C 53 D4\n          :             64 D1 8E 30 07 08 8C DD 3F 0A 2F 2C D6 1B 7F 57\n          :             86 D0 DA BB 6E 36 2A 18 E8 D3 BC 70 31 7A 48 B6\n          :             4E 18 6E DD 1F 22 06 EB 3F EA D4 41 69 D9 9B DE\n          :             47 95 7A 72 91 D2 09 7F 49 5C 3B 03 33 51 C8 F1\n          :             39 9A FF 04 D5 6E 7E 94 3D 03 B8 F6 31 15 26 48\n          :             95 A8 5C DE 47 88 B4 69 3A 00 A7 86 9E DA D1 CD\n496 02  33:           INTEGER\n          :             00 E8 72 FA 96 F0 11 40 F5 F2 DC FD 3B 5D 78 94\n          :             B1 85 01 E5 69 37 21 F7 25 B9 BA 71 4A FC 60 30\n          :             FB\n531 02  97:           INTEGER\n          :             00 A3 91 01 C0 A8 6E A4 4D A0 56 FC 6C FE 1F A7\n          :             B0 CD 0F 94 87 0C 25 BE 97 76 8D EB E5 A4 09 5D\n          :             AB 83 CD 80 0B 35 67 7F 0C 8E A7 31 98 32 85 39\n          :             40 9D 11 98 D8 DE B8 7F 86 9B AF 8D 67 3D B6 76\n          :             B4 61 2F 21 E1 4B 0E 68 FF 53 3E 87 DD D8 71 56\n          :             68 47 DC F7 20 63 4B 3C 5F 78 71 83 E6 70 9E E2\n          :             92\n630 30  26:           SEQUENCE {\n632 03  21:             BIT STRING 0 unused bits\n          :             1C D5 3A 0D 17 82 6D 0A 81 75 81 46 10 8E 3E DB\n          :             09 E4 98 34\n655 02   1:             INTEGER 55\n          :             }\n          :           }\n          :         }\n658 03 132:       BIT STRING 0 unused bits\n          :         02 81 80 5F CF 39 AD 62 CF 49 8E D1 CE 66 E2 B1\n          :         E6 A7 01 4D 05 C2 77 C8 92 52 42 A9 05 A4 DB E0\n          :         46 79 50 A3 FC 99 3D 3D A6 9B A9 AD BC 62 1C 69\n          :         B7 11 A1 C0 2A F1 85 28 F7 68 FE D6 8F 31 56 22\n          :         4D 0A 11 6E 72 3A 02 AF 0E 27 AA F9 ED CE 05 EF\n          :         D8 59 92 C0 18 D7 69 6E BD 70 B6 21 D1 77 39 21\n          :         E1 AF 7A 3A CF 20 0A B4 2C 69 5F CF 79 67 20 31\n          :         4D F2 C6 ED 23 BF C4 BB 1E D1 71 40 2C 07 D6 F0\n          :         8F C5 1A\n          :       }\n793 A3  85:     [3] {\n795 30  83:       SEQUENCE {\n797 30  29:         SEQUENCE {\n799 06   3:           OBJECT IDENTIFIER subjectKeyIdentifier (2 5 29 14)\n804 04  22:           OCTET STRING\n          :             04 14 80 DF 59 88 BF EB 17 E1 AD 5E C6 40 A3 42\n          :             E5 AC D3 B4 88 78\n          :           }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "828 30  34:         SEQUENCE {\n830 06   3:           OBJECT IDENTIFIER authorityKeyIdentifier (2 5 29\n35)\n835 01   1:           BOOLEAN TRUE\n838 04  24:           OCTET STRING\n          :             30 16 80 14 6A 23 37 55 B9 FD 81 EA E8 4E D3 C9\n          :             B7 09 E5 7B 06 E3 68 AA\n          :           }\n864 30  14:         SEQUENCE {\n866 06   3:           OBJECT IDENTIFIER keyUsage (2 5 29 15)\n871 01   1:           BOOLEAN TRUE\n874 04   4:           OCTET STRING\n          :             03 02 03 08\n          :           }\n          :         }\n          :       }\n          :     }\n880 30  11:   SEQUENCE {\n882 06   7:     OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)\n891 05   0:     NULL\n          :     }\n893 03  48:   BIT STRING 0 unused bits\n          :     30 2D 02 14 7C 6D D2 CA 1E 32 D1 30 2E 29 66 BC\n          :     06 8B 60 C7 61 16 3B CA 02 15 00 8A 18 DD C1 83\n          :     58 29 A2 8A 67 64 03 92 AB 02 CE 00 B5 94 6A\n          :   }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Step 2. End entity/user generates a DH key pair using the parameters from the CA certificate.",
      "ja": "ステップ2.エンドエンティティ/ユーザーは、CA証明書のパラメーターを使用してDHキーペアを生成します。"
    },
    {
      "indent": 3,
      "text": "End entity DH public key:",
      "ja": "エンドエンティティDH公開キー："
    },
    {
      "indent": 6,
      "text": "Y: 13 63 A1 85 04 8C 46 A8 88 EB F4 5E A8 93 74 AE FD AE 9E 96 27 12 65 C4 4C 07 06 3E 18 FE 94 B8 A8 79 48 BD 2E 34 B6 47 CA 04 30 A1 EC 33 FD 1A 0B 2D 9E 50 C9 78 0F AE 6A EC B5 6B 6A BE B2 5C DA B2 9F 78 2C B9 77 E2 79 2B 25 BF 2E 0B 59 4A 93 4B F8 B3 EC 81 34 AE 97 47 52 E0 A8 29 98 EC D1 B0 CA 2B 6F 7A 8B DB 4E 8D A5 15 7E 7E AF 33 62 09 9E 0F 11 44 8C C1 8D A2 11 9E 53 EF B2 E8",
      "ja": "Y：13 63 A1 85 04 8C 46 A8 88 EB F4 5E A8 93 74 AE FD AE 9E 96 27 12 65 C4 4C 07 06 3E 18 FE 94 B8 A8 79 48 BD 2E 34 B6 47 CA 04 30 A1 EC 33 FD 1A 0B 2D 9E 50 C9 78 0F AE 6A EC B5 6B 6A BE B2 5C DA B2 9F 78 2C B9 77 E2 79 2B 25 BF 2E 0B 59 4A 93 4B F8 B3 EC 81 34 AE 97 47 52 E0 A8 29 98 EC D1 B0 CA 2B 6F 7A 8B DB 4E 8D A5 15 7E 7E AF 33 62 09 9E 0F 11 44​​ 8C C1 8D A2 11 9E 53 EF B2 E8"
    },
    {
      "indent": 3,
      "text": "End entity DH private key:",
      "ja": "エンドエンティティDH秘密キー："
    },
    {
      "indent": 6,
      "text": "X: 32 CC BD B4 B7 7C 44 26 BB 3C 83 42 6E 7D 1B 00 86 35 09 71 07 A0 A4 76 B8 DB 5F EC 00 CE 6F C3",
      "ja": "X：32 CC BD B4 B7 7C 44 26 BB 3C 83 42 6E 7D 1B 00 86 35 09 71 07 A0 A4 76 B8 DB 5F EC 00 CE 6F C3"
    },
    {
      "indent": 3,
      "text": "Step 3. Compute the shared secret ZZ.",
      "ja": "ステップ3.共有秘密ZZを計算します。"
    },
    {
      "indent": 5,
      "text": "56 b6 01 39 42 8e 09 16 30 b0 31 4d 12 90 af 03 c7 92 65 c2 9c ba 88 bb 0a d5 94 02 ed 6f 54 cb 22 e5 94 b4 d6 60 72 bc f6 a5 2b 18 8d df 28 72 ac e0 41 dd 3b 03 2a 12 9e 5d bd 72 a0 1e fb 6b ee c5 b2 16 59 ee 12 00 3b c8 e0 cb c5 08 8e 2d 40 5f 2d 37 62 8c 4f bb 49 76 69 3c 9e fc 2c f7 f9 50 c1 b9 f7 01 32 4c 96 b9 c3 56 c0 2c 1b 77 3f 2f 36 e8 22 c8 2e 07 76 d0 4f 7f aa d5 c0 59",
      "ja": "56 b6 01 39 42 8e 09 16 30 b0 31 4d 12 90 af 03 c7 92 65 c2 9c ba 88 bb 0a d5 94 02 ed 6f 54 cb 22 e5 94 b4 d6 60 72 bc f6 a5 2b 18 8d df 28 72 ac e0 41 dd 3b 03 2a 12 9e 5d bd 72 a0 1e fb 6b ee c5 b2 16 59 ee 12 00 3b c8 e0 cb c5 08 8e 2d 40 5f 2d 37 62 8c 4f bb 49 76 69 3c 9e fc 2c f7 f9 50 c1 b9 f7 01 32 4c 96 b9 c3 56 c0 2c 1b 77 3f 2f 36 e8 22 c8 2e 07 76 d0 4f 7f aa d5 c0 59"
    },
    {
      "indent": 3,
      "text": "Step 4. Compute K and the signature.",
      "ja": "ステップ4. Kと署名を計算します。"
    },
    {
      "indent": 3,
      "text": "LeadingInfo: DER-encoded Subject/Requester Distinguished Name (DN), as in the generated Certificate Signing Request",
      "ja": "LeadingInfo：生成された証明書署名要求にあるような、DERエンコードされたサブジェクト/リクエスターの識別名（DN）"
    },
    {
      "indent": 8,
      "text": "30 46 31 0B 30 09 06 03 55 04 06 13 02 55 53 31 11 30 0F 06 03 55 04 0A 13 08 58 45 54 49 20 49 6E 63 31 10 30 0E 06 03 55 04 0B 13 07 54 65 73 74 69 6E 67 31 12 30 10 06 03 55 04 03 13 09 44 48 20 54 65 73 74 43 41",
      "ja": "30 46 31 0B 30 09 06 03 55 04 06 13 02 55 53 31 11 30 0F 06 03 55 04 0A 13 08 58 45 54 49 20 49 6E 63 31 10 30 0E 06 03 55 04 0B 13 07 54 65 73 74 69 6E 67 31 12 30 10 06 03 55 04 03 13 09 44 48 20 54 65 73 74 43 41"
    },
    {
      "indent": 3,
      "text": "TrailingInfo: DER-encoded Issuer/recipient DN (from the certificate described in step 1)",
      "ja": "TrailingInfo：DERでエンコードされた発行者/受信者DN（手順1で説明した証明書から）"
    },
    {
      "indent": 8,
      "text": "30 48 31 0B 30 09 06 03 55 04 06 13 02 55 53 31 11 30 0F 06 03 55 04 0A 13 08 58 45 54 49 20 49 6E 63 31 10 30 0E 06 03 55 04 0B 13 07 54 65 73 74 69 6E 67 31 14 30 12 06 03 55 04 03 13 0B 52 6F 6F 74 20 44 53 41 20 43 41",
      "ja": "30 48 31 0B 30 09 06 03 55 04 06 13 02 55 53 31 11 30 0F 06 03 55 04 0A 13 08 58 45 54 49 20 49 6E 63 31 10 30 0E 06 03 55 04 0B 13 07 54 65 73 74 69 6E 67 31 14 30 12 06 03 55 04 03 13 0B 52 6F 6F 74 20 44 53 41 20 43 41"
    },
    {
      "indent": 6,
      "text": "K: B1 91 D7 DB 4F C5 EF EF AC 9A C5 44 5A 6D 42 28 DC 70 7B DA",
      "ja": "K：B1 91 D7 DB 4F C5 EF EF AC 9A C5 44 5A 6D 42 28 DC 70 7B DA"
    },
    {
      "indent": 3,
      "text": "TBS: the \"text\" for computing the SHA-1 HMAC.",
      "ja": "TBS：SHA-1 HMACを計算するための「テキスト」。"
    },
    {
      "indent": 6,
      "text": "30 82 02 98 02 01 00 30 4E 31 0B 30 09 06 03 55 04 06 13 02 55 53 31 11 30 0F 06 03 55 04 0A 13 08 58 45 54 49 20 49 6E 63 31 10 30 0E 06 03 55 04 0B 13 07 54 65 73 74 69 6E 67 31 1A 30 18 06 03 55 04 03 13 11 50 4B 49 58 20 45 78 61 6D 70 6C 65 20 55 73 65 72 30 82 02 41 30 82 01 B6 06 07 2A 86 48 CE 3E 02 01 30 82 01 A9 02 81 81 00 94 84 E0 45 6C 7F 69 51 62 3E 56 80 7C 68 E7 C5 A9 9E 9E 74 74 94 ED 90 8C 1D C4 E1 4A 14 82 F5 D2 94 0C 19 E3 B9 10 BB 11 B9 E5 A5 FB 8E 21 51 63 02 86 AA 06 B8 21 36 B6 7F 36 DF D1 D6 68 5B 79 7C 1D 5A 14 75 1F 6A 93 75 93 CE BB 97 72 8A F0 0F 23 9D 47 F6 D4 B3 C7 F0 F4 E6 F6 2B C2 32 E1 89 67 BE 7E 06 AE F8 D0 01 6B 8B 2A F5 02 D7 B6 A8 63 94 83 B0 1B 31 7D 52 1A DE E5 03 85 27 02 81 80 26 A6 32 2C 5A 2B D4 33 2B 5C DC 06 87 53 3F 90 06 61 50 38 3E D2 B9 7D 81 1C 12 10 C5 0C 53 D4 64 D1 8E 30 07 08 8C DD 3F 0A 2F 2C D6 1B 7F 57 86 D0 DA BB 6E 36 2A 18 E8 D3 BC 70 31 7A 48 B6 4E 18 6E DD 1F 22 06 EB 3F EA D4 41 69 D9 9B DE 47 95 7A 72 91 D2 09 7F 49 5C 3B 03 33 51 C8 F1 39 9A FF 04 D5 6E 7E 94 3D 03 B8 F6 31 15 26 48 95 A8 5C DE 47 88 B4 69 3A 00 A7 86 9E DA D1 CD 02 21 00 E8 72 FA 96 F0 11 40 F5 F2 DC FD 3B 5D 78 94 B1 85 01 E5 69 37 21 F7 25 B9 BA 71 4A FC 60 30 FB 02 61 00 A3 91 01 C0 A8 6E A4 4D A0 56 FC 6C FE 1F A7 B0 CD 0F 94 87 0C 25 BE 97 76 8D EB E5 A4 09 5D AB 83 CD 80 0B 35 67 7F 0C 8E A7 31 98 32 85 39 40 9D 11 98 D8 DE B8 7F 86 9B AF 8D 67 3D B6 76 B4 61 2F 21 E1 4B 0E 68 FF 53 3E 87 DD D8 71 56 68 47 DC F7 20 63 4B 3C 5F 78 71 83 E6 70 9E E2 92 30 1A 03 15 00 1C D5 3A 0D 17 82 6D 0A 81 75 81 46 10 8E 3E DB 09 E4 98 34 02 01 37 03 81 84 00 02 81 80 13 63 A1 85 04 8C 46 A8 88 EB F4 5E A8 93 74 AE FD AE 9E 96 27 12 65 C4 4C 07 06 3E 18 FE 94 B8 A8 79 48 BD 2E 34 B6 47 CA 04 30 A1 EC 33 FD 1A 0B 2D 9E 50 C9 78 0F AE 6A EC B5 6B 6A BE B2 5C DA B2 9F 78 2C B9 77 E2 79 2B 25 BF 2E 0B 59 4A 93 4B F8 B3 EC 81 34 AE 97 47 52 E0 A8 29 98 EC D1 B0 CA 2B 6F 7A 8B DB 4E 8D A5 15 7E 7E AF 33 62 09 9E 0F 11 44 8C C1 8D A2 11 9E 53 EF B2 E8",
      "ja": "30 82 02 98 02 01 00 30 4E 31 0B 30 09 06 03 55 04 06 13 02 55 53 31 11 30 0F 06 03 55 04 0A 13 08 58 45 54 49 20 49 6E 63 31 10 30 0E 06 03 55 04 0B 13 07 54 65 73 74 69 6E 67 31 1A 30 18 06 03 55 04 03 13 11 50 4B 49 58 20 45 78 61 6D 70 6C 65 20 55 73 65 72 30 82 02 41 30 82 01 B6 06 07 2A 86 48 CE 3E 02 01 30 82 01 A9 02 81 81 00 94 84 E0 45 6C 7F 69 51 62 3E 56 80 7C 68 E7 C5 A9 9E 9E 74 74 94 ED 90 8C 1D C4 E1 4A 14 82 F5 D2 94 0C 19 E3 B9 10 BB 11 B9 E5 A5 FB 8E 21 51 63 02 86 AA 06 B8 21 36 B6 7F 36 DF D1 D6 68 5B 79 7C 1D 5A 14 75 1F 6A 93 75 93 CE BB 97 72 8A F0 0F 23 9D 47 F6 D4 B3 C7 F0 F4 E6 F6 2B C2 32 E1 89 67 BE 7E 06 AE F8 D0 01 6B 8B 2A F5 02 D7 B6 A8 63 94 83 B0 1B 31 7D 52 1A DE E5 03 85 27 02 81 80 26 A6 32 2C 5A 2B D4 33 2B 5C DC 06 87 53 3F 90 06 61 50 38 3E D2 B9 7D 81 1C 12 10 C5 0C 53 D4 64 D1 8E 30 07 08 8C DD 3F 0A 2F 2C D6 1B 7F 57 86 D0 DA BB 6E 36 2A 18 E8 D3 BC 70 31 7A 48 B6 4E 18 6E DD 1F 22 06 EB 3F EA D4 41 69 D9 9B DE 47 95 7A 72 91 D2 09 7F 49 5C 3 B 03 33 51 C8 F1 39 9A FF 04 D5 6E 7E 94 3D 03 B8 F6 31 15 26 48 95 A8 5C DE 47 88 B4 69 3A 00 A7 86 9E DA D1 CD 02 21 00 E8 72 FA 96 F0 11 40 F5 F2 DC FD 3B 5D 78 94 B1 85 01 E5 69 37 21 F7 25 B9 BA 71 4A FC 60 30 FB 02 61 00 A3 91 01 C0 A8 6E A4 4D A0 56 FC 6C FE 1F A7 B0 CD 0F 94 87 0C 25 BE 97 76 8D EB E5 A4 09 5D AB 83 CD 80 0B 35 67 7F 0C 8E A7 31 98 32 85 39 40 9D 11 98 D8 DE B8 7F 86 9B AF 8D 67 3D B6 76 B4 61 2F 21 E1 4B 0E 68 FF 53 3E 87 DD D8 71 56 68 47 DC F7 20 63 4B 3C 5F 78 71 83 E6 70 9E E2 92 30 1A 03 15 00 1C D5 3A 0D 17 82 6D 0A 81 75 81 46 10 8E 3E DB 09 E4 98 34 02 01 37 03 81 84 00 02 81 80 13 63 A1 85 04 8C 46 A8 88 EB F4 5E A8 93 74 AE FD AE 9E 96 27 12 65 C4 4C 07 06 3E 18 FE 94 B8 A8 79 48 BD 2E 34 B6 47 CA 04 30 A1 EC 33 FD 1A 0B 2D 9E 50 C9 78 0F AE 6A EC B5 6B 6A BE B2 5C DA B2 9F 78 2C B9 77 E2 79 2B 25 BF 2E 0B 59 4A 93 4B F8 B3 EC 81 34 AE 97 47 52 E0 A8 29 98 EC D1 B0 CA 2B 6F 7A 8B DB 4E 8D A5 15 7E 7E AF 33 62 09 9E 0F 11 44​​ 8C C1 8D A2 11 9E 53 EF B2 E8"
    },
    {
      "indent": 3,
      "text": "Certification Request:",
      "ja": "認定リクエスト："
    },
    {
      "indent": 1,
      "text": "  0 30 793: SEQUENCE {\n  4 30 664:   SEQUENCE {\n  8 02   1:     INTEGER 0\n 11 30  78:     SEQUENCE {\n 13 31  11:       SET {\n 15 30   9:         SEQUENCE {\n 17 06   3:           OBJECT IDENTIFIER countryName (2 5 4 6)\n 22 13   2:           PrintableString 'US'\n          :           }\n          :         }\n 26 31  17:       SET {\n 28 30  15:         SEQUENCE {\n 30 06   3:           OBJECT IDENTIFIER organizationName (2 5 4 10)\n 35 13   8:           PrintableString 'XETI Inc'\n          :           }\n          :         }\n 45 31  16:       SET {\n 47 30  14:         SEQUENCE {\n 49 06   3:           OBJECT IDENTIFIER organizationalUnitName (2 5 4\n                                11)\n 54 13   7:           PrintableString 'Testing'\n          :           }\n          :         }\n 63 31  26:       SET {\n 65 30  24:         SEQUENCE {\n 67 06   3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n 72 13  17:           PrintableString 'PKIX Example User'\n          :           }\n          :         }\n          :       }\n 91 30 577:     SEQUENCE {\n 95 30 438:       SEQUENCE {\n 99 06   7:         OBJECT IDENTIFIER dhPublicKey (1 2 840 10046 2 1)\n108 30 425:         SEQUENCE {\n112 02 129:           INTEGER\n          :             00 94 84 E0 45 6C 7F 69 51 62 3E 56 80 7C 68 E7\n          :             C5 A9 9E 9E 74 74 94 ED 90 8C 1D C4 E1 4A 14 82\n          :             F5 D2 94 0C 19 E3 B9 10 BB 11 B9 E5 A5 FB 8E 21\n          :             51 63 02 86 AA 06 B8 21 36 B6 7F 36 DF D1 D6 68\n          :             5B 79 7C 1D 5A 14 75 1F 6A 93 75 93 CE BB 97 72\n          :             8A F0 0F 23 9D 47 F6 D4 B3 C7 F0 F4 E6 F6 2B C2\n          :             32 E1 89 67 BE 7E 06 AE F8 D0 01 6B 8B 2A F5 02\n          :             D7 B6 A8 63 94 83 B0 1B 31 7D 52 1A DE E5 03 85\n          :             27",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "244 02 128:           INTEGER\n          :             26 A6 32 2C 5A 2B D4 33 2B 5C DC 06 87 53 3F 90\n          :             06 61 50 38 3E D2 B9 7D 81 1C 12 10 C5 0C 53 D4\n          :             64 D1 8E 30 07 08 8C DD 3F 0A 2F 2C D6 1B 7F 57\n          :             86 D0 DA BB 6E 36 2A 18 E8 D3 BC 70 31 7A 48 B6\n          :             4E 18 6E DD 1F 22 06 EB 3F EA D4 41 69 D9 9B DE\n          :             47 95 7A 72 91 D2 09 7F 49 5C 3B 03 33 51 C8 F1\n          :             39 9A FF 04 D5 6E 7E 94 3D 03 B8 F6 31 15 26 48\n          :             95 A8 5C DE 47 88 B4 69 3A 00 A7 86 9E DA D1 CD\n375 02  33:           INTEGER\n          :             00 E8 72 FA 96 F0 11 40 F5 F2 DC FD 3B 5D 78 94\n          :             B1 85 01 E5 69 37 21 F7 25 B9 BA 71 4A FC 60 30\n          :             FB\n410 02  97:           INTEGER\n          :             00 A3 91 01 C0 A8 6E A4 4D A0 56 FC 6C FE 1F A7\n          :             B0 CD 0F 94 87 0C 25 BE 97 76 8D EB E5 A4 09 5D\n          :             AB 83 CD 80 0B 35 67 7F 0C 8E A7 31 98 32 85 39\n          :             40 9D 11 98 D8 DE B8 7F 86 9B AF 8D 67 3D B6 76\n          :             B4 61 2F 21 E1 4B 0E 68 FF 53 3E 87 DD D8 71 56\n          :             68 47 DC F7 20 63 4B 3C 5F 78 71 83 E6 70 9E E2\n          :             92\n509 30  26:           SEQUENCE {\n511 03  21:             BIT STRING 0 unused bits\n          :               1C D5 3A 0D 17 82 6D 0A 81 75 81 46 10 8E 3E\n          :               DB 09 E4 98 34\n534 02   1:             INTEGER 55\n          :             }\n          :           }\n          :         }\n537 03 132:       BIT STRING 0 unused bits\n          :         02 81 80 13 63 A1 85 04 8C 46 A8 88 EB F4 5E A8\n          :         93 74 AE FD AE 9E 96 27 12 65 C4 4C 07 06 3E 18\n          :         FE 94 B8 A8 79 48 BD 2E 34 B6 47 CA 04 30 A1 EC\n          :         33 FD 1A 0B 2D 9E 50 C9 78 0F AE 6A EC B5 6B 6A\n          :         BE B2 5C DA B2 9F 78 2C B9 77 E2 79 2B 25 BF 2E\n          :         0B 59 4A 93 4B F8 B3 EC 81 34 AE 97 47 52 E0 A8\n          :         29 98 EC D1 B0 CA 2B 6F 7A 8B DB 4E 8D A5 15 7E\n          :         7E AF 33 62 09 9E 0F 11 44 8C C1 8D A2 11 9E 53\n          :         EF B2 E8\n          :       }\n          :     }\n672 30  12:   SEQUENCE {\n674 06   8:     OBJECT IDENTIFIER dh-sig-hmac-sha1 (1 3 6 1 5 5 7 6 3)\n684 05   0:     NULL\n          :     }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "686 03 109:   BIT STRING 0 unused bits\n          :     30 6A 30 52 30 48 31 0B 30 09 06 03 55 04 06 13\n          :     02 55 53 31 11 30 0F 06 03 55 04 0A 13 08 58 45\n          :     54 49 20 49 6E 63 31 10 30 0E 06 03 55 04 0B 13\n          :     07 54 65 73 74 69 6E 67 31 14 30 12 06 03 55 04\n          :     03 13 0B 52 6F 6F 74 20 44 53 41 20 43 41 02 06\n          :     00 DA 39 B6 E2 CB 04 14 2D 05 77 FE 5E 8F 65 F5\n          :     AF AD C9 5C 9B 02 C0 A8 88 29 61 63\n          :   }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Signature verification requires CA's private key, the CA certificate, and the generated Certification Request.",
      "ja": "署名の検証には、CAの秘密鍵、CA証明書、および生成された証明書要求が必要です。"
    },
    {
      "indent": 3,
      "text": "CA DH private key:",
      "ja": "CA DH秘密鍵："
    },
    {
      "indent": 7,
      "text": "x: 3E 5D AD FD E5 F4 6B 1B 61 5E 18 F9 0B 84 74 a7 52 1E D6 92 BC 34 94 56 F3 0C BE DA 67 7A DD 7D",
      "ja": "X：3E 5D AD FD E5 F4 6B 1B 61 5E 18 F9 0B 84 74 a7 52 1E D6 92 BC 34 94 56 F3 0C BE DA 67 7A DD 7D"
    },
    {
      "indent": 0,
      "text": "Appendix C. Example of Discrete Log Signature",
      "section_title": true,
      "ja": "付録C.個別ログ署名の例"
    },
    {
      "indent": 3,
      "text": "Step 1. Generate a DH key with length of q being 256 bits.",
      "ja": "手順1. qの長さが256ビットのDHキーを生成します。"
    },
    {
      "indent": 6,
      "text": "p: 94 84 E0 45 6C 7F 69 51 62 3E 56 80 7C 68 E7 C5 A9 9E 9E 74 74 94 ED 90 8C 1D C4 E1 4A 14 82 F5 D2 94 0C 19 E3 B9 10 BB 11 B9 E5 A5 FB 8E 21 51 63 02 86 AA 06 B8 21 36 B6 7F 36 DF D1 D6 68 5B 79 7C 1D 5A 14 75 1F 6A 93 75 93 CE BB 97 72 8A F0 0F 23 9D 47 F6 D4 B3 C7 F0 F4 E6 F6 2B C2 32 E1 89 67 BE 7E 06 AE F8 D0 01 6B 8B 2A F5 02 D7 B6 A8 63 94 83 B0 1B 31 7D 52 1A DE E5 03 85 27",
      "ja": "p：94 84 E0 45 6C 7F 69 51 62 3E 56 80 7C 68 E7 C5 A9 9E 9E 74 74 94 ED 90 8C 1D C4 E1 4A 14 82 F5 D2 94 0C 19 E3 B9 10 BB 11 B9 E5 A5 FB 8E 21 51 63 02 86 AA 06 B8 21 36 B6 7F 36 DF D1 D6 68 5B 79 7C 1D 5A 14 75 1F 6A 93 75 93 CE BB 97 72 8A F0 0F 23 9D 47 F6 D4 B3 C7 F0 F4 E6 F6 2B C2 32 E1 89 67 BE 7E 06 AE F8 D0 01 6B 8B 2A F5 02 D7 B6 A8 63 94 83 B0 1B 31 7D 52 1A DE E5 03 85 27"
    },
    {
      "indent": 6,
      "text": "q: E8 72 FA 96 F0 11 40 F5 F2 DC FD 3B 5D 78 94 B1 85 01 E5 69 37 21 F7 25 B9 BA 71 4A FC 60 30 FB",
      "ja": "q：E8 72 FA 96 F0 11 40 F5 F2 DC FD 3B 5D 78 94 B1 85 01 E5 69 37 21 F7 25 B9 BA 71 4A FC 60 30 FB"
    },
    {
      "indent": 6,
      "text": "g: 26 A6 32 2C 5A 2B D4 33 2B 5C DC 06 87 53 3F 90 06 61 50 38 3E D2 B9 7D 81 1C 12 10 C5 0C 53 D4 64 D1 8E 30 07 08 8C DD 3F 0A 2F 2C D6 1B 7F 57 86 D0 DA BB 6E 36 2A 18 E8 D3 BC 70 31 7A 48 B6 4E 18 6E DD 1F 22 06 EB 3F EA D4 41 69 D9 9B DE 47 95 7A 72 91 D2 09 7F 49 5C 3B 03 33 51 C8 F1 39 9A FF 04 D5 6E 7E 94 3D 03 B8 F6 31 15 26 48 95 A8 5C DE 47 88 B4 69 3A 00 A7 86 9E DA D1 CD",
      "ja": "g：26 A6 32 2C 5A 2B D4 33 2B 5C DC 06 87 53 3F 90 06 61 50 38 3E D2 B9 7D 81 1C 12 10 C5 0C 53 D4 64 D1 8E 30 07 08 8C DD 3F 0A 2F 2C D6 1B 7F 57 86 D0 DA BB 6E 36 2A 18 E8 D3 BC 70 31 7A 48 B6 4E 18 6E DD 1F 22 06 EB 3F EA D4 41 69 D9 9B DE 47 95 7A 72 91 D2 09 7F 49 5C 3B 03 33 51 C8 F1 39 9A FF 04 D5 6E 7E 94 3D 03 B8 F6 31 15 26 48 95 A8 5C DE 47 88 B4 69 3A 00 A7 86 9E DA D1 CD"
    },
    {
      "indent": 6,
      "text": "j: A3 91 01 C0 A8 6E A4 4D A0 56 FC 6C FE 1F A7 B0 CD 0F 94 87 0C 25 BE 97 76 8D EB E5 A4 09 5D AB 83 CD 80 0B 35 67 7F 0C 8E A7 31 98 32 85 39 40 9D 11 98 D8 DE B8 7F 86 9B AF 8D 67 3D B6 76 B4 61 2F 21 E1 4B 0E 68 FF 53 3E 87 DD D8 71 56 68 47 DC F7 20 63 4B 3C 5F 78 71 83 E6 70 9E E2 92",
      "ja": "j：A3 91 01 C0 A8 6E A4 4D A0 56 FC 6C FE 1F A7 B0 CD 0F 94 87 0C 25 BE 97 76 8D EB E5 A4 09 5D AB 83 CD 80 0B 35 67 7F 0C 8E A7 31 98 32 85 39 40 9D 11 98 D8 DE B8 7F 86 9B AF 8D 67 3D B6 76 B4 61 2F 21 E1 4B 0E 68 FF 53 3E 87 DD D8 71 56 68 47 DC F7 20 63 4B 3C 5F 78 71 83 E6 70 9E E2 92"
    },
    {
      "indent": 6,
      "text": "y: 5F CF 39 AD 62 CF 49 8E D1 CE 66 E2 B1 E6 A7 01 4D 05 C2 77 C8 92 52 42 A9 05 A4 DB E0 46 79 50 A3 FC 99 3D 3D A6 9B A9 AD BC 62 1C 69 B7 11 A1 C0 2A F1 85 28 F7 68 FE D6 8F 31 56 22 4D 0A 11 6E 72 3A 02 AF 0E 27 AA F9 ED CE 05 EF D8 59 92 C0 18 D7 69 6E BD 70 B6 21 D1 77 39 21 E1 AF 7A 3A CF 20 0A B4 2C 69 5F CF 79 67 20 31 4D F2 C6 ED 23 BF C4 BB 1E D1 71 40 2C 07 D6 F0 8F C5 1A",
      "ja": "y：5F CF 39 AD 62 CF 49 8E D1 CE 66 E2 B1 E6 A7 01 4D 05 C2 77 C8 92 52 42 A9 05 A4 DB E0 46 79 50 A3 FC 99 3D 3D A6 9B A9 AD BC 62 1C 69 B7 11 A1 C0 2A F1 85 28 F7 68 FE D6 8F 31 56 22 4D 0A 11 6E 72 3A 02 AF 0E 27 AA F9 ED CE 05 EF D8 59 92 C0 18 D7 69 6E BD 70 B6 21 D1 77 39 21 E1 AF 7A 3A CF 20 0A B4 2C 69 5F CF 79 67 20 31 4D F2 C6 ED 23 BF C4 BB 1E D1 71 40 2C 07 D6 F0 8F C5 1A"
    },
    {
      "indent": 6,
      "text": "seed: 1C D5 3A 0D 17 82 6D 0A 81 75 81 46 10 8E 3E DB 09 E4 98 34",
      "ja": "シード：1C D5 3A 0D 17 82 6D 0A 81 75 81 46 10 8E 3E DB 09 E4 98 34"
    },
    {
      "indent": 6,
      "text": "C: 00000037",
      "ja": "C：00000037"
    },
    {
      "indent": 6,
      "text": "x: 3E 5D AD FD E5 F4 6B 1B 61 5E 18 F9 0B 84 74 a7 52 1E D6 92 BC 34 94 56 F3 0C BE DA 67 7A DD 7D",
      "ja": "X：3E 5D AD FD E5 F4 6B 1B 61 5E 18 F9 0B 84 74 a7 52 1E D6 92 BC 34 94 56 F3 0C BE DA 67 7A DD 7D"
    },
    {
      "indent": 3,
      "text": "Step 2. Form the value to be signed and hash with SHA1. The result of the hash for this example is:",
      "ja": "ステップ2.署名する値を形成し、SHA1でハッシュします。この例のハッシュの結果は次のとおりです。"
    },
    {
      "indent": 8,
      "text": "5f a2 69 b6 4b 22 91 22 6f 4c fe 68 ec 2b d1 c6 d4 21 e5 2c",
      "ja": "5f a2 69 b6 4b 22 91 22 6f 4c fe 68 ec 2b d1 c6 d4 21 e5 2c"
    },
    {
      "indent": 3,
      "text": "Step 3. The hash value needs to be expanded, since |q| = 256. This is done by hashing the hash with SHA1 and appending it to the original hash. The value after this step is:",
      "ja": "ステップ3. | q |なので、ハッシュ値を展開する必要があります。 =256。これは、SHA1を使用してハッシュをハッシュし、元のハッシュに追加することによって行われます。このステップの後の値は次のとおりです。"
    },
    {
      "indent": 8,
      "text": "5f a2 69 b6 4b 22 91 22 6f 4c fe 68 ec 2b d1 c6 d4 21 e5 2c 64 92 8b c9 5e 34 59 70 bd 62 40 ad 6f 26 3b f7 1c a3 b2 cb",
      "ja": "5f a2 69 b6 4b 22 91 22 6f 4c fe 68 ec 2b d1 c6 d4 21 e5 2c 64 92 8b c9 5e 34 59 70 bd 62 40 ad 6f 26 3b f7 1c a3 b2 cb"
    },
    {
      "indent": 3,
      "text": "Next, the first 255 bits of this value are taken to be the resulting \"hash\" value. Note that in this case a shift of one bit right is done, since the result is to be treated as an integer:",
      "ja": "次に、この値の最初の255ビットが結果の「ハッシュ」値と見なされます。この場合、結果は整数として扱われるため、1ビット右にシフトされます。"
    },
    {
      "indent": 8,
      "text": "2f d1 34 db 25 91 48 91 37 a6 7f 34 76 15 e8 e3 6a 10 f2 96 32 49 45 e4 af 1a 2c b8 5e b1 20 56",
      "ja": "2фд1зчдб25 91 48 91зщашззчщш15е8езша10ф2яш32чя45ечаф1а2б85еб120 56"
    },
    {
      "indent": 3,
      "text": "Step 4. The signature value is computed. In this case, you get the values:",
      "ja": "ステップ4.署名値が計算されます。この場合、値を取得します。"
    },
    {
      "indent": 6,
      "text": "r: A1 B5 B4 90 01 34 6B A0 31 6A 73 F5 7D F6 5C 14 43 52 D2 10 BF 86 58 87 F7 BC 6E 5A 77 FF C3 4B",
      "ja": "r：A1 B5 B4 90 01 34 6B A0 31 6A 73 F5 7D F6 5C 14 43 52 D2 10 BF 86 58 87 F7 BC 6E 5A 77 FF C3 4B"
    },
    {
      "indent": 6,
      "text": "s: 59 40 45 BC 6F 0D DC FF 9D 55 40 1E C4 9E 51 3D 66 EF B2 FF 06 40 9A 39 68 75 81 F7 EC 9E BE A1",
      "ja": "s：59 40 45 BC 6F 0D DC FF 9D 55 40 1E C4 9E 51 3D 66 EF B2 FF 06 40 9A 39 68 75 81 F7 EC 9E BE A1"
    },
    {
      "indent": 3,
      "text": "The encoded signature value is then:",
      "ja": "エンコードされた署名の値は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "30 45 02 21 00 A1 B5 B4 90 01 34 6B A0 31 6A 73 F5 7D F6 5C 14 43 52 D2 10 BF 86 58 87 F7 BC 6E 5A 77 FF C3 4B 02 20 59 40 45 BC 6F 0D DC FF 9D 55 40 1E C4 9E 51 3D 66 EF B2 FF 06 40 9A 39 68 75 81 F7 EC 9E BE A1",
      "ja": "30 45 02 21 00 A1 B5 B4 90 01 34 6B A0 31 6A 73 F5 7D F6 5C 14 43 52 D2 10 BF 86 58 87 F7 BC 6E 5A 77 FF C3 4B 02 20 59 40 45 BC 6F 0D DC FF 9D 55 40 1E C4 9E 51 3D 66 EF B2 FF 06 40 9A 39 68 75 81 F7 EC 9E BE A1"
    },
    {
      "indent": 0,
      "text": " Result: 30 82 02 c2 30 82 02 67 02 01 00 30 1b 31 19 30 17 06 03 55 04 03 13 10 49 45 54 46 20 50 4b 49 58 20 53 41 4d 50 4c 45 30 82 02 41 30 82 01 b6 06 07 2a 86 48 ce 3e 02 01 30 82 01 a9 02 81 81 00 94 84 e0 45 6c 7f 69 51 62 3e 56 80 7c 68 e7 c5 a9 9e 9e 74 74 94 ed 90 8c 1d c4 e1 4a 14 82 f5 d2 94 0c 19 e3 b9 10 bb 11 b9 e5 a5 fb 8e 21 51 63 02 86 aa 06 b8 21 36 b6 7f 36 df d1 d6 68 5b 79 7c 1d 5a 14 75 1f 6a 93 75 93 ce bb 97 72 8a f0 0f 23 9d 47 f6 d4 b3 c7 f0 f4 e6 f6 2b c2 32 e1 89 67 be 7e 06 ae f8 d0 01 6b 8b 2a f5 02 d7 b6 a8 63 94 83 b0 1b 31 7d 52 1a de e5 03 85 27 02 81 80 26 a6 32 2c 5a 2b d4 33 2b 5c dc 06 87 53 3f 90 06 61 50 38 3e d2 b9 7d 81 1c 12 10 c5 0c 53 d4 64 d1 8e 30 07 08 8c dd 3f 0a 2f 2c d6 1b 7f 57 86 d0 da bb 6e 36 2a 18 e8 d3 bc 70 31 7a 48 b6 4e 18 6e dd 1f 22 06 eb 3f ea d4 41 69 d9 9b de 47 95 7a 72 91 d2 09 7f 49 5c 3b 03 33 51 c8 f1 39 9a ff 04 d5 6e 7e 94 3d 03 b8 f6 31 15 26 48 95 a8 5c de 47 88 b4 69 3a 00 a7 86 9e da d1 cd 02 21 00 e8 72 fa 96 f0 11 40 f5 f2 dc fd 3b 5d 78 94 b1 85 01 e5 69 37 21 f7 25 b9 ba 71 4a fc 60 30 fb 02 61 00 a3 91 01 c0 a8 6e a4 4d a0 56 fc 6c fe 1f a7 b0 cd 0f 94 87 0c 25 be 97 76 8d eb e5 a4 09 5d ab 83 cd 80 0b 35 67 7f 0c 8e a7 31 98 32 85 39 40 9d 11 98 d8 de b8 7f 86 9b af 8d 67 3d b6 76 b4 61 2f 21 e1 4b 0e 68 ff 53 3e 87 dd d8 71 56 68 47 dc f7 20 63 4b 3c 5f 78 71 83 e6 70 9e e2 92 30 1a 03 15 00 1c d5 3a 0d 17 82 6d 0a 81 75 81 46 10 8e 3e db 09 e4 98 34 02 01 37 03 81 84 00 02 81 80 5f cf 39 ad 62 cf 49 8e d1 ce 66 e2 b1 e6 a7 01 4d 05 c2 77 c8 92 52 42 a9 05 a4 db e0 46 79 50 a3 fc 99 3d 3d a6 9b a9 ad bc 62 1c 69 b7 11 a1 c0 2a f1 85 28 f7 68 fe d6 8f 31 56 22 4d 0a 11 6e 72 3a 02 af 0e 27 aa f9 ed ce 05 ef d8 59 92 c0 18 d7 69 6e bd 70 b6 21 d1 77 39 21 e1 af 7a 3a cf 20 0a b4 2c 69 5f cf 79 67 20 31 4d f2 c6 ed 23 bf c4 bb 1e d1 71 40 2c 07 d6 f0 8f c5 1a a0 00 30 0c 06 08 2b 06 01 05 05 07 06 04 05 00 03 47 00 30 44 02 20 54 d9 43 8d 0f 9d 42 03 d6 09 aa a1 9a 3c 17 09 ae bd ee b3 d1 a0 00 db 7d 8c b8 e4 56 e6 57 7b 02 20 44 89 b1 04 f5 40 2b 5f e7 9c f9 a4 97 50 0d ad c3 7a a4 2b b2 2d 5d 79 fb 38 8a b4 df bb 88 bc",
      "ja": "結果：30 82 02 c2 30 82 02 67 02 01 00 30 1b 31 19 30 17 06 03 55 04 03 13 10 49 45 54 46 20 50 4b 49 58 20 53 41 4d 50 4c 45 30 82 02 41 30 82 01 b6 06 07 2a 86 48 ce 3e 02 01 30 82 01 a9 02 81 81 00 94 84 e0 45 6c 7f 69 51 62 3e 56 80 7c 68 e7 c5 a9 9e 9e 74 74 94 ed 90 8c 1d c4 e1 4a 14 82 f5 d2 94 0c 19 e3 b9 10 bb 11 b9 e5 a5 fb 8e 21 51 63 02 86 aa 06 b8 21 36 b6 7f 36 df d1 d6 68 5b 79 7c 1d 5a 14 75 1f 6a 93 75 93 ce bb 97 72 8a f0 0f 23 9d 47 f6 d4 b3 c7 f0 f4 e6 f6 2b c2 32 e1 89 67 be 7e 06 ae f8 d0 01 6b 8b 2a f5 02 d7 b6 a8 63 94 83 b0 1b 31 7d 52 1a de e5 03 85 27 02 81 80 26 a6 32 2c 5a 2b d4 33 2b 5c dc 06 87 53 3f 90 06 61 50 38 3e d2 b9 7d 81 1c 12 10 c5 0c 53 d4 64 d1 8e 30 07 08 8c dd 3f 0a 2f 2c d6 1b 7f 57 86 d0 da bb 6e 36 2a 18 e8 d3 bc 70 31 7a 48 b6 4e 18 6e dd 1f 22 06 eb 3f ea d4 41 69 d9 9b de 47 95 7a 72 91 d2 09 7f 49 5c 3b 03 33 51 c8 f1 39 9a ff 04 d5 6e 7e 94 3d 03 b8 f6 31 15 26 48 95 a8 5c de 47 88 b4 69 3a 00 a7 86 9e da d1 cd 02 21 00 e8 72 fa 96 f0 11 40 f5 f2 dc fd 3b 5d 78 94 b1 85 01 e5 69 37 21 f7 25 b9 ba 71 4a fc 60 30 fb 02 61 00 a3 91 01 c0 a8 6e a4 4d a0 56 fc 6c fe 1f a7 b0 cd 0f 94 87 0c 25 be 97 76 8d eb e5 a4 09 5d ab 83 cd 80 0b 35 67 7f 0c 8e a7 31 98 32 85 39 40 9d 11 98 d8 de b8 7f 86 9b af 8d 67 3d b6 76 b4 61 2f 21 e1 4b 0e 68 ff 53 3e 87 dd d8 71 56 68 47 dc f7 20 63 4b 3c 5f 78 71 83 e6 70 9e e2 92 30 1a 03 15 00 1c d5 3a 0d 17 82 6d 0a 81 75 81 46 10 8e 3e db 09 e4 98 34 02 01 37 03 81 84 00 02 81 80 5f cf 39 ad 62 cf 49 8e d1 ce 66 e2 b1 e6 a7 01 4d 05 c2 77 c8 92 52 42 a9 05 a4 db e0 46 79 50 a3 fc 99 3d 3d a6 9b a9 ad bc 62 1c 69 b7 11 a1 c0 2a f1 85 28 f7 68 fe d6 8f 31 56 22 4d 0a 11 6e 72 3a 02 af 0e 27 aa f9 ed ce 05 ef d8 59 92 c0 18 d7 69 6e bd 70 b6 21 d1 77 39 21 e1 af 7a 3a cf 20 0a b4 2c 69 5f cf 79 67 20 31 4d f2 c6 ed 23 bf c4 bb 1e d1 71 40 2c 07 d6 f0 8f c5 1a a0 00 30 0c 06 08 2b 06 01 05 05 07 06 04 05 00 03 47 00 30 44 02 20 54 d9 43 8d 0f 9d 42 03 d6 09 aa a1 9a 3c 17 09 ae bd ee b3 d1 a0 00 db 7d 8c b8 e4 56 e6 57 7b 02 20 44 89 b1 04 f5 40 2b 5f e7 9c f9 a4 97 50 0d ad c3 7a a4 2b b2 2d 5d 79 fb 38 8a b4 df bb bb 88 bc"
    },
    {
      "indent": 3,
      "text": "Decoded version of result:",
      "ja": "結果のデコードされたバージョン："
    },
    {
      "indent": 2,
      "text": " 0 30  707: SEQUENCE {\n 4 30  615:   SEQUENCE {\n 8 02    1:     INTEGER 0\n11 30   27:     SEQUENCE {\n13 31   25:       SET {\n15 30   23:         SEQUENCE {\n17 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n22 13   16:           PrintableString 'IETF PKIX SAMPLE'\n          :           }\n          :         }\n          :       }\n40 30  577:     SEQUENCE {\n44 30  438:       SEQUENCE {\n48 06    7:         OBJECT IDENTIFIER dhPublicNumber (1 2 840 10046 2\n                                1)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": " 57 30  425:         SEQUENCE {\n 61 02  129:           INTEGER\n           :            00 94 84 E0 45 6C 7F 69 51 62 3E 56 80 7C 68 E7\n           :            C5 A9 9E 9E 74 74 94 ED 90 8C 1D C4 E1 4A 14 82\n           :            F5 D2 94 0C 19 E3 B9 10 BB 11 B9 E5 A5 FB 8E 21\n           :            51 63 02 86 AA 06 B8 21 36 B6 7F 36 DF D1 D6 68\n           :            5B 79 7C 1D 5A 14 75 1F 6A 93 75 93 CE BB 97 72\n           :            8A F0 0F 23 9D 47 F6 D4 B3 C7 F0 F4 E6 F6 2B C2\n           :            32 E1 89 67 BE 7E 06 AE F8 D0 01 6B 8B 2A F5 02\n           :            D7 B6 A8 63 94 83 B0 1B 31 7D 52 1A DE E5 03 85\n           :            27\n193 02  128:           INTEGER\n           :            26 A6 32 2C 5A 2B D4 33 2B 5C DC 06 87 53 3F 90\n           :            06 61 50 38 3E D2 B9 7D 81 1C 12 10 C5 0C 53 D4\n           :            64 D1 8E 30 07 08 8C DD 3F 0A 2F 2C D6 1B 7F 57\n           :            86 D0 DA BB 6E 36 2A 18 E8 D3 BC 70 31 7A 48 B6\n           :            4E 18 6E DD 1F 22 06 EB 3F EA D4 41 69 D9 9B DE\n           :            47 95 7A 72 91 D2 09 7F 49 5C 3B 03 33 51 C8 F1\n           :            39 9A FF 04 D5 6E 7E 94 3D 03 B8 F6 31 15 26 48\n           :            95 A8 5C DE 47 88 B4 69 3A 00 A7 86 9E DA D1 CD\n324 02   33:           INTEGER\n           :            00 E8 72 FA 96 F0 11 40 F5 F2 DC FD 3B 5D 78 94\n           :            B1 85 01 E5 69 37 21 F7 25 B9 BA 71 4A FC 60 30\n           :            FB\n359 02   97:           INTEGER\n           :            00 A3 91 01 C0 A8 6E A4 4D A0 56 FC 6C FE 1F A7\n           :            B0 CD 0F 94 87 0C 25 BE 97 76 8D EB E5 A4 09 5D\n           :            AB 83 CD 80 0B 35 67 7F 0C 8E A7 31 98 32 85 39\n           :            40 9D 11 98 D8 DE B8 7F 86 9B AF 8D 67 3D B6 76\n           :            B4 61 2F 21 E1 4B 0E 68 FF 53 3E 87 DD D8 71 56\n           :            68 47 DC F7 20 63 4B 3C 5F 78 71 83 E6 70 9E E2\n           :            92\n458 30   26:           SEQUENCE {\n460 03   21:             BIT STRING 0 unused bits\n           :            1C D5 3A 0D 17 82 6D 0A 81 75 81 46 10 8E 3E DB\n           :            09 E4 98 34\n483 02    1:             INTEGER 55\n           :             }\n           :           }\n           :         }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "486 03  132:       BIT STRING 0 unused bits\n           :         02 81 80 5F CF 39 AD 62 CF 49 8E D1 CE 66 E2 B1\n           :         E6 A7 01 4D 05 C2 77 C8 92 52 42 A9 05 A4 DB E0\n           :         46 79 50 A3 FC 99 3D 3D A6 9B A9 AD BC 62 1C 69\n           :         B7 11 A1 C0 2A F1 85 28 F7 68 FE D6 8F 31 56 22\n           :         4D 0A 11 6E 72 3A 02 AF 0E 27 AA F9 ED CE 05 EF\n           :         D8 59 92 C0 18 D7 69 6E BD 70 B6 21 D1 77 39 21\n           :         E1 AF 7A 3A CF 20 0A B4 2C 69 5F CF 79 67 20 31\n           :         4D F2 C6 ED 23 BF C4 BB 1E D1 71 40 2C 07 D6 F0\n           :         8F C5 1A\n           :       }\n621 A0    0:     [0]\n           :     }\n623 30   12:   SEQUENCE {\n625 06    8:     OBJECT IDENTIFIER '1 3 6 1 5 5 7 6 4'\n635 05    0:     NULL\n           :     }\n637 03   72:   BIT STRING 0 unused bits\n           :     30 45 02 21 00 A1 B5 B4 90 01 34 6B A0 31 6A 73\n           :     F5 7D F6 5C 14 43 52 D2 10 BF 86 58 87 F7 BC 6E\n           :     5A 77 FF C3 4B 02 20 59 40 45 BC 6F 0D DC FF 9D\n           :     55 40 1E C4 9E 51 3D 66 EF B2 FF 06 40 9A 39 68\n           :     75 81 F7 EC 9E BE A1\n           :   }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Jim Schaad Soaring Hawk Consulting",
      "ja": "ジムシャードソアリングホークコンサルティング"
    },
    {
      "indent": 3,
      "text": "EMail: ietf@augustcellars.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Hemma Prafullchandra HyTrust, Inc. 1975 W. El Camino Real, Suite 203 Mountain View, CA 94040 USA",
      "ja": "Hemma Prafullchandra HyTrust、Inc. 1975 W. El Camino Real、Suite 203 Mountain View、CA 94040 USA"
    },
    {
      "indent": 3,
      "text": "Phone: (650) 681-8100 EMail: HPrafullchandra@hytrust.com",
      "ja": "電話：（650）681-8100メール：HPrafullchandra@hytrust.com"
    }
  ]
}