{
  "title": {
    "text": "RFC 6816 - Simple Low-Density Parity Check (LDPC) Staircase Forward Error Correction (FEC) Scheme for FECFRAME",
    "ja": "RFC 6816 - FECFRAME用のシンプルな低密度パリティチェック（LDPC）階段前方誤り訂正（FEC）スキーム"
  },
  "number": 6816,
  "created_at": "2020-09-05 08:49:06.302948+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                           V. Roca\nRequest for Comments: 6816                                         INRIA\nCategory: Standards Track                                      M. Cunche\nISSN: 2070-1721                                          INSA-Lyon/INRIA\n                                                                J. Lacan\n                                                 ISAE, Univ. of Toulouse\n                                                           December 2012",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": " Simple Low-Density Parity Check (LDPC) Staircase Forward Error Correction (FEC) Scheme for FECFRAME",
      "ja": "FECFRAME用のシンプルな低密度パリティチェック（LDPC）階段前方誤り訂正（FEC）スキーム"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document describes a fully specified simple Forward Error Correction (FEC) scheme for Low-Density Parity Check (LDPC) Staircase codes that can be used to protect media streams along the lines defined by FECFRAME. These codes have many interesting properties: they are systematic codes, they perform close to ideal codes in many use-cases, and they also feature very high encoding and decoding throughputs. LDPC-Staircase codes are therefore a good solution to protect a single high bitrate source flow or to protect globally several mid-rate flows within a single FECFRAME instance. They are also a good solution whenever the processing load of a software encoder or decoder must be kept to a minimum.",
      "ja": "このドキュメントでは、FECFRAMEで定義されたラインに沿ってメディアストリームを保護するために使用できる、低密度パリティチェック（LDPC）階段コードの完全に指定された単純な前方誤り訂正（FEC）スキームについて説明します。これらのコードには多くの興味深い特性があります。体系的なコードであり、多くのユースケースで理想的なコードに近いパフォーマンスを発揮し、非常に高いエンコードおよびデコードスループットを備えています。したがって、LDPC階段コードは、単一の高ビットレートソースフローを保護するか、単一のFECFRAMEインスタンス内の複数の中レートフローをグローバルに保護するための優れたソリューションです。また、ソフトウェアエンコーダーまたはデコーダーの処理負荷を最小限に抑える必要がある場合にも、これらは優れたソリューションです。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の状態"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはInternet Standards Trackドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントは、IETF（Internet Engineering Task Force）の製品です。これは、IETFコミュニティのコンセンサスを表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による公開が承認されました。インターネット標準の詳細については、RFC 5741のセクション2をご覧ください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6816.",
      "ja": "このドキュメントの現在のステータス、エラータ、およびフィードバックの提供方法に関する情報は、http：//www.rfc-editor.org/info/rfc6816で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2012 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "Copyright（c）2012 IETF Trustおよびドキュメントの作成者として特定された人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書は、BCP 78およびこの文書の発行日に有効なIETF文書に関するIETFトラストの法的規定（http://trustee.ietf.org/license-info）の対象となります。これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................4\n2. Terminology .....................................................5\n3. Definitions Notations and Abbreviations .........................5\n   3.1. Definitions ................................................5\n   3.2. Notations ..................................................7\n   3.3. Abbreviations ..............................................8\n4. Common Procedures Related to the ADU Block and Source\n   Block Creation ..................................................8\n   4.1. Restrictions ...............................................9\n   4.2. ADU Block Creation .........................................9\n   4.3. Source Block Creation .....................................11\n5. LDPC-Staircase FEC Scheme for Arbitrary ADU Flows ..............13\n   5.1. Formats and Codes .........................................13\n        5.1.1. FEC Framework Configuration Information ............13\n        5.1.2. Explicit Source FEC Payload ID .....................14\n        5.1.3. Repair FEC Payload ID ..............................16\n   5.2. Procedures ................................................17\n   5.3. FEC Code Specification ....................................17\n6. Security Considerations ........................................17\n   6.1. Attacks against the Data Flow .............................17\n        6.1.1. Access to Confidential Content .....................17\n        6.1.2. Content Corruption .................................18\n   6.2. Attacks against the FEC Parameters ........................18\n   6.3. When Several Source Flows Are to Be Protected Together ....19\n   6.4. Baseline Secure FEC Framework Operation ...................19\n7. Operations and Management Considerations .......................19\n   7.1. Operational Recommendations ...............................19\n8. IANA Considerations ............................................21\n9. Acknowledgments ................................................21\n10. References ....................................................21\n   10.1. Normative References .....................................21\n   10.2. Informative References ...................................22",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The use of Forward Error Correction (FEC) codes is a classic solution to improve the reliability of unicast, multicast, and broadcast Content Delivery Protocols (CDPs) and applications [RFC3453]. \"Forward Error Correction (FEC) Framework\" [RFC6363] describes a generic framework to use FEC schemes with media delivery applications and, for instance, with real-time streaming media applications based on the RTP real-time protocol. Similarly, \"Forward Error Correction (FEC) Building Block\" [RFC5052] describes a generic framework to use FEC schemes with objects (e.g., files) delivery applications based on either the Asynchronous Layered Coding (ALC) [RFC5775] or the NACK-Oriented Reliable Multicast (NORM) [RFC5740] protocols.",
      "ja": "Forward Error Correction（FEC）コードの使用は、ユニキャスト、マルチキャスト、およびブロードキャストのコンテンツ配信プロトコル（CDP）とアプリケーション[RFC3453]の信頼性を向上させるための古典的なソリューションです。 「Forward Error Correction（FEC）Framework」[RFC6363]では、メディア配信アプリケーションで、たとえばRTPリアルタイムプロトコルに基づくリアルタイムストリーミングメディアアプリケーションでFECスキームを使用するための一般的なフレームワークについて説明しています。同様に、「Forward Error Correction（FEC）Building Block」[RFC5052]は、非同期レイヤードコーディング（ALC）[RFC5775]またはNACK指向のいずれかに基づくオブジェクト（ファイルなど）配信アプリケーションでFECスキームを使用する一般的なフレームワークについて説明していますReliable Multicast（NORM）[RFC5740]プロトコル。"
    },
    {
      "indent": 3,
      "text": "More specifically, the [RFC5053] (Raptor) and [RFC5170] (LDPC-Staircase and LDPC-Triangle) FEC schemes introduce erasure codes based on sparse parity check matrices for object delivery protocols like ALC and NORM. Similarly, \"Reed-Solomon Forward Error Correction (FEC) Schemes\" [RFC5510] introduces Reed-Solomon codes based on Vandermonde matrices for the same object delivery protocols. All these codes are systematic codes, meaning that the k source symbols are part of the n encoding symbols. Additionally, the Reed-Solomon FEC codes belong to the class of Maximum Distance Separable (MDS) codes that are optimal in terms of erasure recovery capabilities. It means that a receiver can recover the k source symbols from any set of exactly k encoding symbols out of n. This is not the case with either Raptor or LDPC-Staircase codes, and these codes require a certain number of encoding symbols in excess to k. However, this number is small in practice when an appropriate decoding scheme is used at the receiver [Cunche08]. Another key difference is the high encoding/decoding complexity of Reed-Solomon codecs compared to Raptor or LDPC-Staircase codes. A difference of one or more orders of magnitude in terms of encoding/decoding speed exists between the Reed-Solomon and LDPC-Staircase software codecs [Cunche08][CunchePHD10]. Finally, Raptor and LDPC-Staircase codes are large block FEC codes, in the sense of [RFC3453], since they can efficiently deal with a large number of source symbols.",
      "ja": "より具体的には、[RFC5053]（Raptor）および[RFC5170]（LDPC-StaircaseおよびLDPC-Triangle）FECスキームは、ALCやNORMなどのオブジェクト配信プロトコル用のスパースパリティチェックマトリックスに基づく消去コードを導入します。同様に、「Reed-Solomon Forward Error Correction（FEC）Schemes」[RFC5510]は、同じオブジェクト配信プロトコルのVandermonde行列に基づくReed-Solomonコードを導入しています。これらのコードはすべて体系的なコードです。つまり、k個のソースシンボルはn個のエンコーディングシンボルの一部です。さらに、リードソロモンFECコードは、消去回復機能の点で最適な最大距離分離可能（MDS）コードのクラスに属します。これは、受信機がnから正確にk個のエンコーディングシンボルの任意のセットからk個のソースシンボルを復元できることを意味します。これは、RaptorまたはLDPC-Staircaseコードの場合には当てはまりません。これらのコードには、kを超える特定の数のエンコードシンボルが必要です。ただし、適切なデコーディングスキームが受信機で使用されている場合、この数は実際には小さいです[Cunche08]。もう1つの重要な違いは、RaptorまたはLDPC-Staircaseコードと比較して、リードソロモンコーデックのエンコード/デコードの複雑さが高いことです。 Reed-SolomonとLDPC-Staircaseソフトウェアコーデック[Cunche08] [CunchePHD10]の間には、エンコード/デコード速度の点で1桁以上の違いがあります。最後に、RaptorとLDPC-Staircaseコードは、[RFC3453]の意味で大きなブロックFECコードです。これは、それらが多数のソースシンボルを効率的に処理できるためです。"
    },
    {
      "indent": 3,
      "text": "The present document focuses on LDPC-Staircase codes that belong to the well-known class of \"Low Density Parity Check\" codes. Because of their key features, these codes are a good solution in many situations, as detailed in Section 7.",
      "ja": "このドキュメントは、「低密度パリティチェック」コードのよく知られたクラスに属するLDPC-階段コードに焦点を当てています。セクション7で説明するように、これらのコードは主要な機能のため、多くの状況で優れたソリューションです。"
    },
    {
      "indent": 0,
      "text": " This document inherits from [RFC5170], Section 6 \"Full Specification of the LDPC-Staircase Scheme\", the specifications of the core LDPC-Staircase codes, and from Section 5.7 \"Pseudo-Random Number Generator\", the specifications of the PRNG used by these codes. Therefore, this document specifies only the information specific to the FECFRAME context and refers to [RFC5170] for the core specifications of the codes. To that purpose, the present document introduces:",
      "ja": "このドキュメントは、[RFC5170]、セクション6「LDPC-階段スキームの完全な仕様」、コアLDPC-階段コードの仕様、およびセクション5.7「疑似乱数ジェネレータ」から継承されたPRNGの仕様を継承しています。これらのコード。したがって、このドキュメントでは、FECFRAMEコンテキストに固有の情報のみを指定し、コードのコア仕様について[RFC5170]を参照します。そのために、このドキュメントでは次のことを紹介します。"
    },
    {
      "indent": 3,
      "text": "o the Fully Specified FEC Scheme with FEC Encoding ID 7 that specifies a simple way of using LDPC-Staircase codes in order to protect arbitrary Application Data Unit (ADU) flows.",
      "ja": "o 任意のアプリケーションデータユニット（ADU）フローを保護するためにLDPC階段コードを使用する簡単な方法を指定するFECエンコーディングID 7の完全に指定されたFECスキーム。"
    },
    {
      "indent": 3,
      "text": "Therefore Sections 4 and 5 (except Section 5.7, see above) of [RFC5170], that define [RFC5052] specific Formats and Procedures, are not considered and are replaced by FECFRAME specific Formats and Procedures.",
      "ja": "したがって、[RFC5052]固有のフォーマットと手順を定義する[RFC5170]のセクション4と5（セクション5.7、上記を参照）は考慮されず、FECFRAME固有のフォーマットと手順に置き換えられます。"
    },
    {
      "indent": 3,
      "text": "Finally, publicly available reference implementations of these codes are available [LDPC-codec] [LDPC-codec-OpenFEC].",
      "ja": "最後に、これらのコードの公に利用可能なリファレンス実装が利用可能です[LDPC-codec] [LDPC-codec-OpenFEC]。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2. 用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は、 RFC 2119 [RFC2119]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Definitions Notations and Abbreviations",
      "section_title": true,
      "ja": "3. 定義表記法と略語"
    },
    {
      "indent": 0,
      "text": "3.1. Definitions",
      "section_title": true,
      "ja": "3.1. 定義"
    },
    {
      "indent": 3,
      "text": "This document uses the following terms and definitions. Those in the list below are FEC scheme specific and are in line with [RFC5052]:",
      "ja": "このドキュメントでは、次の用語と定義を使用しています。以下のリストにあるものは、FECスキーム固有のものであり、[RFC5052]と一致しています。"
    },
    {
      "indent": 3,
      "text": "Source symbol: unit of data used during the encoding process. In this specification, there is always one source symbol per ADU.",
      "ja": "ソースシンボル：エンコードプロセス中に使用されるデータの単位。この仕様では、ADUごとに常に1つのソースシンボルがあります。"
    },
    {
      "indent": 3,
      "text": "Encoding symbol: unit of data generated by the encoding process. With systematic codes, source symbols are part of the encoding symbols.",
      "ja": "エンコーディングシンボル：エンコーディングプロセスによって生成されるデータの単位。体系的なコードでは、ソースシンボルはエンコードシンボルの一部です。"
    },
    {
      "indent": 3,
      "text": "Repair symbol: encoding symbol that is not a source symbol.",
      "ja": "シンボルの修復：ソースシンボルではないエンコードシンボル。"
    },
    {
      "indent": 3,
      "text": "Code rate: the k/n ratio, i.e., the ratio between the number of source symbols and the number of encoding symbols. By definition, the code rate is such that: 0 < code rate <= 1. A code rate close to 1 indicates that a small number of repair symbols have been produced during the encoding process.",
      "ja": "コードレート：k / n比、つまりソースシンボルの数とエンコードシンボルの数の比率。定義により、コードレートは次のようになります。0 <コードレート<=1。1に近いコードレートは、エンコードプロセス中に少数の修復シンボルが生成されたことを示します。"
    },
    {
      "indent": 3,
      "text": "Systematic code: FEC code in which the source symbols are part of the encoding symbols. The LDPC-Staircase codes introduced in this document are systematic.",
      "ja": "系統的コード：ソースシンボルがエンコードシンボルの一部であるFECコード。このドキュメントで紹介されているLDPC-階段コードは体系的です。"
    },
    {
      "indent": 3,
      "text": "Source block: a block of k source symbols that are considered together for the encoding.",
      "ja": "ソースブロック：エンコーディングで一緒に考慮されるk個のソースシンボルのブロック。"
    },
    {
      "indent": 3,
      "text": "Packet erasure channel: a communication path where packets are either dropped (e.g., by a congested router, or because the number of transmission errors exceeds the correction capabilities of the physical layer codes) or received. When a packet is received, it is assumed that this packet is not corrupted.",
      "ja": "パケット消去チャネル：パケットが（たとえば、輻輳したルーターによって、または伝送エラーの数が物理層コードの訂正能力を超えているために）ドロップされるか、受信される通信パス。パケットを受信すると、このパケットは破損していないと見なされます。"
    },
    {
      "indent": 3,
      "text": "The following are FECFRAME specific and are in line with [RFC6363]:",
      "ja": "以下はFECFRAME固有であり、[RFC6363]に準拠しています。"
    },
    {
      "indent": 3,
      "text": "Application Data Unit (ADU): the unit of source data provided as payload to the transport layer. Depending on the use-case, an ADU may use an RTP encapsulation.",
      "ja": "アプリケーションデータユニット（ADU）：トランスポート層にペイロードとして提供されるソースデータの単位。ユースケースによっては、ADUがRTPカプセル化を使用する場合があります。"
    },
    {
      "indent": 3,
      "text": "(Source) ADU Flow: a sequence of ADUs associated with a transport-layer flow identifier (such as the standard 5-tuple {Source IP address, source port, destination IP address, destination port, transport protocol}). Depending on the use-case, several ADU flows may be protected together by FECFRAME.",
      "ja": "（ソース）ADUフロー：トランスポート層フロー識別子に関連付けられた一連のADU（標準の5タプル{ソースIPアドレス、ソースポート、宛先IPアドレス、宛先ポート、トランスポートプロトコル}など）。ユースケースによっては、いくつかのADUフローがFECFRAMEによって一緒に保護される場合があります。"
    },
    {
      "indent": 3,
      "text": "ADU Block: a set of ADUs that are considered together by the FECFRAME instance for the purpose of the FEC scheme. Along with the flow ID (F[]), length (L[]), and padding (Pad[]) fields, they form the set of source symbols over which FEC encoding will be performed.",
      "ja": "ADUブロック：FECスキームの目的でFECFRAMEインスタンスによって一緒に考慮されるADUのセット。フローID（F []）、長さ（L []）、パディング（Pad []）フィールドとともに、これらはFECエンコーディングが実行されるソースシンボルのセットを形成します。"
    },
    {
      "indent": 3,
      "text": "ADU Information (ADUI): a unit of data constituted by the ADU and the associated Flow ID, Length, and Padding fields (Section 4.3). This is the unit of data that is used as source symbol.",
      "ja": "ADU情報（ADUI）：ADUおよび関連するフローID、長さ、パディングフィールド（セクション4.3）で構成されるデータの単位。これは、ソースシンボルとして使用されるデータの単位です。"
    },
    {
      "indent": 3,
      "text": "FEC Framework Configuration Information (FFCI): information that controls the operation of the FEC Framework. The FFCI enables the synchronization of the FECFRAME sender and receiver instances.",
      "ja": "FECフレームワーク構成情報（FFCI）：FECフレームワークの操作を制御する情報。 FFCIは、FECFRAME送信側および受信側インスタンスの同期を可能にします。"
    },
    {
      "indent": 3,
      "text": "FEC Source Packet: at a sender (respectively, at a receiver) a payload submitted to (respectively, received from) the transport protocol containing an ADU along with an optional Explicit Source FEC Payload ID.",
      "ja": "FECソースパケット：送信側（それぞれ、受信側）で、ADUとオプションの明示的ソースFECペイロードIDを含むトランスポートプロトコルに送信された（それぞれ受信された）ペイロード。"
    },
    {
      "indent": 3,
      "text": "FEC Repair Packet: at a sender (respectively, at a receiver) a payload submitted to (respectively, received from) the transport protocol containing one repair symbol along with a Repair FEC Payload ID and possibly an RTP header.",
      "ja": "FEC修復パケット：送信側（それぞれ、受信側）で、1つの修復シンボルと修復FECペイロードID、および場合によってはRTPヘッダーを含むトランスポートプロトコルに送信された（それぞれから受信された）ペイロード。"
    },
    {
      "indent": 3,
      "text": "The above terminology is illustrated in Figure 1 (sender's point of view):",
      "ja": "上記の用語を図1に示します（送信者の視点）。"
    },
    {
      "indent": 3,
      "text": "+----------------------+\n|     Application      |\n+----------------------+\n           |\n           | (1) Application Data Units (ADUs)\n           |\n           v\n+----------------------+                           +----------------+\n|    FEC Framework     |                           |                |\n|                      |-------------------------->|   FEC Scheme   |\n|(2) Construct source  |(3) Source Block           |                |\n|    blocks            |                           |(4) FEC Encoding|\n|(6) Construct FEC     |<--------------------------|                |\n|    source and repair |                           |                |\n|    packets           |(5) Explicit Source FEC    |                |\n+----------------------+    Payload IDs            +----------------+\n           |                Repair FEC Payload IDs\n           |                Repair symbols\n           |\n           |(7) FEC source and repair packets\n           v\n+----------------------+\n|   Transport Layer    |\n|     (e.g., UDP)      |\n+----------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "Figure 1: Terminology Used in This Document (Sender)",
      "ja": "図1：このドキュメントで使用されている用語（送信者）"
    },
    {
      "indent": 0,
      "text": "3.2. Notations",
      "section_title": true,
      "ja": "3.2. 記法"
    },
    {
      "indent": 3,
      "text": "This document uses the following notations. Those in the list below are FEC scheme specific:",
      "ja": "このドキュメントでは、次の表記法を使用しています。以下のリストにあるものは、FECスキーム固有のものです。"
    },
    {
      "indent": 3,
      "text": "k denotes the number of source symbols in a source block.",
      "ja": "kは、ソースブロック内のソースシンボルの数を示します。"
    },
    {
      "indent": 3,
      "text": "max_k denotes the maximum number of source symbols for any source block.",
      "ja": "max_kは、任意のソースブロックのソースシンボルの最大数を示します。"
    },
    {
      "indent": 3,
      "text": "n denotes the number of encoding symbols generated for a source block.",
      "ja": "nは、ソースブロックに対して生成されたエンコードシンボルの数を示します。"
    },
    {
      "indent": 3,
      "text": "E denotes the encoding symbol length in bytes.",
      "ja": "Eは、エンコーディングシンボルの長さをバイト単位で示します。"
    },
    {
      "indent": 3,
      "text": "CR denotes the \"code rate\", i.e., the k/n ratio.",
      "ja": "CRは「コードレート」、つまりk / n比を示します。"
    },
    {
      "indent": 3,
      "text": "N1 denotes the target number of \"1s\" per column in the left side of the parity check matrix.",
      "ja": "N1は、検査行列の左側の列ごとの「1」のターゲット数を示します。"
    },
    {
      "indent": 3,
      "text": "N1m3 denotes the value N1 - 3.",
      "ja": "N1m3は値N1-3を示します。"
    },
    {
      "indent": 3,
      "text": "G G denotes the number of encoding symbols per group, i.e., the number of symbols sent in the same packet.",
      "ja": "G Gは、グループあたりの符号化シンボルの数、つまり同じパケットで送信されるシンボルの数を示します。"
    },
    {
      "indent": 3,
      "text": "a^^b denotes a raised to the power b.",
      "ja": "a ^^ bは、bの累乗を示します。"
    },
    {
      "indent": 3,
      "text": "The following are FECFRAME specific:",
      "ja": "以下はFECFRAME固有のものです。"
    },
    {
      "indent": 3,
      "text": "B denotes the number of ADUs per ADU block.",
      "ja": "Bは、ADUブロックあたりのADUの数を示します。"
    },
    {
      "indent": 3,
      "text": "max_B denotes the maximum number of ADUs for any ADU block.",
      "ja": "max_Bは、任意のADUブロックのADUの最大数を示します。"
    },
    {
      "indent": 0,
      "text": "3.3. Abbreviations",
      "section_title": true,
      "ja": "3.3. 略語"
    },
    {
      "indent": 3,
      "text": "This document uses the following abbreviations:",
      "ja": "このドキュメントでは、次の略語を使用しています。"
    },
    {
      "indent": 3,
      "text": "ADU Application Data Unit",
      "ja": "ADUアプリケーションデータユニット"
    },
    {
      "indent": 3,
      "text": "ESI Encoding Symbol ID",
      "ja": "ESIエンコーディングシンボルID"
    },
    {
      "indent": 3,
      "text": "FEC Forward Error (or Erasure) Correction",
      "ja": "FEC転送エラー（または消去）修正"
    },
    {
      "indent": 3,
      "text": "FFCI FEC Framework Configuration Information",
      "ja": "FFCI FECフレームワーク構成情報"
    },
    {
      "indent": 3,
      "text": "FSSI FEC Scheme-Specific Information",
      "ja": "FSSI FECスキーム固有の情報"
    },
    {
      "indent": 3,
      "text": "LDPC Low-Density Parity Check",
      "ja": "LDPC低密度パリティチェック"
    },
    {
      "indent": 3,
      "text": "MDS Maximum Distance Separable",
      "ja": "MDS最大距離分離可能"
    },
    {
      "indent": 3,
      "text": "PRNG Pseudo-Random Number Generator",
      "ja": "PRNG疑似乱数ジェネレータ"
    },
    {
      "indent": 3,
      "text": "SDP Session Description Protocol",
      "ja": "SDPセッション記述プロトコル"
    },
    {
      "indent": 0,
      "text": "4. Common Procedures Related to the ADU Block and Source Block Creation",
      "section_title": true,
      "ja": "4. ADUブロックとソースブロックの作成に関連する一般的な手順"
    },
    {
      "indent": 3,
      "text": "This section introduces the procedures that are used during the ADU block and related source block creation, for the FEC scheme considered.",
      "ja": "このセクションでは、考慮されるFECスキームに対して、ADUブロックおよび関連するソースブロックの作成中に使用される手順を紹介します。"
    },
    {
      "indent": 0,
      "text": "4.1. Restrictions",
      "section_title": true,
      "ja": "4.1. 制限事項"
    },
    {
      "indent": 3,
      "text": "This specification has the following restrictions:",
      "ja": "この仕様には次の制限があります。"
    },
    {
      "indent": 3,
      "text": "o there MUST be exactly one source symbol per ADUI, and therefore per ADU;",
      "ja": "o ADUIごとに、したがってADUごとに正確に1つのソースシンボルが存在する必要があります。"
    },
    {
      "indent": 3,
      "text": "o there MUST be exactly one repair symbol per FEC repair packet;",
      "ja": "o FEC修復パケットごとに1つの修復シンボルが存在する必要があります。"
    },
    {
      "indent": 3,
      "text": "o there MUST be exactly one source block per ADU block;",
      "ja": "o ADUブロックごとに正確に1つのソースブロックが必要です。"
    },
    {
      "indent": 3,
      "text": "o the use of the LDPC-Staircase scheme is such that there MUST be exactly one encoding symbol per group; i.e., G MUST be equal to 1 [RFC5170];",
      "ja": "o LDPC-階段方式の使用は、グループごとにちょうど1つの符号化シンボルが存在しなければならないようなものです。つまり、Gは1に等しい必要があります[RFC5170]。"
    },
    {
      "indent": 0,
      "text": "4.2. ADU Block Creation",
      "section_title": true,
      "ja": "4.2. ADUブロックの作成"
    },
    {
      "indent": 3,
      "text": "Two kinds of limitations exist that impact the ADU block creation:",
      "ja": "ADUブロックの作成に影響を与える2種類の制限があります。"
    },
    {
      "indent": 3,
      "text": "o at the FEC scheme level: the FEC scheme and the FEC codec have limitations that define a maximum source block size;",
      "ja": "o FECスキームレベル：FECスキームとFECコーデックには、最大ソースブロックサイズを定義する制限があります。"
    },
    {
      "indent": 3,
      "text": "o at the FECFRAME instance level: the target use-case can have real-time constraints that can/will define a maximum ADU block size;",
      "ja": "o FECFRAMEインスタンスレベル：ターゲットのユースケースには、最大ADUブロックサイズを定義できる/定義するリアルタイム制約がある場合があります。"
    },
    {
      "indent": 3,
      "text": "Note that the use of the terminology \"maximum source block size\" and \"maximum ADU block size\" depends on the point of view that is adopted (FEC scheme versus FECFRAME instance). However, in this document, both refer to the same value since Section 4.1 requires there be exactly one source symbol per ADU. We now detail each of these aspects.",
      "ja": "「最大ソースブロックサイズ」および「最大ADUブロックサイズ」という用語の使用は、採用されている観点（FECスキームとFECFRAMEインスタンス）によって異なることに注意してください。ただし、このドキュメントでは、セクション4.1ではADUごとに1つのソースシンボルが必要であるため、両方とも同じ値を参照しています。次に、これらの各側面について詳しく説明します。"
    },
    {
      "indent": 3,
      "text": "The maximum source block size in symbols, max_k, depends on several parameters: the code rate (CR) and the Encoding Symbol ID (ESI) field length in the Explicit Source/Repair FEC Payload ID (16 bits), as well as possible internal codec limitations. More specifically, max_k cannot be larger than the following values, derived from the ESI field size limitation, for a given code rate:",
      "ja": "シンボルの最大ソースブロックサイズmax_kは、いくつかのパラメーターに依存します。明示的なソース/修復FECペイロードID（16ビット）のコードレート（CR）とエンコードシンボルID（ESI）フィールド長、および可能な内部コーデックの制限。より具体的には、max_kは、特定のコードレートについて、ESIフィールドサイズの制限から派生した次の値より大きくすることはできません。"
    },
    {
      "indent": 6,
      "text": "max1_k = 2^^(16 - ceil(Log2(1/CR)))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Some common max1_k values are:",
      "ja": "一般的なmax1_kの値は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o CR == 1 (no repair symbol): max1_k = 2^^16 = 65536 symbols",
      "ja": "o CR == 1（修復記号なし）：max1_k = 2 ^^ 16 = 65536記号"
    },
    {
      "indent": 3,
      "text": "o  1/2 <= CR < 1: max1_k = 2^^15 = 32,768 symbols",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": " o 1/4 <= CR < 1/2: max1_k = 2^^14 = 16,384 symbols Additionally, a codec can impose other limitations on the maximum source block size, for instance, because of a limited working memory size. This decision MUST be clarified at implementation time, when the target use-case is known. This results in a max2_k limitation.",
      "ja": "o 1/4 <= CR <1/2：max1_k = 2 ^^ 14 = 16,384シンボルさらに、作業メモリサイズが限られているため、コーデックは最大ソースブロックサイズに他の制限を課す場合があります。この決定は、ターゲットのユースケースがわかっている実装時に明確にする必要があります。これにより、max2_kの制限が発生します。"
    },
    {
      "indent": 3,
      "text": "Then, max_k is given by:",
      "ja": "次に、max_kは次のように与えられます。"
    },
    {
      "indent": 6,
      "text": "max_k = min(max1_k, max2_k)",
      "ja": "max_k =最小（max1_k、max2_k）"
    },
    {
      "indent": 3,
      "text": "Note that this calculation is only required at the encoder (sender), since the actual k parameter (k <= max_k) is communicated to the decoder (receiver) through the Explicit Source/Repair FEC Payload ID.",
      "ja": "実際のkパラメーター（k <= max_k）はExplicit Source / Repair FEC Payload IDを介してデコーダー（レシーバー）に通知されるため、この計算はエンコーダー（送信者）でのみ必要であることに注意してください。"
    },
    {
      "indent": 3,
      "text": "The source ADU flows can have real-time constraints. When there are multiple flows, with different real-time constraints, let us consider the most stringent constraints (see [RFC6363], Section 10.2, item 6, for recommendations when several flows are globally protected). In that case the maximum number of ADUs of an ADU block must not exceed a certain threshold since it directly impacts the decoding delay. The larger the ADU block size, the longer a decoder may have to wait until it has received a sufficient number of encoding symbols for decoding to succeed, and therefore the larger the decoding delay. When the target use-case is known, these real-time constraints result in an upper bound to the ADU block size, max_rt.",
      "ja": "ソースADUフローには、リアルタイム制約があります。リアルタイム制約が異なる複数のフローがある場合、最も厳しい制約を検討してみましょう（複数のフローがグローバルに保護されている場合の推奨事項については、[RFC6363]、セクション10.2、アイテム6を参照してください）。その場合、ADUブロックのADUの最大数は、デコード遅延に直接影響するため、特定のしきい値を超えてはなりません。 ADUブロックサイズが大きいほど、デコードが成功するために十分な数のエンコードシンボルを受信するまでデコーダが待機する時間が長くなるため、デコード遅延が大きくなります。ターゲットのユースケースがわかっている場合、これらのリアルタイム制約により、ADUブロックサイズの上限max_rtが生じます。"
    },
    {
      "indent": 3,
      "text": "For instance, if the use-case specifies a maximum decoding latency, l, and if each source ADU covers a duration d of a continuous media (we assume here the simple case of a constant bit rate ADU flow), then the ADU block size must not exceed:",
      "ja": "たとえば、ユースケースで最大デコードレイテンシlを指定し、各ソースADUが連続メディアの継続時間dをカバーする場合（ここでは、固定ビットレートADUフローの単純なケースを想定しています）、ADUブロックサイズ以下を超えてはなりません："
    },
    {
      "indent": 6,
      "text": "max_rt = floor(l / d)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "After encoding, this block will produce a set of at most n = max_rt / CR encoding symbols. These n encoding symbols will have to be sent at a rate of n / l packets per second. For instance, with d = 10 ms, l = 1 s, max_rt = 100 ADUs.",
      "ja": "エンコード後、このブロックは最大でn = max_rt / CRエンコードシンボルのセットを生成します。これらのn個のエンコードシンボルは、毎秒n / lパケットの速度で送信する必要があります。たとえば、d = 10 ms、l = 1 s、max_rt = 100 ADU。"
    },
    {
      "indent": 3,
      "text": "If we take into account all these constraints, we find:",
      "ja": "これらすべての制約を考慮すると、次のことがわかります。"
    },
    {
      "indent": 6,
      "text": "max_B = min(max_k, max_rt)",
      "ja": "max_B = min（max_k、max_rt）"
    },
    {
      "indent": 3,
      "text": "This max_B parameter is an upper bound to the number of ADUs that can constitute an ADU block.",
      "ja": "このmax_Bパラメータは、ADUブロックを構成できるADUの数の上限です。"
    },
    {
      "indent": 0,
      "text": "4.3. Source Block Creation",
      "section_title": true,
      "ja": "4.3. ソースブロックの作成"
    },
    {
      "indent": 3,
      "text": "In its most general form, FECFRAME and the LDPC-Staircase FEC Scheme are meant to protect a set of independent flows. Since the flows have no relationship to one another, the ADU size of each flow can potentially vary significantly. Even in the special case of a single flow, the ADU sizes can largely vary (e.g., the various frames of a Group of Pictures (GOP) of an H.264 flow). This diversity must be addressed since the LDPC-Staircase FEC Scheme requires a constant encoding symbol size (E parameter) per source block. Since this specification requires that there be only one source symbol per ADU, E must be large enough to contain all the ADUs of an ADU block along with their prepended 3 bytes (see below).",
      "ja": "最も一般的な形式では、FECFRAMEおよびLDPC-Staircase FECスキームは、一連の独立したフローを保護することを目的としています。フローには相互の関係がないため、各フローのADUサイズは大きく異なる可能性があります。単一のフローという特別な場合でも、ADUのサイズは大きく異なる可能性があります（たとえば、H.264フローのグループオブピクチャー（GOP）のさまざまなフレーム）。 LDPC-階段FECスキームでは、ソースブロックごとに一定のエンコードシンボルサイズ（Eパラメーター）が必要であるため、この多様性に対処する必要があります。この仕様では、ADUごとに1つのソースシンボルのみが必要であるため、Eは、ADUブロックのすべてのADUとそれらの先頭に追加された3バイトを含めるのに十分な大きさでなければなりません（以下を参照）。"
    },
    {
      "indent": 3,
      "text": "In situations where E is determined per source block (default, specified by the FFCI/FSSI with S = 0, Section 5.1.1.2), E is equal to the size of the largest ADU of this source block plus three (for the prepended 3 bytes, see below). In this case, upon receiving the first FEC repair packet for this source block, since this packet MUST contain a single repair symbol (Section 5.1.3), a receiver determines the E parameter used for this source block.",
      "ja": "Eがソースブロックごとに決定される状況（デフォルト、FFCI / FSSIでS = 0、セクション5.1.1.2で指定）では、Eはこのソースブロックの最大ADUに3を加えたサイズ（先頭に3バイト、下記参照）。この場合、このソースブロックの最初のFEC修復パケットを受信すると、このパケットには単一の修復シンボルが含まれている必要があるため（セクション5.1.3）、受信者はこのソースブロックに使用するEパラメータを決定します。"
    },
    {
      "indent": 3,
      "text": "In situations where E is fixed (specified by the FFCI/FSSI with S = 1, Section 5.1.1.2), then E must be greater or equal to the size of the largest ADU of this source block plus three (for the prepended 3 bytes, see below). If this is not the case, an error is returned. How to handle this error is use-case specific (e.g., a larger E parameter may be communicated to the receivers in an updated FFCI message, using an appropriate mechanism) and is not considered by this specification.",
      "ja": "Eが固定されている場合（S = 1のFFCI / FSSIで指定、セクション5.1.1.2）、Eはこのソースブロックの最大ADUのサイズに3を加えた値（先頭に3バイトを追加） 、 下記参照）。そうでない場合は、エラーが返されます。このエラーの処理方法はユースケース固有であり（たとえば、より大きなEパラメータは、適切なメカニズムを使用して、更新されたFFCIメッセージでレシーバーに通信される場合があります）、この仕様では考慮されません。"
    },
    {
      "indent": 3,
      "text": "The ADU block is always encoded as a single source block. There are a total of B <= max_B ADUs in this ADU block. For the ADU i, with 0 <= i <= B-1, 3 bytes are prepended (Figure 2):",
      "ja": "ADUブロックは常に単一のソースブロックとしてエンコードされます。このADUブロックには、合計B <= max_B ADUがあります。 ADU iの場合、0 <= i <= B-1の場合、3バイトが付加されます（図2）。"
    },
    {
      "indent": 3,
      "text": "o The first byte, F[i] (Flow ID), contains the integer identifier associated to the source ADU flow to which this ADU belongs. It is assumed that a single byte is sufficient, or said differently, that no more than 256 flows will be protected by a single instance of FECFRAME.",
      "ja": "o 最初のバイトF [i]（フローID）には、このADUが属するソースADUフローに関連付けられた整数の識別子が含まれます。単一のバイトで十分である、または別の言い方をすると、FECFRAMEの単一のインスタンスによって保護されるフローは256以下であると想定されています。"
    },
    {
      "indent": 3,
      "text": "o The following two bytes, L[i] (Length), contain the length of this ADU, in network byte order (i.e., big endian). This length is for the ADU itself and does not include the F[i], L[i], or Pad[i] fields.",
      "ja": "o 次の2バイトL [i]（長さ）には、このADUの長さがネットワークバイト順（つまり、ビッグエンディアン）で含まれています。この長さはADU自体の長さであり、F [i]、L [i]、またはPad [i]フィールドは含まれません。"
    },
    {
      "indent": 3,
      "text": "Then, zero padding is added to ADU i (if needed) in field Pad[i], for alignment purposes up to a size of exactly E bytes. The data unit resulting from the ADU i and the F[i], L[i], and Pad[i] fields is called ADU Information (or ADUI). Each ADUI contributes to exactly one source symbol of the source block.",
      "ja": "次に、フィールドPad [i]のADU iに（必要な場合）ゼロパディングが追加されます。これは、正確にEバイトまでのサイズ調整を目的としています。 ADU iとF [i]、L [i]、およびPad [i]フィールドから得られるデータ単位は、ADU情報（またはADUI）と呼ばれます。各ADUIは、ソースブロックのソースシンボルを1つだけ提供します。"
    },
    {
      "indent": 3,
      "text": "                     Encoding Symbol Length (E)\n< -------------------------------------------------------------- >\n+----+----+-----------------------+------------------------------+\n|F[0]|L[0]|        ADU[0]         |            Pad[0]            |\n+----+----+----------+------------+------------------------------+\n|F[1]|L[1]| ADU[1]   |                         Pad[1]            |\n+----+----+----------+-------------------------------------------+\n|F[2]|L[2]|                    ADU[2]                            |\n+----+----+------+-----------------------------------------------+\n|F[3]|L[3]|ADU[3]|                             Pad[3]            |\n+----+----+------+-----------------------------------------------+\n\\_______________________________  _______________________________/\n                                \\/\n                       simple FEC encoding",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "+----------------------------------------------------------------+\n|                            Repair 4                            |\n+----------------------------------------------------------------+\n.                                                                .\n.                                                                .\n+----------------------------------------------------------------+\n|                            Repair 7                            |\n+----------------------------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "Figure 2: Source Block Creation, for Code Rate 1/2 (Equal Number of Source and Repair Symbols, 4 in This Example), and S = 0",
      "ja": "図2：ソースブロックの作成、コードレート1/2（ソースと修復シンボルの数が同じ、この例では4）、およびS = 0"
    },
    {
      "indent": 3,
      "text": "Note that neither the initial 3 bytes nor the optional padding are sent over the network. However, they are considered during FEC encoding. It means that a receiver who lost a certain FEC source packet (e.g., the UDP datagram containing this FEC source packet) will be able to recover the ADUI if FEC decoding succeeds. Thanks to the initial 3 bytes, this receiver will get rid of the padding (if any) and identify the corresponding ADU flow.",
      "ja": "最初の3バイトもオプションのパディングもネットワーク経由で送信されないことに注意してください。ただし、それらはFECエンコード中に考慮されます。つまり、特定のFECソースパケット（このFECソースパケットを含むUDPデータグラムなど）を失った受信者は、FECデコードが成功した場合にADUIを回復できます。最初の3バイトのおかげで、このレシーバーはパディング（ある場合）を取り除き、対応するADUフローを識別します。"
    },
    {
      "indent": 0,
      "text": "5. LDPC-Staircase FEC Scheme for Arbitrary ADU Flows",
      "section_title": true,
      "ja": "5. 任意のADUフロー用のLDPC階段FECスキーム"
    },
    {
      "indent": 0,
      "text": "5.1. Formats and Codes",
      "section_title": true,
      "ja": "5.1. フォーマットとコード"
    },
    {
      "indent": 0,
      "text": "5.1.1. FEC Framework Configuration Information",
      "section_title": true,
      "ja": "5.1.1. FECフレームワーク構成情報"
    },
    {
      "indent": 3,
      "text": "The FEC Framework Configuration Information (or FFCI) includes information that MUST be communicated between the sender and receiver(s). More specifically, it enables the synchronization of the FECFRAME sender and receiver instances. It includes both mandatory elements and scheme-specific elements, as detailed below.",
      "ja": "FECフレームワーク構成情報（またはFFCI）には、送信者と受信者の間で通信する必要がある情報が含まれています。具体的には、FECFRAMEの送信側インスタンスと受信側インスタンスの同期を可能にします。以下に詳細を示すように、必須要素とスキーム固有の要素の両方が含まれています。"
    },
    {
      "indent": 0,
      "text": "5.1.1.1. Mandatory Information",
      "section_title": true,
      "ja": "5.1.1.1. 表示義務のある情報"
    },
    {
      "indent": 3,
      "text": "o FEC Encoding ID: the value assigned to this fully specified FEC scheme MUST be 7, as assigned by IANA (Section 8).",
      "ja": "o FECエンコーディングID：この完全に指定されたFECスキームに割り当てられる値は、IANAによって割り当てられるように7である必要があります（セクション8）。"
    },
    {
      "indent": 3,
      "text": "When SDP is used to communicate the FFCI, this FEC Encoding ID is carried in the 'encoding-id' parameter.",
      "ja": "SDPを使用してFFCIを通信する場合、このFECエンコードIDは「encoding-id」パラメーターで伝達されます。"
    },
    {
      "indent": 0,
      "text": "5.1.1.2. FEC Scheme-Specific Information",
      "section_title": true,
      "ja": "5.1.1.2. FECスキーム固有の情報"
    },
    {
      "indent": 3,
      "text": "The FEC Scheme-Specific Information (FSSI) includes elements that are specific to the present FEC scheme. More precisely:",
      "ja": "FECスキーム固有情報（FSSI）には、現在のFECスキームに固有の要素が含まれています。より正確に："
    },
    {
      "indent": 3,
      "text": "o PRNG seed (seed): a non-negative 32-bit integer used as the seed of the Pseudo-Random Number Generator, as defined in [RFC5170].",
      "ja": "o PRNGシード（シード）：[RFC5170]で定義されているように、疑似乱数ジェネレータのシードとして使用される非負の32ビット整数。"
    },
    {
      "indent": 3,
      "text": "o Encoding symbol length (E): a non-negative integer that indicates either the length of each encoding symbol in bytes (strict mode, i.e., if S = 1) or the maximum length of any encoding symbol (i.e., if S = 0).",
      "ja": "o エンコーディングシンボルの長さ（E）：各エンコーディングシンボルの長さをバイト単位（厳密モード、つまりS = 1の場合）または任意のエンコーディングシンボルの最大長（つまりS = 0の場合）を示す負でない整数。"
    },
    {
      "indent": 3,
      "text": "o Strict (S) flag: when set to 1, this flag indicates that the E parameter is the actual encoding symbol length value for each block of the session (unless otherwise notified by an updated FFCI if this possibility is considered by the use-case or CDP). When set to 0, this flag indicates that the E parameter is the maximum encoding symbol length value for each block of the session (unless otherwise notified by an updated FFCI if this possibility is considered by the use-case or CDP).",
      "ja": "o 厳格（S）フラグ：1に設定されている場合、このフラグは、Eパラメーターがセッションの各ブロックの実際のエンコードシンボル長の値であることを示します（この可能性がユースケースまたはCDP）。 0に設定されている場合、このフラグは、Eパラメーターがセッションの各ブロックの最大エンコードシンボル長の値であることを示します（ユースケースまたはCDPでこの可能性が考慮されている場合、更新されたFFCIによって通知されない限り）。"
    },
    {
      "indent": 3,
      "text": "o N1 minus 3 (n1m3): an integer between 0 (default) and 7, inclusive. The number of \"1s\" per column in the left side of the parity check matrix, N1, is then equal to N1m3 + 3, as specified in [RFC5170].",
      "ja": "o N1マイナス3（n1m3）：0（デフォルト）から7までの整数。 [RFC5170]で指定されているように、パリティチェックマトリックスの左側の列ごとの「1」の数N1は、N1m3 + 3に等しくなります。"
    },
    {
      "indent": 3,
      "text": "These elements are required both by the sender (LDPC-Staircase encoder) and the receiver(s) (LDPC-Staircase decoder).",
      "ja": "これらの要素は、送信者（LDPC-階段エンコーダ）と受信者（LDPC-階段デコーダ）の両方に必要です。"
    },
    {
      "indent": 3,
      "text": "When SDP is used to communicate the FFCI, this FEC scheme-specific information is carried in the 'fssi' parameter in textual representation as specified in [RFC6364]. For instance:",
      "ja": "SDPを使用してFFCIを通信する場合、このFECスキーム固有の情報は、[RFC6364]で指定されているテキスト表現の「fssi」パラメーターで伝達されます。例えば："
    },
    {
      "indent": 3,
      "text": "fssi=seed:1234,E:1400,S:0,n1m3:0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If another mechanism requires the FSSI to be carried as an opaque octet string (for instance, after a Base64 encoding), the encoding format consists of the following 7 octets:",
      "ja": "別のメカニズムでFSSIが不透明なオクテット文字列として伝送される必要がある場合（たとえば、Base64エンコード後）、エンコード形式は次の7オクテットで構成されます。"
    },
    {
      "indent": 3,
      "text": "o PRNG seed (seed): 32-bit field.",
      "ja": "o PRNGシード（シード）：32ビットフィールド。"
    },
    {
      "indent": 3,
      "text": "o Encoding symbol length (E): 16-bit field.",
      "ja": "o エンコードシンボル長（E）：16ビットフィールド。"
    },
    {
      "indent": 3,
      "text": "o Strict (S) flag: 1-bit field.",
      "ja": "o 厳格（S）フラグ：1ビットフィールド。"
    },
    {
      "indent": 3,
      "text": "o Reserved: a 4-bit field that MUST be set to zero.",
      "ja": "o 予約済み：ゼロに設定する必要がある4ビットのフィールド。"
    },
    {
      "indent": 3,
      "text": "o N1m3 parameter (n1m3): 3-bit field.",
      "ja": "o N1m3パラメータ（n1m3）：3ビットフィールド。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      PRNG seed (seed)                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Encoding Symbol Length (E)  |S| resvd | n1m3|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 22,
      "text": "Figure 3: FSSI Encoding Format",
      "ja": "図3：FSSIエンコード形式"
    },
    {
      "indent": 0,
      "text": "5.1.2. Explicit Source FEC Payload ID",
      "section_title": true,
      "ja": "5.1.2. 明示的なソースFECペイロードID"
    },
    {
      "indent": 3,
      "text": "A FEC source packet MUST contain an Explicit Source FEC Payload ID that is appended to the end of the packet as illustrated in Figure 4.",
      "ja": "図4に示すように、FECソースパケットには、パケットの末尾に追加される明示的なソースFECペイロードIDが含まれている必要があります。"
    },
    {
      "indent": 18,
      "text": "+--------------------------------+\n|           IP Header            |\n+--------------------------------+\n|        Transport Header        |\n+--------------------------------+\n|              ADU               |\n+--------------------------------+\n| Explicit Source FEC Payload ID |\n+--------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "Figure 4: Structure of a FEC Source Packet with the Explicit Source FEC Payload ID",
      "ja": "図4：明示的なソースFECペイロードIDを含むFECソースパケットの構造"
    },
    {
      "indent": 3,
      "text": "More precisely, the Explicit Source FEC Payload ID is composed of the following fields (Figure 5):",
      "ja": "より正確には、Explicit Source FEC Payload IDは次のフィールドで構成されます（図5）。"
    },
    {
      "indent": 3,
      "text": "o Source Block Number (SBN) (16-bit field): this field identifies the source block to which this FEC source packet belongs.",
      "ja": "o ソースブロック番号（SBN）（16ビットフィールド）：このフィールドは、このFECソースパケットが属するソースブロックを識別します。"
    },
    {
      "indent": 3,
      "text": "o Encoding Symbol ID (ESI) (16-bit field): this field identifies the source symbol contained in this FEC source packet. This value is such that 0 <= ESI <= k - 1 for source symbols.",
      "ja": "o エンコーディングシンボルID（ESI）（16ビットフィールド）：このフィールドは、このFECソースパケットに含まれるソースシンボルを識別します。この値は、ソースシンボルに対して0 <= ESI <= k-1になるような値です。"
    },
    {
      "indent": 3,
      "text": "o Source Block Length (k) (16-bit field): this field provides the number of source symbols for this source block, i.e., the k parameter.",
      "ja": "o ソースブロック長（k）（16ビットフィールド）：このフィールドは、このソースブロックのソースシンボルの数、つまりkパラメーターを提供します。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Source Block Number (SBN)   |   Encoding Symbol ID (ESI)    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|    Source Block Length (k)    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Figure 5: Source FEC Payload ID Encoding Format",
      "ja": "図5：ソースFECペイロードIDエンコード形式"
    },
    {
      "indent": 0,
      "text": "5.1.3. Repair FEC Payload ID",
      "section_title": true,
      "ja": "5.1.3. FECペイロードIDを修復する"
    },
    {
      "indent": 3,
      "text": "A FEC repair packet MUST contain a Repair FEC Payload ID that is\nprepended to the repair symbol(s) as illustrated in Figure 6.  There\nMUST be a single repair symbol per FEC repair packet.\n               +--------------------------------+\n               |           IP Header            |\n               +--------------------------------+\n               |        Transport Header        |\n               +--------------------------------+\n               |     Repair FEC Payload ID      |\n               +--------------------------------+\n               |         Repair Symbol          |\n               +--------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Figure 6: Structure of a FEC Repair Packet with the Repair Payload ID",
      "ja": "図6：修理ペイロードIDを含むFEC修理パケットの構造"
    },
    {
      "indent": 3,
      "text": "More precisely, the Repair FEC Payload ID is composed of the following fields (Figure 7):",
      "ja": "より正確には、Repair FEC Payload IDは次のフィールドで構成されています（図7）。"
    },
    {
      "indent": 3,
      "text": "o Source Block Number (SBN) (16-bit field): this field identifies the source block to which the FEC repair packet belongs.",
      "ja": "o ソースブロック番号（SBN）（16ビットフィールド）：このフィールドは、FEC修復パケットが属するソースブロックを識別します。"
    },
    {
      "indent": 3,
      "text": "o Encoding Symbol ID (ESI) (16-bit field): this field identifies the repair symbol contained in this FEC repair packet. This value is such that k <= ESI <= n - 1 for repair symbols.",
      "ja": "o エンコーディングシンボルID（ESI）（16ビットフィールド）：このフィールドは、このFEC修復パケットに含まれる修復シンボルを識別します。この値は、修復シンボルに対してk <= ESI <= n-1になるような値です。"
    },
    {
      "indent": 3,
      "text": "o Source Block Length (k) (16-bit field): this field provides the number of source symbols for this source block, i.e., the k parameter.",
      "ja": "o ソースブロック長（k）（16ビットフィールド）：このフィールドは、このソースブロックのソースシンボルの数、つまりkパラメーターを提供します。"
    },
    {
      "indent": 3,
      "text": "o Number of Encoding Symbols (n) (16-bit field): this field provides the number of encoding symbols for this source block, i.e., the n parameter.",
      "ja": "o エンコーディングシンボルの数（n）（16ビットフィールド）：このフィールドは、このソースブロックのエンコーディングシンボルの数、つまりnパラメータを提供します。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Source Block Number (SBN)   |   Encoding Symbol ID (ESI)    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|    Source Block Length (k)    |  Number Encoding Symbols (n)  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "Figure 7: Repair FEC Payload ID Encoding Format",
      "ja": "図7：FECペイロードIDエンコード形式の修復"
    },
    {
      "indent": 0,
      "text": "5.2. Procedures",
      "section_title": true,
      "ja": "5.2. 手続き"
    },
    {
      "indent": 3,
      "text": "The following procedures apply:",
      "ja": "次の手順が適用されます。"
    },
    {
      "indent": 3,
      "text": "o The source block creation MUST follow the procedures specified in Section 4.3.",
      "ja": "o ソースブロックの作成は、セクション4.3で指定された手順に従う必要があります。"
    },
    {
      "indent": 3,
      "text": "o The SBN value MUST start with value 0 for the first block of the ADU flow and MUST be incremented by 1 for each new source block. Wrapping to zero will happen for long sessions, after value 2^^16 - 1.",
      "ja": "o SBN値は、ADUフローの最初のブロックでは値0で始まり、新しいソースブロックごとに1ずつ増加する必要があります。値が2 ^^ 16-1になった後、長いセッションではゼロへの折り返しが発生します。"
    },
    {
      "indent": 3,
      "text": "o The ESI of encoding symbols MUST start with value 0 for the first symbol and MUST be managed sequentially. The first k values (0 <= ESI <= k - 1) identify source symbols whereas the last n-k values (k <= ESI <= n - 1) identify repair symbols.",
      "ja": "o エンコーディングシンボルのESIは、最初のシンボルの値0で始まり、連続して管理する必要があります。最初のk値（0 <= ESI <= k-1）はソースシンボルを識別し、最後のn-k値（k <= ESI <= n-1）は修復シンボルを識別します。"
    },
    {
      "indent": 3,
      "text": "o The FEC repair packet creation MUST follow the procedures specified in Section 5.1.3.",
      "ja": "o FEC修復パケットの作成は、セクション5.1.3で指定された手順に従う必要があります。"
    },
    {
      "indent": 0,
      "text": "5.3. FEC Code Specification",
      "section_title": true,
      "ja": "5.3. FECコード仕様"
    },
    {
      "indent": 3,
      "text": "The present document inherits from [RFC5170] the specification of the core LDPC-Staircase codes for a packet erasure transmission channel (see Section 1).",
      "ja": "本書は、[RFC5170]から、パケット消去伝送チャネルのコアLDPC-階段コードの仕様を継承しています（セクション1を参照）。"
    },
    {
      "indent": 3,
      "text": "Because of the requirement to have exactly one encoding symbol per group, i.e., because G MUST be equal to 1 (Section 4.1), several parts of [RFC5170] are not of use. In particular, this is the case of Section 5.6, \"Identifying the G Symbols of an Encoding Symbol Group\".",
      "ja": "グループごとに正確に1つのエンコーディングシンボルを持つ必要があるため、つまりGは1に等しい必要があるため（セクション4.1）、[RFC5170]のいくつかの部分は使用されません。特に、これは5.6項「エンコーディングシンボルグループのGシンボルの識別」の場合です。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The FEC Framework document [RFC6363] provides a comprehensive analysis of security considerations applicable to FEC schemes. Therefore, the present section follows the security considerations section of [RFC6363] and only discusses topics that are specific to the use of LDPC-Staircase codes.",
      "ja": "FECフレームワークドキュメント[RFC6363]は、FECスキームに適用可能なセキュリティの考慮事項の包括的な分析を提供します。したがって、このセクションは[RFC6363]のセキュリティに関する考慮事項セクションに続き、LDPC-階段コードの使用に固有のトピックのみを説明します。"
    },
    {
      "indent": 0,
      "text": "6.1. Attacks against the Data Flow",
      "section_title": true,
      "ja": "6.1. データフローに対する攻撃"
    },
    {
      "indent": 0,
      "text": "6.1.1. Access to Confidential Content",
      "section_title": true,
      "ja": "6.1.1. 機密コンテンツへのアクセス"
    },
    {
      "indent": 0,
      "text": " The LDPC-Staircase FEC Scheme specified in this document does not change the recommendations of [RFC6363]. To summarize, if confidentiality is a concern, it is RECOMMENDED that one of the solutions mentioned in [RFC6363] be used, with special considerations to the way this solution is applied (e.g., Is encryption applied before or after FEC protection? Is it within the end-system or in a middlebox?), to the operational constraints (e.g., performing FEC decoding in a protected environment may be complicated or even impossible) and to the threat model.",
      "ja": "このドキュメントで指定されているLDPC-階段FECスキームは、[RFC6363]の推奨事項を変更しません。要約すると、機密性が懸念される場合、[RFC6363]で言及されているソリューションの1つを使用することをお勧めします。このソリューションの適用方法には特別な配慮が必要です（たとえば、暗号化はFEC保護の前または後に適用されますか？エンドシステムまたはミドルボックス内）、運用上の制約（保護された環境でのFECデコードの実行は複雑である、または不可能でさえある）と脅威モデルに対して。"
    },
    {
      "indent": 0,
      "text": "6.1.2. Content Corruption",
      "section_title": true,
      "ja": "6.1.2. コンテンツの破損"
    },
    {
      "indent": 3,
      "text": "The LDPC-Staircase FEC Scheme specified in this document does not change the recommendations of [RFC6363]. To summarize, it is RECOMMENDED that one of the solutions mentioned in [RFC6363] be used on both the FEC source and repair packets.",
      "ja": "このドキュメントで指定されているLDPC-階段FECスキームは、[RFC6363]の推奨事項を変更しません。要約すると、[RFC6363]で言及されているソリューションの1つをFEC送信元と修復パケットの両方で使用することをお勧めします。"
    },
    {
      "indent": 0,
      "text": "6.2. Attacks against the FEC Parameters",
      "section_title": true,
      "ja": "6.2. FECパラメータに対する攻撃"
    },
    {
      "indent": 3,
      "text": "The FEC scheme specified in this document defines parameters that can be the basis of several attacks. More specifically, the following parameters of the FFCI may be modified by an attacker (Section 5.1.1.2):",
      "ja": "このドキュメントで指定されているFECスキームは、いくつかの攻撃の基礎となるパラメータを定義しています。より具体的には、FFCIの以下のパラメーターが攻撃者によって変更される可能性があります（セクション5.1.1.2）。"
    },
    {
      "indent": 3,
      "text": "o FEC Encoding ID: changing this parameter leads the receiver to consider a different FEC scheme, which enables an attacker to create a Denial of Service (DoS).",
      "ja": "o FECエンコーディングID：このパラメーターを変更すると、受信者は別のFECスキームを検討するようになり、攻撃者はサービス拒否（DoS）を作成できます。"
    },
    {
      "indent": 3,
      "text": "o Encoding symbol length (E): setting this E parameter to a value smaller than the valid one enables an attacker to create a DoS since the repair symbols and certain source symbols will be larger than E, which is an incoherency for the receiver. Setting this E parameter to a value larger than the valid one has similar impacts when S=1 since the received repair symbol size will be smaller than expected. Contrarily, it will not lead to any incoherency when S=0 since the actual symbol length value for the block is determined by the size of any received repair symbol, as long as this value is smaller than E. However, setting this E parameter to a larger value may have impacts on receivers that pre-allocate memory space in advance to store incoming symbols.",
      "ja": "o エンコードシンボル長（E）：このEパラメーターを有効な値よりも小さい値に設定すると、修復シンボルと特定のソースシンボルがEよりも大きくなるため、攻撃者はDoSを作成できます。このEパラメータを有効な値よりも大きい値に設定すると、受信した修復シンボルサイズが予想よりも小さくなるため、S = 1の場合に同様の影響があります。反対に、この値がEより小さい限り、ブロックの実際のシンボル長の値は受信した修復シンボルのサイズによって決定されるため、S = 0のときは非コヒーレンシーにはなりません。ただし、このEパラメータを値を大きくすると、受信シンボルを格納するためにメモリスペースを事前に割り当てるレシーバーに影響を与える可能性があります。"
    },
    {
      "indent": 3,
      "text": "o Strict (S) flag: flipping this S flag from 0 to 1 (i.e., E is now considered as a strict value) enables an attacker to mislead the receiver if the actual symbol size varies over different source blocks. Flipping this S flag from 1 to 0 has no major consequences unless the receiver requires to have a fixed E value (e.g., because the receiver pre-allocates memory space).",
      "ja": "o 厳格（S）フラグ：このSフラグを0から1に反転させると（つまり、Eは厳密な値と見なされます）、実際のシンボルサイズが異なるソースブロックで異なる場合、攻撃者は受信機を誤解させることができます。このSフラグを1から0に反転しても、レシーバーが固定のE値を必要としない限り、大きな影響はありません（たとえば、レシーバーがメモリ空間を事前に割り当てるため）。"
    },
    {
      "indent": 3,
      "text": "o N1 minus 3 (n1m3): changing this parameter leads the receiver to consider a different code, which enables an attacker to create a DoS.",
      "ja": "o N1マイナス3（n1m3）：このパラメーターを変更すると、受信者は別のコードを検討するようになり、攻撃者がDoSを作成できるようになります。"
    },
    {
      "indent": 3,
      "text": "Therefore, it is RECOMMENDED that security measures be taken to guarantee the FFCI integrity, as specified in [RFC6363]. How to achieve this depends on the way the FFCI is communicated from the sender to the receiver, which is not specified in this document.",
      "ja": "したがって、[RFC6363]で指定されているように、FFCIの完全性を保証するためにセキュリティ対策を講じることをお勧めします。これを実現する方法は、FFCIが送信者から受信者に通信される方法に依存しますが、これはこのドキュメントでは指定されていません。"
    },
    {
      "indent": 3,
      "text": "Similarly, attacks are possible against the Explicit Source FEC Payload ID and Repair FEC Payload ID: by modifying the Source Block Number (SBN), or the Encoding Symbol ID (ESI), or the Source Block Length (k), or the Number Encoding Symbols (n), an attacker can easily corrupt the block identified by the SBN. Other consequences, that are use-case and/or CDP dependent, may also happen. It is therefore RECOMMENDED that security measures be taken to guarantee the FEC source and repair packets as stated in [RFC6363].",
      "ja": "同様に、明示的なソースFECペイロードIDおよび修復FECペイロードIDに対して攻撃が可能です。ソースブロック番号（SBN）、またはエンコードシンボルID（ESI）、またはソースブロック長（k）、または番号エンコードを変更することによりシンボル（n）は、攻撃者がSBNによって識別されたブロックを簡単に破損させる可能性があります。ユースケースやCDPに依存するその他の結果も発生する可能性があります。したがって、[RFC6363]で述べられているように、FEC送信元を保証し、パケットを修復するためのセキュリティ対策を講じることをお勧めします。"
    },
    {
      "indent": 0,
      "text": "6.3. When Several Source Flows Are to Be Protected Together",
      "section_title": true,
      "ja": "6.3. 複数のソースフローを一緒に保護する必要がある場合"
    },
    {
      "indent": 3,
      "text": "The LDPC-Staircase FEC Scheme specified in this document does not change the recommendations of [RFC6363].",
      "ja": "このドキュメントで指定されているLDPC-階段FECスキームは、[RFC6363]の推奨事項を変更しません。"
    },
    {
      "indent": 0,
      "text": "6.4. Baseline Secure FEC Framework Operation",
      "section_title": true,
      "ja": "6.4. ベースラインのセキュアFECフレームワーク操作"
    },
    {
      "indent": 3,
      "text": "The LDPC-Staircase FEC Scheme specified in this document does not change the recommendations of [RFC6363] concerning the use of the IPsec/ESP security protocol as a mandatory to implement (but not mandatory to use) security scheme. This is well suited to situations where the only insecure domain is the one over which the FEC Framework operates.",
      "ja": "このドキュメントで指定されているLDPC-階段FECスキームは、IPsec / ESPセキュリティプロトコルの使用に関するセキュリティスキームの実装が必須（ただし必須ではない）としての[RFC6363]の推奨事項を変更しません。これは、唯一の安全でないドメインがFECフレームワークが動作するドメインである状況に適しています。"
    },
    {
      "indent": 0,
      "text": "7. Operations and Management Considerations",
      "section_title": true,
      "ja": "7. 運用と管理に関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The FEC Framework document [RFC6363] provides a comprehensive analysis of operations and management considerations applicable to FEC schemes. Therefore, the present section only discusses topics that are specific to the use of LDPC-Staircase codes as specified in this document.",
      "ja": "FECフレームワークドキュメント[RFC6363]は、FECスキームに適用可能な運用と管理の考慮事項の包括的な分析を提供します。したがって、このセクションでは、このドキュメントで指定されているLDPC-階段コードの使用に固有のトピックについてのみ説明します。"
    },
    {
      "indent": 0,
      "text": "7.1. Operational Recommendations",
      "section_title": true,
      "ja": "7.1. 運用上の推奨事項"
    },
    {
      "indent": 0,
      "text": " LDPC-Staircase codes have excellent erasure recovery capabilities with large source blocks, close to ideal MDS codes. For instance, independently of FECFRAME, let us consider a source block of size k=1024 symbols, CR=2/3 (i.e., 512 repair symbols are added), N1=7, G=1, a transmission scheme where all the symbols are sent in a random order, and a hybrid ITerative/Maximum Likelihood (IT/ML) decoder (see below). An ideal MDS code with code rate 2/3 can recover from erasures up to a 33.33% channel loss rate. With LDPC-Staircase codes, the average overhead amounts to 0.237% (i.e., receiving 2.43 symbols in addition to k, which corresponds to a 33.18% channel loss rate, enables a successful decoding with a probability 0.5), and an overhead of 1.46% (i.e., receiving 15 symbols in addition to k, which corresponds to a 32.36% channel loss rate) is sufficient to reduce the probability that decoding fails down to 8.2*10^^-5. This is why these codes are a good solution to protect a single high bitrate source flow as in [Matsuzono10] or to protect globally several mid-rate source flows within a single FECFRAME instance: in both cases, the source block size can be assumed to be equal to a few hundred (or more) source symbols.",
      "ja": "LDPC-階段コードは、理想的なMDSコードに近い、大きなソースブロックを備えた優れた消失回復機能を備えています。たとえば、FECFRAMEとは無関係に、サイズk = 1024シンボルのソースブロック、CR = 2/3（つまり、512個の修復シンボルが追加されます）、N1 = 7、G = 1、すべてのシンボルがランダムな順序で送信され、ハイブリッドITerative / Maximum Likelihood（IT / ML）デコーダー（下記参照）。コードレートが2/3の理想的なMDSコードは、最大33.33％のチャネル損失率まで消去から回復できます。 LDPC-階段コードを使用すると、平均オーバーヘッドは0.237％になり（つまり、33.18％のチャネル損失率に対応するkに加えて2.43シンボルを受信すると、確率0.5で正常にデコードできます）、オーバーヘッドは1.46％になります。 （つまり、kに加えて15シンボルを受信します。これは32.36％のチャネル損失率に対応します）で、デコードが失敗する確率を8.2 * 10 ^^-5に減らすことができます。これが、これらのコードが[Matsuzono10]のように単一の高ビットレートソースフローを保護するか、単一のFECFRAMEインスタンス内の複数の中レートソースフローをグローバルに保護する優れたソリューションである理由です。どちらの場合も、ソースブロックサイズは数百（またはそれ以上）のソースシンボルに等しい。"
    },
    {
      "indent": 3,
      "text": "LDPC-Staircase codes are also a good solution whenever the processing load at a software encoder or decoder must be kept to a minimum. This is true when the decoder uses an IT decoding algorithm, an ML algorithm (we use a Gaussian Elimination as the ML algorithm) when carefully implemented, or a mixture of both techniques, which is the recommended solution [Cunche08][CunchePHD10][LDPC-codec-OpenFEC]. Let us consider the same conditions as above (k=1024 source symbols, CR=2/3, N1=7, G=1), with encoding symbols of size 1024 bytes. With an Intel Xeon 5120/1.86 GHz workstation running Linux/64 bits, the average decoding speed is between 1.78 Gbps (overhead of 2 symbols in addition to k, corresponding to a very bad channel with a 33.20% loss rate, close to the theoretical decoding limit, where ML decoding is required) and 3.91 Gbps (corresponding to a good channel with a 5% loss rate only, where IT decoding is sufficient). Under the same conditions, on a Samsung Galaxy SII smartphone (GT-I9100P model, featuring an ARM Cortex-A9/1.2 GHz processor and running Android 2.3.4), the decoding speed is between 397 Mbps (bad channel with a 33.20% loss rate, close to the theoretical decoding limit) and 813 Mbps (good channel with a 5% loss rate only).",
      "ja": "LDPC-階段コードは、ソフトウェアエンコーダーまたはデコーダーでの処理負荷を最小限に抑える必要がある場合にも適切なソリューションです。これは、デコーダーがITデコードアルゴリズム、MLアルゴリズム（MLアルゴリズムとしてガウスの消去法を使用）、または慎重に実装した場合、または両方の手法の混合を使用する場合に当てはまります。これは、推奨されるソリューションです[Cunche08] [CunchePHD10] [LDPC -codec-OpenFEC]。上記と同じ条件（k = 1024のソースシンボル、CR = 2/3、N1 = 7、G = 1）を、サイズが1024バイトのエンコードシンボルで検討します。 Linux / 64ビットを実行するIntel Xeon 5120 / 1.86 GHzワークステーションでは、平均デコード速度は1.78 Gbps（kに加えて2シンボルのオーバーヘッド）であり、33.20％の損失率を持つ非常に悪いチャネルに対応し、理論に近いデコード制限、MLデコードが必要な場合）および3.91 Gbps（ITデコードで十分な場合、損失率5％の良好なチャネルにのみ対応）。同じ条件下で、Samsung Galaxy SIIスマートフォン（GT-I9100Pモデル、ARM Cortex-A9 / 1.2 GHzプロセッサーを搭載し、Android 2.3.4を実行）では、デコード速度は397 Mbpsです（33.20％の損失のある不良チャネル）。レート、理論上のデコード制限に近い）および813 Mbps（5％の損失率のみの良好なチャネル）。"
    },
    {
      "indent": 3,
      "text": "As the source block size decreases, the erasure recovery capabilities of LDPC codes in general also decrease. In the case of LDPC-Staircase codes, in order to limit this phenomenon, it is recommended to use a value of the N1 parameter at least equal to 7 (e.g., experiments carried out in [Matsuzono10] use N1=7 if k=170 symbols, and N1=5 otherwise). For instance, independently of FECFRAME, with a source block of size k=256 symbols, CR=2/3 (i.e., 128 repair symbols are added), N1=7, and G=1, the average overhead amounts to 0.706% (i.e., receiving 1.8 symbols in addition to k enables a successful decoding with a probability 0.5), and an overhead of 5.86% (i.e., receiving 15 symbols in addition to k) is sufficient to reduce the decoding failure probability to 5.9*10^^-5.",
      "ja": "ソースブロックサイズが小さくなると、LDPCコードの消失回復機能も一般に低下します。 LDPC-階段コードの場合、この現象を制限するために、少なくとも7に等しいN1パラメータの値を使用することをお勧めします（たとえば、[Matsuzono10]で実行された実験では、k = 170の場合N1 = 7を使用します。シンボル、N1 = 5、それ以外）。たとえば、FECFRAMEとは無関係に、サイズk = 256シンボルのソースブロック、CR = 2/3（つまり、128の修復シンボルが追加されます）、N1 = 7、およびG = 1の場合、平均オーバーヘッドは0.706％（つまり、kに加えて1.8シンボルを受信すると、確率0.5）で正常に復号化でき、5.86％のオーバーヘッド（つまり、kに加えて15シンボルを受信）で、復号失敗確率を5.9 * 10 ^^に削減できます。 -5。"
    },
    {
      "indent": 3,
      "text": "The processing load also decreases with the source block size. For instance, under these conditions (k=256 source symbols, CR=2/3, N1=7, and G=1), with encoding symbols of size 1024 bytes, on a Samsung Galaxy SII smartphone, the decoding speed is between 518 Mbps (bad channel) and 863 Mbps (good channel with a 5% loss rate only).",
      "ja": "処理負荷も、ソースブロックサイズとともに減少します。たとえば、これらの条件下（k = 256のソースシンボル、CR = 2/3、N1 = 7、およびG = 1）で、サイズが1024バイトのエンコードシンボルを使用すると、Samsung Galaxy SIIスマートフォンでは、デコード速度は518〜 Mbps（不良チャネル）および863 Mbps（5％の損失率のみを持つ良好なチャネル）。"
    },
    {
      "indent": 3,
      "text": "With very small source blocks (e.g., a few tens of symbols), using for instance Reed-Solomon codes [SIMPLE_RS] or 2D parity check codes may be more appropriate.",
      "ja": "非常に小さなソースブロック（たとえば、数十シンボル）では、たとえばリードソロモンコード[SIMPLE_RS]または2Dパリティチェックコードを使用する方が適切な場合があります。"
    },
    {
      "indent": 3,
      "text": "The way the FEC repair packets are transmitted is of high importance. A good strategy, that works well for any kind of channel loss model, consists in sending FEC repair packets in random order (rather than in sequence) while FEC source packets are sent first and in sequence. Sending all packets in a random order is another possibility, but it requires that all repair symbols for a source block be produced first, which adds some extra delay at a sender.",
      "ja": "FEC修復パケットの送信方法は非常に重要です。あらゆる種類のチャネル損失モデルでうまく機能する優れた戦略は、FECソースパケットが最初に順番に送信されている間に、FEC修復パケットを（順番ではなく）ランダムな順序で送信することです。すべてのパケットをランダムな順序で送信することも可能ですが、送信元ブロックのすべての修復シンボルを最初に生成する必要があるため、送信側で遅延が追加されます。"
    },
    {
      "indent": 0,
      "text": "8. IANA Considerations",
      "section_title": true,
      "ja": "8. IANAに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document registers one value in the \"FEC Framework (FECFRAME) FEC Encoding IDs\" registry [RFC6363] as follows:",
      "ja": "このドキュメントでは、次のように「FECフレームワーク（FECFRAME）FECエンコーディングID」レジストリ[RFC6363]に1つの値を登録しています。"
    },
    {
      "indent": 3,
      "text": "o 7 refers to the Simple LDPC-Staircase FEC Scheme for Arbitrary Packet Flows, as defined in Section 5 of this document.",
      "ja": "o 7は、このドキュメントのセクション5で定義されている、任意のパケットフローのシンプルなLDPC階段FECスキームを指します。"
    },
    {
      "indent": 0,
      "text": "9. Acknowledgments",
      "section_title": true,
      "ja": "9. 謝辞"
    },
    {
      "indent": 3,
      "text": "The authors want to thank K. Matsuzono, J. Detchart, and H. Asaeda for their contributions in evaluating the use of LDPC-Staircase codes in the context of FECFRAME [Matsuzono10].",
      "ja": "著者は、FECFRAME [Matsuzono10]のコンテキストでLDPC-階段コードの使用を評価する際に貢献してくれたK. Matsuzono、J。Detchart、およびH. Asaedaに感謝します。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10. 参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5170] Roca, V., Neumann, C., and D. Furodet, \"Low Density Parity Check (LDPC) Staircase and Triangle Forward Error Correction (FEC) Schemes\", RFC 5170, June 2008.",
      "ja": "[RFC5170] Roca、V.、Neumann、C。、およびD. Furodet、「低密度パリティチェック（LDPC）階段および三角形前方誤り訂正（FEC）スキーム」、RFC 5170、2008年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC6363] Watson, M., Begen, A., and V. Roca, \"Forward Error Correction (FEC) Framework\", RFC 6363, October 2011.",
      "ja": "[RFC6363] Watson、M.、Begen、A。、およびV. Roca、「Forward Error Correction（FEC）Framework」、RFC 6363、2011年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC6364] Begen, A., \"Session Description Protocol Elements for the Forward Error Correction (FEC) Framework\", RFC 6364, October 2011.",
      "ja": "[RFC6364] Begen、A。、「Forward Error Correction（FEC）フレームワークのセッション記述プロトコル要素」、RFC 6364、2011年10月。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[Cunche08] Cunche, M. and V. Roca, \"Optimizing the Error Recovery Capabilities of LDPC-Staircase Codes Featuring a Gaussian Elimination Decoding Scheme\", 10th IEEE International Workshop on Signal Processing for Space Communications (SPSC'08), October 2008.",
      "ja": "[Cunche08] Cunche、M。、およびV. Roca、「最適化されたLDPC階段コードのガウシアン除去復号化スキームを特徴とするエラー回復機能」、第10回IEEE International Workshop for Signal Communications for Space Communications（SPSC'08）、2008年10月。"
    },
    {
      "indent": 3,
      "text": "[CunchePHD10] Cunche, M., \"High performances AL-FEC codes for the erasure channel : variation around LDPC codes\", PhD dissertation (in French) (http:// tel.archives-ouvertes.fr/tel-00451336/en/), June 2010.",
      "ja": "[CunchePHD10] Cunche、M。、「消去チャネル用の高性能AL-FECコード：LDPCコード周辺の変動」、博士論文（フランス語）（http：// tel.archives-ouvertes.fr/tel-00451336/en /）、2010年6月。"
    },
    {
      "indent": 3,
      "text": "[LDPC-codec] Cunche, M., Roca, V., Neumann, C., and J. Laboure, \"LDPC-Staircase/LDPC-Triangle Codec Reference Implementation\", INRIA Rhone-Alpes and STMicroelectronics, <http://planete-bcast.inrialpes.fr/>.",
      "ja": "[LDPC-codec] Cunche、M.、Roca、V.、Neumann、C。、およびJ. Laboure、「LDPC-Staircase / LDPC-Triangle Codec Reference Implementation」、INRIA Rhone-AlpesおよびSTMicroelectronics、<http：// planete-bcast.inrialpes.fr/>。"
    },
    {
      "indent": 3,
      "text": "[LDPC-codec-OpenFEC] \"The OpenFEC project\", <http://openfec.org/>.",
      "ja": "[LDPC-codec-OpenFEC]「The OpenFECプロジェクト」、<http://openfec.org/>。"
    },
    {
      "indent": 3,
      "text": "[Matsuzono10] Matsuzono, K., Detchart, J., Cunche, M., Roca, V., and H. Asaeda, \"Performance Analysis of a High-Performance Real-Time Application with Several AL-FEC Schemes\", 35th Annual IEEE Conference on Local Computer Networks (LCN 2010), October 2010.",
      "ja": "[Matsuzono10]松園健一、デッチャートJ.、クンチェM.、ロカV.、および浅江宏、「AL-FECスキームをいくつか使用した高性能リアルタイムアプリケーションのパフォーマンス分析」、35回目ローカルコンピュータネットワークに関するIEEE会議（LCN 2010）、2010年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC3453] Luby, M., Vicisano, L., Gemmell, J., Rizzo, L., Handley, M., and J. Crowcroft, \"The Use of Forward Error Correction (FEC) in Reliable Multicast\", RFC 3453, December 2002.",
      "ja": "[RFC3453] Luby、M.、Vicisano、L.、Gemmell、J.、Rizzo、L.、Handley、M.、J。Crowcroft、「Use of Forward Error Correction（FEC）in Reliable Multicast」、RFC 3453 、2002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC5052] Watson, M., Luby, M., and L. Vicisano, \"Forward Error Correction (FEC) Building Block\", RFC 5052, August 2007.",
      "ja": "[RFC5052] Watson、M.、Luby、M。、およびL. Vicisano、「Forward Error Correction（FEC）Building Block」、RFC 5052、2007年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5053] Luby, M., Shokrollahi, A., Watson, M., and T. Stockhammer, \"Raptor Forward Error Correction Scheme for Object Delivery\", RFC 5053, October 2007.",
      "ja": "[RFC5053] Luby、M.、Shokrollahi、A.、Watson、M。、およびT. Stockhammer、「Raptor Forward Error Correction Scheme for Object Delivery」、RFC 5053、2007年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC5510] Lacan, J., Roca, V., Peltotalo, J., and S. Peltotalo, \"Reed-Solomon Forward Error Correction (FEC) Schemes\", RFC 5510, April 2009.",
      "ja": "[RFC5510] Lacan、J.、Roca、V.、Peltotalo、J。、およびS. Peltotalo、「Reed-Solomon Forward Error Correction（FEC）Schemes」、RFC 5510、2009年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC5740] Adamson, B., Bormann, C., Handley, M., and J. Macker, \"NACK-Oriented Reliable Multicast (NORM) Transport Protocol\", RFC 5740, November 2009.",
      "ja": "[RFC5740] Adamson、B.、Bormann、C.、Handley、M。、およびJ. Macker、「NACK-Oriented Reliable Multicast（NORM）Transport Protocol」、RFC 5740、2009年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC5775] Luby, M., Watson, M., and L. Vicisano, \"Asynchronous Layered Coding (ALC) Protocol Instantiation\", RFC 5775, April 2010.",
      "ja": "[RFC5775] Luby、M.、Watson、M。、およびL. Vicisano、「Asynchronous Layered Coding（ALC）Protocol Instantiation」、RFC 5775、2010年4月。"
    },
    {
      "indent": 3,
      "text": "[SIMPLE_RS] Roca, V., Cunche, M., Lacan, J., Bouabdallah, A., and K. Matsuzono, \"Simple Reed-Solomon Forward Error Correction (FEC) Scheme for FECFRAME\", Work in Progress, October 2012.",
      "ja": "[SIMPLE_RS] Roca、V.、Cunche、M.、Lacan、J.、Bouabdallah、A。、およびK. Matsuzono、「FECFRAMEのための単純なリードソロモン前方誤り訂正（FEC）スキーム」、作業中、2012年10月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Vincent Roca INRIA 655, av. de l'Europe Inovallee; Montbonnot ST ISMIER cedex 38334 France",
      "ja": "ヴィンセントロカINRIA 655、av。イノヴァリーヨーロッパの; Montbonnot ST ISMIER cedex 38334フランス"
    },
    {
      "indent": 3,
      "text": "EMail: vincent.roca@inria.fr\nURI:   http://planete.inrialpes.fr/people/roca/",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Mathieu Cunche INSA-Lyon/INRIA Laboratoire CITI 6 av. des Arts Villeurbanne cedex 69621 France",
      "ja": "マシュー・クンシェINSA-リヨン/ INRIA CITIラボ6 av。 des Arts Villeurbanne cedex 69621フランス"
    },
    {
      "indent": 3,
      "text": "EMail: mathieu.cunche@inria.fr\nURI:   http://mathieu.cunche.free.fr/",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Jerome Lacan ISAE, Univ. of Toulouse 10 av. Edouard Belin; BP 54032 Toulouse cedex 4 31055 France",
      "ja": "ジェローム・ラカンISAE、大学トゥールーズ10のAV。エドワール・ベリン; BP 54032 Toulouse cedex 4 31055フランス"
    },
    {
      "indent": 3,
      "text": "EMail: jerome.lacan@isae.fr\nURI:   http://personnel.isae.fr/jerome-lacan/",
      "raw": true,
      "ja": ""
    }
  ]
}