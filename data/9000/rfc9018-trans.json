{
  "title": {
    "text": "RFC 9018 - Interoperable Domain Name System (DNS) Server Cookies",
    "ja": "RFC 9018 - 相互運用可能なドメイン名システム（DNS）サーバーCookies"
  },
  "number": 9018,
  "created_at": "2021-04-25 11:00:24.766017+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                           O. Sury\nRequest for Comments: 9018                   Internet Systems Consortium\nUpdates: 7873                                                  W. Toorop\nCategory: Standards Track                                     NLnet Labs\nISSN: 2070-1721                                          D. Eastlake 3rd\n                                                  Futurewei Technologies\n                                                              M. Andrews\n                                             Internet Systems Consortium\n                                                              April 2021",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Interoperable Domain Name System (DNS) Server Cookies",
      "ja": "相互運用可能なドメイン名システム（DNS）サーバーCookies"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "DNS Cookies, as specified in RFC 7873, are a lightweight DNS transaction security mechanism that provide limited protection to DNS servers and clients against a variety of denial-of-service amplification, forgery, or cache-poisoning attacks by off-path attackers.",
      "ja": "RFC 7873で指定されているDNS Cookieは、オフパス攻撃者によるさまざまなサービス拒否増幅、偽造、キャッシュ中毒攻撃に対して、DNSサーバーおよびクライアントに限られた保護を提供する軽量なDNSトランザクションセキュリティメカニズムです。"
    },
    {
      "indent": 3,
      "text": "This document updates RFC 7873 with precise directions for creating Server Cookies so that an anycast server set including diverse implementations will interoperate with standard clients, with suggestions for constructing Client Cookies in a privacy-preserving fashion, and with suggestions on how to update a Server Secret. An IANA registry listing the methods and associated pseudorandom function suitable for creating DNS Server Cookies has been created with the method described in this document as the first and, as of the time of publication, only entry.",
      "ja": "このドキュメントは、多様な実装を含むAnycastサーバーセットが標準のクライアントと相互運用するための正確な指示でRFC 7873を更新し、プライバシー保存ファッションでクライアントクッキーを構築するための提案と、サーバーの秘密を更新する方法についての提案があります。。IANAレジストリの一覧表示DNSサーバーCookieの作成に適した方法および関連する疑似andom関数は、このドキュメントで説明されているメソッドが最初に、パブリケーションの時点でのエントリのみで作成されています。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これはインターネット規格のトラック文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "この文書は、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表します。それは公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）による出版の承認を受けました。インターネット規格に関する詳細情報は、RFC 7841のセクション2で利用できます。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9018.",
      "ja": "この文書の現在のステータス、任意のエラータ、およびフィードバックを提供する方法については、https：//www.rfc-editor.org/info/rfc9018で入手できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2021 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2021 IETF信頼と文書著者として識別された人。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "このドキュメントは、このドキュメントの発行日に有効なBCP 78およびIETFドキュメントに関連するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象となります。 これらのドキュメントは、このドキュメントに関するお客様の権利と制限について説明しているため、注意深く確認してください。 このドキュメントから抽出されたコードコンポーネントには、Trust LegalProvisionsのセクション4.eで説明されているSimplifiedBSD Licenseテキストが含まれている必要があり、Simplified BSDLicenseで説明されているように保証なしで提供されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n  1.1.  Terminology and Definitions\n2.  Changes to RFC 7873\n3.  Constructing a Client Cookie\n4.  Constructing a Server Cookie\n  4.1.  The Version Sub-Field\n  4.2.  The Reserved Sub-Field\n  4.3.  The Timestamp Sub-Field\n  4.4.  The Hash Sub-Field\n5.  Updating the Server Secret\n6.  Cookie Algorithms\n7.  IANA Considerations\n8.  Security and Privacy Considerations\n  8.1.  Client Cookie Construction\n  8.2.  Server Cookie Construction\n9.  References\n  9.1.  Normative References\n  9.2.  Informative References\nAppendix A.  Test Vectors\n  A.1.  Learning a New Server Cookie\n  A.2.  The Same Client Learning a Renewed (Fresh) Server Cookie\n  A.3.  Another Client Learning a Renewed Server Cookie\n  A.4.  IPv6 Query with Rolled Over Secret\nAppendix B.  Implementation Status\nAcknowledgements\nAuthors' Addresses",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "DNS Cookies, as specified in [RFC7873], are a lightweight DNS transaction security mechanism that provide limited protection to DNS servers and clients against a variety of denial-of-service amplification, forgery, or cache-poisoning attacks by off-path attackers. This document specifies a means of producing interoperable cookies so that an anycast server set including diverse implementations can be easily configured to interoperate with standard clients. Also, single-implementation or non-anycast services can benefit from a well-studied standardized algorithm for which the behavioral and security characteristics are more widely known.",
      "ja": "[RFC7873]で指定されているDNS Cookieは、オフパスの攻撃者によるさまざまなサービス拒否増幅、偽造、キャッシュ中毒攻撃に対して、DNSサーバーとクライアントに限定された保護を提供する軽量なDNSトランザクションセキュリティメカニズムです。このドキュメントは、多様な実装を含むエニーキャストサーバーセットを標準のクライアントと相互運用するように簡単に構成できるように、相互運用可能なクッキーを作成する手段を指定します。また、単一実装または非エニーキャストサービスは、行動特性とセキュリティ特性がより広く知られているよく研究されている標準化されたアルゴリズムから利益を得ることができる。"
    },
    {
      "indent": 3,
      "text": "The threats considered for DNS Cookies and the properties of the DNS Security features other than DNS Cookies are discussed in [RFC7873].",
      "ja": "DNS CookieとDNS Cookie以外のDNSセキュリティ機能のプロパティについて検討した脅威は、[RFC7873]で説明しています。"
    },
    {
      "indent": 3,
      "text": "In Section 6 of [RFC7873], for simplicity, it is \"RECOMMENDED that the same Server Secret be used by each DNS server in a set of anycast servers.\" However, how precisely a Server Cookie is calculated from this Server Secret is left to the implementation.",
      "ja": "[RFC7873]の第6章では、シンプルさのために「同じサーバーの秘密は各DNSサーバーで一連のAnycastサーバーで使用することをお勧めします」。ただし、このサーバーの秘密からサーバーCookieがどのように計算されるかは、実装に残されています。"
    },
    {
      "indent": 3,
      "text": "This guidance has led to a gallimaufry of DNS Cookie implementations, calculating the Server Cookie in different ways. As a result, DNS Cookies are impractical to deploy on multi-vendor anycast networks because even when all DNS Software shares the same secret, as RECOMMENDED in Section 6 of [RFC7873], the Server Cookie constructed by one implementation cannot generally be validated by another.",
      "ja": "このガイダンスはDNS Cookieの実装のGallimaufryを導き、サーバーのクッキーをさまざまな方法で計算しました。その結果、DNS Cookieはマルチベンダーエニーキャストネットワークでデプロイするのが実用的ではない[RFC7873]のセクション6のセクション6で推奨されている場合でも、1つの実装によって構築されたサーバークッキーは一般に別のものによって検証できないためです。。"
    },
    {
      "indent": 3,
      "text": "There is no need for DNS client (resolver) Cookies to be interoperable across different implementations. Each client need only be able to recognize its own cookies. However, this document does contain recommendations for constructing Client Cookies in a client-protecting fashion.",
      "ja": "DNSクライアント（リゾルバ）Cookieがさまざまな実装に間に合う必要はありません。各クライアントは独自のクッキーを認識できるだけです。ただし、この文書にはクライアント保護方法でクライアントクッキーを構築するための推奨事項が含まれています。"
    },
    {
      "indent": 0,
      "text": "1.1. Terminology and Definitions",
      "section_title": true,
      "ja": "1.1. 用語と定義"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 3,
      "text": "Note: \"IP address\" is used herein as a length-independent term covering both IPv4 and IPv6 addresses.",
      "ja": "注：「IPアドレス」は、本明細書では、IPv4アドレスとIPv6アドレスの両方をカバーする長さに依存しない用語として使用されています。"
    },
    {
      "indent": 0,
      "text": "2. Changes to RFC 7873",
      "section_title": true,
      "ja": "2. RFC 7873への変更"
    },
    {
      "indent": 3,
      "text": "Appendices A.1 and B.1 of [RFC7873] provide example \"simple\" algorithms for computing Client and Server Cookies, respectively. These algorithms MUST NOT be used as the resulting cookies are too weak when evaluated against modern security standards.",
      "ja": "[RFC7873]の付録A.1およびB.1は、それぞれクライアントおよびサーバーのCookieをコンピュングするための「単純な」アルゴリズムを提供します。このようなクッキーは、現代のセキュリティ基準に対して評価されると、結果として生じるクッキーが弱すぎるため、これらのアルゴリズムを使用してはいけません。"
    },
    {
      "indent": 3,
      "text": "Appendix B.2 of [RFC7873] provides an example \"more complex\" server algorithm. This algorithm is replaced by the interoperable specification in Section 4 of this document, which MUST be used by Server Cookie implementations.",
      "ja": "[RFC7873]の付録B.2は、「より複雑な」サーバーアルゴリズムの例を示しています。このアルゴリズムは、このドキュメントのセクション4の相互運用可能な仕様に置き換えられ、これはServer Cookieの実装によって使用されなければなりません。"
    },
    {
      "indent": 3,
      "text": "This document has suggestions on Client Cookie construction in Section 3. The previous example in Appendix A.2 of [RFC7873] is NOT RECOMMENDED.",
      "ja": "この文書には、セクション3のクライアントCookieの構築に関する提案があります。[RFC7873]の付録A.2の前の例はお勧めできません。"
    },
    {
      "indent": 0,
      "text": "3. Constructing a Client Cookie",
      "section_title": true,
      "ja": "3. クライアントクッキーを構築する"
    },
    {
      "indent": 3,
      "text": "The Client Cookie acts as an identifier for a given client and its IP address and needs to be unguessable. In order to provide minimal authentication of the targeted server, a client MUST use a different Client Cookie for each different Server IP address. This complicates a server's ability to spoof answers for other DNS servers. The Client Cookie SHOULD have 64 bits of entropy.",
      "ja": "クライアントCookieは、特定のクライアントとそのIPアドレスの識別子として機能し、クエステーション不可能です。ターゲットサーバの認証を最小限に抑えるために、クライアントは異なるサーバIPアドレスごとに異なるクライアントCookieを使用する必要があります。これは、他のDNSサーバーに対する回答を偽装する能力を複雑にします。クライアントクッキーには64ビットのエントロピーが必要です。"
    },
    {
      "indent": 3,
      "text": "When a server does not support DNS Cookies, the client MUST NOT send the same Client Cookie to that same server again. Instead, it is recommended that the client does not send a Client Cookie to that server for a certain period (for example, five minutes) before it retries with a new Client Cookie.",
      "ja": "サーバーがDNS Cookieをサポートしていない場合、クライアントは同じクライアントCookieをその同じサーバーに再度送信してはいけません。代わりに、クライアントが新しいクライアントCookieで再試行する前に、クライアントがそのサーバにそのサーバにクライアントCookieを送信しないことをお勧めします。"
    },
    {
      "indent": 3,
      "text": "When a server does support DNS Cookies, the client should store the Client Cookie alongside the Server Cookie it registered for that server.",
      "ja": "サーバーがDNS Cookieをサポートしている場合、クライアントはそのサーバーに登録されているサーバーCookieとともにクライアントCookieを保存する必要があります。"
    },
    {
      "indent": 3,
      "text": "Except for when the Client IP address changes, there is no need to change the Client Cookie often. It is then reasonable to change the Client Cookie only if it has been compromised or after a relatively long implementation-defined period of time. The time period should be no longer than a year, and in any case, Client Cookies are not expected to survive a program restart.",
      "ja": "クライアントのIPアドレスが変更されたときを除いて、クライアントCookieを頻繁に変更する必要はありません。その場合、クライアントCookieを変更した場合、または比較的長い実装定義定義の期間の後にのみ変更できます。期間は1年以内で、いずれにせよ、クライアントクッキーはプログラムの再起動を克服することは期待されていません。"
    },
    {
      "indent": 3,
      "text": "Client-Cookie = 64 bits of entropy",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Previously, the recommended algorithm to compute the Client Cookie included the Client IP address as an input to a hashing function. However, when implementing the DNS Cookies, several DNS vendors found it impractical to include the Client IP as the Client Cookie is typically computed before the Client IP address is known. Therefore, the requirement to put the Client IP address as input was removed.",
      "ja": "以前は、クライアントCookieを計算するための推奨アルゴリズムは、クライアントIPアドレスをハッシュ関数への入力として含めました。ただし、DNS Cookieを実装するときに、クライアントのIPアドレスが知られている前にクライアントIPを含めることがクライアントIPを含めることが実用的ではなかったいくつかのDNSベンダーが検出されました。したがって、クライアントIPアドレスを入力として配置する必要が削除されました。"
    },
    {
      "indent": 3,
      "text": "However, for privacy reasons, in order to prevent tracking of devices across links and to not circumvent IPv6 Privacy Extensions [RFC8981], clients MUST NOT reuse a Client or Server Cookie after the Client IP address has changed.",
      "ja": "ただし、プライバシー上の理由から、リンク間のデバイスの追跡を防ぎ、IPv6プライバシー拡張[RFC8981]を回避しないように、クライアントのIPアドレスが変更された後にクライアントまたはサーバーのCookieを再利用してはなりません。"
    },
    {
      "indent": 3,
      "text": "One way to satisfy this requirement for non-reuse is to register the Client IP address alongside the Server Cookie when it receives the Server Cookie. In subsequent queries to the server with that Server Cookie, the socket MUST be bound to the Client IP address that was also used (and registered) when it received the Server Cookie. Failure to bind MUST then result in a new Client Cookie.",
      "ja": "再利用以外のこの要件を満たす1つの方法は、サーバーCookieを受信したときにサーバーCookieと一緒にクライアントIPアドレスを登録することです。そのサーバーへのサーバーへの後続のクエリでは、Server Cookieを受信したときにも使用された（登録された）クライアントのIPアドレスにバインドする必要があります。バインドできなかった場合は、新しいクライアントCookieになります。"
    },
    {
      "indent": 0,
      "text": "4. Constructing a Server Cookie",
      "section_title": true,
      "ja": "4. サーバークッキーの構築"
    },
    {
      "indent": 3,
      "text": "The Server Cookie is effectively a Message Authentication Code (MAC). The Server Cookie, when it occurs in a COOKIE option in a request, is intended to weakly assure the server that the request came from a client that is both at the source IP address of the request and using the Client Cookie included in the option. This assurance is provided by the Server Cookie that the server (or any other server from the anycast set) sent to that client in an earlier response and that appears as the Server Cookie field in the weakly authenticated request (see Section 5.2 of [RFC7873]).",
      "ja": "サーバーCookieは事実上メッセージ認証コード（MAC）です。サーバーCookieは、リクエスト内のCookieオプションで発生すると、要求が要求の送信元IPアドレスにあるクライアントからのクライアントから、オプションに含まれているクライアントCookieを使用しているクライアントからのサーバーを弱く保証することを目的としています。この保証は、以前の応答でサーバー（またはAnycastセットからの他のサーバー）がそのクライアントに送信され、弱い認証された要求のサーバーCookieフィールドとして表示されるサーバーCookieによって提供されます（[RFC7873]のセクション5.2を参照）。）。"
    },
    {
      "indent": 3,
      "text": "DNS Cookies do not provide protection against \"on-path\" adversaries (see Section 9 of [RFC7873]). An on-path observer that has seen a Server Cookie for a client can abuse that Server Cookie to spoof request for that client within the time span a Server Cookie is valid (see Section 4.3).",
      "ja": "DNSクッキーは、「オンパス」の敵対者に対する保護を提供していません（[RFC7873]のセクション9を参照）。クライアントのサーバークッキーを見たことを確認したオンパスオブザーバは、そのサーバーCookieがそのクライアントの要求をスパープにしばらくすることができますサーバーCookieが有効です（セクション4.3を参照）。"
    },
    {
      "indent": 3,
      "text": "The Server Cookie is calculated from the Client Cookie, a series of Sub-Fields specified below, the Client IP address, and a Server Secret that is known only to the server or only to the set of servers at the same anycast address.",
      "ja": "サーバーCookieは、クライアントCookie、以下に指定されている一連のサブフィールド、クライアントのIPアドレス、およびサーバーのセットのみのサーバーにのみ、同じエニーキャストアドレスにあるサーバーのセットにのみ表示されます。"
    },
    {
      "indent": 3,
      "text": "For calculation of the Server Cookie, a pseudorandom function is RECOMMENDED with the property that an attacker that does not know the Server Secret, cannot find (any information about) the Server Secret, and cannot create a Server Cookie for any combination of the Client Cookie, the series of Sub-Fields specified below, and the client IP address, for which it has not seen a Server Cookie before. Because DNS servers need to use the pseudorandom function in order to verify Server Cookies, it is RECOMMENDED that it be efficient to calculate. The pseudorandom function described in [SipHash-2-4] and introduced in Section 4.4 of this document fits these recommendations.",
      "ja": "サーバーCookieの計算のために、サーバーの秘密がわからない攻撃者がサーバーの秘密を見つけられないプロパティに疑似ランダム関数が推奨されます。、下記の一連のサブフィールドと、サーバーのCookieが表示されていないクライアントのIPアドレス。DNSサーバーはサーバーのクッキーを検証するために疑似andom関数を使用する必要があるため、計算するのに効率的になることをお勧めします。[Siphash-2-4]に記載されており、このドキュメントの4.4項に記載されている疑似乱数関数は、これらの推奨事項にあります。"
    },
    {
      "indent": 3,
      "text": "Changing the Server Secret regularly is RECOMMENDED but, when a secure pseudorandom function is used, it need not be changed too frequently. Once a month, for example, would be adequate. See Section 5 on operator and implementation guidelines for updating a Server Secret.",
      "ja": "サーバーの秘密を定期的に変更することをお勧めしますが、安全な疑似ランダム機能を使用する場合は、頻繁に変更する必要はありません。たとえば、月に一度適切になります。サーバーの秘密を更新するための演算子と実装のガイドラインについてのセクション5を参照してください。"
    },
    {
      "indent": 3,
      "text": "The 128-bit Server Cookie consists of the following Sub-Fields: a 1-octet Version Sub-Field, a 3-octet Reserved Sub-Field, a 4-octet Timestamp Sub-Field, and an 8-octet Hash Sub-Field.",
      "ja": "128ビットサーバーCookieは、次のサブフィールドで構成されています.1オクテット・バージョンサブフィールド、3オクテット予約サブフィールド、4オクテットタイムスタンプサブフィールド、および8オクテットハッシュサブフィールド。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|    Version    |                   Reserved                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           Timestamp                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                             Hash                              |\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.1. The Version Sub-Field",
      "section_title": true,
      "ja": "4.1. バージョンサブフィールド"
    },
    {
      "indent": 3,
      "text": "The Version Sub-Field prescribes the structure and Hash calculation formula. This document defines Version 1 to be the structure and way to calculate the Hash Sub-Field as defined in this section.",
      "ja": "バージョンサブフィールドは、構造とハッシュ計算式を規定しています。この文書は、このセクションで定義されているようにハッシュサブフィールドを計算するための構造と方法であるバージョン1を定義します。"
    },
    {
      "indent": 0,
      "text": "4.2. The Reserved Sub-Field",
      "section_title": true,
      "ja": "4.2. 予約済みサブフィールド"
    },
    {
      "indent": 3,
      "text": "The value of the Reserved Sub-Field is reserved for future versions of server-side cookie construction. On construction, it MUST be set to zero octets. On Server Cookie verification, the server MUST NOT enforce those fields to be zero, and the Hash should be computed with the received value as described in Section 4.4.",
      "ja": "予約サブフィールドの値は、将来のバージョンのサーバーサイドCookie構造のために予約されています。構造上、ゼロオクテットに設定する必要があります。サーバーCookie検証では、サーバーはそれらのフィールドをゼロにすることを強制してはならず、hashはセクション4.4で説明されているように受信値で計算する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.3. The Timestamp Sub-Field",
      "section_title": true,
      "ja": "4.3. タイムスタンプサブフィールド"
    },
    {
      "indent": 3,
      "text": "The Timestamp value prevents Replay Attacks and MUST be checked by the server to be within a defined period of time. The DNS server SHOULD allow cookies within a 1-hour period in the past and a 5-minute period into the future to allow operation of low-volume clients and some limited time skew between the DNS servers in the anycast set.",
      "ja": "タイムスタンプ値は、再生攻撃を防ぎ、サーバーが定義された期間内にあるようにする必要があります。DNSサーバーは、過去1時間以内、将来5分以内のクッキーを許可する必要があります。"
    },
    {
      "indent": 3,
      "text": "The Timestamp value specifies a date and time in the form of a 32-bit *unsigned* number of seconds elapsed since 1 January 1970 00:00:00 UTC, ignoring leap seconds, in network byte order. All comparisons involving these fields MUST use \"Serial number arithmetic\", as defined in [RFC1982]. [RFC1982] specifies how the differences should be handled. This handles any relative time window less than 68 years, at any time in the future (2038, 2106, 2256, 22209, or later.)",
      "ja": "タイムスタンプ値は、ネットワークバイト順で、Leap秒を無視して、1970年1月1日から経過した32ビット* unsigned *秒数の形式の日付と時刻を指定します。これらのフィールドを含むすべての比較は、[RFC1982]で定義されているように、「シリアル番号算術」を使用する必要があります。[RFC1982]違いを処理する方法を指定します。これは将来いつでも68歳未満の相対的な時間窓を処理します（2038,2106,2256,22209以降）。"
    },
    {
      "indent": 3,
      "text": "The DNS server SHOULD generate a new Server Cookie at least if the received Server Cookie from the client is more than half an hour old, but it MAY generate a new cookie more often than that.",
      "ja": "クライアントからの受信したサーバーCookieが半分以上の場合、DNSサーバーは新しいサーバーCookieを生成する必要がありますが、それはそれ以上の新しいクッキーを生成する可能性があります。"
    },
    {
      "indent": 0,
      "text": "4.4. The Hash Sub-Field",
      "section_title": true,
      "ja": "4.4. ハッシュサブフィールド"
    },
    {
      "indent": 3,
      "text": "It's important that all the DNS servers use the same algorithm for computing the Server Cookie. This document defines the Version 1 of the server-side algorithm to be:",
      "ja": "すべてのDNSサーバーがサーバーCookieを計算するための同じアルゴリズムを使用することが重要です。このドキュメントでは、サーバー側アルゴリズムのバージョン1を次のように定義します。"
    },
    {
      "indent": 3,
      "text": "Hash = SipHash-2-4( Client Cookie | Version | Reserved | Timestamp | Client-IP, Server Secret )",
      "ja": "HASH = SIPHASH-2-4（クライアントクッキー|バージョン|予約|タイムスタンプ| CLIENT-IP、サーバーシークレット）"
    },
    {
      "indent": 3,
      "text": "where \"|\" indicates concatenation.",
      "ja": "どこで \"|\"連結を示します。"
    },
    {
      "indent": 3,
      "text": "Notice that Client-IP is used for hash generation even though it is not included in the cookie value itself. Client-IP can be either 4 bytes for IPv4 or 16 bytes for IPv6. The length of all the concatenated elements (the input into [SipHash-2-4]) MUST be either precisely 20 bytes in case of an IPv4 Client-IP or precisely 32 bytes in case of an IPv6 Client-IP.",
      "ja": "Cookie値自体に含まれていなくても、Client-IPがハッシュ生成に使用されます。client-ipは、IPv4の場合は4バイト、またはIPv6の場合は16バイトです。IPv4 Client-IPの場合は、IPv4クライアントIPまたは正確に32バイトの場合は、すべての連結要素の長さ（Siphash-2-4]への入力）が正確に20バイトでなければなりません。"
    },
    {
      "indent": 3,
      "text": "When a DNS server receives a Server Cookie version 1 for validation, the length of the received COOKIE option MUST be precisely 24 bytes: 8 bytes for the Client Cookie plus 16 bytes for the Server Cookie. Verification of the length of the received COOKIE option is REQUIRED to guarantee the length of the input into [SipHash-2-4] to be precisely 20 bytes in the case of an IPv4 Client-IP and precisely 32 bytes in the case of an IPv6 Client-IP. This ensures that the input into [SipHash-2-4] is an injective function of the elements making up the input, and thereby prevents data substitution attacks. More specifically, this prevents a 36-byte COOKIE option coming from an IPv4 Client-IP to be validated as if it were coming from an IPv6 Client-IP.",
      "ja": "検証のためにDNSサーバーがサーバーCookieバージョン1を受信すると、受信したCookieオプションの長さは正確に24バイトでなければなりません：Client Cookieの8バイトとサーバーCookieの16バイトです。受信したCookieオプションの長さの検証[Siphash-2-4]への入力の長さを正確に20バイトに保証するには、IPv4クライアントIPとIPv6の場合は正確に32バイトの場合クライアントIPこれにより、[Siphash-2-4]への入力は、入力を構成する要素の注射機能であり、それによってデータ置換攻撃を防ぎます。具体的には、IPv4 Client-IPからの36バイトのCookieオプションがIPv6 Client-IPから来たかのように検証されることを防ぎます。"
    },
    {
      "indent": 3,
      "text": "The Server Secret MUST be configurable to make sure that servers in an anycast network return consistent results.",
      "ja": "サーバーの秘密は、エニーキャストネットワーク内のサーバーが一貫した結果を返すようにするために設定可能でなければなりません。"
    },
    {
      "indent": 0,
      "text": "5. Updating the Server Secret",
      "section_title": true,
      "ja": "5. サーバーの秘密の更新"
    },
    {
      "indent": 3,
      "text": "Changing the Server Secret regularly is RECOMMENDED. All servers in an anycast set must be able to verify the Server Cookies constructed by all other servers in that anycast set at all times. Therefore, it is vital that the Server Secret is shared among all servers before it is used to generate Server Cookies on any server.",
      "ja": "サーバーの秘密を定期的に変更することをお勧めします。Anycastセット内のすべてのサーバーは、そのすべての時間に設定されている他のすべてのサーバーによって構築されたサーバークッキーを検証できなければなりません。したがって、サーバーのクッキーを使用する前に、サーバーのシークレットがすべてのサーバー間で共有されることが重要です。"
    },
    {
      "indent": 3,
      "text": "Also, to maximize maintaining established relationships between clients and servers, an old Server Secret should be valid for verification purposes for a specific period.",
      "ja": "また、クライアントとサーバー間の確立された関係の維持を最大化するために、古いサーバーの秘密は特定の期間検証目的で有効である必要があります。"
    },
    {
      "indent": 3,
      "text": "To facilitate this, deployment of a new Server Secret MUST be done in three stages:",
      "ja": "これを容易にするために、新しいサーバーの秘密の展開は3つの段階で行わなければなりません。"
    },
    {
      "indent": 3,
      "text": "Stage 1 The new Server Secret is deployed on all the servers in an anycast set by the operator.",
      "ja": "ステージ1新しいサーバーの秘密は、オペレーターによってエニーキャストに設定されているすべてのサーバーに展開されます。"
    },
    {
      "indent": 6,
      "text": "Each server learns the new Server Secret but keeps using the previous Server Secret to generate Server Cookies.",
      "ja": "各サーバーは新しいサーバーの秘密を学習しますが、以前のサーバーの秘密を使用してサーバーのCookieを生成し続けます。"
    },
    {
      "indent": 6,
      "text": "Server Cookies constructed with both the new Server Secret and the previous Server Secret are considered valid when verifying.",
      "ja": "検証時に、新しいサーバー秘密と以前のサーバーの秘密の両方で構築されたサーバークッキーは有効であると見なされます。"
    },
    {
      "indent": 6,
      "text": "After stage 1 is completed, all the servers in the anycast set have learned the new Server Secret and can verify Server Cookies constructed with it, but keep generating Server Cookies with the old Server Secret.",
      "ja": "ステージ1が完了した後、Anycastセット内のすべてのサーバーは新しいサーバーの秘密を学習し、それを使用して構築されたサーバーのクッキーを検証できますが、古いサーバーの秘密でサーバーのクッキーを生成し続けます。"
    },
    {
      "indent": 3,
      "text": "Stage 2 This stage is initiated by the operator after the Server Cookie is present on all members in the anycast set.",
      "ja": "ステージ2この段階は、サーバーCookieがAnycastセット内のすべてのメンバーに存在する後にオペレータによって開始されます。"
    },
    {
      "indent": 6,
      "text": "When entering Stage 2, servers start generating Server Cookies with the new Server Secret. The previous Server Secret is not yet removed/forgotten.",
      "ja": "ステージ2を入力するとき、サーバーは新しいサーバーの秘密を持つサーバーのクッキーの生成を開始します。以前のサーバーの秘密はまだ削除/忘れられていません。"
    },
    {
      "indent": 6,
      "text": "Server Cookies constructed with both the new Server Secret and the previous Server Secret are considered valid when verifying.",
      "ja": "検証時に、新しいサーバー秘密と以前のサーバーの秘密の両方で構築されたサーバークッキーは有効であると見なされます。"
    },
    {
      "indent": 3,
      "text": "Stage 3 This stage is initiated by the operator when it can be assumed that most clients have obtained a Server Cookie derived from the new Server Secret.",
      "ja": "ステージ3この段階は、ほとんどのクライアントが新しいサーバーの秘密から派生したサーバーCookieを取得したと仮定すると、オペレータによって開始されます。"
    },
    {
      "indent": 6,
      "text": "With this stage, the previous Server Secret can be removed and MUST NOT be used anymore for verifying.",
      "ja": "この段階では、以前のサーバーの秘密を削除することができ、検証のためにもう使用しないでください。"
    },
    {
      "indent": 6,
      "text": "It is RECOMMENDED that the operator wait, after initiating Stage 2 and before initiating Stage 3, at least a period of time equal to the longest TTL in the zones served by the server plus 1 hour.",
      "ja": "オペレータは、ステージ2を開始した後、およびステージ3を開始する前に待機することをお勧めします。"
    },
    {
      "indent": 6,
      "text": "The operator SHOULD wait at least longer than the period clients are allowed to use the same Server Cookie, which SHOULD be 1 hour (see Section 4.3).",
      "ja": "オペレータは、ピリオドクライアントが同じサーバーCookieを使用できるようになるほど長く待つ必要があります。これは1時間になる必要があります（セクション4.3を参照）。"
    },
    {
      "indent": 0,
      "text": "6. Cookie Algorithms",
      "section_title": true,
      "ja": "6. クッキーアルゴリズム"
    },
    {
      "indent": 3,
      "text": "[SipHash-2-4] is a pseudorandom function suitable as a Message Authentication Code. It is REQUIRED that a compliant DNS server use SipHash-2-4 as a mandatory and default algorithm for DNS Cookies to ensure interoperability between the DNS Implementations.",
      "ja": "[Siphash-2-4]は、メッセージ認証コードとして適した疑似乱数関数です。DNS実装間の相互運用性を確保するために、準拠DNSサーバーがDNS Cookieの必須およびデフォルトのアルゴリズムとしてSiphash-2-4を使用することが必要です。"
    },
    {
      "indent": 3,
      "text": "The construction method and pseudorandom function used in calculating and verifying the Server Cookies are determined by the initial version byte and by the length of the Server Cookie. Additional pseudorandom or construction algorithms for Server Cookies might be added in the future.",
      "ja": "サーバーCookieの計算と検証に使用される構築方法と疑似andom関数は、初期バージョンバイトとサーバーCookieの長さによって決まります。将来的には、サーバークッキーのための追加の疑似乱数または構築アルゴリズムが追加される可能性があります。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has created a registry under the \"Domain Name System (DNS) Parameters\" heading as follows:",
      "ja": "IANAは、次のように「ドメインネームシステム（DNS）パラメータ」の下にレジストリを作成しました。"
    },
    {
      "indent": 3,
      "text": "Registry Name: DNS Server Cookie Methods",
      "ja": "レジストリ名：DNS Server Cookieメソッド"
    },
    {
      "indent": 3,
      "text": "Assignment Policy: Expert Review",
      "ja": "割り当て方針：エキスパートレビュー"
    },
    {
      "indent": 3,
      "text": "Reference: [RFC9018], [RFC7873]",
      "ja": "参照：[RFC9018]、[RFC7873]"
    },
    {
      "indent": 3,
      "text": "Note: A Server Cookie method (construction and pseudorandom algorithm) is determined by the Version in the first byte of the cookie and by the cookie size. Server Cookie size is limited to the inclusive range of 8 to 32 bytes.",
      "ja": "注：サーバーCookieメソッド（構築と疑似andomアルゴリズム）は、Cookieの最初のバイトとクッキーサイズによってバージョンによって決まります。Server Cookieサイズは、8から32バイトの範囲内の範囲に制限されています。"
    },
    {
      "indent": 11,
      "text": "+=========+=======+=================================+\n| Version |  Size | Method                          |\n+=========+=======+=================================+\n|       0 |  8-32 | Reserved                        |\n+---------+-------+---------------------------------+\n|       1 |  8-15 | Unassigned                      |\n+---------+-------+---------------------------------+\n|       1 |    16 | SipHash-2-4 [RFC9018] Section 4 |\n+---------+-------+---------------------------------+\n|       1 | 17-32 | Unassigned                      |\n+---------+-------+---------------------------------+\n|   2-239 |  8-32 | Unassigned                      |\n+---------+-------+---------------------------------+\n| 240-254 |  8-32 | Reserved for Private Use        |\n+---------+-------+---------------------------------+\n|     255 |  8-32 | Reserved                        |\n+---------+-------+---------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 21,
      "text": "Table 1: DNS Server Cookie Methods",
      "ja": "表1：DNS Server Cookieメソッド"
    },
    {
      "indent": 0,
      "text": "8. Security and Privacy Considerations",
      "section_title": true,
      "ja": "8. セキュリティとプライバシーの考慮事項"
    },
    {
      "indent": 3,
      "text": "DNS Cookies provide limited protection to DNS servers and clients against a variety of denial-of-service amplification, forgery, or cache-poisoning attacks by off-path attackers. They provide no protection against on-path adversaries that can observe the plaintext DNS traffic. An on-path adversary that can observe a Server Cookie for a client and server interaction can use that Server Cookie for denial-of-service amplification, forgery, or cache-poisoning attacks directed at that client for the lifetime of the Server Cookie.",
      "ja": "DNS Cookieは、オフパス攻撃者によるさまざまなサービス拒否増幅、偽造、キャッシュ中毒の攻撃に対して、DNSサーバーとクライアントへの保護を提供しています。彼らは、平文DNSトラフィックを観察することができる経路上の敵対者に対して保護を提供しない。クライアントとサーバーの対話のためにサーバーCookieを監視できるオンパスの敵氏は、サーバーCookieの有効期間にわたって、サービス拒否増幅、偽造、またはキャッシュ中毒攻撃に対してそのサーバーCookieを使用できます。"
    },
    {
      "indent": 0,
      "text": "8.1. Client Cookie Construction",
      "section_title": true,
      "ja": "8.1. クライアントクッキー建設"
    },
    {
      "indent": 3,
      "text": "In [RFC7873], it was RECOMMENDED to construct a Client Cookie by using a pseudorandom function of the Client IP address, the Server IP address, and a secret quantity known only to the client. The Client IP address was included to ensure that a client could not be tracked if its IP address changes due to privacy mechanisms or otherwise.",
      "ja": "[RFC7873]では、クライアントIPアドレス、サーバーのIPアドレス、およびクライアントのみが知られている秘密の数量の疑似ランダム関数を使用して、クライアントCookieを構築することをお勧めします。クライアントのIPアドレスは、プライバシーメカニズムのためにIPアドレスが変更された場合にクライアントを追跡できないようにするために含まれていました。"
    },
    {
      "indent": 3,
      "text": "In this document, we changed Client Cookie construction to be just 64 bits of entropy newly created for each new upstream server the client connects to. As a consequence, additional care needs to be taken to prevent tracking of clients. To prevent tracking, a new Client Cookie for a server MUST be created whenever the Client IP address changes.",
      "ja": "このドキュメントでは、クライアントのCookieの構造を新しいアップストリームサーバーごとに新しく作成されたエントロピーだけに変更しました。結果として、クライアントの追跡を防ぐために追加の注意が必要です。追跡を防ぐために、クライアントのIPアドレスが変更されるたびに、サーバーの新しいクライアントCookieを作成する必要があります。"
    },
    {
      "indent": 3,
      "text": "Unfortunately, tracking Client IP address changes is impractical with servers that do not support DNS Cookies. To prevent tracking of clients with non-DNS Cookie-supporting servers, a client MUST NOT send a previously sent Client Cookie to a server not known to support DNS Cookies. To prevent the creation of a new Client Cookie for each query to a non-DNS Cookie-supporting server, it is RECOMMENDED to not send a Client Cookie to that server for a certain period, for example five minutes.",
      "ja": "残念ながら、クライアントIPアドレスの変更は、DNS Cookieをサポートしていないサーバーとは実用的です。DNS以外のCookieサポートサーバーを持つクライアントの追跡を防ぐために、クライアントはDNS Cookieをサポートすることが知られていないサーバーに以前に送信されたクライアントCookieを送信してはいけません。各クエリのCookie以外のCookie-Supporting Serverへの新しいクライアントCookieの作成を防ぐために、クライアントCookieをそのサーバーに特定の期間、例えば5分間送信することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "Summarizing:",
      "ja": "要約する："
    },
    {
      "indent": 3,
      "text": "* In order to provide minimal authentication, a client MUST use a different Client Cookie for each different Server IP address.",
      "ja": "* 最小限の認証を提供するためには、クライアントは異なるサーバIPアドレスごとに異なるクライアントCookieを使用する必要があります。"
    },
    {
      "indent": 3,
      "text": "* To prevent tracking of clients, a new Client Cookie MUST be created when the Client IP address changes.",
      "ja": "* クライアントの追跡を防ぐために、クライアントのIPアドレスが変更されたときに新しいクライアントCookieを作成する必要があります。"
    },
    {
      "indent": 3,
      "text": "* To prevent tracking of clients by a non-DNS Cookie-supporting server, a client MUST NOT send a previously sent Client Cookie to a server in the absence of an associated Server Cookie.",
      "ja": "* DNS以外のCookieサポートサーバーによるクライアントの追跡を防ぐために、クライアントは、関連するサーバーCookieがない場合に、以前に送信されたクライアントCookieをサーバーに送信してはなりません。"
    },
    {
      "indent": 3,
      "text": "Note that it is infeasible for a client to detect a change in the public IP address when the client is behind a routing device performing Network Address Translation (NAT). A server may track the public IP address of that routing device performing the NAT. Preventing tracking of the public IP of a NAT-performing routing device is beyond the scope of this document.",
      "ja": "クライアントがネットワークアドレス変換（NAT）を実行するルーティングデバイスの背後にあるときに、クライアントがパブリックIPアドレスの変更を検出することは不可能です。サーバは、NATを実行するそのルーティング装置のパブリックIPアドレスを追跡することができる。NAT実行ルーティングデバイスのパブリックIPの追跡を防ぐことは、この文書の範囲を超えています。"
    },
    {
      "indent": 0,
      "text": "8.2. Server Cookie Construction",
      "section_title": true,
      "ja": "8.2. サーバークッキー建設"
    },
    {
      "indent": 3,
      "text": "[RFC7873] did not give a precise recipe for constructing Server Cookies, but it did recommend usage of a pseudorandom function strong enough to prevent the guessing of cookies. In this document, SipHash-2-4 is assigned as the pseudorandom function to be used for version 1 Server Cookies. SipHash-2-4 is considered sufficiently strong for the immediate future, but predictions about future development in cryptography and cryptanalysis are beyond the scope of this document.",
      "ja": "[RFC7873]サーバーのクッキーを構築するための正確なレシピを与えなかったが、クッキーの推測を防ぐのに十分強い擬似乱数関数の使用を推奨していました。このドキュメントでは、Siphash-2-4は、バージョン1サーバーCookieに使用される疑似ランダム関数として割り当てられています。Siphash-2-4は直接将来にとって十分に強いと考えられていますが、暗号化と暗号解読における将来の発展についての予測はこの文書の範囲を超えています。"
    },
    {
      "indent": 3,
      "text": "The precise structure of version 1 Server Cookies is defined in this document. A portion of the structure is made up of unhashed data elements that are exposed in cleartext to an on-path observer. These unhashed data elements are taken along as input to the SipHash-2-4 function of which the result is the other portion of the Server Cookie, so the unhashed portion of the Server Cookie cannot be changed by an on-path attacker without also recalculating the hashed portion for which the Server Secret needs to be known.",
      "ja": "このドキュメントでは、バージョン1サーバーCookieの正確な構造が定義されています。構造体の一部は、クリアテキストでオンパスオブザーバに露光されている無傷のデータ要素から構成されています。これらの隠されていないデータ要素は、Siphash-2-4関数への入力として取られます。その結果、結果がサーバーCookieの他の部分の一部であるため、再計算することなく、サーバークッキーの隠されていない部分をON-PATH攻撃者によって変更することはできません。サーバ秘密が知られている必要があるハッシュ部分。"
    },
    {
      "indent": 3,
      "text": "One of the elements in the unhashed portion of version 1 Server Cookies is a Timestamp used to prevent Replay Attacks. Servers verifying version 1 Server Cookies need to have access to a reliable time value, one that cannot be altered by an attacker, to compare with the Timestamp value. Furthermore, all servers participating in an anycast set that validate version 1 Server Cookies need to have their clocks synchronized.",
      "ja": "バージョン1サーバークッキーの隠されていない部分の要素の1つは、再生攻撃を防ぐために使用されるタイムスタンプです。バージョン1 Server Cookieを確認するサーバーは、攻撃者によって変更されることができない、タイムスタンプ値と比較することができる信頼できる時間値にアクセスする必要があります。さらに、バージョン1サーバーCookieを検証するAnycastセットに参加しているすべてのサーバーは、クロックが同期される必要があります。"
    },
    {
      "indent": 3,
      "text": "For an on-path adversary observing a Server Cookie (as mentioned in the first paragraph of Section 8), the cleartext Timestamp data element reveals the lifetime during which the observed Server Cookie can be used to attack the client.",
      "ja": "（セクション8の最初の段落で述べたように）サーバーCookieを監視するオンパスの敵対者の場合、ClearText TimesTampデータ要素は、監視対象のサーバーCookieを使用してクライアントを攻撃することができる寿命を明らかにします。"
    },
    {
      "indent": 3,
      "text": "In addition to the Security Considerations in this section, the Security Considerations section of [RFC7873] still applies.",
      "ja": "このセクションのセキュリティ上の考慮事項に加えて、[RFC7873]の[セキュリティ上の考慮事項]セクションはまだ適用されます。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9. 参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC1982] Elz, R. and R. Bush, \"Serial Number Arithmetic\", RFC 1982, DOI 10.17487/RFC1982, August 1996, <https://www.rfc-editor.org/info/rfc1982>.",
      "ja": "[RFC1982] ELZ、R.およびR.ブッシュ、「シリアル番号算術」、RFC 1982、DOI 10.17487 / RFC1982、1996年8月、<https：//www.rfc-editor.org/info/rfc1982>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] BRADNER、S、「RFCSで使用するためのキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https：//www.rfc-editor.org/info/RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC3339] Klyne, G. and C. Newman, \"Date and Time on the Internet: Timestamps\", RFC 3339, DOI 10.17487/RFC3339, July 2002, <https://www.rfc-editor.org/info/rfc3339>.",
      "ja": "[RFC3339] Klyne、G.およびC. NEWMAN、「インターネット上の日時：Timestamps」、RFC 3339、DOI 10.17487 / RFC3339、2002年7月、<https：//www.rfc-editor.org/info/rfc3339>。"
    },
    {
      "indent": 3,
      "text": "[RFC7873] Eastlake 3rd, D. and M. Andrews, \"Domain Name System (DNS) Cookies\", RFC 7873, DOI 10.17487/RFC7873, May 2016, <https://www.rfc-editor.org/info/rfc7873>.",
      "ja": "[RFC7873]イーストレイク3RD、D.およびM. Andrews、「ドメインネームシステム（DNS）クッキー」、RFC 7873、DOI 10.17487 / RFC7873、2016年5月、<https：//www.rfc-editor.org/info/rfc7873>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B、「RFC 2119キーワードの大文字の曖昧さ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https：//www.rfc-editor.org/info/RFC8174>。"
    },
    {
      "indent": 3,
      "text": "[SipHash-2-4] Aumasson, J. and D. J. Bernstein, \"SipHash: A Fast Short-Input PRF\", Progress in Cryptology - INDOCRYPT 2012, Lecture Notes in Computer Science, vol. 7668, December 2012, <https://doi.org/10.1007/978-3-642-34931-7_28>.",
      "ja": "[Siphash-2-4] Aumasson、J.およびD. J.Bernstein、 \"Siphash：高速短入力PRF\"、暗号化の進捗状況 -  IndoCrypt 2012、Computer Science、Vol。7668、2012年12月、<https：//doi.org/10.1007/978-3-642-34931-7_28>。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC8981] Gont, F., Krishnan, S., Narten, T., and R. Draves, \"Temporary Address Extensions for Stateless Address Autoconfiguration in IPv6\", RFC 8981, DOI 10.17487/RFC8981, February 2021, <https://www.rfc-editor.org/info/rfc8981>.",
      "ja": "[RFC8981] Gont、F.、Krishnan、S.、Narten、T.、およびR. Draves、「IPv6のステートレスアドレス自動設定のための一時アドレス拡張機能」、RFC 8981、DOI 10.17487 / RFC8981、2021年2月、<https：//www.rfc-editor.org/info/rfc8981>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Test Vectors",
      "section_title": true,
      "ja": "付録A.テストベクトル"
    },
    {
      "indent": 0,
      "text": "A.1. Learning a New Server Cookie",
      "section_title": true,
      "ja": "A.1. 新しいサーバークッキーを学ぶ"
    },
    {
      "indent": 3,
      "text": "A resolver (client) sending from IPv4 address 198.51.100.100 sends a query for \"example.com\" to an authoritative server listening on 192.0.2.53 from which it has not yet learned the server cookie.",
      "ja": "IPv4 Address 198.51.100.100からのリゾルバ（クライアント）送信は、 \"example.com\"のクエリを192.0.2.53でリスニングする権限サーバーに送信します。そこからServer Cookieがまだ学んでいません。"
    },
    {
      "indent": 3,
      "text": "The DNS requests and replies shown in this appendix are in a \"dig\"- like format. The content of the DNS COOKIE Option is shown in hexadecimal format after \"; COOKIE:\".",
      "ja": "この付録に表示されているDNS要求と返信は、「DIG」のような形式です。DNS Cookieオプションの内容は、 \"; cookie：\"の後に16進形式で表示されます。"
    },
    {
      "indent": 3,
      "text": ";; Sending:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 57406\n;; flags:; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: 2464c4abcf10c957\n;; QUESTION SECTION:\n;example.com.                IN      A",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; QUERY SIZE: 52",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The authoritative nameserver (server) is configured with the following secret: e5e973e5a6b2a43f48e7dc849e37bfcf (as hex data).",
      "ja": "信頼できるネームサーバ（サーバ）は、次のシークレットで設定されています.E5E973E5A6B2A43F48E7DC849E37BFCF（HEXデータとして）。"
    },
    {
      "indent": 3,
      "text": "It receives the query on Wed Jun 5 10:53:05 UTC 2019.",
      "ja": "WED 50:53:05 UTC 2019でクエリを受け取ります。"
    },
    {
      "indent": 3,
      "text": "The content of the DNS COOKIE Option that the server will return is shown below in hexadecimal format after \"; COOKIE:\".",
      "ja": "サーバーが戻ってくるDNS Cookieオプションの内容は、 \"; cookie：\"の後に16進形式で以下に示されています。"
    },
    {
      "indent": 3,
      "text": "The Timestamp field Section 4.3 in the returned Server Cookie has value 1559731985. In the format described in [RFC3339], this is 2019-06-05 10:53:05+00:00.",
      "ja": "返されたサーバーCookieのタイムスタンプフィールドセクション4.3には、値1559731985があります。[RFC3339]で説明されている形式では、これは2019-06-05 10:53:05 00:00です。"
    },
    {
      "indent": 3,
      "text": ";; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 57406\n;; flags: qr aa; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: 2464c4abcf10c957010000005cf79f111f8130c3eee29480 (good)\n;; QUESTION SECTION:\n;example.com.                IN      A",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; ANSWER SECTION: example.com. 86400 IN A 192.0.2.34",
      "ja": ";;回答セクション：example.com。192.0.2.34で86400"
    },
    {
      "indent": 3,
      "text": ";; Query time: 6 msec\n;; SERVER: 192.0.2.53#53(192.0.2.53)\n;; WHEN: Wed Jun  5 10:53:05 UTC 2019\n;; MSD SIZE  rcvd: 84",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2. The Same Client Learning a Renewed (Fresh) Server Cookie",
      "section_title": true,
      "ja": "A.2. 同じクライアントは更新された（新鮮な）サーバークッキーを学びます"
    },
    {
      "indent": 3,
      "text": "40 minutes later, the same resolver (client) queries the same server for \"example.org\". It reuses the Server Cookie it learned in the previous query.",
      "ja": "40分後、同じレゾルバ（クライアント）が「example.org」に同じサーバーを問い合わせます。以前のクエリで学んだサーバークッキーを再利用します。"
    },
    {
      "indent": 3,
      "text": "The Timestamp field in that previously learned Server Cookie, which is now sent along in the request, was and is 1559731985. In the format of [RFC3339], this is 2019-06-05 10:53:05+00:00.",
      "ja": "現在、リクエストに沿って送信された、これ以前に学習されたServer CookieのTimestampフィールドは、1559731985です。[RFC3339]の形式では、これは2019-06-05 10:53:05 00:00です。"
    },
    {
      "indent": 3,
      "text": ";; Sending:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 50939\n;; flags:; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: 2464c4abcf10c957010000005cf79f111f8130c3eee29480\n;; QUESTION SECTION:\n;example.org.                IN      A",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; QUERY SIZE: 52",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The authoritative nameserver (server) now generates a new Server Cookie. The server SHOULD do this because it can see the Server Cookie sent by the client is older than half an hour (Section 4.3), but it is also fine for a server to generate a new Server Cookie sooner or even for every answer.",
      "ja": "権限のあるNameServer（サーバー）は、新しいサーバーCookieを生成します。クライアントによって送信されたサーバーCookieが1時間以上経過しているのがわかりますが、サーバーはこれを行うべきです（セクション4.3）、サーバーが早くまたはすべての答えに対しても新しいサーバークッキーを生成するのも問題ありません。"
    },
    {
      "indent": 3,
      "text": "The Timestamp field in the returned new Server Cookie has value 1559734385, which, in the format of [RFC3339], is 2019-06-05 11:33:05+00:00.",
      "ja": "返された新しいサーバーCookieのTimestampフィールドには、[RFC3339]の形式で、2019-06-05 11:33:05 00:00です。"
    },
    {
      "indent": 3,
      "text": ";; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 50939\n;; flags: qr aa; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: 2464c4abcf10c957010000005cf7a871d4a564a1442aca77 (good)\n;; QUESTION SECTION:\n;example.org.                IN      A",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; ANSWER SECTION: example.org. 86400 IN A 192.0.2.34",
      "ja": ";;回答セクション：example.org。192.0.2.34で86400"
    },
    {
      "indent": 3,
      "text": ";; Query time: 6 msec\n;; SERVER: 192.0.2.53#53(192.0.2.53)\n;; WHEN: Wed Jun  5 11:33:05 UTC 2019\n;; MSD SIZE  rcvd: 84",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3. Another Client Learning a Renewed Server Cookie",
      "section_title": true,
      "ja": "A.3. もう1つのクライアントは更新されたサーバークッキーを学びました"
    },
    {
      "indent": 3,
      "text": "Another resolver (client) with IPv4 address 203.0.113.203 sends a request to the same server with a valid Server Cookie that it learned before (on Wed Jun 5 09:46:25 UTC 2019).",
      "ja": "IPv4アドレス203.0.113.203を搭載した別のリゾルバ（クライアント）は、前に学んだと同じサーバーにリクエストを送信します（50:46:25 UTC 2019）。"
    },
    {
      "indent": 3,
      "text": "The Timestamp field of the Server Cookie in the request has value 1559727985, which, in the format of [RFC3339], is 2019-06-05 09:46:25+00:00.",
      "ja": "リクエストのサーバーCookieのTimestampフィールドには、[RFC3339]の形式で、2019-06-05 09:46:25 00:00です。"
    },
    {
      "indent": 3,
      "text": "Note that the Server Cookie has Reserved bytes set but is still valid with the configured secret; the Hash part is calculated taking along the Reserved bytes.",
      "ja": "Server Cookieは予約されたバイトを設定したが、設定された秘密ではまだ有効です。ハッシュ部品は予約バイトに沿って計算されます。"
    },
    {
      "indent": 3,
      "text": ";; Sending:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 34736\n;; flags:; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: fc93fc62807ddb8601abcdef5cf78f71a314227b6679ebf5\n;; QUESTION SECTION:\n;example.com.                IN      A",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; QUERY SIZE: 52",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The authoritative nameserver (server) replies with a freshly generated Server Cookie for this client conformant with this specification, i.e., with the Reserved bits set to zero.",
      "ja": "正式なネームサーバ（サーバ）は、このクライアントのためにこのクライアントのために新たに生成されたサーバーCookieに応答して、この仕様、すなわち予約ビットがゼロに設定されている。"
    },
    {
      "indent": 3,
      "text": "The Timestamp field in the returned new Server Cookie has value 1559734700, which, in the format of [RFC3339], is 2019-06-05 11:38:20+00:00.",
      "ja": "返された新しいサーバーCookieのTimestampフィールドには、[RFC3339]の形式で、2019-06-05 11:38:20 00:00です。"
    },
    {
      "indent": 3,
      "text": ";; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 34736\n;; flags: qr aa; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: fc93fc62807ddb86010000005cf7a9acf73a7810aca2381e (good)\n;; QUESTION SECTION:\n;example.com.                IN      A",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; ANSWER SECTION: example.com. 86400 IN A 192.0.2.34",
      "ja": ";;回答セクション：example.com。192.0.2.34で86400"
    },
    {
      "indent": 3,
      "text": ";; Query time: 6 msec\n;; SERVER: 192.0.2.53#53(192.0.2.53)\n;; WHEN: Wed Jun  5 11:38:20 UTC 2019\n;; MSD SIZE  rcvd: 84",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4. IPv6 Query with Rolled Over Secret",
      "section_title": true,
      "ja": "A.4. 秘密の上に転がされたIPv6クエリ"
    },
    {
      "indent": 3,
      "text": "The query below is from a client with IPv6 address 2001:db8:220:1:59de:d0f4:8769:82b8 to a server with IPv6 address 2001:db8:8f::53. The client has learned a valid Server Cookie before (on Wed Jun 5 13:36:57 UTC 2019) when the Server had the secret: dd3bdf9344b678b185a6f5cb60fca715. The server now uses a new secret, but it can still validate the Server Cookie provided by the client as the old secret has not expired yet.",
      "ja": "以下のクエリは、IPv6アドレス2001を搭載したクライアントからのクライアントからのものです.DB8：8F :: 53を備えたサーバーには、DB8：220：1：59de：8769：82B8。サーバーが秘密を持っていたときに、クライアントは有効なサーバークッキーを学んでいます.DD3BDF9344B678B185A6F5CB60FCA715。サーバーは新しいシークレットを使用するようになりましたが、古い秘密がまだ期限切れになっていないため、クライアントによって提供されるサーバーCookieを検証できます。"
    },
    {
      "indent": 3,
      "text": "The Timestamp field in the Server Cookie in the request has value 1559741817, which, in the format of [RFC3339], is 2019-06-05 13:36:57+00:00.",
      "ja": "リクエストのサーバーCookieのTimestampフィールドには、[RFC3339]の形式で、2019-06-05 13:36:57 00:00です。"
    },
    {
      "indent": 3,
      "text": ";; Sending:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 6774\n;; flags:; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: 22681ab97d52c298010000005cf7c57926556bd0934c72f8\n;; QUESTION SECTION:\n;example.net.                IN      A",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; QUERY SIZE: 52",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The authoritative nameserver (server) replies with a freshly generated server cookie for this client with its new secret: 445536bcd2513298075a5d379663c962.",
      "ja": "権威あるNameServer（サーバー）は、このクライアントの新たに生成されたサーバーCookieに新しい秘密を持つ新しいServer Cookieに返信します.445536BCD2513298075A5D379663C962。"
    },
    {
      "indent": 3,
      "text": "The Timestamp field in the returned new Server Cookie has value 1559741961, which, in the format of [RFC3339], is 2019-06-05 13:39:21+00:00.",
      "ja": "返された新しいサーバーCookieのTimestampフィールドには、[RFC3339]の形式で、2019-06-05 13:39:21 00:00です。"
    },
    {
      "indent": 3,
      "text": ";; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 6774\n;; flags: qr aa; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n; COOKIE: 22681ab97d52c298010000005cf7c609a6bb79d16625507a (good)\n;; QUESTION SECTION:\n;example.net.                IN      A",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": ";; ANSWER SECTION: example.net. 86400 IN A 192.0.2.34",
      "ja": ";;回答セクション：example.net。192.0.2.34で86400"
    },
    {
      "indent": 3,
      "text": ";; Query time: 6 msec\n;; SERVER: 2001:db8:8f::53#53(2001:db8:8f::53)\n;; WHEN: Wed Jun  5 13:36:57 UTC 2019\n;; MSD SIZE  rcvd: 84",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix B. Implementation Status",
      "section_title": true,
      "ja": "付録B.実装状況"
    },
    {
      "indent": 3,
      "text": "At the time of writing, BIND from version 9.16 and Knot DNS from version 2.9.0 create Server Cookies according to the recipe described in this document. Unbound and NSD have a Proof-of-Concept implementation that has been tested for interoperability during the hackathon at IETF 104 in Prague. Construction of privacy maintaining Client Cookies according to the directions in this document have been implemented in the getdns library and will be in the upcoming getdns-1.6.1 release and in Stubby version 0.3.1.",
      "ja": "書き込み時に、バージョン9.16からバインドし、バージョン2.9.0からのノットDNSからバインドします。このドキュメントに記載されているレシピに従ってサーバークッキーを作成します。未結合でNSDは、プラハのIETF 104でのハッカソン中の相互運用性についてテストされてきた概念実証実証を行います。この文書の指示に従ってクライアントクッキーを維持するプライバシーの構築は、GetDNSライブラリに実装されており、今後のGetDNS-1.6.1リリースおよびスタビーバージョン0.3.1にあります。"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to Witold Krecicki and Pieter Lexis for valuable input, suggestions, text, and above all for implementing a prototype of an interoperable DNS Cookie in Bind9, Knot, and PowerDNS during the hackathon at IETF 104 in Prague. Thanks for valuable input and suggestions go to Ralph Dolmans, Bob Harold, Daniel Salzman, Martin Hoffmann, Mukund Sivaraman, Petr Spacek, Loganaden Velvindron, Bob Harold, Philip Homburg, Tim Wicinski, and Brian Dickson.",
      "ja": "PragueのHackathonでは、BIND9、結び目、およびPowerDNの間の相互運用可能なDNS Cookieのプロトタイプを実装するためのKrecickiとPieter LexisのためにKrecickiとPieter Lexisがありがとうございます。貴重な入力や提案をおかげで、ラルフ・ドルマン、ボブ・ハロルド、ダニエル・サルツマン、Martin Hoffmann、Mukund Sivaraman、Petr Spacek、Loganaden Velvindron、Bob Harold、Philip Homburg、Tim Wicinski、Brian Dicksonへ。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者の住所"
    },
    {
      "indent": 3,
      "text": "Ondrej Sury Internet Systems Consortium Czechia",
      "ja": "Ondrej Sure Internet Systemsコンソーシアムチェコ社"
    },
    {
      "indent": 3,
      "text": "Email: ondrej@isc.org",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Willem Toorop NLnet Labs Science Park 400 1098 XH Amsterdam Netherlands",
      "ja": "Willem Toorop NLNet Labs Science Park 400 1098 XHアムステルダムオランダ"
    },
    {
      "indent": 3,
      "text": "Email: willem@nlnetlabs.nl",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Donald E. Eastlake 3rd Futurewei Technologies 2386 Panoramic Circle Apopka, FL 32703 United States of America",
      "ja": "Donald E.イーストレイク3RDフューチャーワイテクノロジーズ2386パノラマサークルアポッカ、FL 32703アメリカ合衆国"
    },
    {
      "indent": 3,
      "text": "Phone: +1-508-333-2270\nEmail: d3e3e3@gmail.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Mark Andrews Internet Systems Consortium 950 Charter Street Redwood City, CA 94063 United States of America",
      "ja": "Mark Andrewsインターネットシステムコンソーシアム950 Charter Street Redwood City、CA 94063アメリカ"
    },
    {
      "indent": 3,
      "text": "Email: marka@isc.org",
      "raw": true,
      "ja": ""
    }
  ]
}