{
  "title": {
    "text": "RFC 5277 - NETCONF Event Notifications",
    "ja": "RFC 5277 - NetConfイベント通知"
  },
  "number": 5277,
  "created_at": "2021-04-10 20:11:41.604040+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                        S. Chisholm\nRequest for Comments: 5277                                        Nortel\nCategory: Standards Track                                     H. Trevino\n                                                                   Cisco\n                                                               July 2008",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 22,
      "text": "NETCONF Event Notifications",
      "ja": "NetConfイベント通知"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "このドキュメントは、インターネットコミュニティのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態と状況については、「Internet Official Protocol Standards」（STD 1）の現在の版を参照してください。このメモの分布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document defines mechanisms that provide an asynchronous message notification delivery service for the Network Configuration protocol (NETCONF). This is an optional capability built on top of the base NETCONF definition. This document defines the capabilities and operations necessary to support this service.",
      "ja": "この文書は、ネットワーク構成プロトコル（NETCONF）の非同期メッセージ通知配信サービスを提供するメカニズムを定義しています。これは、ベースのNetConf定義の上に構築されたオプションの機能です。このドキュメントは、このサービスをサポートするために必要な機能と操作を定義しています。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n  1.1.  Definition of Terms  . . . . . . . . . . . . . . . . . . .  3\n  1.2.  Motivation . . . . . . . . . . . . . . . . . . . . . . . .  4\n  1.3.  Event Notifications in NETCONF . . . . . . . . . . . . . .  5\n2.  Notification-Related Operations  . . . . . . . . . . . . . . .  5\n  2.1.  Subscribing to Receive Event Notifications . . . . . . . .  5\n    2.1.1.  <create-subscription>  . . . . . . . . . . . . . . . .  6\n  2.2.  Sending Event Notifications  . . . . . . . . . . . . . . .  9\n    2.2.1.  <notification> . . . . . . . . . . . . . . . . . . . .  9\n  2.3.  Terminating the Subscription . . . . . . . . . . . . . . .  9\n3.  Supporting Concepts  . . . . . . . . . . . . . . . . . . . . . 10\n  3.1.  Capabilities Exchange  . . . . . . . . . . . . . . . . . . 10\n    3.1.1.  Capability Identifier  . . . . . . . . . . . . . . . . 10\n    3.1.2.  Capability Example . . . . . . . . . . . . . . . . . . 10\n  3.2.  Event Streams  . . . . . . . . . . . . . . . . . . . . . . 10\n    3.2.1.  Event Stream Definition  . . . . . . . . . . . . . . . 12\n    3.2.2.  Event Stream Content Format  . . . . . . . . . . . . . 12\n    3.2.3.  Default Event Stream . . . . . . . . . . . . . . . . . 12\n    3.2.4.  Event Stream Sources . . . . . . . . . . . . . . . . . 12\n    3.2.5.  Event Stream Discovery . . . . . . . . . . . . . . . . 12\n  3.3.  Notification Replay  . . . . . . . . . . . . . . . . . . . 15\n    3.3.1.  Overview . . . . . . . . . . . . . . . . . . . . . . . 15\n    3.3.2.  Creating a Subscription with Replay  . . . . . . . . . 16\n  3.4.  Notification Management Schema . . . . . . . . . . . . . . 16\n  3.5.  Subscriptions Data . . . . . . . . . . . . . . . . . . . . 20\n  3.6.  Filter Mechanics . . . . . . . . . . . . . . . . . . . . . 20\n    3.6.1.  Filtering  . . . . . . . . . . . . . . . . . . . . . . 20\n  3.7.  Message Flow . . . . . . . . . . . . . . . . . . . . . . . 20\n4.  XML Schema for Event Notifications . . . . . . . . . . . . . . 22\n5.  Filtering Examples . . . . . . . . . . . . . . . . . . . . . . 26\n  5.1.  Subtree Filtering  . . . . . . . . . . . . . . . . . . . . 28\n  5.2.  XPATH Filters  . . . . . . . . . . . . . . . . . . . . . . 29\n6.  Interleave Capability  . . . . . . . . . . . . . . . . . . . . 30\n  6.1.  Description  . . . . . . . . . . . . . . . . . . . . . . . 30\n  6.2.  Dependencies . . . . . . . . . . . . . . . . . . . . . . . 30\n  6.3.  Capability Identifier  . . . . . . . . . . . . . . . . . . 30\n  6.4.  New Operations . . . . . . . . . . . . . . . . . . . . . . 31\n  6.5.  Modifications to Existing Operations . . . . . . . . . . . 31\n7.  Security Considerations  . . . . . . . . . . . . . . . . . . . 31\n8.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 32\n9.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 33\n10. Normative References . . . . . . . . . . . . . . . . . . . . . 33",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "[NETCONF] can be conceptually partitioned into four layers:",
      "ja": "[NETCONF]は概念的に4つのレイヤーに分割できます。"
    },
    {
      "indent": 4,
      "text": "    Layer                            Example\n+-------------+      +-------------------------------------------+\n|   Content   |      |     Configuration data                    |\n+-------------+      +-------------------------------------------+\n          |                           |\n+-------------+      +-------------------------------------------+\n| Operations  |      |<get-config>, <edit-config>, <notification>|\n+-------------+      +-------------------------------------------+\n          |                           |                    |\n+-------------+      +-----------------------------+       |\n|     RPC     |      |    <rpc>, <rpc-reply>       |       |\n+-------------+      +-----------------------------+       |\n          |                           |                    |\n+-------------+      +-------------------------------------------+\n|  Transport  |      |   BEEP, SSH, SSL, console                 |\n|  Protocol   |      |                                           |\n+-------------+      +-------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 33,
      "text": "Figure 1",
      "ja": "図1"
    },
    {
      "indent": 3,
      "text": "This document defines mechanisms that provide an asynchronous message notification delivery service for the [NETCONF] protocol. This is an optional capability built on top of the base NETCONF definition. This memo defines the capabilities and operations necessary to support this service.",
      "ja": "この文書は、[NETCONF]プロトコルの非同期メッセージ通知配信サービスを提供するメカニズムを定義しています。これは、ベースのNetConf定義の上に構築されたオプションの機能です。このメモは、このサービスをサポートするために必要な機能と操作を定義しています。"
    },
    {
      "indent": 0,
      "text": "1.1. Definition of Terms",
      "section_title": true,
      "ja": "1.1. 用語の定義"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "「必須」、「必須」、「必要ではない」、「しない」、「推奨する」、「推奨する」、「5月」、および「オプション」、「オプション」、「オプション」、「オプション」、「オプション」、「オプション」、[RFC2119]に記載されているように解釈されること。"
    },
    {
      "indent": 3,
      "text": "Element: An [XML] Element.",
      "ja": "要素：[XML]要素。"
    },
    {
      "indent": 3,
      "text": "Subscription: An agreement and method to receive event notifications over a NETCONF session. A concept related to the delivery of notifications (if there are any to send) involving destination and selection of notifications. It is bound to the lifetime of a session.",
      "ja": "サブスクリプション：NetConfセッションを介してイベント通知を受信するための合意と方法。宛先を含む通知の配信に関連する概念（送信先がある場合）通知の宛先と選択。セッションの有効期間にバインドされています。"
    },
    {
      "indent": 3,
      "text": "Operation: This term is used to refer to NETCONF protocol operations [NETCONF]. Within this document, operation refers to NETCONF protocol operations defined in support of NETCONF notifications.",
      "ja": "操作：この用語は、NetConfプロトコル操作[NETCONF]を参照するために使用されます。この文書の中で、操作はNetConf通知をサポートしているNetConfプロトコル操作を指します。"
    },
    {
      "indent": 3,
      "text": "Event: An event is something that happens that may be of interest - a configuration change, a fault, a change in status, crossing a threshold, or an external input to the system, for example. Often, this results in an asynchronous message, sometimes referred to as a notification or event notification, being sent to interested parties to notify them that this event has occurred.",
      "ja": "イベント：イベントは、例えば、設定変更、障害、ステータスの変更、しきい値の交差、またはシステムへの外部入力など、起こり得るものです。多くの場合、これにより、このイベントが発生したことを知らせるために、利害関係者に送信されている、通知またはイベント通知と呼ばれる非同期メッセージが発生します。"
    },
    {
      "indent": 3,
      "text": "Replay: The ability to send/re-send previously logged notifications upon request. These notifications are sent asynchronously. This feature is implemented by the NETCONF server and invoked by the NETCONF client.",
      "ja": "再生：要求に応じて以前に記録された通知を送信/再送信する機能。これらの通知は非同期的に送信されます。この機能はNetConfサーバーによって実装され、NetConfクライアントによって呼び出されます。"
    },
    {
      "indent": 3,
      "text": "Stream: An event stream is a set of event notifications matching some forwarding criteria and available to NETCONF clients for subscription.",
      "ja": "ストリーム：イベントストリームは、いくつかの転送基準と一致し、サブスクリプションのNetConfクライアントに使用可能な一連のイベント通知です。"
    },
    {
      "indent": 3,
      "text": "Filter: A parameter that indicates which subset of all possible events are of interest. A filter is defined as one or more filter elements [NETCONF], each of which identifies a portion of the overall filter.",
      "ja": "フィルタ：すべての可能なイベントのどのサブセットが興味があるかを示すパラメータ。フィルタは、1つ以上のフィルタ要素[NETCONF]として定義され、各フィルタはフィルタ全体の一部を識別する。"
    },
    {
      "indent": 0,
      "text": "1.2. Motivation",
      "section_title": true,
      "ja": "1.2. 動機"
    },
    {
      "indent": 3,
      "text": "The motivation for this work is to enable the sending of asynchronous messages that are consistent with the data model (content) and security model used within a NETCONF implementation.",
      "ja": "この作業の動機は、NetConf実装内で使用されるデータモデル（コンテンツ）とセキュリティモデルと一致する非同期メッセージの送信を可能にすることです。"
    },
    {
      "indent": 3,
      "text": "The scope of the work aims at meeting the following operational needs:",
      "ja": "作業の範囲は、以下の運用上のニーズを満たすことを目的としています。"
    },
    {
      "indent": 3,
      "text": "o Initial release should ensure it supports notifications in support of configuration operations.",
      "ja": "o 初期リリースは、構成操作をサポートしている通知を確実にサポートしていることを確認してください。"
    },
    {
      "indent": 3,
      "text": "o It should be possible to use the same data model for notifications as for configuration operations.",
      "ja": "o 構成操作に関して通知に同じデータモデルを使用することは可能であるべきです。"
    },
    {
      "indent": 3,
      "text": "o The solution should support a reasonable message size limit (i.e., not too short).",
      "ja": "o 解決策は、合理的なメッセージサイズ制限をサポートする必要があります（すなわち、短すぎない）。"
    },
    {
      "indent": 3,
      "text": "o The notifications should be carried over a connection-oriented delivery mechanism.",
      "ja": "o 通知は、接続指向配信メカニズムを介して運ばれるべきです。"
    },
    {
      "indent": 3,
      "text": "o A subscription mechanism for notifications should be provided. This takes into account that a NETCONF server does not send notifications before being asked to do so, and that it is the NETCONF client who initiates the flow of notifications.",
      "ja": "o 通知の購読メカニズムを提供する必要があります。これは、NETCONFサーバが通知を送信する前に通知を送信しないこと、および通知の流れを開始するNetConfクライアントであることを考慮に入れてください。"
    },
    {
      "indent": 3,
      "text": "o A filtering mechanism for sending notifications should be put in place within the NETCONF server.",
      "ja": "o 通知を送信するためのフィルタリングメカニズムは、NETCONFサーバー内の場所に配置する必要があります。"
    },
    {
      "indent": 3,
      "text": "o The information contained in a notification should be sufficient so that it can be analyzed independent of the transport mechanism. In other words, the data content fully describes a notification; protocol information is not needed to understand a notification.",
      "ja": "o 通知に含まれる情報は、トランスポートメカニズムとは無関係に分析できるように十分である必要があります。言い換えれば、データコンテンツは通知を完全に記述する。通知を理解するためにプロトコル情報は必要ありません。"
    },
    {
      "indent": 3,
      "text": "o The server should have the capability to replay locally logged notifications.",
      "ja": "o サーバーにローカルにログに記録された通知を再生する機能があります。"
    },
    {
      "indent": 0,
      "text": "1.3. Event Notifications in NETCONF",
      "section_title": true,
      "ja": "1.3. NetConfのイベント通知"
    },
    {
      "indent": 3,
      "text": "This memo defines a mechanism whereby the NETCONF client indicates interest in receiving event notifications from a NETCONF server by creating a subscription to receive event notifications. The NETCONF server replies to indicate whether the subscription request was successful and, if it was successful, begins sending the event notifications to the NETCONF client as the events occur within the system. These event notifications will continue to be sent until either the NETCONF session is terminated or the subscription terminates for some other reason. The event notification subscription allows a number of options to enable the NETCONF client to specify which events are of interest. These are specified when the subscription is created. Note that a subscription cannot be modified once created.",
      "ja": "このメモは、NetConfクライアントがイベント通知を受信するためのサブスクリプションを作成することによって、NetConfサーバからのイベント通知を受信するための関心を示しているメカニズムを定義します。NetConfサーバーは、購読要求が成功したかどうかを示すために応答し、成功した場合は、システム内でイベントが発生するため、NetConfクライアントにイベント通知を送信します。これらのイベント通知は、NetConfセッションが終了するか、他の理由でサブスクリプションが終了するまで、引き続き送信されます。イベント通知サブスクリプションにより、NetConfクライアントがどのイベントが興味があるかを指定できるようにするためのいくつかのオプションがあります。これらはサブスクリプションが作成されたときに指定されます。購読を作成すると、購読を変更することはできません。"
    },
    {
      "indent": 3,
      "text": "The NETCONF server MUST accept and process the <close-session> operation, even while the notification subscription is active. The NETCONF server MAY accept and process other commands; otherwise, they will be rejected and the server MUST send a 'resource-denied' error. A NETCONF server advertises support of the ability to process other commands via the :interleave capability.",
      "ja": "NetConfサーバは、通知サブスクリプションがアクティブな間でも、<close-session>操作を受け入れて処理する必要があります。NETCONFサーバーは他のコマンドを受け入れて処理することができます。それ以外の場合、それらは拒否され、サーバーは「リソース拒否」エラーを送信する必要があります。NETCONFサーバーは、：インターリーブ機能を介して他のコマンドを処理する機能をサポートしています。"
    },
    {
      "indent": 0,
      "text": "2. Notification-Related Operations",
      "section_title": true,
      "ja": "2. 通知関連の業務"
    },
    {
      "indent": 0,
      "text": "2.1. Subscribing to Receive Event Notifications",
      "section_title": true,
      "ja": "2.1. イベント通知を受信するための購読"
    },
    {
      "indent": 3,
      "text": "The event notification subscription is initiated by the NETCONF client and responded to by the NETCONF server. A subscription is bound to a single stream for the lifetime of the subscription. When the event notification subscription is created, the events of interest are specified.",
      "ja": "イベント通知サブスクリプションは、NetConfクライアントによって開始され、NetConfサーバによって応答されます。サブスクリプションは、サブスクリプションの有効期間の単一のストリームにバインドされています。イベント通知サブスクリプションが作成されると、関心のあるイベントが指定されます。"
    },
    {
      "indent": 3,
      "text": "Content for an event notification subscription can be selected by applying user-specified filters.",
      "ja": "イベント通知サブスクリプションの内容は、ユーザー指定のフィルタを適用することで選択できます。"
    },
    {
      "indent": 0,
      "text": "2.1.1. <create-subscription>",
      "section_title": true,
      "ja": "2.1.1. <create-subscription>"
    },
    {
      "indent": 3,
      "text": "Description:",
      "ja": "説明："
    },
    {
      "indent": 6,
      "text": "This operation initiates an event notification subscription that will send asynchronous event notifications to the initiator of the command until the subscription terminates.",
      "ja": "この操作は、サブスクリプションが終了するまで、コマンドのイニシエータに非同期イベント通知を送信するイベント通知サブスクリプションを開始します。"
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "Stream:",
      "ja": "ストリーム："
    },
    {
      "indent": 9,
      "text": "An optional parameter, <stream>, that indicates which stream of events is of interest. If not present, events in the default NETCONF stream will be sent.",
      "ja": "オプションのパラメータ<stream>。それはどのイベントのストリームが興味のあるかを示します。存在しない場合、デフォルトのNetConfストリーム内のイベントが送信されます。"
    },
    {
      "indent": 6,
      "text": "Filter:",
      "ja": "フィルタ："
    },
    {
      "indent": 9,
      "text": "An optional parameter, <filter>, that indicates which subset of all possible events is of interest. The format of this parameter is the same as that of the filter parameter in the NETCONF protocol operations. If not present, all events not precluded by other parameters will be sent. See section 3.6 for more information on filters.",
      "ja": "オプションのパラメータ<filter>。すべての可能なイベントのどのサブセットが興味があるかを示します。このパラメータの形式は、NETCONFプロトコル操作のフィルタパラメータの形式と同じです。存在しない場合、他のパラメータによって排除されないすべてのイベントが送信されます。フィルタの詳細については、セクション3.6を参照してください。"
    },
    {
      "indent": 6,
      "text": "Start Time:",
      "ja": "始まる時間："
    },
    {
      "indent": 9,
      "text": "A parameter, <startTime>, used to trigger the replay feature and indicate that the replay should start at the time specified. If <startTime> is not present, this is not a replay subscription. It is not valid to specify start times that are later than the current time. If the <startTime> specified is earlier than the log can support, the replay will begin with the earliest available notification. This parameter is of type dateTime and compliant to [RFC3339]. Implementations must support time zones.",
      "ja": "再生機能をトリガし、指定された時間から再生を開始することを示すために使用されるパラメータ<startTime>。<startTime>が存在しない場合、これは再生購読ではありません。現在の時刻以降の開始時間を指定することは無効です。指定された<startTime>がログがサポートできないより前の場合、再生は利用可能な通知で始まります。このパラメータはDateTime型と[RFC3339]に準拠しています。実装はタイムゾーンをサポートする必要があります。"
    },
    {
      "indent": 6,
      "text": "Stop Time:",
      "ja": "停止時間："
    },
    {
      "indent": 9,
      "text": "An optional parameter, <stopTime>, used with the optional replay feature to indicate the newest notifications of interest. If <stopTime> is not present, the notifications will continue until the subscription is terminated. Must be used with and be later than <startTime>. Values of <stopTime> in the future are valid. This parameter is of type dateTime and compliant to [RFC3339]. Implementations must support time zones.",
      "ja": "オプションのパラメータ<stoptime>は、最新の関心のある通知を示すためにオプションの再生機能で使用されます。<stoptime>が存在しない場合、サブスクリプションが終了するまで通知は続行されます。<startTime>以降で使用する必要があります。将来の<stoptime>の値は有効です。このパラメータはDateTime型と[RFC3339]に準拠しています。実装はタイムゾーンをサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": "Positive Response:",
      "ja": "肯定的な反応："
    },
    {
      "indent": 6,
      "text": "If the NETCONF server can satisfy the request, the server sends an <ok> element.",
      "ja": "NetConfサーバが要求を満たすことができる場合、サーバは<ok>要素を送信する。"
    },
    {
      "indent": 3,
      "text": "Negative Response:",
      "ja": "否定的な応答："
    },
    {
      "indent": 6,
      "text": "An <rpc-error> element is included within the <rpc-reply> if the request cannot be completed for any reason. Subscription requests will fail if a filter with invalid syntax is provided or if the name of a non-existent stream is provided.",
      "ja": "<rpc-error>要素は、要求が何らかの理由で完了できない場合は<rpc-reply>に含まれています。無効な構文を持つフィルタが提供されている場合、または存在しないストリームの名前が指定されている場合は、サブスクリプション要求が失敗します。"
    },
    {
      "indent": 6,
      "text": "If a <stopTime> is specified in a request without having specified a <startTime>, the following error is returned:",
      "ja": "<startTime>を指定せずに要求に<stoptime>が指定されている場合は、次のエラーが返されます。"
    },
    {
      "indent": 9,
      "text": "Tag: missing-element",
      "ja": "タグ：欠落要素"
    },
    {
      "indent": 9,
      "text": "Error-type: protocol",
      "ja": "エラータイプ：プロトコル"
    },
    {
      "indent": 9,
      "text": "Severity: error",
      "ja": "重大度：エラー"
    },
    {
      "indent": 9,
      "text": "Error-info: <bad-element>: startTime",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Description: An expected element is missing.",
      "ja": "説明：期待される要素が見つかりません。"
    },
    {
      "indent": 6,
      "text": "If the optional replay feature is requested but it is not supported by the NETCONF server, the following error is returned:",
      "ja": "オプションの再生機能が要求されているが、NetConfサーバでサポートされていない場合は、次のエラーが返されます。"
    },
    {
      "indent": 9,
      "text": "Tag: operation-failed",
      "ja": "タグ：操作失敗"
    },
    {
      "indent": 9,
      "text": "Error-type: protocol",
      "ja": "エラータイプ：プロトコル"
    },
    {
      "indent": 9,
      "text": "Severity: error",
      "ja": "重大度：エラー"
    },
    {
      "indent": 0,
      "text": " Error-info: none Description: Request could not be completed because the requested operation failed for some reason not covered by any other error condition.",
      "ja": "エラー情報：なし説明：要求された操作は、他のエラー状態でカバーされていない理由で要求された操作が失敗したため、要求を完了できませんでした。"
    },
    {
      "indent": 6,
      "text": "If a <stopTime> is requested that is earlier than the specified <startTime>, the following error is returned:",
      "ja": "指定された<startTime>より前の<stoptime>が要求された場合、次のエラーが返されます。"
    },
    {
      "indent": 9,
      "text": "Tag: bad-element",
      "ja": "タグ：悪い要素"
    },
    {
      "indent": 9,
      "text": "Error-type: protocol",
      "ja": "エラータイプ：プロトコル"
    },
    {
      "indent": 9,
      "text": "Severity: error",
      "ja": "重大度：エラー"
    },
    {
      "indent": 9,
      "text": "Error-info: <bad-element>: stopTime",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Description: An element value is not correct; e.g., wrong type, out of range, pattern mismatch.",
      "ja": "説明：要素値が正しくありません。例えば、誤ったタイプ、範囲外、パターンの不一致。"
    },
    {
      "indent": 6,
      "text": "If a <startTime> is requested that is later than the current time, the following error is returned:",
      "ja": "<StartTime>が現在の時刻より遅いことを要求された場合、次のエラーが返されます。"
    },
    {
      "indent": 9,
      "text": "Tag: bad-element",
      "ja": "タグ：悪い要素"
    },
    {
      "indent": 9,
      "text": "Error-type: protocol",
      "ja": "エラータイプ：プロトコル"
    },
    {
      "indent": 9,
      "text": "Severity: error",
      "ja": "重大度：エラー"
    },
    {
      "indent": 9,
      "text": "Error-info: <bad-element>: startTime",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Description: An element value is not correct; e.g., wrong type, out of range, pattern mismatch.",
      "ja": "説明：要素値が正しくありません。例えば、誤ったタイプ、範囲外、パターンの不一致。"
    },
    {
      "indent": 0,
      "text": "2.1.1.1. Usage Example",
      "section_title": true,
      "ja": "2.1.1.1. 使用例"
    },
    {
      "indent": 3,
      "text": "The following demonstrates creating a simple subscription. More complex examples can be found in section 5.",
      "ja": "以下は単純なサブスクリプションの作成を示しています。さらに複雑な例はセクション5にあります。"
    },
    {
      "indent": 3,
      "text": "<netconf:rpc message-id=\"101\"\n      xmlns:netconf=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n    <create-subscription\n        xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\n    </create-subscription>\n</netconf:rpc>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.2. Sending Event Notifications",
      "section_title": true,
      "ja": "2.2. イベント通知を送信する"
    },
    {
      "indent": 3,
      "text": "Once the subscription has been set up, the NETCONF server sends the event notifications asynchronously over the connection.",
      "ja": "サブスクリプションがセットアップされると、NetConfサーバーは接続を介してイベント通知を非同期的に送信します。"
    },
    {
      "indent": 0,
      "text": "2.2.1. <notification>",
      "section_title": true,
      "ja": "2.2.1. <通知>"
    },
    {
      "indent": 3,
      "text": "Description:",
      "ja": "説明："
    },
    {
      "indent": 6,
      "text": "An event notification is sent to the client who initiated a <create-subscription> command asynchronously when an event of interest (i.e., meeting the specified filtering criteria) has occurred. An event notification is a complete and well-formed XML document. Note that <notification> is not a Remote Procedure Call (RPC) method but rather the top-level element identifying the one-way message as a notification.",
      "ja": "イベント通知は、関心のあるイベント（すなわち、指定されたフィルタリング基準を満たす）が発生したときに<create-subscription>コマンドを非同期的に開始したクライアントに送信されます。イベント通知は、完全で整形式のXML文書です。<通知>は、リモートプロシージャコール（RPC）メソッドではなく、通知として一方向のメッセージを識別するトップレベルの要素です。"
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "eventTime",
      "ja": "イベントタイム"
    },
    {
      "indent": 9,
      "text": "The time the event was generated by the event source. This parameter is of type dateTime and compliant to [RFC3339]. Implementations must support time zones.",
      "ja": "イベントがイベントソースによって生成された時間。このパラメータはDateTime型と[RFC3339]に準拠しています。実装はタイムゾーンをサポートする必要があります。"
    },
    {
      "indent": 6,
      "text": "Also contains notification-specific tagged content, if any. With the exception of <eventTime>, the content of the notification is beyond the scope of this document.",
      "ja": "いずれかの場合は、通知固有のタグ付きコンテンツも含まれています。<EventTime>を除いて、通知の内容はこの文書の範囲を超えています。"
    },
    {
      "indent": 3,
      "text": "Response:",
      "ja": "応答："
    },
    {
      "indent": 6,
      "text": "No response. Not applicable.",
      "ja": "応答なし。適用できません。"
    },
    {
      "indent": 0,
      "text": "2.3. Terminating the Subscription",
      "section_title": true,
      "ja": "2.3. サブスクリプションを終了します"
    },
    {
      "indent": 3,
      "text": "Closing of the event notification subscription can be done by using the <close-session> operation from the subscriptions session or terminating the NETCONF session ( <kill-session> ) or the underlying transport session from another session. If a stop time is provided when the subscription is created, the subscription will terminate after the stop time is reached. In this case, the NETCONF session will still be an active session.",
      "ja": "イベント通知サブスクリプションのクローズは、サブスクリプションセッションからの<閉じるセッション>オペレーションを使用するか、またはNetConfセッション（<kill-session>）または他のセッションからの基礎となるトランスポートセッションを使用することによって行うことができます。サブスクリプションが作成されたときに停止時間が入力された場合、停止時間に達するとサブスクリプションは終了します。この場合、NetConfセッションは依然としてアクティブセッションになります。"
    },
    {
      "indent": 0,
      "text": "3. Supporting Concepts",
      "section_title": true,
      "ja": "3. サポートコンセプト"
    },
    {
      "indent": 0,
      "text": "3.1. Capabilities Exchange",
      "section_title": true,
      "ja": "3.1. 能力交換機"
    },
    {
      "indent": 3,
      "text": "The ability to process and send event notifications is advertised during the capability exchange between the NETCONF client and server.",
      "ja": "イベント通知を処理して送信する機能は、NetConfクライアントとサーバー間の機能交換中にアドバタイズされます。"
    },
    {
      "indent": 0,
      "text": "3.1.1. Capability Identifier",
      "section_title": true,
      "ja": "3.1.1. 機能識別子"
    },
    {
      "indent": 3,
      "text": "\"urn:ietf:params:netconf:capability:notification:1.0\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3.1.2. Capability Example",
      "section_title": true,
      "ja": "3.1.2. 能力の例"
    },
    {
      "indent": 3,
      "text": "<hello xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n  <capabilities>\n     <capability>\n         urn:ietf:params:xml:ns:netconf:base:1.0\n       </capability>\n       <capability>\n         urn:ietf:params:netconf:capability:startup:1.0\n       </capability>\n       <capability>\n         urn:ietf:params:netconf:capability:notification:1.0\n       </capability>\n    </capabilities>\n  <session-id>4</session-id>\n</hello>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3.2. Event Streams",
      "section_title": true,
      "ja": "3.2. イベントストリーム"
    },
    {
      "indent": 3,
      "text": "An event stream is defined as a set of event notifications matching some forwarding criteria.",
      "ja": "イベントストリームは、いくつかの転送基準に一致する一連のイベント通知として定義されます。"
    },
    {
      "indent": 3,
      "text": "Figure 2 illustrates the notification flow and concepts identified in this document. It does not mandate and/or preclude an implementation. The following is observed from the diagram below: System components (c1..cn) generate event notifications that are passed to a central component for classification and distribution. The central component inspects each event notification and matches the event notification against the set of stream definitions. When a match occurs, the event notification is considered to be a member of that event stream (stream 1..stream n). An event notification may be part of multiple event streams.",
      "ja": "図2は、この文書で識別されている通知の流れと概念を示しています。実装を義務付けたり/または排除したりしません。以下の図から、以下の図から、システムコンポーネント（C1..CN）分類と配布のために中央コンポーネントに渡されるイベント通知を生成します。中央コンポーネントは各イベント通知を検査し、イベント通知とストリーム定義のセットと一致します。一致が発生すると、イベント通知はそのイベントストリームのメンバーであると見なされます（Stream 1.. Stream N）。イベント通知は、複数のイベントストリームの一部であり得る。"
    },
    {
      "indent": 3,
      "text": "At some point after the NETCONF server receives the internal event from a stream, it is converted to an appropriate XML encoding by the server, and a <notification> element is ready to send to all NETCONF sessions subscribed to that stream.",
      "ja": "NetConfサーバがストリームから内部イベントを受信した後の時点で、それはサーバによって適切なXMLエンコードに変換され、<通知>要素はそのストリームに加入しているすべてのNETCONFセッションに送信する準備ができている。"
    },
    {
      "indent": 3,
      "text": "After generation of the <notification> element, access control is applied by the server. If a session does not have permission to receive the <notification>, then it is discarded for that session, and processing of the internal event is completed for that session.",
      "ja": "<通知>要素の生成後、アクセス制御はサーバによって適用される。セッションに<通知>を受信する権限がない場合は、そのセッションのために破棄され、そのセッションのために内部イベントの処理が完了します。"
    },
    {
      "indent": 3,
      "text": "When a NETCONF client subscribes to a given event stream, user-defined filter elements, if applicable, are applied to the event stream and matching event notifications are forwarded to the NETCONF server for distribution to subscribed NETCONF clients. A filter is transferred from the client to the server during the <create-subscription> operation and applied against each <notification> element generated by the stream. For more information on filtering, see Section 3.6.",
      "ja": "NetConfクライアントが特定のイベントストリームを購読すると、該当する場合はユーザー定義フィルタ要素がイベントストリームに適用され、一致するイベント通知は、サブスクライブされたNetConfクライアントを配布するためにNetConfサーバに転送されます。フィルタは、<create-subscription>操作中にクライアントからサーバーに転送され、ストリームによって生成された各<notification>要素に対して適用されます。フィルタリングの詳細については、セクション3.6を参照してください。"
    },
    {
      "indent": 3,
      "text": "A notification-logging service may also be available, in which case, the central component logs notifications. The NETCONF server may later retrieve logged notifications via the optional replay feature. For more information on replay, see section 3.3.",
      "ja": "通知ロギングサービスも利用可能であり得る、その場合、中央コンポーネントは通知を記録する。NETCONFサーバーは後でオプションの再生機能を介してログに記録された通知を取得することがあります。再生の詳細については、セクション3.3を参照してください。"
    },
    {
      "indent": 3,
      "text": "+----+\n| c1 |----+             available streams\n+----+    |    +---------+\n+----+    |    |central  |-> stream 1\n| c2 |    +--->|event    |-> stream 2     filter  +-------+\n+----+    |    |processor|-> NETCONF stream ----->|NETCONF|\n ...      |    |         |-> stream n             |server |\nSystem    |    +---------+                        +-------+\nComponents|        |                                 /\\\n ...      |        |                                 ||\n+----+    |        |       (------------)            ||\n| cn |----+        |       (notification)            ||\n+----+             +-----> (  logging   )            ||\n                           (  service   )            ||\n                           (------------)            ||\n                                                     ||\n                                                     ||\n                                                     \\/\n                                                 +-------+\n                                                 |NETCONF|\n                                                 |client |\n                                                 +-------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 33,
      "text": "Figure 2",
      "ja": "図2."
    },
    {
      "indent": 0,
      "text": "3.2.1. Event Stream Definition",
      "section_title": true,
      "ja": "3.2.1. イベントストリームの定義"
    },
    {
      "indent": 3,
      "text": "Event streams are predefined on the managed device. The configuration of event streams is outside the scope of this document. However, it is envisioned that event streams are either pre-established by the vendor (pre-configured), user configurable (e.g., part of the device's configuration), or both. Device vendors may allow event stream configuration via the NETCONF protocol (i.e., <edit-config> operation).",
      "ja": "イベントストリームは管理対象デバイスで事前定義されています。イベントストリームの構成はこの文書の範囲外です。しかしながら、イベントストリームは、ベンダ（事前設定）、ユーザ構成可能（例えば、デバイスの構成の一部）によって予め確立されていること、またはその両方が想定される。デバイスベンダは、NETCONFプロトコル（すなわち<編集設定>操作）を介してイベントストリーム構成を可能にし得る。"
    },
    {
      "indent": 0,
      "text": "3.2.2. Event Stream Content Format",
      "section_title": true,
      "ja": "3.2.2. イベントストリームコンテンツフォーマット"
    },
    {
      "indent": 3,
      "text": "The contents of all event streams made available to a NETCONF client (i.e., the notification sent by the NETCONF server) MUST be encoded in XML.",
      "ja": "NETCONFクライアント（すなわち、NETCONFサーバによって送信された通知）で利用可能にされたすべてのイベントストリームの内容はXMLでエンコードされなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.2.3. Default Event Stream",
      "section_title": true,
      "ja": "3.2.3. デフォルトのイベントストリーム"
    },
    {
      "indent": 3,
      "text": "A NETCONF server implementation supporting the notification capability MUST support the \"NETCONF\" notification event stream. This stream contains all NETCONF XML event notifications supported by the NETCONF server. The exact string \"NETCONF\" is used during the advertisement of stream support during the <get> operation on <streams> and during the <create-subscription> operation. Definition of the event notifications and their contents, beyond the inclusion of <eventTime>, for this event stream is outside the scope of this document.",
      "ja": "通知機能をサポートするNetConfサーバ実装は、「NetConf」通知イベントストリームをサポートしている必要があります。このストリームには、NetConfサーバーでサポートされているすべてのNetConf XMLイベント通知が含まれています。正確な文字列 \"NETCONF\"は、<streams>の<get>操作中、および<create-subscription>操作中にストリームサポートの広告の間に使用されます。このイベントストリームの場合、<EventTime>を含むイベント通知とその内容の定義は、このイベントの範囲外です。"
    },
    {
      "indent": 0,
      "text": "3.2.4. Event Stream Sources",
      "section_title": true,
      "ja": "3.2.4. イベントストリームソース"
    },
    {
      "indent": 3,
      "text": "With the exception of the default event stream (NETCONF), specification of additional event stream sources (e.g., Simple Network Management Protocol (SNMP), syslog) is outside the scope of this document. NETCONF server implementations may leverage any desired event stream source in the creation of supported event streams.",
      "ja": "デフォルトのイベントストリーム（NETCONF）を除いて、追加のイベントストリームソースの指定（例えば、単純なネットワーク管理プロトコル（SNMP）、syslog）の指定は、このドキュメントの範囲外です。NetConfサーバの実装は、サポートされているイベントストリームの作成に任意の所望のイベントストリームソースを活用することができる。"
    },
    {
      "indent": 0,
      "text": "3.2.5. Event Stream Discovery",
      "section_title": true,
      "ja": "3.2.5. イベントストリームディスカバリ"
    },
    {
      "indent": 3,
      "text": "A NETCONF client retrieves the list of supported event streams from a NETCONF server using the <get> operation.",
      "ja": "NetConfクライアントは、<get>操作を使用して、NetConfサーバーからサポートされているイベントストリームのリストを取得します。"
    },
    {
      "indent": 0,
      "text": "3.2.5.1. Name Retrieval Using <get> Operation",
      "section_title": true,
      "ja": "3.2.5.1. <get> operationを使用した名前検索"
    },
    {
      "indent": 0,
      "text": " The list of available event streams is retrieved by requesting the <streams> subtree via a <get> operation. Available event streams for the requesting session are returned in the reply containing the <name> and <description> elements, where the <name> element is mandatory, and its value is unique within the scope of a NETCONF server. An empty reply is returned if there are no available event streams, due to user-specified filters on the <get> operation.",
      "ja": "利用可能なイベントストリームのリストは、<get>操作を介して<streams>サブツリーを要求することによって取得されます。要求側セッションのための利用可能なイベントストリームは、<name>と<description>要素を含む返信で返信されます。ここで、<name>要素は必須であり、その値はNetConfサーバーの範囲内で一意です。<get>操作のユーザー指定のフィルタのため、使用可能なイベントストリームがない場合は、空の応答が返されます。"
    },
    {
      "indent": 3,
      "text": "Additional information available about a stream includes whether notification replay is available and, if so, the timestamp of the earliest possible notification to replay.",
      "ja": "ストリームに関する追加情報には、通知再生が利用可能かどうか、そうである場合は、できるだけ早い通知のタイムスタンプが含まれています。"
    },
    {
      "indent": 3,
      "text": "The following example shows retrieving the list of available event stream list using the <get> operation.",
      "ja": "次の例は、<get>操作を使って利用可能なイベントストリームリストのリストを取得することを示しています。"
    },
    {
      "indent": 0,
      "text": " <rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get> <filter type=\"subtree\"> <netconf xmlns=\"urn:ietf:params:xml:ns:netmod:notification\"> <streams/> </netconf> </filter> </get> </rpc> The NETCONF server returns a list of event streams available for subscription: NETCONF, SNMP, and syslog-critical in this example.",
      "ja": "<rpc message-id = \"101\" xmlns = \"urn：ietf：params：xml：ns：ns：ns：ns：ns：1.0\"> <get> <フィルタ型= \"Subtree\"> <netconf xmlns = \"urn：ietf：params：XML：NS：NS：NETMOD：NETSURE \"> <streams /> </ netconf> </ filter> </ get> </ rpc> subscriptionで利用可能なイベント・ストリームのリストを返します.netconf、snmp、およびsyslog-この例では重要です。"
    },
    {
      "indent": 3,
      "text": "<rpc-reply message-id=\"101\"\n                 xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n  <data>\n    <netconf  xmlns=\"urn:ietf:params:xml:ns:netmod:notification\">\n     <streams>\n        <stream>\n           <name>NETCONF</name>\n           <description>default NETCONF event stream\n           </description>\n           <replaySupport>true</replaySupport>\n           <replayLogCreationTime>\n             2007-07-08T00:00:00Z\n           </replayLogCreationTime>\n        </stream>\n        <stream>\n           <name>SNMP</name>\n           <description>SNMP notifications</description>\n           <replaySupport>false</replaySupport>\n        </stream>\n        <stream>\n          <name>syslog-critical</name>\n          <description>Critical and higher severity\n          </description>\n          <replaySupport>true</replaySupport>\n          <replayLogCreationTime>\n            2007-07-01T00:00:00Z\n          </replayLogCreationTime>\n         </stream>\n        </streams>\n      </netconf>\n  </data>\n</rpc-reply>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3.2.5.2. Event Stream Subscription",
      "section_title": true,
      "ja": "3.2.5.2. イベントストリームサブスクリプション"
    },
    {
      "indent": 3,
      "text": "A NETCONF client may request from the NETCONF server the list of event streams available to this session and then issue a <create-subscription> request with the desired event stream name. Omitting the event stream name from the <create-subscription> request results in subscription to the default NETCONF event stream.",
      "ja": "NetConfクライアントは、このセッションで利用可能なイベントストリームのリストをNETCONFサーバーから要求してから、目的のイベントストリーム名で<create-subscription>要求を発行することができます。<create-subscription>の<create-subscription>の要求からのイベントストリーム名を省略します。デフォルトのNetConfイベントストリームへのサブスクリプションになります。"
    },
    {
      "indent": 0,
      "text": "3.2.5.2.1. Filtering Event Stream Contents",
      "section_title": true,
      "ja": "3.2.5.2.1. イベントストリームのコンテンツのフィルタリング"
    },
    {
      "indent": 3,
      "text": "The set of event notifications delivered in an event stream may be further refined by applying a user-specified filter supplied at subscription creation time ( <create-subscription> ). This is a transient filter associated with the event notification subscription and does not modify the event stream configuration. The filter element is applied against the contents of the <notification> wrapper and not the wrapper itself. See section 5 for examples. Either subtree or XPATH filtering can be used.",
      "ja": "イベントストリームで配信された一連のイベント通知は、購読作成時刻（<create-subscription>）で提供されたユーザー指定のフィルタを適用することによってさらに改良されてもよい。これは、イベント通知サブスクリプションに関連付けられている一時的なフィルタであり、イベントストリーム構成を変更しません。フィルタ要素は、<通知>ラッパーの内容に適用され、ラッパー自体ではありません。例についてはセクション5を参照してください。サブツリーまたはXPathフィルタリングのいずれかを使用できます。"
    },
    {
      "indent": 3,
      "text": "XPATH support for the Notification capability is advertised as part of the normal XPATH capability advertisement. If XPATH support is advertised via the XPATH capability, then XPATH is supported for notification filtering. If this capability is not advertised, XPATH is not supported for notification filtering.",
      "ja": "通知機能に対するXPathサポートは、通常のXPath機能広告の一部としてアドバタイズされます。XPathのサポートがXPath機能を介してアドバタイズされている場合は、通知フィルタリングでXPathがサポートされています。この機能がアドバタイズされていない場合、XPathは通知フィルタリングではサポートされていません。"
    },
    {
      "indent": 0,
      "text": "3.3. Notification Replay",
      "section_title": true,
      "ja": "3.3. 通知リプレイ"
    },
    {
      "indent": 0,
      "text": "3.3.1. Overview",
      "section_title": true,
      "ja": "3.3.1. 概要"
    },
    {
      "indent": 3,
      "text": "Replay is the ability to create an event subscription that will resend recently generated notifications, or in some cases send them for the first time to a particular NETCONF client. These notifications are sent the same way as normal notifications.",
      "ja": "Replayは、最近生成された通知を再開する、または特定のNetConfクライアントに初めてそれらを送信するイベントサブスクリプションを作成する機能です。これらの通知は通常の通知と同じ方法で送信されます。"
    },
    {
      "indent": 3,
      "text": "A replay of notifications is specified by including the optional <startTime> parameter to the subscription command, which indicates the start time of the replay. The end time is specified using the optional <stopTime> parameter. If not present, notifications will continue to be sent until the subscription is terminated.",
      "ja": "通知の再生は、オプションの<startTime>パラメータをsubscriptionコマンドに含めることで指定されます。これは、再生の開始時間を示します。終了時刻は、オプションの<stoptime>パラメータを使用して指定されます。存在しない場合、通知はサブスクリプションが終了するまで送信され続けます。"
    },
    {
      "indent": 3,
      "text": "A notification stream that supports replay is not expected to have an unlimited supply of saved notifications available to accommodate any replay request. Clients can query <replayLogCreationTime> and <replayLogAgedTime> to learn about the availability of notifications for replay.",
      "ja": "再生をサポートする通知ストリームは、任意の再生要求に対応するために利用可能な保存された通知の無制限の供給を持つことが期待されていません。クライアントは、<replaylogCreationTime>と<ReplayLogagedTime>を照会して、再生の通知の可用性について学ぶことができます。"
    },
    {
      "indent": 3,
      "text": "The actual number of stored notifications available for retrieval at any given time is a NETCONF server implementation-specific matter. Control parameters for this aspect of the feature are outside the scope of this document.",
      "ja": "特定の時点での検索に使用可能な保存された通知の実際の数は、NetConfサーバー実装固有の問題です。この特徴のこの側面の制御パラメータは、この文書の範囲外です。"
    },
    {
      "indent": 0,
      "text": " Replay is dependent on a notification stream supporting some form of notification logging, although it puts no restrictions on the size or form of the log, or where it resides within the device. Whether or not a stream supports replay can be discovered by doing a <get> operation on the <streams> element of the Notification Management Schema and looking at the value of the <replaySupport> object. This schema also provides the <replayLogCreationTime> element to indicate the earliest available logged notification.",
      "ja": "再生は、ログのサイズまたは形式に制限を与えたり、デバイス内にあるところに制限を与えたりする通知ストリームに依存します。StreamがReplayがサポートしているかどうかを、通知管理スキーマの<streams>要素に対して<get>操作を実行し、<replaysupport>オブジェクトの値を調べることで検出できます。このスキーマはまた、最も早い使用可能なログ記録通知を示すために<replaylogCreationTime>要素を提供します。"
    },
    {
      "indent": 0,
      "text": "3.3.2. Creating a Subscription with Replay",
      "section_title": true,
      "ja": "3.3.2. 再生で購読を作成します"
    },
    {
      "indent": 3,
      "text": "This feature uses optional parameters to the <create-subscription> command called <startTime> and <stopTime>. <startTime> identifies the earliest date and time of interest for event notifications being replayed and also indicates that a subscription will be providing replay of notifications. Events generated before this time are not matched. <stopTime> specifies the latest date and time of interest for event notifications being replayed. If it is not present, then notifications will continue to be sent until the subscription is terminated.",
      "ja": "この機能は、<startTime>と<stoptime>という<create-subscription>コマンドにオプションのパラメータを使用します。<startTime>は、再生されているイベント通知に最も早い興味のある日時を識別し、サブスクリプションが通知の再生を提供することを示しています。この時間前に生成されたイベントは一致しません。<STOPTIME>再生されているイベント通知が再生されているための興味の最新の日付と時刻を指定します。存在しない場合は、購読が終了するまで通知が続行されます。"
    },
    {
      "indent": 3,
      "text": "Note that <startTime> and <stopTime> are associated with the time an event was generated by the event source.",
      "ja": "<startTime>と<stoptime>は、イベントがイベントソースによって発生された時刻に関連付けられています。"
    },
    {
      "indent": 3,
      "text": "A <replayComplete> notification is sent to indicate that all of the replay notifications have been sent and must not be sent for any other reason. If this subscription has a stop time, then this session becomes a normal NETCONF session again. The NETCONF server will then accept <rpc> operations even if the server did not previously accept such operations due to lack of interleave support. In the case of a subscription without a stop time, after the <replayComplete> notification has been sent, it can be expected that any notifications generated since the start of the subscription creation will be sent, followed by notifications as they arise naturally within the system.",
      "ja": "<replaycomplete>通知は、すべての再生通知が送信されたことを示すために送信され、他の理由で送信されてはいけません。このサブスクリプションに停止時間がある場合、このセッションは通常のNetConfセッションになります。インターリーブサポートがないため、サーバーがそのような操作を受け入れなかった場合でも、NetConfサーバーは<RPC>操作を受け入れます。停止時間なしのサブスクリプションの場合、<ReplayComplete>通知が送信された後、サブスクリプション作成の開始以降に生成された通知が送信され、続いてシステム内での通知が続くと予想されます。。"
    },
    {
      "indent": 3,
      "text": "The <replayComplete> and <notificationComplete> notifications cannot be filtered out. They will always be sent on a replay subscription that specified a <startTime> and <stopTime>, respectively.",
      "ja": "<ReplayComplete>と<NotificationComplete>通知をフィルタ処理することはできません。それらは常に<startTime>と<stoptime>を指定した再生サブスクリプションで送信されます。"
    },
    {
      "indent": 0,
      "text": "3.4. Notification Management Schema",
      "section_title": true,
      "ja": "3.4. 通知管理スキーマ"
    },
    {
      "indent": 3,
      "text": "This Schema is used to learn about the event streams supported on the system. It also contains the definition of the <replayComplete> and <notificationComplete> notifications, which are sent to indicate that an event replay has sent all applicable notifications and that the subscription has terminated, respectively.",
      "ja": "このスキーマは、システム上でサポートされているイベントストリームについて学習するために使用されます。また、イベント再生が該当するすべての通知を送信し、購読が終了したことを示すために送信される<ReplayComplete>と<NotificationComplete>通知の定義も含まれています。"
    },
    {
      "indent": 1,
      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n    xmlns:netconf=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\n    xmlns:ncEvent=\"urn:ietf:params:xml:ns:netconf:notification:1.0\"\n    xmlns:manageEvent=\"urn:ietf:params:xml:ns:netmod:notification\"\n    targetNamespace=\"urn:ietf:params:xml:ns:netmod:notification\"\n    elementFormDefault=\"qualified\"\n    attributeFormDefault=\"unqualified\"\n    xml:lang=\"en\" version=\"1.0\">\n    <xs:annotation>\n        <xs:documentation xml:lang=\"en\">\n            A schema that can be used to learn about current\n            event streams.  It also contains the replayComplete\n            and notificationComplete notification.\n        </xs:documentation>\n    </xs:annotation>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "<xs:import namespace=\"http://www.w3.org/XML/1998/namespace\"\n        schemaLocation=\"http://www.w3.org/2001/xml.xsd\"/>\n<xs:import namespace=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\n    schemaLocation=\"netconf.xsd\"/>\n<xs:import namespace=\n    \"urn:ietf:params:xml:ns:netconf:notification:1.0\"\n      schemaLocation=\"notification.xsd\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "<xs:element name=\"netconf\" type=\"manageEvent:Netconf\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "<xs:complexType name=\"Netconf\">\n  <xs:sequence>\n      <xs:element name=\"streams\" >\n        <xs:annotation>\n           <xs:documentation>\n             The list of event streams supported by the\n             system.  When a query is issued, the returned\n             set of streams is determined based on user\n             privileges.\n           </xs:documentation>\n         </xs:annotation>\n         <xs:complexType>\n           <xs:sequence minOccurs=\"1\" maxOccurs=\"unbounded\">\n             <xs:element name=\"stream\">\n                <xs:annotation>\n                  <xs:documentation>\n                    Stream name, description, and other information.\n                  </xs:documentation>\n                </xs:annotation>\n                <xs:complexType>\n                  <xs:sequence>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 21,
      "text": "<xs:element name=\"name\"\n        type=\"ncEvent:streamNameType\">\n   <xs:annotation>\n     <xs:documentation>\n       The name of the event stream.  If this is\n       the default NETCONF stream, this must have\n       the value \"NETCONF\".\n     </xs:documentation>\n   </xs:annotation>\n</xs:element>\n<xs:element name=\"description\"\n                    type=\"xs:string\">\n   <xs:annotation>\n     <xs:documentation>\n       A description of the event stream, including\n       such information as the type of events that\n       are sent over this stream.\n     </xs:documentation>\n   </xs:annotation>\n</xs:element>\n<xs:element name=\"replaySupport\"\n                    type=\"xs:boolean\">\n <xs:annotation>\n     <xs:documentation>\n       An indication of whether or not event replay\n       is available on this stream.\n     </xs:documentation>\n   </xs:annotation>\n</xs:element>\n<xs:element name=\"replayLogCreationTime\"\n               type=\"xs:dateTime\" minOccurs=\"0\">\n  <xs:annotation>\n    <xs:documentation>\n   The timestamp of the creation of the log\n   used to support the replay function on\n   this stream.\n   Note that this might be earlier then\n   the earliest available\n   notification in the log.  This object\n   is updated if the log resets\n   for some reason.  This\n   object MUST be present if replay is\n   supported.\n     </xs:documentation>\n   </xs:annotation>\n </xs:element>\n <xs:element name=\"replayLogAgedTime\"\n        type=\"xs:dateTime\" minOccurs=\"0\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "                   <xs:annotation>\n                     <xs:documentation>\n                       The timestamp of the last notification\n                       aged out of the log. This\n                       object MUST be present if replay is\n                       supported and any notifications\n                       have been aged out of the log.\n                     </xs:documentation>\n                   </xs:annotation>\n                 </xs:element>\n               </xs:sequence>\n             </xs:complexType>\n           </xs:element>\n         </xs:sequence>\n       </xs:complexType>\n     </xs:element>\n</xs:sequence>\n</xs:complexType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:complexType name=\"ReplayCompleteNotificationType\">\n    <xs:complexContent>\n        <xs:extension base=\"ncEvent:NotificationContentType\"/>\n    </xs:complexContent>\n</xs:complexType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:element name=\"replayComplete\"\n    type=\"manageEvent:ReplayCompleteNotificationType\"\n    substitutionGroup=\"ncEvent:notificationContent\">\n            <xs:annotation>\n      <xs:documentation>\n        This notification is sent to signal the end of a replay\n        portion of a subscription.\n      </xs:documentation>\n    </xs:annotation>\n    </xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:complexType name=\"NotificationCompleteNotificationType\">\n    <xs:complexContent>\n        <xs:extension base=\"ncEvent:NotificationContentType\"/>\n    </xs:complexContent>\n</xs:complexType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "     <xs:element name=\"notificationComplete\"\n         type=\"manageEvent:NotificationCompleteNotificationType\"\n         substitutionGroup=\"ncEvent:notificationContent\">\n                 <xs:annotation>\n           <xs:documentation>\n             This notification is sent to signal the end of a\n             notification subscription.  It is sent in the case\n             that stopTime was specified during the creation of\n             the subscription.\n           </xs:documentation>\n         </xs:annotation>\n         </xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "</xs:schema>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3.5. Subscriptions Data",
      "section_title": true,
      "ja": "3.5. サブスクリプション"
    },
    {
      "indent": 3,
      "text": "Subscriptions are non-persistent state information, and their lifetime is defined by their session or by the <stopTime> parameter.",
      "ja": "サブスクリプションは非永続状態情報であり、それらのライフタイムはそれらのセッションまたは<stoptime>パラメータによって定義されます。"
    },
    {
      "indent": 0,
      "text": "3.6. Filter Mechanics",
      "section_title": true,
      "ja": "3.6. フィルター力学"
    },
    {
      "indent": 3,
      "text": "If a filter element is specified to look for data of a particular value, and the data item is not present within a particular event notification for its value to be checked against, the notification will be filtered out. For example, if one were to check for 'severity=critical' in a configuration event notification where this field was not supported, then the notification would be filtered out.",
      "ja": "フィルタエレメントが特定の値のデータを探すために指定されており、データ項目が確認される値の特定のイベント通知内に存在しない場合、通知はフィルタ処理されます。たとえば、このフィールドがサポートされていない構成イベント通知で 'severity = critical'をチェックする場合は、通知がフィルタ処理されます。"
    },
    {
      "indent": 3,
      "text": "For subtree filtering, a non-empty node set means that the filter matches. For XPath filtering, the mechanisms defined in [XPATH] should be used to convert the returned value to boolean.",
      "ja": "サブツリーフィルタリングの場合、空でないノードセットはフィルタが一致することを意味します。XPathフィルタリングの場合、[XPath]で定義されているメカニズムを使用して、戻り値をBooleanに変換する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.6.1. Filtering",
      "section_title": true,
      "ja": "3.6.1. フィルタリング"
    },
    {
      "indent": 3,
      "text": "Filtering is explicitly stated when the event notification subscription is created. This is specified via the 'filter' parameter. A Filter only exists as a parameter to the subscription.",
      "ja": "イベント通知サブスクリプションが作成されたときに、フィルタリングは明示的に記載されています。これは 'filter'パラメータで指定されます。フィルタはサブスクリプションへのパラメータとしてのみ存在します。"
    },
    {
      "indent": 0,
      "text": "3.7. Message Flow",
      "section_title": true,
      "ja": "3.7. メッセージフロー"
    },
    {
      "indent": 3,
      "text": "The following figure depicts message flow between a NETCONF client (C) and NETCONF server (S) in order to create a subscription and begin the flow of notifications. This subscription specifies a <startTime>, so the server starts by replaying logged notifications. It is possible that many rpc/rpc-reply sequences occur before the subscription is created, but this is not depicted in the figure.",
      "ja": "次の図は、サブスクリプションを作成して通知の流れを開始するためのNetConfクライアント（C）とNetConfサーバ間のメッセージフローを示しています。このサブスクリプションは<startTime>を指定しているので、サーバーはログに記録された通知を再生します。購読が作成される前に多くのRPC / RPC-Replyシーケンスが発生する可能性がありますが、これは図に示されていません。"
    },
    {
      "indent": 24,
      "text": "C                           S\n|                           |\n|  capability exchange      |\n|-------------------------->|\n|<------------------------->|\n|                           |\n|  <create-subscription>    | (startTime)\n|-------------------------->|\n|<--------------------------|\n|     <rpc-reply>           |\n|                           |\n|     <notification>        |\n|<--------------------------|\n|                           |\n|     <notification>        |\n|<--------------------------|\n|      <notification>       | (replayComplete)\n|<--------------------------|\n|                           |\n|                           |\n|                           |\n|     <notification>        |\n|<--------------------------|\n|                           |\n|                           |\n|     <notification>        |\n|<--------------------------|\n|                           |\n|                           |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 33,
      "text": "Figure 3",
      "ja": "図3"
    },
    {
      "indent": 3,
      "text": "The following figure depicts message flow between a NETCONF client (C) and NETCONF server (S) in order to create a subscription and begin the flow of notifications. This subscription specified a <startTime> and <stopTime> so it starts by replaying logged notifications and then returns to be a normal command-response NETCONF session after the <replayComplete> and <notificationComplete> notifications are sent and it is available to process <rpc> requests. It is possible that many rpc/rpc-reply sequences occur before the subscription is created, but this is not depicted in the figure.",
      "ja": "次の図は、サブスクリプションを作成して通知の流れを開始するためのNetConfクライアント（C）とNetConfサーバ間のメッセージフローを示しています。このサブスクリプションは、<starttime>と<stoptime>を指定して、ログに記録された通知を再生し、<ReplayComplete>と<NotificationComplete>通知が送信された後に通常のコマンド応答NetConfセッションになるように戻り、<RPCを処理することができます。>リクエスト購読が作成される前に多くのRPC / RPC-Replyシーケンスが発生する可能性がありますが、これは図に示されていません。"
    },
    {
      "indent": 21,
      "text": "C                           S\n|                           |\n|  capability exchange      |\n|-------------------------->|\n|<------------------------->|\n|                           |\n|  <create-subscription>    | (startTime,\n|-------------------------->|  stopTime)\n|<--------------------------|\n|     <rpc-reply>           |\n|                           |\n|     <notification>        |\n|<--------------------------|\n|                           |\n|     <notification>        |\n|<--------------------------|\n|      <notification>       | (replayComplete)\n|<--------------------------|\n|      <notification>       |(notificationComplete)\n|<--------------------------|\n|                           |\n|                           |\n|                           |\n|          <rpc>            |\n|-------------------------->|\n|<--------------------------|\n|       <rpc-reply>         |\n|                           |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 33,
      "text": "Figure 4",
      "ja": "図4"
    },
    {
      "indent": 0,
      "text": "4. XML Schema for Event Notifications",
      "section_title": true,
      "ja": "4. イベント通知用のXMLスキーマ"
    },
    {
      "indent": 3,
      "text": "The following [XMLSchema] defines NETCONF Event Notifications.",
      "ja": "次の[XMLSchema]は、NetConfイベント通知を定義します。"
    },
    {
      "indent": 0,
      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n     xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\"\n     xmlns:netconf=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\n     targetNamespace=\n        \"urn:ietf:params:xml:ns:netconf:notification:1.0\"\n     elementFormDefault=\"qualified\"\n     attributeFormDefault=\"unqualified\"\n       xml:lang=\"en\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<!-- import standard XML definitions -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<xs:import namespace=\"http://www.w3.org/XML/1998/namespace\"\n           schemaLocation=\"http://www.w3.org/2001/xml.xsd\">\n  <xs:annotation>\n    <xs:documentation>\n      This import accesses the xml: attribute groups for the\n      xml:lang as declared on the error-message element.\n    </xs:documentation>\n  </xs:annotation>\n</xs:import>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<!-- import base netconf definitions -->\n<xs:import namespace=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\n  schemaLocation=\"netconf.xsd\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "<!-- ************** Symmetrical Operations  ********************-->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<!-- <create-subscription> operation -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<xs:complexType name=\"createSubscriptionType\"> <xs:complexContent> <xs:extension base=\"netconf:rpcOperationType\"> <xs:sequence> <xs:element name=\"stream\" type=\"streamNameType\" minOccurs=\"0\"> <xs:annotation> <xs:documentation> An optional parameter that indicates which stream of events is of interest. If not present, then events in the default NETCONF stream will be sent. </xs:documentation> </xs:annotation> </xs:element> <xs:element name=\"filter\" type=\"netconf:filterInlineType\" minOccurs=\"0\"> <xs:annotation> <xs:documentation> An optional parameter that indicates which subset of all possible events is of interest. The format of this parameter is the same as that of the filter parameter in the NETCONF protocol operations. If not present, all events not precluded by other parameters will be sent.",
      "ja": "<xs：complextype name = \"createSubscriptionType\"> <xs：complexContent> <xs：拡張子base = \"netconf：rpcOperationType\"> <xs：sequence> <xs：要素名= \"stream\" type = \"streamncurs =\" 0\"> <xs：注釈> <xs：documentation>イベントのストリームが興味のあるオプションのパラメータ。存在しない場合、デフォルトのNetConfストリームのイベントが送信されます。</ xs：マニュアル> </ xs：注釈> </ xs：要素> <xs：要素名= \"filter\" type = \"netconf：filterInlinetype\" minoccurs = \"0\"> <xs：注釈>すべての可能なイベントのどのサブセットが興味があるかを示すオプションのパラメータ。このパラメータの形式は、NETCONFプロトコル操作のフィルタパラメータの形式と同じです。存在しない場合、他のパラメータによって排除されないすべてのイベントが送信されます。"
    },
    {
      "indent": 4,
      "text": "                            </xs:documentation>\n                        </xs:annotation>\n                    </xs:element>\n                <xs:element name=\"startTime\" type=\"xs:dateTime\"\n                    minOccurs=\"0\" >\n                    <xs:annotation>\n                        <xs:documentation>\n                            A parameter used to trigger the replay\n                            feature indicating that the replay\n                            should start at the time specified.  If\n                            start time is not present, this is not a\n                            replay subscription.\n                        </xs:documentation>\n                    </xs:annotation>\n                </xs:element>\n                <xs:element name=\"stopTime\" type=\"xs:dateTime\"\n                    minOccurs=\"0\" >\n                    <xs:annotation>\n                        <xs:documentation>\n                            An optional parameter used with the\n                            optional replay feature to indicate the\n                            newest notifications of interest.  If\n                            stop time is not present, the\n                            notifications will continue until the\n                            subscription is terminated.  Must be\n                            used with startTime.\n                        </xs:documentation>\n                    </xs:annotation>\n                </xs:element>\n            </xs:sequence>\n        </xs:extension>\n    </xs:complexContent>\n</xs:complexType>\n<xs:simpleType name=\"streamNameType\">\n    <xs:annotation>\n        <xs:documentation>\n            The name of an event stream.\n        </xs:documentation>\n    </xs:annotation>\n    <xs:restriction base=\"xs:string\"/>\n</xs:simpleType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<xs:element name=\"create-subscription\"\n    type=\"createSubscriptionType\"\n    substitutionGroup=\"netconf:rpcOperation\">\n    <xs:annotation>\n        <xs:documentation>\n            The command to create a notification subscription.  It\n            takes as argument the name of the notification stream\n            and filter.  Both of those options\n            limit the content of the subscription.  In addition,\n            there are two time-related parameters, startTime and\n            stopTime, which can be used to select the time interval\n            of interest to the notification replay feature.\n        </xs:documentation>\n    </xs:annotation>\n</xs:element>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "<!-- ************** One-way Operations  ******************-->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "<!-- <Notification> operation -->\n<xs:complexType name=\"NotificationContentType\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<xs:element name=\"notificationContent\"\n    type=\"NotificationContentType\" abstract=\"true\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "<xs:complexType name=\"NotificationType\">\n    <xs:sequence>\n        <xs:element name=\"eventTime\" type=\"xs:dateTime\">\n          <xs:annotation>\n            <xs:documentation>\n            The time the event was generated by the event source.\n            </xs:documentation>\n          </xs:annotation>\n        </xs:element>\n        <xs:element ref=\"notificationContent\"/>\n    </xs:sequence>\n</xs:complexType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "  <xs:element name=\"notification\" type=\"NotificationType\"/>\n</xs:schema>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5. Filtering Examples",
      "section_title": true,
      "ja": "5. フィルタリング例"
    },
    {
      "indent": 3,
      "text": "The following section provides examples to illustrate the various methods of filtering content on an event notification subscription.",
      "ja": "次のセクションでは、イベント通知サブスクリプションでコンテンツをフィルタリングする様々な方法を説明するための例を示します。"
    },
    {
      "indent": 3,
      "text": "In order to illustrate the use of filter expressions, it is necessary to assume some of the event notification content. The examples below assume that the event notification schema definition has an <event> element at the top level consisting of the event class (e.g., fault, state, config), reporting entity, and either severity or operational state.",
      "ja": "フィルタ式の使用を説明するためには、イベント通知コンテンツの一部を考慮する必要があります。以下の例では、イベント通知スキーマ定義にイベントクラス（例えば、障害、状態、設定）、報告エンティティ、および重大度または運用状態のいずれかで構成される最上位レベルの<event>要素があるとします。"
    },
    {
      "indent": 3,
      "text": "Examples in this section are generated from the following fictional Schema.",
      "ja": "このセクションの例は、次の架空のスキーマから生成されます。"
    },
    {
      "indent": 3,
      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema targetNamespace=\"http://example.com/event/1.0\"\n    xmlns=\"http://example.com/event/1.0\"\n    elementFormDefault=\"qualified\"\n    xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n    xmlns:ncEvent=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "<xs:import namespace=\n    \"urn:ietf:params:xml:ns:netconf:notification:1.0\"\n    schemaLocation=\"notification.xsd\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "<xs:complexType name=\"eventType\">\n    <xs:complexContent>\n        <xs:extension base=\"ncEvent:NotificationContentType\">\n            <xs:sequence>\n                <xs:element name=\"eventClass\" />\n                <xs:element name=\"reportingEntity\">\n                    <xs:complexType>\n                        <xs:sequence>\n                            <xs:any namespace=\"##any\"\n                            processContents=\"lax\"/>\n                        </xs:sequence>\n                    </xs:complexType>\n                </xs:element>\n                <xs:choice>\n                    <xs:element name=\"severity\"/>\n                    <xs:element name=\"operState\"/>\n                </xs:choice>\n            </xs:sequence>\n        </xs:extension>\n    </xs:complexContent>\n</xs:complexType>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "<xs:element name=\"event\"\n    type=\"eventType\"\n    substitutionGroup=\"ncEvent:notificationContent\"/>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "</xs:schema>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The above fictional notification definition could result in the following sample notification list, which is used in the examples in this section.",
      "ja": "上記の架空通知定義は、このセクションの例で使用されている次のサンプル通知リストをもたらす可能性があります。"
    },
    {
      "indent": 3,
      "text": "<notification\n   xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\n   <eventTime>2007-07-08T00:01:00Z</eventTime>\n   <event xmlns=\"http://example.com/event/1.0\">\n      <eventClass>fault</eventClass>\n      <reportingEntity>\n          <card>Ethernet0</card>\n      </reportingEntity>\n      <severity>major</severity>\n    </event>\n</notification>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<notification\n  xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\n   <eventTime>2007-07-08T00:02:00Z</eventTime>\n   <event xmlns=\"http://example.com/event/1.0\">\n       <eventClass>fault</eventClass>\n       <reportingEntity>\n           <card>Ethernet2</card>\n       </reportingEntity>\n       <severity>critical</severity>\n    </event>\n</notification>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<notification\n  xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\n   <eventTime>2007-07-08T00:04:00Z</eventTime>\n   <event xmlns=\"http://example.com/event/1.0\">\n       <eventClass>fault</eventClass>\n       <reportingEntity>\n            <card>ATM1</card>\n        </reportingEntity>\n        <severity>minor</severity>\n   </event>\n</notification>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "<notification\n  xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\n  <eventTime>2007-07-08T00:10:00Z</eventTime>\n  <event xmlns=\"http://example.com/event/1.0\">\n      <eventClass>state</eventClass>\n      <reportingEntity>\n          <card>Ethernet0</card>\n      </reportingEntity>\n      <operState>enabled</operState>\n   </event>\n</notification>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.1. Subtree Filtering",
      "section_title": true,
      "ja": "5.1. サブツリーフィルタリング"
    },
    {
      "indent": 3,
      "text": "XML subtree filtering is not well-suited for creating elaborate filter definitions given that it only supports equality comparisons and application of the logical OR operators (e.g., in an event subtree, give me all event notifications that have severity=critical, severity=major, or severity=minor). Nevertheless, it may be used for defining simple event notification forwarding filters as shown below.",
      "ja": "XMLサブツリーフィルタリングは、（イベントサブツリーでは、Severity = Critical、Severity = Severity = Major、Severity = Major、Severity = Major、Major、Severity = Major、Major、Severity = Major、Major、Major、Major、Major、Severity = Major、Major、Major、Major、Severity = Major、Major、Major、Major、Major、Major、Major、Major、Major、Major、Major、Major、Major、Major、Major、Major、Major、Major、Major）、またはseverity = minor）。それにもかかわらず、それは以下のように単純なイベント通知転送フィルタを定義するために使用され得る。"
    },
    {
      "indent": 3,
      "text": "The following example illustrates how to select fault events which have severities of critical, major, or minor. The filtering criteria evaluation is as follows:",
      "ja": "次の例は、クリティカル、メジャー、またはマイナーの重大度を持つ障害イベントを選択する方法を示しています。フィルタリング基準評価は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "((fault & severity=critical) | (fault & severity=major) | (fault &\nseverity=minor))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "<netconf:rpc netconf:message-id=\"101\"\n        xmlns:netconf=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n  <create-subscription\n      xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\n    <filter netconf:type=\"subtree\">\n      <event xmlns=\"http://example.com/event/1.0\">\n        <eventClass>fault</eventClass>\n        <severity>critical</severity>\n      </event>\n      <event xmlns=\"http://example.com/event/1.0\">\n        <eventClass>fault</eventClass>\n        <severity>major</severity>\n      </event>\n      <event xmlns=\"http://example.com/event/1.0\">\n        <eventClass>fault</eventClass>\n        <severity>minor</severity>\n      </event>\n    </filter>\n  </create-subscription>\n</netconf:rpc>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The following example illustrates how to select state or config EventClasses or fault events that are related to card Ethernet0. The filtering criteria evaluation is as follows:",
      "ja": "次の例は、カードEthernet0に関連する状態またはConfig EventClassesまたはFaultイベントを選択する方法を示しています。フィルタリング基準評価は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "( state | config | ( fault & ( card=Ethernet0)))",
      "ja": "（状態"
    },
    {
      "indent": 0,
      "text": "<netconf:rpc netconf:message-id=\"101\"\n                xmlns:netconf=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n      <create-subscription\n          xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\n        <filter netconf:type=\"subtree\">\n          <event xmlns=\"http://example.com/event/1.0\">\n            <eventClass>state</eventClass>\n          </event>\n          <event xmlns=\"http://example.com/event/1.0\">\n            <eventClass>config</eventClass>\n          </event>\n          <event xmlns=\"http://example.com/event/1.0\">\n            <eventClass>fault</eventClass>\n            <reportingEntity>\n              <card>Ethernet0</card>\n            </reportingEntity>\n          </event>\n        </filter>\n      </create-subscription>\n</netconf:rpc>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.2. XPATH Filters",
      "section_title": true,
      "ja": "5.2. XPathフィルタ"
    },
    {
      "indent": 3,
      "text": "The following [XPATH] example illustrates how to select fault EventClass notifications that have severities of critical, major, or minor. The filtering criteria evaluation is as follows:",
      "ja": "次の[XPath]例は、クリティカル、メジャー、またはマイナーの重大度を持つ障害EventClass通知を選択する方法を示しています。フィルタリング基準評価は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "((fault) & ((severity=critical) | (severity=major) | (severity =\nminor)))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "<netconf:rpc netconf:message-id=\"101\"\n          xmlns:netconf=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n  <create-subscription\n        xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\n    <filter netconf:type=\"xpath\"\n            xmlns:ex=\"http://example.com/event/1.0\"\n       select=\"/ex:event[ex:eventClass='fault' and\n            (ex:severity='minor' or ex:severity='major'\n                 or ex:severity='critical')]\"/>\n  </create-subscription>\n</netconf:rpc>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The following example illustrates how to select state and config EventClasses or fault events of any severity that come from card Ethernet0. The filtering criteria evaluation is as follows:",
      "ja": "次の例は、StateとConfig EventClassesまたはConfig EventClassesまたはConfig EventClassesまたはCard Ethernet0から来る重大度の障害イベントを示しています。フィルタリング基準評価は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "( state | config | (fault & card=Ethernet0))",
      "ja": "（状態"
    },
    {
      "indent": 5,
      "text": "<netconf:rpc message-id=\"101\"\n         xmlns:netconf=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n   <create-subscription\n      xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\n        <filter netconf:type=\"xpath\"\n                xmlns:ex=\"http://example.com/event/1.0\"\n           select=\"/ex:event[\n              (ex:eventClass='state' or ex:eventClass='config') or\n              ((ex:eventClass='fault' and ex:card='Ethernet0'))]\"/>\n  </create-subscription>\n</netconf:rpc>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6. Interleave Capability",
      "section_title": true,
      "ja": "6. インターリーブ機能"
    },
    {
      "indent": 0,
      "text": "6.1. Description",
      "section_title": true,
      "ja": "6.1. description"
    },
    {
      "indent": 3,
      "text": "The :interleave capability indicates that the NETCONF peer supports the ability to interleave other NETCONF operations within a notification subscription. This means the NETCONF server MUST receive, process, and respond to NETCONF requests on a session with an active notification subscription. This capability helps scalability by reducing the total number of NETCONF sessions required by a given operator or management application.",
      "ja": "：インターリーブ機能は、NETCONFピアが通知サブスクリプション内で他のNetConf操作をインターリーブする機能をサポートすることを示します。つまり、NETCONFサーバーは、アクティブな通知サブスクリプションを使用してセッションでNETCONF要求を受信、処理、および応答する必要があります。この機能は、特定の演算子または管理アプリケーションによって必要とされるNetConfセッションの総数を減らすことによって、スケーラビリティを強化するのに役立ちます。"
    },
    {
      "indent": 0,
      "text": "6.2. Dependencies",
      "section_title": true,
      "ja": "6.2. 依存関係"
    },
    {
      "indent": 3,
      "text": "This capability is dependent on the notification capability being supported.",
      "ja": "この機能は、サポートされている通知機能によって異なります。"
    },
    {
      "indent": 0,
      "text": "6.3. Capability Identifier",
      "section_title": true,
      "ja": "6.3. 機能識別子"
    },
    {
      "indent": 3,
      "text": "The :interleave capability is identified by the following capability string:",
      "ja": "：インターリーブ機能は、次の機能文字列によって識別されます。"
    },
    {
      "indent": 3,
      "text": "urn:ietf:params:netconf:capability:interleave:1.0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.4. New Operations",
      "section_title": true,
      "ja": "6.4. 新しい業務"
    },
    {
      "indent": 3,
      "text": "None.",
      "ja": "無し。"
    },
    {
      "indent": 0,
      "text": "6.5. Modifications to Existing Operations",
      "section_title": true,
      "ja": "6.5. 既存の業務への変更"
    },
    {
      "indent": 3,
      "text": "When a <create-subscription> is sent while another subscription is active on that session, the following error will be returned:",
      "ja": "そのセッションで別のサブスクリプションがアクティブになっている間に<create-subscription>が送信されると、次のエラーが返されます。"
    },
    {
      "indent": 6,
      "text": "Tag: operation-failed",
      "ja": "タグ：操作失敗"
    },
    {
      "indent": 6,
      "text": "Error-type: protocol",
      "ja": "エラータイプ：プロトコル"
    },
    {
      "indent": 6,
      "text": "Severity: error",
      "ja": "重大度：エラー"
    },
    {
      "indent": 6,
      "text": "Error-info: none",
      "ja": "エラー情報：なし"
    },
    {
      "indent": 6,
      "text": "Description: Request could not be completed because the requested operation failed for some reason not covered by any other error condition.",
      "ja": "説明：要求された操作は、他のエラー状態でカバーされていない理由で要求された操作が失敗したため、要求を完了できませんでした。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The security considerations from the base [NETCONF] document also apply to the Notification capability.",
      "ja": "基本[NETCONF]文書からのセキュリティ上の考慮事項も通知機能に適用されます。"
    },
    {
      "indent": 3,
      "text": "The access control framework and the choice of transport will have a major impact on the security of the solution.",
      "ja": "アクセス制御フレームワークと輸送の選択は、ソリューションのセキュリティに大きな影響を与えます。"
    },
    {
      "indent": 3,
      "text": "The <notification> elements are never sent before the transport layer and the NETCONF layer, including capabilities exchange, have been established and the manager has been identified and authenticated.",
      "ja": "<通知>要素は、トランスポート層が確立されていて、マネージャが識別され認証されているNetConfレイヤが確立されている前に送信されずに送信されます。"
    },
    {
      "indent": 3,
      "text": "It is recommended that care be taken to secure execution:",
      "ja": "実行を確保するために注意することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "o <create-subscription> invocation",
      "ja": "o <create-subscription>呼び出し"
    },
    {
      "indent": 3,
      "text": "o <get> on read-only data models",
      "ja": "o <Get>読み取り専用データモデル"
    },
    {
      "indent": 3,
      "text": "o <notification> content",
      "ja": "o <通知>コンテンツ"
    },
    {
      "indent": 3,
      "text": "Secure execution means ensuring that a secure transport is used as well as ensuring that the user has sufficient authorization to perform the function they are requesting against the specific subset of NETCONF content involved. When a <get> is received that refers to the content defined in this memo, clients should only be able to view the content for which they have sufficient privileges. A create <create-subscription> operation can be considered like a deferred",
      "ja": "安全な実行とは、ユーザーが関与するNetConfコンテンツの特定のサブセットに対して要求している機能を実行するのに十分な許可を確実にしていることを保証するだけでなく、安全なトランスポートが使用されるようにすることを意味します。このメモで定義されているコンテンツを参照する<get>を受信すると、クライアントは十分な権限を持つコンテンツを表示できるようにしてください。作成<create-subscription>操作は遅延のように考慮することができます"
    },
    {
      "indent": 3,
      "text": "<get>, and the content that different users can access may vary. This different access is reflected in the <notification> that different users are able to subscribe to.",
      "ja": "<get>、そして異なるユーザーがアクセスできるコンテンツはさまざまです。この異なるアクセスは、さまざまなユーザーが購読できることを<通知>に反映されます。"
    },
    {
      "indent": 3,
      "text": "One potential security issue is the transport of data from non-NETCONF streams, such as syslog and SNMP. This data may be more vulnerable (or less vulnerable) when being transported over NETCONF than when being transported using the protocol normally used for transporting it, depending on the security credentials of the two subsystems. The NETCONF server is responsible for applying access control to stream content.",
      "ja": "1つの潜在的なセキュリティ問題は、syslogやsnmpなどのnetconfストリーム以外のデータの転送です。このデータは、2つのサブシステムのセキュリティ認証情報に応じて、それを転送するために通常使用されるプロトコルを使用して転送されたときよりもNETCONFを介して転送されるときよりも脆弱な（またはそれほど脆弱な）になる可能性があります。NETCONFサーバーは、コンテンツをストリーミングするためのアクセス制御を適用する責任があります。"
    },
    {
      "indent": 3,
      "text": "The contents of notifications, as well as the names of event streams, may contain sensitive information and care should be taken to ensure that they are viewed only by authorized users. The NETCONF server MUST NOT include any content in a notification that the user is not authorized to view.",
      "ja": "通知の内容、およびイベントストリームの名前は、機密情報を含めることができ、許可されたユーザーによってのみ表示されるように注意が必要です。NETCONFサーバーは、ユーザーが表示する権限がないという通知にコンテンツを含めないでください。"
    },
    {
      "indent": 3,
      "text": "If a subscription is created with a <stopTime>, the NETCONF session will return to being a normal command-response NETCONF session when the replay is completed. It is the responsibility of the NETCONF client to close this session when it is no longer of use.",
      "ja": "サブスクリプションが<STOPTIME>で作成された場合、再生が完了したときにNETCONFセッションは通常のコマンドレスポンスNetConfセッションであることに戻ります。これがもう使用できないときにこのセッションを閉じるためのNetConfクライアントの責任です。"
    },
    {
      "indent": 3,
      "text": "If a malicious or buggy NETCONF client sends a number of <create-subscription> requests, then these subscriptions accumulate and may use up system resources. In such a situation, subscriptions can be terminated by terminating the suspect underlying NETCONF sessions using the <kill-session> operation.",
      "ja": "悪意のあるまたはBuggy NetConfクライアントが多数の<create-subscription>要求を送信する場合、これらのサブスクリプションは蓄積し、システムリソースを使用することができます。このような状況では、<kill-session>操作を使用して、疑わしいNetConfセッションを逆にすることでサブスクリプションを終了できます。"
    },
    {
      "indent": 0,
      "text": "8. IANA Considerations",
      "section_title": true,
      "ja": "8. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document registers three URIs for the NETCONF XML namespace in the IETF XML registry [RFC3688].",
      "ja": "このドキュメントでは、IETF XMLレジストリ[RFC3688]のNetConf XMLネームスペースの3つのURIを登録します。"
    },
    {
      "indent": 3,
      "text": "Following the format in RFC 3688, IANA has made the following registration. Note that the capability URNs are also compliant to section 10.3 of [NETCONF].",
      "ja": "RFC 3688のフォーマットに続いて、IANAは次の登録を行いました。機能URNSも[NetConf]のセクション10.3に準拠していることに注意してください。"
    },
    {
      "indent": 0,
      "text": "   +--------------------+----------------------------------------------+\n   | Index              | Capability Identifier                        |\n   +--------------------+----------------------------------------------+\n   | :notification      | urn:ietf:params:netconf:capability:          |\n   |                    | notification:1.0                             |\n   |                    |                                              |\n   | :interleave        | urn:ietf:params:netconf:capability:          |\n   |                    | interleave:1.0                               |\n   +--------------------+----------------------------------------------+\n   URI: urn:ietf:params:xml:ns:netmod:notification",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "URI: urn:ietf:params:xml:ns:netconf:notification:1.0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Registrant Contact: The IESG.",
      "ja": "登録者連絡先：IESG。"
    },
    {
      "indent": 3,
      "text": "XML: N/A, the requested URI is an XML namespace.",
      "ja": "XML：N / A、要求されたURIはXMLネームスペースです。"
    },
    {
      "indent": 3,
      "text": "In addition, IANA registered the XML Schema defined in Section 4.",
      "ja": "さらに、IANAはセクション4で定義されているXMLスキーマを登録しました。"
    },
    {
      "indent": 0,
      "text": "9. Acknowledgements",
      "section_title": true,
      "ja": "9. 謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to Gilbert Gagnon, Greg Wilbur, and Kim Curran for providing their input into the early work on this document. In addition, the editors would like to acknowledge input at the Vancouver editing session from the following people: Orly Nicklass, James Balestriere, Yoshifumi Atarashi, Glenn Waters, Alexander Clemm, Dave Harrington, Dave Partain, Ray Atarashi, David Perkins, and the following additional people from the Montreal editing session: Balazs Lengyel, Phil Shafer, Rob Enns, Andy Bierman, Dan Romascanu, Bert Wijnen, Simon Leinen, Juergen Schoenwaelder, Hideki Okita, Vincent Cridlig, Martin Bjorklund, Olivier Festor, Radu State, Brian Trammell, and William Chow. We would also like to thank Li Yan for his numerous reviews, as well as Suresh Krishnan for his gen-art review of the document.",
      "ja": "Gilbert Gagnon、Greg Wilbur、およびKim Curranのおかげで、この文書の初期の仕事に入力を提供してください。さらに、編集者は、次のような人々からのバンクーバー編集セッションでの入力を承認したいと思います。オルロリックニックラス、ジェームズバラストレ、アトラシ吉富、Glenn Waters、Alexander Clemm、Dave Harrington、Dave Partain、Ray David Perkins、および以下モントリオール編集セッションからの追加の人々：Balazs Lengyel、Phil Shafer、Rob Ens、Andy Bierman、Dan Romascanu、Bert Wijnen、Simon Leinen、Juergen Schoenwaelder、Martin Bjorklund、Olivier Festor、Radu State、Brian Trammell、そしてウィリアムの飼い場。また、彼の数多くのレビューのためにLi Yan、そして彼の文書の遺伝アートレビューのためのSuresh Krishnanにも感謝します。"
    },
    {
      "indent": 0,
      "text": "10. Normative References",
      "section_title": true,
      "ja": "10. 引用文献"
    },
    {
      "indent": 3,
      "text": "[NETCONF] Enns, R., Ed., \"NETCONF Configuration Protocol\", RFC 4741, December 2006.",
      "ja": "[NetConf] ENNS、R.、ED。、「NetConf構成プロトコル」、RFC 4741、2006年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S、「RFCで使用するためのキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3339] Klyne, G., Ed. and C. Newman, \"Date and Time on the Internet: Timestamps\", RFC 3339, July 2002.",
      "ja": "[RFC3339] Klyne、G.、ED。そしてC. Newman、「インターネット上の日時：Timestamps」、RFC 3339、2002年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC3688] Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688, January 2004.",
      "ja": "[RFC3688] Mealling、M.、 \"IETF XMLレジストリ\"、BCP 81、RFC 3688、2004年1月。"
    },
    {
      "indent": 3,
      "text": "[XML] World Wide Web Consortium, \"Extensible Markup Language (XML) 1.0\", W3C XML, February 1998, <http://www.w3.org/TR/1998/REC-xml-19980210>.",
      "ja": "[XML]ワールドワイドウェブコンソーシアム、「拡張マークアップ言語（XML）1.0」、W3C XML、1998年2月、<http://www.w3.org/tr/1998/REC-XML-19980210>。"
    },
    {
      "indent": 3,
      "text": "[XMLSchema] Thompson, H., Beech, D., Maloney, M., and N. Mendelsohn, \"XML Schema Part 1: Structures Second Edition\", W3C http ://www.w3.org/TR/2004/REC-xmlschema-1-20041028/ structures.html, October 2004.",
      "ja": "[XMLSchema]トンプソン、H.、Beech、D.、Maloney、M.、およびN.Mendelsohn、「XMLスキーマパート1：構造Second Edition」、W3C http：//www.w3.org/tr/2004/rec-Xmlschema-1-20041028 / structures.html、2004年10月。"
    },
    {
      "indent": 3,
      "text": "[XPATH] Clark, J. and S. DeRose, \"XML Path Language (XPath) Version 1.0\", W3C http://www.w3.org/TR/1999/REC-xpath-19991116, November 1999.",
      "ja": "[XPath] Clark、J.およびS. Derose、 \"XML Path Language（XPath）バージョン1.0\"、W3c http://www.w3.org/tr/1999/Rec-xpath-19991116、1999年11月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者の住所"
    },
    {
      "indent": 3,
      "text": "Sharon Chisholm Nortel 3500 Carling Ave Nepean, Ontario K2H 8E9 Canada",
      "ja": "Sharon Chisholm Nortel 3500 Carling Ave Nepean、Ontario K2H 8E9カナダ"
    },
    {
      "indent": 3,
      "text": "EMail: schishol@nortel.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Hector Trevino Cisco Suite 400 9155 E. Nichols Ave Englewood, CO 80112 USA",
      "ja": "Hector Trevino Cisco Suite 400 9155 E. Nichols Ave Englewood、CO 80112 USA"
    },
    {
      "indent": 3,
      "text": "EMail: htrevino@cisco.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全著作権宣言"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2008).",
      "ja": "著作権（c）IETF信託（2008）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "ja": "この文書は、BCP 78に含まれている権利、ライセンス、制限の対象となり、その中に述べた場合を除き、著者らはすべての権利を保持しています。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書および本明細書に含まれる情報は、「現状の」基準であり、寄与者、統治、または後援されている、または（いずれも）、インターネット社会、IETF信託およびインターネットエンジニアリングのタスク力を否定する。本明細書における情報の使用が特定の目的のための権利または黙示的な保証を侵害しないことを保証するが、定義または暗示されていない保証、または暗示されていない。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "ja": "知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "ja": "この文書に記載されているテクノロジの実装または使用に関連すると主張される可能性がある、またはそのような権利の下でのライセンスの使用に関連すると主張される可能性がある、またはその他の権利の下にある範囲内である可能性がある、またはその他の権利の使用に関連すると主張する可能性がある、IETFは、IETFを取りません。利用可能です。そのような権利を特定するためにそれが独立した努力をしたことを表していません。RFC文書の権利に関する手順に関する情報は、BCP 78およびBCP 79にあります。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "ja": "IETF事務局へのIETF事務局と利用可能なライセンスの保証のコピー、またはこの仕様書の実装者や利用者による一般的なライセンスまたは許可を得るための試みの結果を得ることができます。IETFオンラインIPRリポジトリからhttp://www.ietf.org/ipr。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "ja": "IETFは、著作権、特許または特許出願、またはこの規格を実装することが要求される可能性がある技術をカバーする可能性のある他の独自の権利を注意を及ぼすように興味のある当事者を勧めます。ietf-ipr@ietf.orgのIETFに情報を宛先に宛ててください。"
    }
  ]
}